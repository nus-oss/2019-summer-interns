[
  {
    "path": "README.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# 1. Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "[![Build Status](https://travis-ci.org/CATcher-org/CATcher.svg?branch\u003dmaster)](https://travis-ci.org/CATcher-org/CATcher)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "**CAT**cher is a desktop application for **C**rowed-sourced **A**nonymous **T**esting software. It uses GitHub as the backend for hosting bug reports."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Project structure is adapted from, https://angular.io/guide/styleguide#overall-structural-guidelines and https://github.com/maximegris/angular-electron."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Currently runs with:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "- Angular v7.2.10"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "- Electron v4.0.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- Electron Builder v20.28.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "This application will support the following order of workflow:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Bug Reporting**: Testers will be informed of the teams they will be testing. Following which, they will be able to start creating new bug reports during this phase."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Team\u0027s Response**: Teams will be able to respond to the bugs that are reported during the bug _reporting phase_."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Evaluation**: Tutors and Admins will be able to view the bug reports and their respective teams\u0027 response. They can evaluate the responses, change the severity and status of the bug reports if needed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# 2. Getting Started"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.1. Set up Organization"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "A Github organization must be created first. The organization must have the following settings:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set `Base Permissions` to `None`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Under `Settings` page of your organization, click on `Member privileges` navigation tab."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    2. Under `Base permissions`, select `None`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "2. Create `admins` team."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "3. Create `students` team."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "4. Create `tutors` team."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "5. Invite github users into their respective teams."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.2. Set up Github Repositories"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "This application assumes 4 repositories will be created under the above organization."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "For each phase, users with write access will be able to upload files (e.g. screenshots, .txt files, etc...) onto the repository\u0027s `/file` folder. These files are used in conjuction with issue description and comments in a form of a link. As for images, the actual image will be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.1. `public_data` Repository"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "The name of this repository must be **exactly** `public_data`. This repository must contain 1 file called `data.csv`. This `.csv` file, will contain the following information:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "1. Roles of users. (Student, Tutor, Admin)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "2. Student\u0027s team allocation. For each student, the `.csv` file must specify which team the student is in."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "3. Tutor\u0027s team allocation. For each tutor, the `.csv` must specify which teams the tutor is assigned to."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "An example of `data.csv`: https://github.com/CATcher-org/public_data/blob/master/data.csv"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.2. Bug Reporting Repository"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "All the bug reports that are created from the application will be posted into this repository."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.3. Team\u0027s Response Repository"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "After the bug reporting phase, the issues posted during that phase will be transferred over to this repository, with the identity of the poster anonymized."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "This repository will then be used by the application for individual teams to respond to the bugs that are discovered by the testers testing their application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Response**: `response.Accepted`, `response.CannotReproduce`, `response.IssueUnclear`, `response.Rejected`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Status**: `status.Done`, `status.Incomplete`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Team**: `team.*`, with the star representing the team number."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "7. **Tutorial**: `tutorial.*`, with the star representing tutorial name."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "8. **Duplicate**: `duplicate`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "**Team** and **Tutorial** tags are compulsory tags for each issue."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.4. Evaluation Repository"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "After the teams have responded to the bugs reported by their testers. The issues and their respective responses from `pe-results` will be transferred over to this repository. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The application will then use this repository to post tutor\u0027s or admin\u0027s evaluation of each team\u0027s response and their respective bug report."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Response**: `response.Accepted`, `response.CannotReproduce`, `response.IssueUnclear`, `response.Rejected`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Team**: `team.*`,  with the star representing the team number."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Tutorial**: `tutorial.*`, with the star representing tutorial name."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "6. **Duplicate**: `duplicate`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "**Team** and **Tutorial** tags are compulsory for each issue."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.3. Set up access rights"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "For each of the teams, follow the steps below to assign the right access level to the repositories. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to their respective team page on Github."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "2. Click on `Repositories` navigation tab."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "3. Add the following repositories with the respective access right level as desribed below."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    1. For `admins` team."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Admin`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Admin`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        3. pe-evaluation: `Admin`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    2. For `students` team."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Write`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Write`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    3. For `tutors` team."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Read`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Read`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        3. pe-evaluation: `Write`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.4. The Application"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "You can download the latest release from https://github.com/CATcher-org/CATcher/releases"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Start the application by clicking on the executable file, no installation is required."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "The login page will be displayed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "![login](https://i.imgur.com/zb1tN2k.png)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Use your Github credentials for username and password."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "**Encoded Text** will contain the urls of the 3 different repositories that are created in Section 2.2.2, 2.2.3 and 2.2.4."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "# 3. Development"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "1. Clone this repository locally."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "2. Install dependencies with npm: `npm install` "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "3. Compile and start the application: `npm start`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "After compilation, an application window will start up which runs on localhost:4200. You can disable \"Developer Tools\" by commenting `win.webContents.openDevTools();` in `main.ts`."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "# 4. Commands"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "|Command|Description|"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "|--|--|"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run build`| Build the app. Your built files are in the /dist folder. |"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run build:prod`| Build the app with Angular aot. Your built files are in the /dist folder. |"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:local`| Builds your application and start electron"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:linux`| Builds your application and creates an app consumable on linux system |"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:windows`| On a Windows OS, builds your application and creates an app consumable in windows 32/64 bit systems |"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:mac`|  On a MAC OS, builds your application and generates a `.app` file of your application that can be run on Mac |"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "# 5. Future Developments"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "Here are a few suggestions that future developers can work on to improve this application!"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.1. Support Commenting"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Currently, the application only support 1 response for each phase. So a commenting section would be good to allow discussions between team members as well as between tutors and admins. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.2. Poll for updates"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "The state of the application is based on the initial log-in in which the data will be pulled from Github. However, this state is not updated as the user uses the application. This might lead to problems where the user is shown an outdated version of an issue."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.3. Add Tester\u0027s response phase (Right after the Team\u0027s Response)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "The rational for this phase is to ease the workload of tutors and admins during the evaluation phase. In this phase, testers who reported the bug will be able to look at the team\u0027s response to their bug report. If they think that the response is unjust, they can object it."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "During the evaluation phase, the tutors and admins just need focus on those bug reports with objections. Those without objections will not be moderated."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "-": 142
    }
  },
  {
    "path": "main.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { app, BrowserWindow, screen, Menu } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import * as path from \u0027path\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import * as url from \u0027url\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import MenuItemConstructorOptions \u003d Electron.MenuItemConstructorOptions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { enableProdMode, isDevMode } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const { ipcMain } \u003d require(\u0027electron\u0027);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "let win, serve;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "const args \u003d process.argv.slice(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "serve \u003d args.some(val \u003d\u003e val \u003d\u003d\u003d \u0027--serve\u0027);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// TODO: enableProdMode() prior to release."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// enableProdMode();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "ipcMain.on(\u0027synchronous-message\u0027, (event, arg) \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  event.returnValue \u003d process.platform \u003d\u003d\u003d \u0027win32\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    ? isDevMode()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        ? app.getAppPath()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        : process.env.PORTABLE_EXECUTABLE_FILE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    : app.getAppPath();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "});"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "function createWindow() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  const electronScreen \u003d screen;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  const size \u003d electronScreen.getPrimaryDisplay().workAreaSize;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  // Create the browser window."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  win \u003d new BrowserWindow({"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    x: 0,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    y: 0,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    width: size.width,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    height: size.height"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  if (serve) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    require(\u0027electron-reload\u0027)(__dirname, {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      electron: require(`${__dirname}/node_modules/electron`)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(\u0027http://localhost:4200\u0027);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(url.format({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      pathname: path.join(__dirname, \u0027dist/index.html\u0027),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      protocol: \u0027file:\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      slashes: true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  // win.webContents.openDevTools();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  // Emitted when the window is closed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  win.on(\u0027closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    // Dereference the window object, usually you would store window"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // in an array if your app supports multi windows, this is the time"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // when you should delete the corresponding element."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    win \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// Edited version of a template menu-bar provided by the electron API,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// refer to https://electronjs.org/docs/api/menu for more information."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const mainMenuTemplate: Electron.MenuItemConstructorOptions[] \u003d ["
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027File\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        label: \u0027Quit CATcher\u0027, accelerator: \u0027CmdOrCtrl+Q\u0027, click() { app.quit(); }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027Edit\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027undo\u0027 },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027redo\u0027 },"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027selectAll\u0027 },"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027cut\u0027 },"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027copy\u0027 },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027paste\u0027 },"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027delete\u0027 },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027View\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027resetzoom\u0027 },"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027zoomin\u0027 },"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027zoomout\u0027 },"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027togglefullscreen\u0027 }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    role: \u0027help\u0027,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        label: \u0027Learn More\u0027,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        // TODO: Change below url to course-site / application github site."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        click () { require(\u0027electron\u0027).shell.openExternal(\u0027https://electronjs.org\u0027); }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "if (isDevMode()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let viewSubMenu: MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  viewSubMenu \u003d mainMenuTemplate[2].submenu as MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  viewSubMenu.push("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    { role: \u0027toggledevtools\u0027}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  // This method will be called when Electron has finished"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  // initialization and is ready to create browser windows."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  // Some APIs can only be used after this event occurs."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027ready\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Build and Attach Menu-bar template to application."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const mainMenu \u003d Menu.buildFromTemplate(mainMenuTemplate);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    Menu.setApplicationMenu(mainMenu);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    createWindow();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  // Quit when all windows are closed."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027window-all-closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it is common for applications and their menu bar"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    // to stay active until the user quits explicitly with Cmd + Q"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    if (process.platform !\u003d\u003d \u0027darwin\u0027) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      app.quit();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027activate\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it\u0027s common to re-create a window in the app when the"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    // dock icon is clicked and there are no other windows open."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    if (win \u003d\u003d\u003d null) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      createWindow();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "} catch (e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  // Catch Error"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  // throw e;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 71,
      "-": 79
    }
  },
  {
    "path": "src/app/app.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import \u0027reflect-metadata\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import \u0027../polyfills\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { BrowserModule } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { AppRoutingModule } from \u0027./app-routing.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { MarkdownModule, MarkedOptions } from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { AppComponent } from \u0027./app.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { SharedModule } from \u0027./shared/shared.module\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HeaderComponent } from \u0027./shared/layout\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthModule } from \u0027./auth/auth.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientModule } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase2Module} from \u0027./phase2/phase2.module\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase3Module} from \u0027./phase3/phase3.module\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase1Module} from \u0027./phase1/phase1.module\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import {BrowserAnimationsModule} from \u0027@angular/platform-browser/animations\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    AppComponent, HeaderComponent, UserConfirmationComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    BrowserModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    BrowserAnimationsModule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    AuthModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase1Module,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase2Module,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase3Module,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    HttpClientModule,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forRoot({"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      markedOptions: {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        provide: MarkedOptions,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        useValue: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          gfm: true,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          tables: true,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          breaks: true,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          pedantic: false,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          sanitize: false,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          smartLists: true,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          smartypants: true,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    AppRoutingModule,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  providers: [],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  bootstrap: [AppComponent],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  entryComponents: ["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    UserConfirmationComponent"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export class AppModule { }"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "-": 48
    }
  },
  {
    "path": "src/app/auth/auth.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-card class\u003d\"login-card\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card-header\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-card-title\u003eLogin\u003c/mat-card-title\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card-header\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003capp-profiles (selectedProfileEmitter)\u003d\"onProfileSelect($event)\" (profileDataEmitter)\u003d\"onProfilesMissing($event)\"\u003e\u003c/app-profiles\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card-content\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cform [formGroup]\u003d\"loginForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"login(myForm)\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctable class\u003d\"table-form\" cellspacing\u003d\"0\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-form-field class\u003d\"login-field\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cinput matInput placeholder\u003d\"Username\" formControlName\u003d\"username\" required\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-form-field class\u003d\"login-field\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cinput matInput placeholder\u003d\"Password\" formControlName\u003d\"password\" type\u003d\"password\" required\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-form-field class\u003d\"login-field\" style\u003d\"width: 50%\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              \u003ctextarea matInput placeholder\u003d\"OrgName/SessionName\" formControlName\u003d\"session\" required\u003e\u003c/textarea\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/table\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-card-actions\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"submit\" [disabled]\u003d\"loginForm.invalid\" mat-stroked-button color\u003d\"primary\"\u003eSign In\u003c/button\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-card-actions\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/form\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card-content\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cdiv style\u003d\"color: #6a737d; font-size: 10px;\"\u003e{{ this.profileLocationPrompt }}\u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-card\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 3,
      "-": 34
    }
  },
  {
    "path": "src/app/auth/auth.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnDestroy, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService, AuthState } from \u0027../core/services/auth.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { PhaseService } from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Title } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Profile } from \u0027./profiles/profiles.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { User } from \u0027../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { GithubEventService } from \u0027../core/services/githubevent.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-auth\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./auth.component.html\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./auth.component.css\u0027]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "export class AuthComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  authState: AuthState;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  authStateSubscription: Subscription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  loginForm: FormGroup;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  profileLocationPrompt: string;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private auth: AuthService,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private githubService: GithubService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private githubEventService: GithubEventService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private titleService: Title) { }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSubscription \u003d this.auth.currentAuthState.subscribe((state) \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      this.authState \u003d state;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loginForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      username: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      password: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      session: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSubscription.unsubscribe();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Informs user of missing profiles file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param profilesDetails - profiles file information."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  onProfilesMissing(profilesDetails: {isDirectoryMessageVisible: boolean, fileName: string, fileDirectory: string}): void {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.profileLocationPrompt \u003d profilesDetails.isDirectoryMessageVisible"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ? \u0027No custom \u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          .concat(profilesDetails[\u0027fileName\u0027])"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          .concat(\u0027 file found in \u0027)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          .concat(profilesDetails[\u0027fileDirectory\u0027])"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          .concat(\u0027 .\u0027)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      : \u0027\u0027;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Fills the login form with data from the given Profile."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param profile - Profile selected by the user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  onProfileSelect(profile: Profile): void {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.loginForm.get(\u0027username\u0027).setValue(profile.username);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.loginForm.get(\u0027password\u0027).setValue(profile.password);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.loginForm.get(\u0027session\u0027).setValue(profile.encodedText);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  login(form: NgForm) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.loginForm.invalid) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const username: string \u003d this.loginForm.get(\u0027username\u0027).value;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const password: string \u003d this.loginForm.get(\u0027password\u0027).value;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const sessionInformation: string \u003d this.loginForm.get(\u0027session\u0027).value;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const org: string \u003d this.getOrgDetails(sessionInformation);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const dataRepo: string \u003d this.getDataRepoDetails(sessionInformation);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.githubService.storeOrganizationDetails(org, dataRepo);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.phaseService.setPhaseOwners(org, username);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.auth.authenticate(username, password).pipe("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        flatMap((loginConfirmation: {login: string}) \u003d\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          return this.userService.createUserModel(loginConfirmation.login);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        flatMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          return this.phaseService.sessionSetup();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        flatMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          return this.githubEventService.setLatestChangeEvent();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        })"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ).subscribe("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          () \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            this.authService.changeAuthState(AuthState.Authenticated);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            form.resetForm();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            this.titleService.setTitle(\u0027CATcher \u0027.concat(this.phaseService.getPhaseDetail()));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            this.router.navigateByUrl(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "          (error) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          if (error instanceof HttpErrorResponse) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            this.errorHandlingService.handleHttpError(error.error);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            this.errorHandlingService.handleGeneralError(error);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Extracts the Organization Details from the input sessionInformation."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private getOrgDetails(sessionInformation: string) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return sessionInformation.split(\u0027/\u0027)[0];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Extracts the Data Repository Details from the input sessionInformation."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param sessionInformation - string in the format of \u0027orgName/dataRepo\u0027"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private getDataRepoDetails(sessionInformation: string) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return sessionInformation.split(\u0027/\u0027)[1];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 71,
      "KevinCJH": 4,
      "-": 59
    }
  },
  {
    "path": "src/app/auth/auth.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthComponent} from \u0027./auth.component\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthRoutingModule} from \u0027./auth-routing.module\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {SharedModule} from \u0027../shared/shared.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ProfilesComponent } from \u0027./profiles/profiles.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { JsonParseErrorDialogComponent } from \u0027./profiles/json-parse-error-dialog/json-parse-error-dialog.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { BrowserModule } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    AuthRoutingModule,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    BrowserModule,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    BrowserAnimationsModule"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    AuthComponent,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ProfilesComponent,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    JsonParseErrorDialogComponent"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  entryComponents: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    JsonParseErrorDialogComponent"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "export class AuthModule {}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 13,
      "-": 14
    }
  },
  {
    "path": "src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003ch1 mat-dialog-title\u003eError in \"profiles.json\" format\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-content\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp align\u003d\"center\" style\u003d\"max-width: 390px;\" \u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    The format of the \"profiles.json\" file is not as required."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    Please refer to our User Guide for the correct format."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-actions align\u003d\"center\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"primary\" (click)\u003d\"onClick()\"\u003eOk\u003c/button\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 10
    }
  },
  {
    "path": "src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { JsonParseErrorDialogComponent } from \u0027./json-parse-error-dialog.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "describe(\u0027JsonParseErrorDialogComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let component: JsonParseErrorDialogComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let fixture: ComponentFixture\u003cJsonParseErrorDialogComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      declarations: [ JsonParseErrorDialogComponent ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture \u003d TestBed.createComponent(JsonParseErrorDialogComponent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 25
    }
  },
  {
    "path": "src/app/auth/profiles/json-parse-error-dialog/json-parse-error-dialog.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialogRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ProfilesComponent } from \u0027../profiles.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * This Component is responsible for informing the user if there"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * are errors in the profiles.json file that is available to the app."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selector: \u0027app-json-parse-error-dialog\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  templateUrl: \u0027./json-parse-error-dialog.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  styleUrls: [\u0027./json-parse-error-dialog.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class JsonParseErrorDialogComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public dialogRef: MatDialogRef\u003cProfilesComponent\u003e) { }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Closes the Dialog"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  onClick(): void {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.dialogRef.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 29
    }
  },
  {
    "path": "src/app/auth/profiles/profiles.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cmat-form-field\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cmat-label\u003eSelect Profile\u003c/mat-label\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cmat-select [value]\u003d\"this.selectedProfile.profileName\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cmat-option (click)\u003d\"selectProfile(this.blankProfile)\"\u003eNone\u003c/mat-option\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cmat-option *ngFor\u003d\"let profile of profiles\" (click)\u003d\"selectProfile(profile)\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                [value]\u003d\"profile.profileName\"\u003e{{ profile.profileName }}\u003c/mat-option\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cinput #fileInput type\u003d\"file\" style\u003d\"display: none;\" accept\u003d\".json\" (change)\u003d\"this.fileSelected(fileInput)\"/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cbutton mat-icon-button (click)\u003d\"this.fileSelectorInitiation(fileInput)\" disableRipple\u003d\"true\" (mousedown)\u003d\"this.animationActivated \u003d true\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        (mouseleave)\u003d\"this.animationActivated \u003d false\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cmat-icon [@triggerFileInput]\u003d\"this.animationActivated ? \u0027pressed\u0027 : \u0027normal\u0027\"\u003efolder_open\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/button\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 13
    }
  },
  {
    "path": "src/app/auth/profiles/profiles.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ProfilesComponent } from \u0027./profiles.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "describe(\u0027ProfilesComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let component: ProfilesComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let fixture: ComponentFixture\u003cProfilesComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      declarations: [ ProfilesComponent ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture \u003d TestBed.createComponent(ProfilesComponent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "-": 19
    }
  },
  {
    "path": "src/app/auth/profiles/profiles.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Component, EventEmitter, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { JsonParseErrorDialogComponent } from \u0027./json-parse-error-dialog/json-parse-error-dialog.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const { ipcRenderer } \u003d require(\u0027electron\u0027);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  trigger,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  state,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  style,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  animate,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  transition"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027@angular/animations\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * Indicates all the elements that make up a Profile."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export interface Profile {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  profileName: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  username: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  password: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  encodedText: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selector: \u0027app-profiles\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  templateUrl: \u0027./profiles.component.html\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  styleUrls: [\u0027./profiles.component.css\u0027],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  animations: ["
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // animation triggers go here"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    trigger(\u0027triggerFileInput\u0027, ["
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      state(\u0027normal\u0027, style({})),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      state(\u0027pressed\u0027, style({"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        color: \u0027orange\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      transition(\u0027normal \u003d\u003e pressed\u0027, ["
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        animate(\u00270.25s ease\u0027)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ]),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      transition(\u0027pressed \u003d\u003e normal\u0027, ["
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        animate(\u00270.25s ease\u0027)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ])"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ])"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class ProfilesComponent implements OnInit {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private readonly ANIMATION_DURATION: number \u003d 250;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  profiles: Profile[] \u003d undefined; // List of profiles taken from profiles.json"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  blankProfile: Profile \u003d {profileName: \u0027\u0027, password: \u0027\u0027, username: \u0027\u0027, encodedText: \u0027\u0027}; // A blank profile to reset values"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  animationActivated \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private readonly fs \u003d require(\u0027fs\u0027);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private readonly APPLICATION_AND_SUBDIRECTORIES: RegExp \u003d /[\\/\\\\]+[^\\/\\\\]+\\.(exe|app|AppImage|asar).*/g;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private readonly PROFILES_FILE_NAME \u003d \u0027profiles.json\u0027;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private filePath: string;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selectedProfile: Profile \u003d undefined;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @Output() selectedProfileEmitter: EventEmitter\u003cProfile\u003e \u003d new EventEmitter\u003cProfile\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @Output() profileDataEmitter: EventEmitter\u003c{}\u003e \u003d new EventEmitter\u003c{}\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  profilesData \u003d {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    isDirectoryMessageVisible: false,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fileName: null,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fileDirectory: null"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public errorDialog: MatDialog) { }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const path \u003d require(\u0027path\u0027);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const temp \u003d ipcRenderer.sendSync(\u0027synchronous-message\u0027, \u0027getDirectory\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.filePath \u003d path.join("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        temp.replace(this.APPLICATION_AND_SUBDIRECTORIES, \u0027\u0027),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.PROFILES_FILE_NAME);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.readProfiles();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Activates the button selection animation and opens the file selector."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param fileInput - OS default file selector."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  fileSelectorInitiation(fileInput: HTMLInputElement): void {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.animationActivated \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.animationActivated \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      fileInput.click();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }, this.ANIMATION_DURATION);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Reads the user selected file"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param fileInput - OS default file selector."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  fileSelected(fileInput: HTMLInputElement): void {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.filePath \u003d (fileInput.files[0].path);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fileInput.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.readProfiles();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Processes the selected profiles JSON file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readProfiles(): void {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const isFileExists: boolean \u003d this.userProfileFileExists(this.filePath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Informing Parent Component (Auth) of file selection"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.profilesData.fileName \u003d this.PROFILES_FILE_NAME;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.profilesData.fileDirectory \u003d this.filePath.split(this.PROFILES_FILE_NAME)[0];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.profilesData.isDirectoryMessageVisible \u003d !isFileExists;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.profileDataEmitter.emit(this.profilesData);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (isFileExists) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.profiles \u003d JSON.parse(this.fs.readFileSync(this.filePath))[\u0027profiles\u0027];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.assertProfilesValidity(this.profiles);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } catch (e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        console.log(e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "          this.profiles \u003d undefined;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          this.openErrorDialog();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Set default profile if exists."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.selectedProfile \u003d this.profiles \u003d\u003d\u003d undefined ? this.blankProfile : this.profiles[0];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.selectProfile(this.selectedProfile);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Makes Error dialog visible to the user."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  openErrorDialog(): void {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.errorDialog.open(JsonParseErrorDialogComponent);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Verifies that every profile is correctly defined in the array of profiles."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param profiles - Array of profiles sourced from profiles.json"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  assertProfilesValidity(profiles: Profile[]): void {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (profiles \u003d\u003d\u003d undefined"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        || profiles.filter(profile \u003d\u003e (profile.profileName \u003d\u003d\u003d undefined || profile.encodedText \u003d\u003d\u003d undefined)).length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      throw new Error();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Returns true if the file indicated by the filePath exists."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param filePath - Path of file to check."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  userProfileFileExists(filePath: string): boolean {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.fs.existsSync(filePath);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Sends the selected profile information to listening component."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param profile - Profile selected by user."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selectProfile(profile: Profile): void {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.selectedProfileEmitter.emit(profile);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 161,
      "-": 1
    }
  },
  {
    "path": "src/app/core/guards/can-deactivate-issue-guard.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Location } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRouteSnapshot, CanDeactivate, Router, RouterStateSnapshot } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./user-confirmation/user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class CanDeactivateIssueGuard implements CanDeactivate\u003cany\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(private location: Location, private router: Router,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private dialog: MatDialog) {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Makes the dialog visible to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return The Promise of a User Selected boolean."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  openDialog(): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const dialogRef \u003d this.dialog.open(UserConfirmationComponent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return dialogRef.afterClosed();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  canDeactivate(component: any, currentRoute: ActivatedRouteSnapshot,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                currentState: RouterStateSnapshot,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                nextState?: RouterStateSnapshot): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (component.canDeactivate \u0026\u0026 !component.canDeactivate()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u0026\u0026 nextState.url !\u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const currentUrlTree \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.router.createUrlTree([], currentRoute);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      const currentUrl \u003d currentUrlTree.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.location.go(currentUrl);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return this.openDialog();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return of(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 23,
      "-": 16
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003ch1 mat-dialog-title\u003eWarning\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-content\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp\u003eDo you wish to leave the page?\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp\u003eYou have unsaved changes that will be discarded.\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-actions\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"primary\" (click)\u003d\"onNoClick()\"\u003eNo, I don\u0027t wish to leave\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"warn\" [mat-dialog-close]\u003d\"true\"\u003eYes, I wish to leave\u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 9
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "describe(\u0027UserConfirmationComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let component: UserConfirmationComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let fixture: ComponentFixture\u003cUserConfirmationComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      declarations: [ UserConfirmationComponent ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture \u003d TestBed.createComponent(UserConfirmationComponent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 25
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialogRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { CanDeactivateIssueGuard } from \u0027../can-deactivate-issue-guard.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * The UserConfirmationComponent is responsible for rendering the UserDialog"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * to verify if certain changes made to relevant inputs are to be discarded."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selector: \u0027app-user-confirmation\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  templateUrl: \u0027./user-confirmation.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  styleUrls: [\u0027./user-confirmation.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class UserConfirmationComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Injection of a reference to Dialog from the Service that it is to be"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // displayed in."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public dialogRef: MatDialogRef\u003cCanDeactivateIssueGuard\u003e) { }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Closes the dialog."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  onNoClick(): void {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.dialogRef.close(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 31
    }
  },
  {
    "path": "src/app/core/models/issue.model.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Team} from \u0027./team.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "export interface Issue {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly id: number;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly created_at: string;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  title: string;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  type: string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  severity: string;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  description?: string;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  responseTag?: string;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  assignees?: string[];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicated?: boolean;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateOf?: number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  status?: string;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  teamAssigned?: Team;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  todoList?: string[];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  teamResponse?: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  tutorResponse?: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "export interface Issues {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  [id: number]: Issue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * The types of labels in Issue must follow the format of `Type`.`Value`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Where `Type` represent the type of the label. (e.g. severity, type, response)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * And `Value` represent the value that is associated to the `Type` (e.g. for severity Type, it could be Low, Medium, High)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "export const LABELS \u003d [\u0027severity\u0027, \u0027type\u0027, \u0027response\u0027, \u0027duplicate\u0027, \u0027status\u0027];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "export const labelsToAttributeMapping \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027severity\u0027: \u0027severity\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027type\u0027: \u0027type\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027response\u0027: \u0027responseTag\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027status\u0027: \u0027status\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "export const SEVERITY_ORDER \u003d { Low: 0, Medium: 1, High: 2 };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "export const ISSUE_TYPE_ORDER \u003d { DocumentationBug: 0, FunctionalityBug: 1 };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export enum STATUS {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  Incomplete \u003d \u0027Incomplete\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  Done \u003d \u0027Done\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SEVERITY {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  Low \u003d \u0027Low\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  Medium \u003d \u0027Medium\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  High \u003d \u0027High\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export enum TYPE {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  DocumentationBug \u003d \u0027DocumentationBug\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  FunctionalityBug \u003d \u0027FunctionalityBug\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "export enum RESPONSE {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  Accepted \u003d \u0027Accepted\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  Rejected \u003d \u0027Rejected\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  IssueUnclear \u003d \u0027IssueUnclear\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  CannotReproduce \u003d \u0027CannotReproduce\u0027,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "export const ISSUE_LABELS \u003d {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  severity: Object.keys(SEVERITY),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  type: Object.keys(TYPE),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  response: Object.keys(RESPONSE),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "export const IssuesFilter \u003d {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  phase1: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027FILTER_BY_CREATOR\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  phase2: {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027FILTER_BY_TEAM\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  phase3: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027NO_ACCESS\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "export enum RespondType {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  teamResponse \u003d \u0027teamResponse\u0027,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  tutorResponse \u003d \u0027tutorResponse\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "export const phase2DescriptionTemplate \u003d new RegExp(\u0027(?\u003cheader\u003e# Description|# Team\\\u0027s Response|## State the duplicated issue \u0027 +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027here, if any)\\\\s+(?\u003cdescription\u003e[\\\\s\\\\S]*?)(?\u003d# Team\\\u0027s Response|## State the duplicated issue here, if any|$)\u0027, \u0027gi\u0027);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "export const phase3DescriptionTemplate \u003d new RegExp(\u0027(?\u003cheader\u003e# Description|# Team\\\u0027s Response|## State the duplicated issue \u0027 +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027here, if any|## Proposed Assignees|# Tutor\\\u0027s Response|## Tutor to check)\\\\s+(?\u003cdescription\u003e[\\\\s\\\\S]*?)(?\u003d# Team\\\u0027s Response|\u0027 +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027## State the duplicated issue here, if any|## Proposed Assignees|# Tutor\\\u0027s Response|## Tutor to check|$)\u0027, \u0027gi\u0027);"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 1,
      "-": 98
    }
  },
  {
    "path": "src/app/core/models/label.model.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class Label {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  labelCategory: string;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  labelValue: string;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  labelColor: string;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(labelCategory: string, labelValue: string, labelColor: string) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.labelValue \u003d labelValue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.labelColor \u003d labelColor;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.labelCategory \u003d labelCategory;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Returns the name of the label with the format of"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * \u0027category\u0027.\u0027value\u0027 (e.g. severity.Low)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  public getFormattedName(): string {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.labelCategory + \u0027.\u0027 + this.labelValue;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  public equals(label: Label) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.labelValue \u003d\u003d\u003d label.labelValue"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u0026\u0026 this.labelColor \u003d\u003d\u003d label.labelColor \u0026\u0026 this.labelCategory \u003d\u003d\u003d label.labelCategory;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 22,
      "KevinCJH": 3
    }
  },
  {
    "path": "src/app/core/services/auth.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClient, HttpHeaders } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { BehaviorSubject, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgZone } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ElectronService } from \u0027./electron.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027./user.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { PhaseService } from \u0027./phase.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService} from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027./issue.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueCommentService } from \u0027./issue-comment.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataService } from \u0027./data.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { LabelService } from \u0027./label.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Title } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { GithubEventService } from \u0027./githubevent.service\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export enum AuthState { \u0027NotAuthenticated\u0027, \u0027AwaitingAuthentication\u0027, \u0027Authenticated\u0027 }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "export class AuthService {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  currentAuthState \u003d this.authStateSource.asObservable();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private electronService: ElectronService, private router: Router, private ngZone: NgZone,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private http: HttpClient,  private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private githubService: GithubService,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueService: IssueService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private labelService: LabelService,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private dataService: DataService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private githubEventService: GithubEventService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private titleService: Title) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Authenticates the user to the github api and stores the necessary credentials in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * all remote services."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param username - User\u0027s Username"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param password - User\u0027s Password"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  authenticate(username: string, password: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    this.changeAuthState(AuthState.AwaitingAuthentication);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    const header \u003d new HttpHeaders().set(\u0027Authorization\u0027, \u0027Basic \u0027 + btoa(username + \u0027:\u0027 + password));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.githubService.storeCredentials(username, password);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.http.get(\u0027https://api.github.com/user\u0027, { headers: header });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  logOut(): void {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.userService.reset();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.reset();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueCommentService.reset();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    this.phaseService.reset();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dataService.reset();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.githubEventService.reset();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.titleService.setTitle(\u0027CATcher\u0027);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueService.setIssueTeamFilter(\u0027All Teams\u0027);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    this.changeAuthState(AuthState.NotAuthenticated);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  isAuthenticated(): boolean {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    return !!(this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  changeAuthState(newAuthState: AuthState) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSource.next(newAuthState);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 12,
      "KevinCJH": 11,
      "-": 56
    }
  },
  {
    "path": "src/app/core/services/data.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataFile } from \u0027../models/data-file.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Team } from \u0027../models/team.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { User, UserRole } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const parse \u003d require(\u0027csv-parse/lib/sync\u0027);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class DataService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  public dataFile: DataFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService) {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  getDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.githubService.fetchDataFile().pipe("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map((allCsvDataWrapper: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.constructData(allCsvDataWrapper);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map((jsonData: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.dataFile \u003d \u003cDataFile\u003e{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          teamStructure: this.extractTeamStructure(jsonData)};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return jsonData;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Merges all parsed Csv Data into a single readable JSON"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param allCsvDataWrapper - Object containing strings of csv data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return jsonData - Object representing merged data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructData(allCsvDataWrapper: {}): {} {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const jsonData: {} \u003d {};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const allCsvData: string \u003d allCsvDataWrapper[\u0027data\u0027];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027roles\u0027] \u003d this.parseRolesData(allCsvData);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027team-structure\u0027] \u003d this.parseTeamStructureData(allCsvData);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027students-allocation\u0027] \u003d this.parseStudentAllocation(allCsvData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027tutors-allocation\u0027] \u003d this.parseTutorAllocation(allCsvData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027admins-allocation\u0027] \u003d this.parseAdminAllocation(allCsvData);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return jsonData;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing admin allocation information"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseAdminAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        admins[entry[NAME]] \u003d {};"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return admins;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing tutor allocation information"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseTutorAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const tutor \u003d entry[NAME] in tutors ? tutors[entry[NAME]] : {};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      tutor[entry[TEAM]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      tutors[entry[NAME]] \u003d tutor;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return tutors;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing student allocation information"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseStudentAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Team Notation"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM_ID \u003d \u0027teamId\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const newStudent \u003d {};"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      newStudent[TEAM_ID] \u003d entry[TEAM];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      students[entry[NAME]] \u003d newStudent;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing team structure information"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseTeamStructureData(csvInput: string): {} {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const teams \u003d {};"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const team \u003d entry[TEAM] in teams ? teams[entry[TEAM]] : {};"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      team[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      teams[entry[TEAM]] \u003d team;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return teams;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing roles information"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseRolesData(csvInput: string): {} {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const roles \u003d {};"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        students[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        tutors[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        admins[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027students\u0027] \u003d students;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027tutors\u0027] \u003d tutors;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027admins\u0027] \u003d admins;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return roles;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Converts the input csv information to an array of"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * objects syncrhonously. Each object\u0027s values are"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * marked by the respective csv table headers."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvText - csv information."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return - Subjects that tracks the parsed data."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  csvParser(csvText: string): [{}] {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return parse(csvText, {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      columns: true"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeam(teamId: string): Team {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.dataFile.teamStructure.get(teamId);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeams(): string[] {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    return Array.from(this.dataFile.teamStructure.keys());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  // returns a mapping from teamId to their respective team structure."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  private extractTeamStructure(jsonData: {}): Map\u003cstring, Team\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamStructure \u003d new Map\u003cstring, Team\u003e();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    const jsonTeamStructure \u003d jsonData[\u0027team-structure\u0027];"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamIds \u003d Object.keys(jsonTeamStructure);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const teamId of teamIds) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMembers \u003d new Array\u003cUser\u003e();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMemberIds \u003d Object.keys(jsonTeamStructure[teamId]);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const teamMemberId of teamMemberIds) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        teamMembers.push(\u003cUser\u003e{loginId: teamMemberId, role: UserRole.Student});"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      teamStructure.set(teamId, \u003cTeam\u003e{id: teamId, teamMembers: teamMembers});"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    return teamStructure;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dataFile \u003d undefined;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 193,
      "-": 47
    }
  },
  {
    "path": "src/app/core/services/github.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { map, mergeMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, from, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { githubPaginatorParser } from \u0027../../shared/lib/github-paginator-parser\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComment } from \u0027../models/comment.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { shell } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "const Octokit \u003d require(\u0027@octokit/rest\u0027);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "let ORG_NAME \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "let MOD_ORG \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "let REPO \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "let DATA_REPO \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "let octokit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "export class GithubService {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(private errorHandlingService: ErrorHandlingService) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  storeCredentials(user: String, passw: String) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    octokit \u003d new Octokit({"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      auth: {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        username: user,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        password: passw,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  storeOrganizationDetails(orgName: string, dataRepo: string) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    MOD_ORG \u003d orgName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    DATA_REPO \u003d dataRepo;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  storePhaseDetails(phaseRepoOwner: string, repoName: string) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    REPO \u003d repoName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ORG_NAME \u003d phaseRepoOwner;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   * Will return an Observable with array of issues in JSON format."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssues(filter?: {}): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.getNumberOfIssuePages(filter).pipe("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      mergeMap((numOfPages) \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        const apiCalls \u003d [];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          apiCalls.push(from(octokit.issues.listForRepo({...filter, owner: ORG_NAME, repo: REPO,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            sort: \u0027created\u0027, direction: \u0027desc\u0027, per_page: 100, page: i})));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        return forkJoin(apiCalls);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      map((resultArray) \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        let collatedData \u003d [];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const response of resultArray) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          collatedData \u003d ["
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            ...collatedData,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            ...response[\u0027data\u0027],"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        return collatedData;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssue(id: number): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.get({owner: ORG_NAME, repo: REPO, number: id})).pipe("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssueComments(issueId: number): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.getNumberOfCommentPages(issueId).pipe("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      mergeMap((numOfPages) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        const apiCalls \u003d [];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          apiCalls.push(from(octokit.issues.listComments({owner: ORG_NAME, repo: REPO, number: issueId, per_page: 1, page: i})));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return forkJoin(apiCalls);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      map((resultArray) \u003d\u003e {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        let collatedData \u003d [];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const response of resultArray) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          collatedData \u003d ["
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            ...collatedData,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            ...response[\u0027data\u0027],"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return collatedData;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return from(octokit.issues.listLabelsForRepo({owner: ORG_NAME, repo: REPO})).pipe("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Creates a label in the current repository."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param formattedLabelName - name of new label."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param labelColor - colour of new label."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  createLabel(formattedLabelName: string, labelColor: string): void {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    octokit.issues.createLabel({owner: ORG_NAME, repo: REPO, name: formattedLabelName, color: labelColor});"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Updates a label\u0027s information in the current repository."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param labelName - name of existing label"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param labelColor - new color to be assigned to existing label."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  updateLabel(labelName: string, labelColor: string): void {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    octokit.issues.updateLabel({owner: ORG_NAME, repo: REPO, current_name: labelName, color: labelColor});"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  closeIssue(id: number): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.update({owner: ORG_NAME, repo: REPO, number: id, state: \u0027closed\u0027})).pipe("
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssue(title: string, description: string, labels: string[]): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.create({owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels})).pipe("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssueComment(comment: IssueComment): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.createComment({owner: ORG_NAME, repo: REPO, number: comment.id,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      body: comment.description})).pipe("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.update({owner: ORG_NAME, repo: REPO, number: id, title: title, body: description, labels: labels,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: assignees})).pipe("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssueComment(issueComment: IssueComment): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.updateComment({owner: ORG_NAME, repo: REPO, comment_id: issueComment.id,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      body: issueComment.description})).pipe("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.repos.createFile({owner: ORG_NAME, repo: REPO, path: `files/${filename}`,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      message: \u0027upload file\u0027, content: base64String}));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  getRepo(orgName: string, repoName: string) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.repos.get({owner: orgName, repo: repoName})).pipe("
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  fetchEventsForRepo() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return from(octokit.issues.listEventsForRepo({owner: ORG_NAME, repo: REPO})).pipe("
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      })"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    );"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // roles information"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return forkJoin("
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      from(octokit.repos.getContents({owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027}))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        .pipe(map(rawData \u003d\u003e atob(rawData[\u0027data\u0027][\u0027content\u0027])))"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map(([data]) \u003d\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return {data};"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Fetches the data file that is regulates session information."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return Observable\u003c{}\u003e representing session information."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  fetchSettingsFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return from(octokit.repos.getContents({owner: MOD_ORG, repo: DATA_REPO, path: \u0027settings.json\u0027}))"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        .pipe(map(rawData \u003d\u003e JSON.parse(atob(rawData[\u0027data\u0027][\u0027content\u0027]))));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  private getNumberOfIssuePages(filter?: {}): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listForRepo({...filter, owner: ORG_NAME, repo: REPO, sort: \u0027created\u0027,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      direction: \u0027desc\u0027, per_page: 100, page: 1})).pipe("
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!response[\u0027headers\u0027].link) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          return 1;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        const paginatedData \u003d githubPaginatorParser(response[\u0027headers\u0027].link);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        return +paginatedData[\u0027last\u0027] || 1;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  private getNumberOfCommentPages(issueId: number): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listComments({owner: ORG_NAME, repo: REPO, number: issueId, per_page: 1, page: 1})).pipe("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!response[\u0027headers\u0027].link) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          return 1;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        const paginatedData \u003d githubPaginatorParser(response[\u0027headers\u0027].link);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return +paginatedData[\u0027last\u0027] || 1;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getRepoURL(): string {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  viewIssueInBrowser(id: number) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    if (id) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      shell.openExternal(\u0027https://github.com/\u0027.concat(this.getRepoURL()).concat(\u0027/issues/\u0027).concat(String(id)));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.errorHandlingService.handleGeneralError(\u0027Unable to open this issue in Browser\u0027);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 43,
      "KevinCJH": 27,
      "-": 178
    }
  },
  {
    "path": "src/app/core/services/githubevent.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { map, flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueService } from \u0027./issue.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export class GithubEventService {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private lastModified: string; // The timestamp when the title or label of an issue is changed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private lastModifiedComment: string; // The timestamp when the comment of an issue is changed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(private githubService: GithubService, private issueService: IssueService) { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * Calls the Github service api to return the latest github event (e.g renaming an issue\u0027s title)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * of current repository and store the timestamps of the event in this service"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  setLatestChangeEvent(): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      return this.githubService.fetchEventsForRepo().pipe("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          this.setLastModifiedTime(response[0][\u0027created_at\u0027]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          this.setLastModifiedCommentTime(response[0][\u0027issue\u0027][\u0027updated_at\u0027]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          return response;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        })"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * Returns the latest github event (e.g renaming an issue\u0027s title) of current repository"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @returns the json data of the latest event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  reloadPage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.githubService.fetchEventsForRepo().pipe("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      flatMap((response) \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        const eventResponse \u003d response[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        // Will only allow page to reload if the latest modify time is different"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        // from last modified, meaning that some changes to the repo has occured."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        if (eventResponse[\u0027created_at\u0027] !\u003d\u003d this.getLastModifiedTime() ||"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        eventResponse[\u0027issue\u0027][\u0027updated_at\u0027] !\u003d\u003d this.getLastModifiedCommentTime()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          this.setLastModifiedTime(eventResponse[\u0027created_at\u0027]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          this.setLastModifiedCommentTime(eventResponse[\u0027issue\u0027][\u0027updated_at\u0027]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          return this.issueService.reloadAllIssues();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return of(response);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      })"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  setLastModifiedTime(lastModified: string) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.lastModified \u003d lastModified;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  setLastModifiedCommentTime(lastModified: string) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.lastModifiedComment \u003d lastModified;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getLastModifiedTime() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.lastModified;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getLastModifiedCommentTime() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.lastModifiedComment;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.lastModified \u003d undefined;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.lastModifiedComment \u003d undefined;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "KevinCJH": 70
    }
  },
  {
    "path": "src/app/core/services/issue.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { BehaviorSubject, forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  Issue,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  Issues,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  IssuesFilter,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  LABELS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  labelsToAttributeMapping,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  phase2DescriptionTemplate,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  phase3DescriptionTemplate,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  RespondType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../models/issue.model\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027./user.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase, PhaseService } from \u0027./phase.service\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueCommentService } from \u0027./issue-comment.service\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027./permission.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import * as moment from \u0027moment\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { Team } from \u0027../models/team.model\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataService } from \u0027./data.service\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueService {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  issues: Issues;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  issues$: BehaviorSubject\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private issueTeamFilter \u003d \u0027All Teams\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              private permissionService: PermissionService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              private dataService: DataService) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fetch all the necessary issues. If the issues have been fetched before, the function will return the existing issues instead"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * of calling from Github API."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * @return An Observable containing an array of Issues."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllIssues(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issues \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.initializeData();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issues$;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  reloadAllIssues() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.initializeData();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  getIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issues \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.githubService.fetchIssue(id).pipe("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.createIssueModel(response);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      return of(this.issues[id]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.createIssue(title, description, labelsArray).pipe("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.createIssueModel(response);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase3 ? [] : issue.assignees;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      this.createLabelsForIssue(issue), assignees).pipe("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.createIssueModel(response);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   * attributes to create the github\u0027s description."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  private createGithubIssueDescription(issue: Issue): string {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.phaseService.currentPhase) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phase2:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return `# Description\\n${issue.description}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}`;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phase3:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!issue.todoList) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          issue.todoList \u003d [];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        let todoString \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const todo of issue.todoList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "          todoString +\u003d todo + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        return `# Description\\n${issue.description}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "          `## Proposed Assignees\\n${issue.assignees.length \u003d\u003d\u003d 0 ? \u0027--\u0027 : issue.assignees.join(\u0027, \u0027)}\\n` +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "          `# Tutor\\\u0027s Response\\n${issue.tutorResponse}\\n## Tutor to check\\n${todoString}`;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.description;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.closeIssue(id).pipe("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        const deletedIssue \u003d this.createIssueModel(response);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        this.deleteFromLocalStore(deletedIssue);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return deletedIssue;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteFromLocalStore(issueToDelete: Issue) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d withoutIssueToRemove;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  updateLocalStore(issueToUpdate: Issue) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issues,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      [issueToUpdate.id]: issueToUpdate,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   * Check whether the issue has been responded in the phase 2/3."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  hasResponse(issueId: number): boolean {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    const responseType \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase2 ? RespondType.teamResponse : RespondType.tutorResponse;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    return !!this.issues[issueId][responseType];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter(issue \u003d\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   * Obtain the team that is assigned to the given issue."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeamAssignedToIssue(issueInJson: {}): Team {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    let tutorial \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    let team \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    issueInJson[\u0027labels\u0027].map((label) \u003d\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelName \u003d String(label[\u0027name\u0027]).split(\u0027.\u0027);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelType \u003d labelName[0];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelValue \u003d labelName[1];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      if (labelType \u003d\u003d\u003d \u0027team\u0027) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        team \u003d labelValue;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (labelType \u003d\u003d\u003d \u0027tutorial\u0027) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        tutorial \u003d labelValue;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamId \u003d `${tutorial}-${team}`;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.dataService.getTeam(teamId);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d undefined;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(new Array\u003cIssue\u003e());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  private initializeData(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    const filters \u003d [];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[this.phaseService.currentPhase][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_CREATOR\u0027:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        filters.push({creator: this.userService.currentUser.loginId});"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM\u0027: // Only student has this filter"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        const studentTeam \u003d this.userService.currentUser.team.id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        filters.push({"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          labels: [this.createLabel(\u0027tutorial\u0027, studentTeam[0]), this.createLabel(\u0027team\u0027, studentTeam[1])]"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027: // Only for Tutors and Admins"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        const allocatedTeams \u003d this.userService.currentUser.allocatedTeams;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 0; i \u003c allocatedTeams.length; i++) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          const labels \u003d [];"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "          const team \u003d allocatedTeams[i].id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          labels.push(this.createLabel(\u0027tutorial\u0027, team[0]));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          labels.push(this.createLabel(\u0027team\u0027, team[1]));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          filters.push({ labels: labels });"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_ACCESS\u0027:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        return of([]);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    const issuesPerFilter \u003d [];"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    if (filters.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      issuesPerFilter.push(this.githubService.fetchIssues({}));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const filter of filters) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      issuesPerFilter.push(this.githubService.fetchIssues(filter));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin(issuesPerFilter).pipe("
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issuesByFilter: [][]) \u003d\u003e {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        let mappedResult \u003d {};"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const issues of issuesByFilter) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const issue of issues) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            const issueModel \u003d this.createIssueModel(issue);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            mappedResult \u003d {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "              ...mappedResult,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "              [issueModel.id]: issueModel,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        return mappedResult;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issues: Issues) \u003d\u003e {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issues \u003d { ...this.issues, ...issues };"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issues \u003d issues;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        return Object.values(this.issues);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "   * Will be used to parse the github representation of the issue\u0027s description"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  private getParsedBody(issue: any) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    const array \u003d this.parseBody(issue);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.body \u003d array[0];"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.teamResponse \u003d array[1];"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.duplicateOf \u003d array[2];"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.tutorResponse \u003d array[3];"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.todoList \u003d array[4];"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    issue.proposedAssignees \u003d array[5];"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "   * Actual implementation of using regex to extract out the data from github\u0027s representation of the issue\u0027s description."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "  private parseBody(issue: {}): any {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    const body \u003d issue[\u0027body\u0027];"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    // tslint:disable-next-line"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    const regexExp \u003d this.phaseService.currentPhase \u003d\u003d Phase.phase2 ? phase2DescriptionTemplate : phase3DescriptionTemplate;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    const matches \u003d body.match(regexExp);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    regexExp.lastIndex \u003d 0;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    if (matches \u003d\u003d null) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      return Array(\u0027\u0027, null, null, null, null, null);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    let description; let teamResponse; let duplicateOf; let tutorResponse; let todoList; let assignees;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const match of matches) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "      const groups \u003d regexExp.exec(match)[\u0027groups\u0027];"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "      regexExp.lastIndex \u003d 0;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (groups[\u0027header\u0027]) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027# Description\u0027:"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "          description \u003d groups[\u0027description\u0027].trim();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027# Team\\\u0027s Response\u0027:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "          if (groups[\u0027description\u0027].trim() \u003d\u003d\u003d \u0027Write your response here.\u0027) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            teamResponse \u003d null;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            teamResponse \u003d groups[\u0027description\u0027].trim();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027## State the duplicated issue here, if any\u0027:"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "          duplicateOf \u003d this.parseDuplicateOfValue(groups[\u0027description\u0027]);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027# Tutor\\\u0027s Response\u0027:"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          if (groups[\u0027description\u0027].trim() \u003d\u003d\u003d \u0027Write your response here.\u0027) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            tutorResponse \u003d null;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            tutorResponse \u003d groups[\u0027description\u0027].trim();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027## Tutor to check\u0027:"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "          todoList \u003d groups[\u0027description\u0027].split(/\\r?\\n/);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "          todoList \u003d todoList.filter(function (todo) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            return todo.trim() !\u003d\u003d \u0027\u0027;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027## Proposed Assignees\u0027:"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "          const proposedAssignees \u003d groups[\u0027description\u0027].split(\u0027,\u0027).map(a \u003d\u003e a.toLowerCase().trim()) || [];"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          const teamMembers \u003d this.getTeamAssignedToIssue(issue).teamMembers.map(m \u003d\u003e m.loginId);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "          assignees \u003d teamMembers.filter(m \u003d\u003e proposedAssignees.includes(m.toLowerCase()));"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    return Array(description || \u0027\u0027, teamResponse, duplicateOf, tutorResponse, todoList || [], assignees || []);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "   * Given an issue model, create the necessary labels for github."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "  private createLabelsForIssue(issue: Issue): string[] {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d [];"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.phaseService.currentPhase !\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027tutorial\u0027, studentTeam[0]), this.createLabel(\u0027team\u0027, studentTeam[1]));"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.severity) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.type) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027type\u0027, issue.type));"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.responseTag) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027response\u0027, issue.responseTag));"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.duplicated) {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(\u0027duplicate\u0027);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.status) {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027status\u0027, issue.status));"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "  private createLabel(prepend: string, value: string) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    return `${prepend}.${value}`;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "  private createIssueModel(issueInJson: {}): Issue {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getParsedBody(issueInJson);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    return \u003cIssue\u003e{"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      id: +issueInJson[\u0027number\u0027],"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "      created_at: moment(issueInJson[\u0027created_at\u0027]).format(\u0027lll\u0027),"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "      title: issueInJson[\u0027title\u0027],"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase3 ? issueInJson[\u0027proposedAssignees\u0027] :"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        issueInJson[\u0027assignees\u0027].map((assignee) \u003d\u003e assignee[\u0027login\u0027]),"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "      description: issueInJson[\u0027body\u0027],"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "      teamAssigned: this.getTeamAssignedToIssue(issueInJson),"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "      todoList: issueInJson[\u0027todoList\u0027],"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "      teamResponse: issueInJson[\u0027teamResponse\u0027],"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "      tutorResponse: issueInJson[\u0027tutorResponse\u0027],"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: issueInJson[\u0027duplicateOf\u0027],"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.getFormattedLabels(issueInJson[\u0027labels\u0027], LABELS),"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "  private parseDuplicateOfValue(toParse: string): number {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    const regex \u003d /duplicate of\\s*#(\\d+)/i;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d regex.exec(toParse);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    if (result \u0026\u0026 result.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "      return +regex.exec(toParse)[1];"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "   * Based on the kind labels specified in `desiredLabels` field, this function will produce a neatly formatted JSON object."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "   * For example:"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "   * desiredLabels \u003d [\u0027severity\u0027, \u0027type\u0027]"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "   * Output \u003d {severity: High, type: FunctionalityBug}"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "   * TODO: Add error handling for these assumptions."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assumptions:"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "   * 1) The `labels` which were received from github has all the `desiredLabels` type we want."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "   * 2) There are no duplicates for example labels will not contain `severity.High` and `severity.Low` at the same time."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param labels defines the raw label array from which is obtained from github."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param desiredLabels defines the type of labels you want to be parsed out."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "  private getFormattedLabels(labels: Array\u003c{}\u003e, desiredLabels: Array\u003cstring\u003e): {} {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    let result \u003d {};"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const label of labels) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelName \u003d String(label[\u0027name\u0027]).split(\u0027.\u0027);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelType \u003d labelName[0];"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelValue \u003d labelName[1];"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "      if (label[\u0027name\u0027] \u003d\u003d\u003d \u0027duplicate\u0027) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "          ...result,"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "          duplicated: true,"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (desiredLabels.includes(labelType)) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "          ...result,"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "          [labelsToAttributeMapping[labelType]]: labelValue,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  setIssueTeamFilter(filterValue: string) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    if (filterValue) {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.issueTeamFilter \u003d filterValue;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getIssueTeamFilter(): string {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.issueTeamFilter;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 15,
      "-": 431
    }
  },
  {
    "path": "src/app/core/services/label.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Label } from \u0027../models/label.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { User } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "/* The threshold to decide if color is dark or light."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "A higher threshold value will result in more colors determined to be \"dark\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "W3C recommendation is 0.179, but 0.184 is chosen so that some colors (like bright red)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "are considered dark (Github too consider them dark) */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "const COLOR_DARKNESS_THRESHOLD \u003d 0.184;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "const COLOR_DARK_TEXT  \u003d \u0027000000\u0027; // Dark color for text with light background"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "const COLOR_LIGHT_TEXT  \u003d \u0027FFFFFF\u0027; // Light color for text with dark background"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "const DISPLAY_NAME_SEVERITY \u003d \u0027Severity\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "const DISPLAY_NAME_BUG_TYPE \u003d \u0027Bug Type\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "const DISPLAY_NAME_RESPONSE \u003d \u0027Response\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "})"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export class LabelService {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private readonly REQUIRED_LABELS \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    severity: {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      Low: new Label(\u0027severity\u0027, \u0027Low\u0027, \u0027ffb3b3\u0027),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      Medium: new Label(\u0027severity\u0027, \u0027Medium\u0027, \u0027ff6666\u0027),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      High: new Label(\u0027severity\u0027, \u0027High\u0027, \u0027b30000\u0027)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    },"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    type: {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      DocumentationBug: new Label(\u0027type\u0027, \u0027DocumentationBug\u0027, \u0027ccb3ff\u0027),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      FunctionalityBug: new Label(\u0027type\u0027, \u0027FunctionalityBug\u0027, \u0027661aff\u0027)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    response: {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      Accepted: new Label(\u0027response\u0027, \u0027Accepted\u0027, \u002780ffcc\u0027),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      Rejected: new Label(\u0027response\u0027, \u0027Rejected\u0027, \u0027ff80b3\u0027),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      IssueUnclear: new Label(\u0027response\u0027, \u0027IssueUnclear\u0027, \u0027ffcc80\u0027),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      CannotReproduce: new Label(\u0027response\u0027, \u0027CannotReproduce\u0027, \u0027bfbfbf\u0027)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    },"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    status: {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      Done: new Label(\u0027status\u0027, \u0027Done\u0027, \u0027b3ecff\u0027),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      Incomplete: new Label(\u0027status\u0027, \u0027Incomplete\u0027, \u00271ac6ff\u0027)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  };"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private severityLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.severity);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private typeLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.type);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private responseLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.response);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private statusLabels: Label[] \u003d Object.values(this.REQUIRED_LABELS.status);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private labelArrays \u003d {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    severity: this.severityLabels,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    type: this.typeLabels,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    response: this.responseLabels,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    status: this.statusLabels"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(private githubService: GithubService) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Synchronizes the labels in github with those required by the application."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  synchronizeRemoteLabels(): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      return this.githubService.fetchAllLabels().pipe("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          this.ensureRepoHasRequiredLabels(this.parseLabelData(response), this.getRequiredLabelsAsArray());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          return response;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        })"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * Returns all the labels of a certain type (e.g severity)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @param attributeName: the type of the label"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @return an array of label of that type"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getLabelList(attributeName: string): Label[] {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    switch (attributeName) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return this.severityLabels;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return this.typeLabels;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027response\u0027:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return this.responseLabels;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * Returns a title for the label type"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @param attributeName: the type of the label"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getLabelTitle(attributeName: string): string {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    switch (attributeName) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return DISPLAY_NAME_SEVERITY;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return DISPLAY_NAME_BUG_TYPE;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return DISPLAY_NAME_RESPONSE;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Returns the color of the label by searching a list of"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * all available labels."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param labelValue: the label\u0027s value (e.g Low / Medium / High / ...)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  getColorOfLabel(labelValue: string): string {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // TODO: Rewrite function - labelValue insufficient to differentiate between labels. Should use `labelCategory.labelValue` format."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const WHITE_COLOR \u003d \u0027ffffff\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (labelValue \u003d\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return WHITE_COLOR;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const existingLabel \u003d this.getRequiredLabelsAsArray().find(label \u003d\u003e label.labelValue \u003d\u003d\u003d labelValue);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (existingLabel \u003d\u003d\u003d undefined || existingLabel.labelColor \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return WHITE_COLOR;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return existingLabel.labelColor;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private getRequiredLabelsAsArray(): Label[] {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let requiredLabels: Label[] \u003d [];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    for (const category of Object.keys(this.labelArrays)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      requiredLabels \u003d requiredLabels.concat(this.labelArrays[category]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return requiredLabels;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Ensures that the repo has the required labels."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Compares the actual labels in the repo with the required labels. If an required label is missing,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * it is added to the repo. If the required label exists but the label color is not as expected,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * the color is updated. Does not delete actual labels that do not match required labels."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * i.e., the repo might have more labels than the required labels after this operation."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param actualLabels: labels in the repo."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param requiredLabels: required labels."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private ensureRepoHasRequiredLabels(actualLabels: Label[], requiredLabels: Label[]): void {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    requiredLabels.forEach(label \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      // Finds for a label that has the same name as a required label."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const nameMatchedLabels: Label[] \u003d actualLabels.filter(remoteLabel \u003d\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          remoteLabel.getFormattedName() \u003d\u003d\u003d label.getFormattedName());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (nameMatchedLabels.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        // Create new Label (Could not find a label with the same name \u0026 category)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.githubService.createLabel(label.getFormattedName(), label.labelColor);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (nameMatchedLabels.length \u003d\u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        if (nameMatchedLabels[0].equals(label)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          // the label exists exactly as expected -\u003e do nothing"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          // the label exists but the color does not match"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          this.githubService.updateLabel(label.getFormattedName(), label.labelColor);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        throw new Error(\u0027Unexpected error: the repo has multiple labels with the same name \u0027 + label.getFormattedName());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses label information and returns an array of Label objects."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param labels - Label Information from API."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseLabelData(labels: Array\u003c{}\u003e): Label[] {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const labelData: Label[] \u003d [];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    for (const label of labels) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const labelName: string[] \u003d String(label[\u0027name\u0027]).split(\u0027.\u0027);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const labelCategory: string \u003d labelName[0];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const labelValue: string \u003d labelName[1];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const labelColor: string \u003d String(label[\u0027color\u0027]);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      labelData.push(new Label(labelCategory, labelValue, labelColor));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return labelData;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * Returns true if the given color is considered \"dark\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * The color is considered \"dark\" if its luminance is less than COLOR_DARKNESS_THRESHOLD"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @param inputColor: the color"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isDarkColor(inputColor: string): boolean {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const COLOR \u003d (inputColor.charAt(0) \u003d\u003d\u003d \u0027#\u0027) ? inputColor.substring(1, 7) : inputColor;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const R \u003d parseInt(COLOR.substring(0, 2), 16);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const G \u003d parseInt(COLOR.substring(2, 4), 16);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const B \u003d parseInt(COLOR.substring(4, 6), 16);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const RGB \u003d [R / 255, G / 255, B / 255];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const LINEAR_RGB \u003d RGB.map((col) \u003d\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      if (col \u003c\u003d 0.03928) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return col / 12.92;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      return Math.pow((col + 0.055) / 1.055, 2.4);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Calculate the luminance of the color"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const LUMINANCE \u003d (0.2126 * LINEAR_RGB[0]) + (0.7152 * LINEAR_RGB[1]) + (0.0722 * LINEAR_RGB[2]);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // The color is \"dark\" if the luminance is lower than the threshold"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return LUMINANCE \u003c COLOR_DARKNESS_THRESHOLD;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * Returns a css style for the label to use"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @param color: the color of the label"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @return the style with background-color in rgb"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   * @throws exception if input is an invalid color code"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "   */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  setLabelStyle(color: string) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    let textColor: string;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    textColor \u003d this.isDarkColor(color) ? COLOR_LIGHT_TEXT : COLOR_DARK_TEXT;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const styles \u003d {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u0027background-color\u0027 : `#${color}`,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u0027cursor\u0027 : \u0027default\u0027,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u0027color\u0027 : `#${textColor}`,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u0027font-weight\u0027 : \u0027410\u0027,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    };"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return styles;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 102,
      "KevinCJH": 133
    }
  },
  {
    "path": "src/app/core/services/phase.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Injectable} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClient} from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { flatMap, map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {GithubService} from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { LabelService } from \u0027./label.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "export enum Phase { phase1 \u003d \u0027phase1\u0027, phase2 \u003d \u0027phase2\u0027, phase3 \u003d \u0027phase3\u0027 }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export interface SessionData {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  openPhases: string[];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  phase1: string;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  phase2: string;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  phase3: string;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "export class PhaseService {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  public currentPhase: Phase;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private repoName: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private orgName: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  public readonly phaseDescription \u003d {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase1\u0027: \u0027Bug Reporting Phase\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase2\u0027: \u0027Team\\\u0027s Response Phase\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase3\u0027: \u0027Moderation Phase\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  public sessionData: SessionData;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private phaseRepoOwners \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    phase1: \u0027\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    phase2: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    phase3: \u0027\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(private http: HttpClient,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private githubService: GithubService,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private labelService: LabelService) {}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Stores the location of the repositories belonging to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * each phase of the application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param org - name of organization."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param user - name of user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  setPhaseOwners(org: string, user: string): void {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.orgName \u003d org;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.phaseRepoOwners.phase1 \u003d user;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.phaseRepoOwners.phase2 \u003d org;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.phaseRepoOwners.phase3 \u003d org;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Returns the name of the owner of a given phase."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param phase"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  getPhaseOwner(phase: string): string {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.phaseRepoOwners[phase];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  fetchSessionData(): Observable\u003cSessionData\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.githubService.fetchSettingsFile().pipe("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map(data \u003d\u003e data as SessionData)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  assertSessionDataIntegrity(sessionData: SessionData): void {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (sessionData \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      throwError(\u0027Session Data Unavailable.\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    } else if (!this.isSessionDataCorrectlyDefined(sessionData)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      throwError(\u0027Session Data is Incorrectly Defined\u0027);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Ensures that the input session Data has been correctly defined."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Returns true if satisfies these properties, false otherwise."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param sessionData"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isSessionDataCorrectlyDefined(sessionData: SessionData): boolean {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    for (const data of Object.values(sessionData)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (data \u003d\u003d\u003d undefined || data \u003d\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Stores session data and sets current session\u0027s phase."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @throws throwError - If there are no open phases in this session."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param sessionData"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  updateSessionParameters(sessionData: SessionData) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (sessionData.openPhases.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      throwError(\u0027There are no accessible phases.\u0027);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.sessionData \u003d sessionData;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.currentPhase \u003d Phase[sessionData.openPhases[0]];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.repoName \u003d sessionData[sessionData.openPhases[0]];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.githubService.storePhaseDetails(this.phaseRepoOwners[this.currentPhase], this.repoName);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  sessionSetup(): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.fetchSessionData().pipe("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      flatMap((sessionData: SessionData) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.assertSessionDataIntegrity(sessionData);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.updateSessionParameters(sessionData);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.labelService.synchronizeRemoteLabels();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  public getPhaseDetail() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.orgName.concat(\u0027/\u0027).concat(this.repoName);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    this.currentPhase \u003d null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 78,
      "KevinCJH": 4,
      "-": 43
    }
  },
  {
    "path": "src/app/phase1/issue/issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003capp-view-issue [issueId]\u003d\"this.issueId\" [issueComponents]\u003d\"this.issueComponents\"\u003e\u003c/app-view-issue\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 2
    }
  },
  {
    "path": "src/app/phase1/issue/issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueComponent, ISSUE_COMPONENTS } from \u0027../../shared/view-issue/view-issue.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue\u0027,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue.component.html\u0027,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue.component.css\u0027]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueComponent implements OnInit {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issueId: number;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TESTER_POST,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.SEVERITY_LABEL,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TYPE_LABEL"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  @ViewChild(ViewIssueComponent) viewIssue: ViewIssueComponent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(private route: ActivatedRoute) { }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.route.params.subscribe("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      params \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.issueId \u003d + params[\u0027issue_id\u0027];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  canDeactivate(): boolean {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.viewIssue.isEditing();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 18,
      "-": 17
    }
  },
  {
    "path": "src/app/phase1/new-issue/new-issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1 class\u003d\"mat-display-1 title\"\u003eNew Issue\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"newIssueForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewIssue(myForm)\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"form\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cdiv class\u003d\"column left\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cinput id\u003d\"title\" formControlName\u003d\"title\" matInput placeholder\u003d\"Title\" required\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027required\u0027] \u0026\u0026 title.touched\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            Title required."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv style\u003d\"margin: 10px 0 10px 0;\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-comment-editor [commentField]\u003d\"description\" [commentForm]\u003d\"newIssueForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cbutton style\u003d\"float: right\" type\u003d\"submit\" mat-stroked-button color\u003d\"primary\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [disabled]\u003d\"!newIssueForm.valid || isFormPending\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          Submit new issue"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cdiv class\u003d\"column right\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-select formControlName\u003d\"severity\" placeholder\u003d\"Severity\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027severity\u0027)\" "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedSeverityColor)\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of severityValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"severity.errors \u0026\u0026 severity.errors[\u0027required\u0027] \u0026\u0026 severity.touched\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Severity required."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-select formControlName\u003d\"type\" placeholder\u003d\"Type\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027type\u0027)\" "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedTypeColor)\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of issueTypeValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"type.errors \u0026\u0026 type.errors[\u0027required\u0027] \u0026\u0026 type.touched\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            Type required."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 26,
      "-": 33
    }
  },
  {
    "path": "src/app/phase1/new-issue/new-issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-new-issue\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./new-issue.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./new-issue.component.css\u0027]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class NewIssueComponent implements OnInit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  newIssueForm: FormGroup;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  severityValues \u003d this.labelService.getLabelList(\u0027severity\u0027);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issueTypeValues \u003d this.labelService.getLabelList(\u0027type\u0027);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  selectedSeverityColor: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  selectedTypeColor: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService, private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private errorHandlingService: ErrorHandlingService, public labelService: LabelService,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router) { }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newIssueForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      title: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      description: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(\u0027\u0027);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.selectedTypeColor \u003d this.labelService.getColorOfLabel(\u0027\u0027);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewIssue(form: NgForm) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.newIssueForm.invalid) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.createIssue(this.title.value, this.description.value,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      this.severity.value, this.type.value).pipe(finalize(() \u003d\u003e this.isFormPending \u003d false))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        newIssue \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          this.issueService.updateLocalStore(newIssue);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          this.router.navigateByUrl(`phase1/issues/${newIssue.id}`);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          form.resetForm();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          error \u003d\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  setSelectedLabelColor(labelValue: string, labelType: string) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    switch (labelType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.selectedTypeColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  get title() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027title\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 19,
      "-": 62
    }
  },
  {
    "path": "src/app/phase1/phase1.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e {{userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u0027Issues you posted\u0027 : \u0027All Issues\u0027 }}\u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-right\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCreateNewIssue()\" mat-stroked-button color\u003d\"primary\" routerLink\u003d\"issues/new\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          New Issue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\"\u003e\u003c/app-issue-tables\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 21
    }
  },
  {
    "path": "src/app/phase1/phase1.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssuesDataTable } from \u0027../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { BehaviorSubject } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue } from \u0027../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase1\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase1.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase1.component.css\u0027]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase1Component implements OnInit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.DELETE_ISSUE];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public permissions: PermissionService,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "              public userService: UserService) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 8,
      "-": 23
    }
  },
  {
    "path": "src/app/phase1/phase1.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {SharedModule} from \u0027../shared/shared.module\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase1RoutingModule} from \u0027./phase1-routing.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase1Component} from \u0027./phase1.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {NewIssueComponent} from \u0027./new-issue/new-issue.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueComponent} from \u0027./issue/issue.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import {CommentEditorModule} from \u0027../shared/comment-editor/comment-editor.module\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {MarkdownModule} from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueComponentsModule} from \u0027../shared/issue/issue-components.module\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase1RoutingModule,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    IssueComponentsModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    CommentEditorModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ViewIssueModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forChild(),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    IssueTablesModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase1Component,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    NewIssueComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    IssueComponent,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase1Module {}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "KevinCJH": 2,
      "-": 26
    }
  },
  {
    "path": "src/app/phase2/issue/issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003capp-view-issue [issueId]\u003d\"this.issueId\" [issueComponents]\u003d\"this.issueComponents\"\u003e\u003c/app-view-issue\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 2
    }
  },
  {
    "path": "src/app/phase2/issue/issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Component, OnInit, OnDestroy, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueComponent, ISSUE_COMPONENTS } from \u0027../../shared/view-issue/view-issue.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue.component.html\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue.component.css\u0027]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueComponent implements OnInit {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issueId: number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TESTER_POST,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TEAM_RESPONSE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.NEW_TEAM_RESPONSE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.SEVERITY_LABEL,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TYPE_LABEL,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.RESPONSE_LABEL,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.ASSIGNEE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.DUPLICATE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  @ViewChild(ViewIssueComponent) viewIssue: ViewIssueComponent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) { }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.params.subscribe("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      params \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.issueId \u003d + params[\u0027issue_id\u0027];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  canDeactivate(): boolean {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.viewIssue.isEditing();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 20,
      "-": 24
    }
  },
  {
    "path": "src/app/phase2/issues-faulty/issues-faulty.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Faulty Issues \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 13
    }
  },
  {
    "path": "src/app/phase2/issues-faulty/issues-faulty.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-faulty\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-faulty.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-faulty.component.css\u0027],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesFaultyComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns: string[];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.FIX_ISSUE];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public issueService: IssueService, public userService: UserService,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      public permissions: PermissionService) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027actions\u0027];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.filter \u003d (issue: Issue): boolean \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.issueService.hasResponse(issue.id) \u0026\u0026"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        (!!issue.duplicateOf \u0026\u0026 this.issueService.issues$.getValue().filter(childIssue \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          return childIssue.duplicateOf \u003d\u003d\u003d issue.id;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }).length !\u003d\u003d 0);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 11,
      "KevinCJH": 1,
      "-": 41
    }
  },
  {
    "path": "src/app/phase2/issues-pending/issues-pending.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003e Issues Pending Response \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 13
    }
  },
  {
    "path": "src/app/phase2/issues-pending/issues-pending.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-pending\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-pending.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-pending.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesPendingComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.RESPOND_TO_ISSUE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ACTION_BUTTONS.MARK_AS_RESPONDED];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              public permissions: PermissionService, public userService: UserService) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role !\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      return (!this.issueService.hasResponse(issue.id) || (!issue.status || issue.status \u003d\u003d\u003d \u0027Incomplete\u0027)) \u0026\u0026"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        !issue.duplicateOf;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 13,
      "-": 38
    }
  },
  {
    "path": "src/app/phase2/issues-responded/issues-responded.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Issues Responded \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\" [filters]\u003d\"this.filter\"\u003e\u003c/app-issue-tables\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 13
    }
  },
  {
    "path": "src/app/phase2/issues-responded/issues-responded.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-responded\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-responded.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-responded.component.css\u0027],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesRespondedComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns: string[];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  filter: (issue: Issue) \u003d\u003e boolean;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB, ACTION_BUTTONS.MARK_AS_PENDING];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public issueService: IssueService, public userService: UserService) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027actions\u0027];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.table.issues.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.issueService.hasResponse(issue.id) \u0026\u0026 !issue.duplicateOf \u0026\u0026"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        (issue.status \u003d\u003d\u003d \u0027Done\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 11,
      "-": 38
    }
  },
  {
    "path": "src/app/phase2/phase2.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssuesFilter } from \u0027../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase } from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataService } from \u0027../core/services/data.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueService } from \u0027../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase2\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase2.component.html\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase2.component.css\u0027]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase2Component implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  public teamFilter \u003d \u0027All Teams\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(public userService: UserService, private dataService: DataService, private issueService: IssueService) {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueService.setIssueTeamFilter(this.teamFilter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  get teamList(): string[] {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    const teams \u003d this.dataService.getTeams();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[Phase.phase2][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...this.userService.currentUser.allocatedTeams.map(team \u003d\u003e team.id)];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...teams];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDisplayedTeam(newTeam: string) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilter \u003d newTeam;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 5,
      "-": 32
    }
  },
  {
    "path": "src/app/phase2/phase2.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {SharedModule} from \u0027../shared/shared.module\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase2Component} from \u0027./phase2.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase2RoutingModule} from \u0027./phase2-routing.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueComponent} from \u0027./issue/issue.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueComponentsModule} from \u0027../shared/issue/issue-components.module\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import {CommentEditorModule} from \u0027../shared/comment-editor/comment-editor.module\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {MarkdownModule} from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssuesPendingComponent} from \u0027./issues-pending/issues-pending.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssuesRespondedComponent} from \u0027./issues-responded/issues-responded.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssuesFaultyComponent} from \u0027./issues-faulty/issues-faulty.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase2RoutingModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    IssueComponentsModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    CommentEditorModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ViewIssueModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forChild(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    IssueTablesModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase2Component,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    IssueComponent,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    IssuesPendingComponent,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    IssuesRespondedComponent,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    IssuesFaultyComponent,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase2Module {}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "KevinCJH": 2,
      "-": 30
    }
  },
  {
    "path": "src/app/phase3/issue/issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003capp-view-issue [issueId]\u003d\"this.issueId\" [issueComponents]\u003d\"this.issueComponents\"\u003e\u003c/app-view-issue\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 2
    }
  },
  {
    "path": "src/app/phase3/issue/issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueComponent, ISSUE_COMPONENTS } from \u0027../../shared/view-issue/view-issue.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue.component.html\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue.component.css\u0027]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueComponent implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issueId: number;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  readonly issueComponents: ISSUE_COMPONENTS[] \u003d ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TESTER_POST,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TEAM_RESPONSE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TUTOR_RESPONSE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.NEW_TUTOR_RESPONSE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.SEVERITY_LABEL,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TYPE_LABEL,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.RESPONSE_LABEL,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.ASSIGNEE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.DUPLICATE,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ISSUE_COMPONENTS.TODO_LIST"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  @ViewChild(ViewIssueComponent) viewIssue: ViewIssueComponent;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              public userService: UserService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public permissions: PermissionService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public issueService: IssueService) { }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.params.subscribe("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      params \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.issueId \u003d + params[\u0027issue_id\u0027];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  canDeactivate(): boolean {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.viewIssue.isEditing();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 27,
      "-": 21
    }
  },
  {
    "path": "src/app/phase3/phase3.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv style\u003d\"text-align: center; margin-bottom: 20px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"mat-display-1\"\u003e {{ teamList ? teamFilter : userService.currentUser.team.id}} \u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton *ngIf\u003d\"teamList\" [matMenuTriggerFor]\u003d\"teamMenu\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e settings \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-menu #teamMenu\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton mat-menu-item [disabled]\u003d\"team \u003d\u003d\u003d teamFilter\" *ngFor\u003d\"let team of teamList\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"updateDisplayedTeam(team)\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan\u003e {{team}} \u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-menu\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Issues Submitted by Students \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003capp-issue-tables [headers]\u003d\"this.displayedColumns\" [actions]\u003d\"this.actionButtons\"\u003e\u003c/app-issue-tables\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 27
    }
  },
  {
    "path": "src/app/phase3/phase3.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { BehaviorSubject } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, IssuesFilter } from \u0027../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssuesDataTable } from \u0027../shared/issue-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { Phase } from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataService } from \u0027../core/services/data.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { LabelService } from \u0027../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { GithubService } from \u0027../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ACTION_BUTTONS, IssueTablesComponent } from \u0027../shared/issue-tables/issue-tables.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase3\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase3.component.html\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase3.component.css\u0027]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase3Component implements OnInit {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027Todo Remaining\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  public teamFilter \u003d \u0027All Teams\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly actionButtons: ACTION_BUTTONS[] \u003d [ACTION_BUTTONS.VIEW_IN_WEB];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(IssueTablesComponent) table: IssueTablesComponent;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public userService: UserService, private labelService: LabelService, private githubService: GithubService,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private dataService: DataService) { }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueService.setIssueTeamFilter(this.teamFilter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.table.issues.filter \u003d filterValue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  get teamList(): string[] {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    const teams \u003d this.dataService.getTeams();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[Phase.phase3][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...this.userService.currentUser.allocatedTeams.map(team \u003d\u003e team.id)];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...teams];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDisplayedTeam(newTeam: string) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilter \u003d newTeam;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.table.issues.teamFilter \u003d this.teamFilter;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 7,
      "KevinCJH": 6,
      "-": 44
    }
  },
  {
    "path": "src/app/phase3/phase3.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {SharedModule} from \u0027../shared/shared.module\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase3Component} from \u0027./phase3.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase3RoutingModule} from \u0027./phase3-routing.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComponent } from \u0027./issue/issue.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueComponentsModule} from \u0027../shared/issue/issue-components.module\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import {CommentEditorModule} from \u0027../shared/comment-editor/comment-editor.module\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {MarkdownModule} from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueModule } from \u0027../shared/view-issue/view-issue.module\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssueTablesModule } from \u0027../shared/issue-tables/issue-tables.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase3RoutingModule,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    IssueComponentsModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    CommentEditorModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ViewIssueModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forChild(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    IssueTablesModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase3Component,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    IssueComponent,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase3Module {}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "KevinCJH": 2,
      "-": 24
    }
  },
  {
    "path": "src/app/shared/issue-tables/IssuesDataTable.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {BehaviorSubject, merge, Observable, Subscription} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {DataSource} from \u0027@angular/cdk/table\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueService} from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {Issue, ISSUE_TYPE_ORDER, SEVERITY_ORDER} from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {MatPaginator, MatSort} from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {delay, flatMap, map, tap} from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesDataTable extends DataSource\u003cIssue\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  private filterChange \u003d new BehaviorSubject(\u0027\u0027);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  private teamFilterChange \u003d new BehaviorSubject(\u0027\u0027);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  private issuesSubject \u003d new BehaviorSubject\u003cIssue[]\u003e([]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadingSubject \u003d new BehaviorSubject\u003cboolean\u003e(false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  private issueSubscription: Subscription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  public isLoading$ \u003d this.loadingSubject.asObservable();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService, private errorHandlingService: ErrorHandlingService, private sort: MatSort,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "              private paginator: MatPaginator, private displayedColumn: string[],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              private defaultFilter?: (issue: Issue) \u003d\u003e boolean) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  connect(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issuesSubject.asObservable();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  disconnect() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filterChange.complete();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilterChange.complete();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesSubject.complete();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingSubject.complete();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueSubscription.unsubscribe();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  loadIssues() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    const displayDataChanges \u003d ["
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueService.issues$,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator.page,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sort.sortChange,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterChange,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      this.teamFilterChange,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingSubject.next(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueSubscription \u003d this.issueService.getAllIssues().pipe("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      delay(0),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      tap(() \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadingSubject.next(false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        return merge(...displayDataChanges).pipe("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          map(() \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            let data \u003d \u003cIssue[]\u003eObject.values(this.issueService.issues$.getValue()).reverse();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.defaultFilter) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              data \u003d data.filter(this.defaultFilter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getSortedData(data);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getFilteredTeamData(data);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getFilteredData(data);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            data \u003d this.getPaginatedData(data);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return data;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          }));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesSubject.next(issues);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      (error) \u003d\u003e this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.issueService.getAllIssues())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  get filter(): string {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.filterChange.value;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  set filter(filter: string) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    this.filterChange.next(filter);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  get teamFilter(): string {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.teamFilterChange.value;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  set teamFilter(teamFilter: string) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilterChange.next(teamFilter);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueService.setIssueTeamFilter(this.teamFilterChange.value);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  private getFilteredTeamData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    return data.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.teamFilter || this.teamFilter \u003d\u003d\u003d \u0027All Teams\u0027) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      return issue.teamAssigned.id \u003d\u003d\u003d this.teamFilter;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  private getSortedData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.sort.active) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      return data;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    return data.sort((a, b) \u003d\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (this.sort.active) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027type\u0027:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(ISSUE_TYPE_ORDER[a.type], ISSUE_TYPE_ORDER[b.type]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027severity\u0027:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(SEVERITY_ORDER[a.severity], SEVERITY_ORDER[b.severity]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027assignees\u0027:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(a.assignees.join(\u0027, \u0027), b.assignees.join(\u0027, \u0027));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        case \u0027teamAssigned\u0027:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(a.teamAssigned.id, b.teamAssigned.id);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        default: // id, title, responseTag"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.compareValue(a[this.sort.active], b[this.sort.active]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  private getPaginatedData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    let startIndex \u003d this.paginator.pageIndex * this.paginator.pageSize;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d data.splice(startIndex, this.paginator.pageSize);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    if (result.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator.pageIndex -\u003d 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      startIndex \u003d this.paginator.pageIndex * this.paginator.pageSize;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      return data.splice(startIndex, this.paginator.pageSize);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  private getFilteredData(data: Issue[]): Issue[] {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    const searchKey \u003d this.filter.toLowerCase();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d data.slice().filter((issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const column of this.displayedColumn) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (column) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "          case \u0027assignees\u0027:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            for (const assignee of issue.assignees) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "              if (assignee.toLowerCase().indexOf(searchKey) !\u003d\u003d -1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          case \u0027duplicatedIssues\u0027:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            const duplicatedIssues \u003d this.issueService.issues$.getValue().filter(el \u003d\u003e el.duplicateOf \u003d\u003d\u003d issue.id);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            if (duplicatedIssues.filter(el \u003d\u003e `#${String(el.id)}`.includes(searchKey)).length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            const searchStr \u003d String(issue[column]).toLowerCase();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            if (searchStr.indexOf(searchKey) !\u003d\u003d -1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    this.paginator.length \u003d result.length;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  private compareValue(valueA, valueB): number {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    const a \u003d valueA || \u0027\u0027;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    const b \u003d valueB || \u0027\u0027;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    return (a \u003c b ? -1 : 1) * (this.sort.direction \u003d\u003d\u003d \u0027asc\u0027 ? 1 : -1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 168
    }
  },
  {
    "path": "src/app/shared/issue-tables/issue-tables.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003ctable mat-table [dataSource]\u003d\"this.issues\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- ID Column --\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default;\"\u003e{{issue.id}}\u003c/span\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- Title Column --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- Team Assigned Column --\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{ issue.teamAssigned \u0026\u0026 issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- Type Column --\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell [style.width]\u003d\"permissions.canCRUDTeamResponse() ? \u002710%\u0027 : \u002715%\u0027\" *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u003cspan (click)\u003d\"$event.stopPropagation()\" [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              {{issue.type || \u0027-\u0027}}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- Severity Column --\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell [style.width]\u003d\"permissions.canCRUDTeamResponse() ? \u00279%\u0027 : \u002712%\u0027\" *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cspan (click)\u003d\"$event.stopPropagation()\" [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          {{issue.severity || \u0027-\u0027}}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!--Response Tag Column--\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/th\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cspan (click)\u003d\"$event.stopPropagation()\" *ngIf\u003d\"issue.responseTag\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          {{issue.responseTag}}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!--Assignee Column--\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"assignees\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth [style.width]\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u002715%\u0027 : \u002710%\u0027\" mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/th\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cspan (click)\u003d\"$event.stopPropagation()\" style\u003d\"cursor: default;\" *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          {{issue.assignees.join(\u0027, \u0027)}}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 5%\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- Duplicated Issues Column --\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        -"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-chip-list *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\" style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-chip [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                  [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                  style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- To do Column --\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"Todo Remaining\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Todo Remaining \u003c/th\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"isTodoListChecked(issue) \u0026\u0026 issue.todoList.length \u003e 0\"\u003e \u003cfont color\u003d\"green\"\u003eAll tasks are completed\u003c/font\u003e \u003c/span\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"!isTodoListChecked(issue)\"\u003e \u003cfont color\u003d\"red\"\u003e{{ issue.todoList.length - todoFinished(issue) }}/{{ issue.todoList.length }} tasks pending.\u003c/font\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cprogress *ngIf\u003d\"issue.todoList.length \u003e 0\" value\u003d{{todoFinished(issue)}} max\u003d{{issue.todoList.length}} role\u003d\"progressbar\" style\u003d\"width: 100%\" aria-valuenow\u003d\"100\" aria-valuemin\u003d\"0\" aria-valuemax\u003d\"100\"\u003e\u003c/progress\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"issue.todoList.length \u003d\u003d\u003d 0\"\u003e No Todo List for this issue \u003c/span\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!-- Action Buttons Column --\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"actions\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef\u003e Actions \u003c/th\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton mat-button matTooltip\u003d\"View this issue in web-browser\" *ngIf\u003d\"this.isActionVisible(action_buttons.VIEW_IN_WEB)\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              (click)\u003d\"this.githubService.viewIssueInBrowser(issue.id)\" style\u003d\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              transform: scale(0.8)\"\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-icon\u003elink\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 !issueService.hasResponse(issue.id)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "       \u0026\u0026 this.isActionVisible(action_buttons.RESPOND_TO_ISSUE)\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              [routerLink]\u003d\"\u0027/phase2/issues/\u0027 + issue.id\" mat-button color\u003d\"accent\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" matTooltip\u003d\"Respond to this Issue\"\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-icon\u003efeedback\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 issueService.hasResponse(issue.id)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u0026\u0026 this.isActionVisible(action_buttons.MARK_AS_RESPONDED)\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              mat-button color\u003d\"primary\" (click)\u003d\"markAsResponded(issue)\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" matTooltip\u003d\"Mark this Issue as Responded\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-icon\u003echeck_circle\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton color\u003d\"primary\" matTooltip\u003d\"Mark this issue as Pending\" mat-button (click)\u003d\"markAsPending(issue)\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" *ngIf\u003d\"(userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              \u0026\u0026 this.isActionVisible(action_buttons.MARK_AS_PENDING)\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-icon\u003ecancel\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 this.isActionVisible(action_buttons.FIX_ISSUE)\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              [routerLink]\u003d\"\u0027/phase2/issues/\u0027 + issue.id\" mat-button color\u003d\"accent\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              style\u003d\"transform: scale(0.8)\" matTooltip\u003d\"Fix this Issue\" \u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-icon\u003eedit\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton mat-button color\u003d\"warn\" *ngIf\u003d\"permissions.canDeleteIssue() \u0026\u0026 !issuesPendingDeletion[issue.id]"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              (click)\u003d\"deleteIssue(issue.id)\" matTooltip\u003d\"Delete this issue\" style\u003d\"transform: scale(0.8)\"\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003cmat-icon\u003edelete_outline\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-spinner color\u003d\"warn\" [diameter]\u003d\"25\" style\u003d\"display: inline; padding-right: 30px; margin-left: 5px\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                   *ngIf\u003d\"issuesPendingDeletion[issue.id] \u0026\u0026 this.isActionVisible(action_buttons.DELETE_ISSUE)\" \u003e\u003c/mat-spinner\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003ctr mat-header-row *matHeaderRowDef\u003d\"this.headers\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003ctr mat-row *matRowDef\u003d\"let issue; columns: this.headers;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\" style\u003d\"cursor: pointer\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cmat-card *ngIf\u003d\"this.issues.isLoading$ | async\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/mat-card\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 146
    }
  },
  {
    "path": "src/app/shared/issue-tables/issue-tables.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssueTablesComponent } from \u0027./issue-tables.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "describe(\u0027IssueTablesComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let component: IssueTablesComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let fixture: ComponentFixture\u003cIssueTablesComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      declarations: [ IssueTablesComponent ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture \u003d TestBed.createComponent(IssueTablesComponent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 25
    }
  },
  {
    "path": "src/app/shared/issue-tables/issue-tables.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { GithubService } from \u0027../../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssuesDataTable } from \u0027./IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export enum ACTION_BUTTONS {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  VIEW_IN_WEB,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  MARK_AS_RESPONDED,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  MARK_AS_PENDING,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  RESPOND_TO_ISSUE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  FIX_ISSUE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  DELETE_ISSUE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selector: \u0027app-issue-tables\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  templateUrl: \u0027./issue-tables.component.html\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  styleUrls: [\u0027./issue-tables.component.css\u0027]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class IssueTablesComponent implements OnInit {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @Input() headers: string[];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @Input() actions: ACTION_BUTTONS[];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @Input() filters?: any \u003d undefined;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  issues: IssuesDataTable;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  issuesPendingDeletion: {[id: number]: boolean};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  private readonly action_buttons \u003d ACTION_BUTTONS;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(private permissions: PermissionService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private labelService: LabelService,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private githubService: GithubService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private issueService: IssueService,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) { }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issues \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.paginator, this.headers, this.filters);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issues.loadIssues();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issuesPendingDeletion \u003d {};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isActionVisible(action: ACTION_BUTTONS): boolean {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.actions.includes(action);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  markAsResponded(issue: Issue) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ...issue,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      status: STATUS.Done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }, error \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  markAsPending(issue: Issue) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ...issue,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      status: STATUS.Incomplete"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }, error \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isTodoListExists(issue): boolean {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return issue.todoList.length !\u003d\u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  todoFinished(issue): number {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let count \u003d 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (!this.isTodoListExists(issue)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return count;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    for (const todo of issue.todoList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (todo.charAt(3) \u003d\u003d\u003d \u0027x\u0027) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        count +\u003d 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return count;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isTodoListChecked(issue): boolean {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return (!this.isTodoListExists(issue) || this.todoFinished(issue) \u003d\u003d\u003d issue.todoList.length);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  deleteIssue(id: number) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issuesPendingDeletion \u003d {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ...this.issuesPendingDeletion,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      [id]: true,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    };"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issueService.deleteIssue(id).pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const { [id]: issueRemoved, ...theRest } \u003d this.issuesPendingDeletion;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.issuesPendingDeletion \u003d theRest;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    })).subscribe((removedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    event.stopPropagation();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 118
    }
  },
  {
    "path": "src/app/shared/issue-tables/issue-tables.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { IssueTablesComponent } from \u0027./issue-tables.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MaterialModule } from \u0027../material.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { RouterModule } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    IssueTablesComponent"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    IssueTablesComponent"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    MaterialModule,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    RouterModule"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class IssueTablesModule { }"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 20
    }
  },
  {
    "path": "src/app/shared/issue/assignee/assignee.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan class\u003d\"mat-title\"\u003e Assignees \u003c/span\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"permissions.canEditIssueLabels()\" style\u003d\"float: right\" (click)\u003d\"openSelector()\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-select class\u003d\"no-arrow\" [style.display]\u003d\"isInEditMode ? \u0027block\u0027 : \u0027none\u0027\" placeholder\u003d\"-\" multiple"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "              (openedChange)\u003d\"handleEditMode($event)\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "              [value]\u003d\"issue.assignees\" (selectionChange)\u003d\"updateAssignee($event)\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-select-trigger\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-select-trigger\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-option *ngFor\u003d\"let assignee of teamMembers\" [value]\u003d\"assignee\"\u003e{{assignee}}\u003c/mat-option\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cp *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-top: 5px\"\u003e - \u003c/p\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-list style\u003d\"padding-top: 0\" dense *ngIf\u003d\"issue.assignees.length \u003e 0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cmat-list-item style\u003d\"font-size: 1em;\" *ngFor\u003d\"let assignee of issue.assignees\"\u003e{{assignee}}\u003c/mat-list-item\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-list\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 18
    }
  },
  {
    "path": "src/app/shared/issue/description/description.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch3 class\u003d\"mat-title\"\u003e{{title}}\u003c/h3\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"issueDescriptionForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateDescription(myForm)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cspan\u003e \u003cstrong\u003e Tester \u003c/strong\u003e posted on {{issue.created_at}}. \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cbutton mat-button *ngIf\u003d\"permissions.canEditIssueDescription() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        Edit"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmarkdown [data]\u003d\"issue.description\"\u003e\u003c/markdown\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"issueDescriptionForm.get(\u0027description\u0027)\" [commentForm]\u003d\"issueDescriptionForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cbutton type\u003d\"button\" mat-stroked-button color\u003d\"warn\" (click)\u003d\"cancelEditMode()\"\u003eCancel\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cbutton type\u003d\"submit\" [disabled]\u003d\"issueDescriptionForm.invalid || isSavePending\" mat-stroked-button color\u003d\"primary\"\u003eSave\u003c/button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 4,
      "-": 15
    }
  },
  {
    "path": "src/app/shared/issue/duplicateOf/duplicate-of.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-checkbox [disabled]\u003d\"!permissions.canCRUDTeamResponse() \u0026\u0026 !permissions.canCRUDTutorResponse()\" labelPosition\u003d\"before\" [checked]\u003d\"issue.duplicated\" (change)\u003d\"handleCheckboxChange($event)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"mat-title\"\u003e Duplicate Status \u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"permissions.canEditIssueLabels()\" [style.visibility]\u003d\"issue.duplicated ? \u0027inherit\u0027 : \u0027hidden\u0027\" style\u003d\"float: right\" (click)\u003d\"openSelection()\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-select [style.display]\u003d\"isEditing ? \u0027block\u0027 : \u0027none\u0027\" class\u003d\"no-arrow\" placeholder\u003d\"-\" [value]\u003d\"issue.duplicateOf\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "              (selectionChange)\u003d\"updateDuplicateStatus($event)\" (openedChange)\u003d\"handleSelectionOpenChange($event)\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-select-trigger\u003e\u003c/mat-select-trigger\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cmat-option [matTooltip]\u003d\"issue.title\" [matTooltipDisabled]\u003d\"!isTooltipNecessary(issue)\" [matTooltipPosition]\u003d\"\u0027left\u0027\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                [value]\u003d\"issue.id\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cdiv class\u003d\"duplicate-dropdown-issuedetails\" [ngStyle]\u003d\"{\u0027width\u0027: dupIssueOptionIsDisabled(issue) ? \u0027150px\u0027 : \u0027auto\u0027}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan class\u003d\"mat-body-strong\"\u003e #{{issue.id}}: \u003c/span\u003e  \u003cspan class\u003d\"mat-body\"\u003e{{issue.title}}\u003c/span\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"display: inline-block; color: #f44336\"\u003e ({{getDisabledDupOptionErrorText(issue)}}) \u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ issue.duplicateOf ? (\u0027#\u0027 + issue.duplicateOf + \u0027: \u0027 + (issueService.getIssue(issue.duplicateOf) | async).title) : \u0027Not specified\u0027}}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"!issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e - \u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "-": 22
    }
  },
  {
    "path": "src/app/shared/issue/duplicateOf/duplicate-of.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Component,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  EventEmitter,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Input,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  OnInit,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Output,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ViewChild,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ViewEncapsulation"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ErrorHandlingService"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, SEVERITY_ORDER } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatCheckbox, MatSelect } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-duplicate-of-component\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./duplicate-of.component.html\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./duplicate-of.component.css\u0027],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  encapsulation: ViewEncapsulation.None,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "export class DuplicateOfComponent implements OnInit {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  isEditing \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSelect) duplicateOfSelection: MatSelect;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatCheckbox) duplicatedCheckbox: MatCheckbox;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Max chars visible for a duplicate entry in duplicates dropdown list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE \u003d 17;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Max chars visible for a non-duplicate entry in duplicates dropdown list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE \u003d 37;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Checks if the supplied issue requires a tooltip"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * in the UI as some information may be hidden due to truncation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param issue - Displayed issue that may need a tooltip."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return - true (to enable tooltip) / false (to disable tooltip)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isTooltipNecessary(issue: Issue): boolean {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Maximum Possible Title length varies based on whether the issue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // is a duplicate. (Whether the Duplicate Issue Tag is visible)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let maxTitleLength: number;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    maxTitleLength \u003d issue.duplicated"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ? this.MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      : this.MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return issue.title.length \u003e maxTitleLength;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDuplicateStatus(event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicated: !!event,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: event ? event.value : null,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      || (issue.duplicated || !!issue.duplicateOf);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (SEVERITY_ORDER[this.issue.severity]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Issue of lower priority\u0027);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (issue.duplicated || !!issue.duplicateOf) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027A duplicated issue\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  handleCheckboxChange(event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      this.openSelection();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditing \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOfSelection.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOfSelection.value \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateDuplicateStatus(null);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  openSelection() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isEditing \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicateOfSelection.open();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  handleSelectionOpenChange(isOpen) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isOpen) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditing \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicatedCheckbox.checked \u003d this.duplicateOfSelection.value;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u0026\u0026 this.issue.teamAssigned.id \u003d\u003d\u003d issue.teamAssigned.id;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 42,
      "-": 91
    }
  },
  {
    "path": "src/app/shared/issue/label/label.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "\u003cspan class\u003d\"mat-title\"\u003e {{this.labelService.getLabelTitle(attributeName)}} \u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbutton *ngIf\u003d\"permissions.canEditIssueLabels()\" style\u003d\"float: right\" [matMenuTriggerFor]\u003d\"labelList\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-menu #labelList\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003cbutton mat-menu-item *ngFor\u003d\"let value of labelValues;\" (click)\u003d\"updateLabel(value.labelValue)\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [disabled]\u003d\"value.labelValue \u003d\u003d\u003d this.issue[attributeName]\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cmat-icon [ngStyle]\u003d\"{\u0027color\u0027: \u0027#\u0027 + value.labelColor, \u0027font-size\u0027 : \u00271.8em\u0027}\"\u003estop\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cspan\u003e {{value.labelValue}}\u003c/span\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-menu\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "\u003cp [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelColor)\"\u003e{{issue[attributeName] || \u0027-\u0027}}\u003c/p\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 6,
      "-": 8
    }
  },
  {
    "path": "src/app/shared/issue/label/label.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output, OnChanges } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Issue } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Label } from \u0027../../../core/models/label.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { LabelService } from \u0027../../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue-label\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./label.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./label.component.css\u0027],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export class LabelComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  labelValues: Label[];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  labelColor: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() attributeName: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public labelService: LabelService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Get the list of labels based on their type (severity, type, response)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.labelValues \u003d this.labelService.getLabelList(this.attributeName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ngOnChanges() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Color will change when @Input issue changes"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.labelColor \u003d this.labelService.getColorOfLabel(this.issue[this.attributeName]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  updateLabel(value: string) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.attributeName]: value,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((editedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(editedIssue);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.labelColor \u003d this.labelService.getColorOfLabel(editedIssue[this.attributeName]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 14,
      "-": 38
    }
  },
  {
    "path": "src/app/shared/issue/response/response.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch3 class\u003d\"mat-title\"\u003e{{TITLE[attributeName]}}\u003c/h3\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"responseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateResponse(myForm)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cspan\u003e \u003cstrong\u003e {{POSTER[attributeName]}} \u003c/strong\u003e {{ACTION[attributeName]}}. \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton mat-button *ngIf\u003d\"canEditIssue() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        Edit"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmarkdown [data]\u003d\"issue[attributeName]\"\u003e\u003c/markdown\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"responseForm.get(\u0027description\u0027)\" [commentForm]\u003d\"responseForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" mat-stroked-button color\u003d\"warn\" (click)\u003d\"cancelEditMode()\"\u003eCancel\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"submit\" [disabled]\u003d\"responseForm.invalid || isSavePending\" mat-stroked-button color\u003d\"primary\"\u003eSave\u003c/button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 18
    }
  },
  {
    "path": "src/app/shared/layout/header.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-toolbar color\u003d\"primary\" style\u003d\"position: sticky; position: -webkit-sticky; top: 0; z-index: 1000;\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003cbutton *ngIf\u003d\"isBackButtonShown()\" mat-icon-button class\u003d\"mat-toolbar mat-primary\" style\u003d\"transform: scale(0.9)\" (click)\u003d\"goBack()\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ca class\u003d\"mat-toolbar mat-primary\" style\u003d\"text-decoration: none\" [routerLink]\u003d\"phaseService.currentPhase\"\u003eCATcher\u003c/a\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan *ngIf\u003d\"auth.isAuthenticated()\" style\u003d\"margin-left: 10px\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    ({{phaseService.phaseDescription[phaseService.currentPhase]}})"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/span\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cdiv *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 this.phaseService.sessionData.openPhases.length \u003e 1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cbutton mat-button [matMenuTriggerFor]\u003d\"menu\"\u003eOpen Phases\u003c/button\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cmat-menu #menu\u003d\"matMenu\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cbutton mat-menu-item *ngFor\u003d\"let openPhase of this.phaseService.sessionData.openPhases\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        [disabled]\u003d\"this.phaseService.currentPhase \u003d\u003d\u003d openPhase\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "       (click)\u003d\"this.routeToSelectedPhase(openPhase)\"\u003e{{ this.phaseService.sessionData[openPhase].toUpperCase() }}\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003c/mat-menu\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003cbutton *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isOpenUrlButtonShown()\" mat-button matTooltip\u003d\"View current page in web-browser\" (click)\u003d\"viewBrowser()\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    View in Browser"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cmat-icon\u003elink\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003cbutton *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 !this.isReloadButtonDisabled\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    mat-button matTooltip\u003d\"Synchronize with Github data\" (click)\u003d\"reload()\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    Sync"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cmat-icon\u003erefresh\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003cdiv class\u003d\"sync-spinner\" *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 isReloadButtonShown() \u0026\u0026 this.isReloadButtonDisabled\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cspan style\u003d\"font-size: 14px; margin-right: 7px;\"\u003eSync\u003c/span\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cmat-spinner class\u003d\"white-spinner\" [diameter]\u003d\"20\"\u003e\u003c/mat-spinner\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"auth.isAuthenticated()\" mat-button matTooltip\u003d\"Log out\" (click)\u003d\"logOut()\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    ({{userService.currentUser.loginId}})"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon style\u003d\"margin-left: 2px\"\u003eexit_to_app\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-toolbar\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 9,
      "KevinCJH": 15,
      "-": 14
    }
  },
  {
    "path": "src/app/shared/layout/header.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Location } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService } from \u0027../../core/services/auth.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { PhaseService, Phase } from \u0027../../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Router, RoutesRecognized } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { filter, pairwise } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { shell } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { GithubService } from \u0027../../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-layout-header\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./header.component.html\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "export class HeaderComponent implements OnInit {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  private prevUrl;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isReloadButtonDisabled \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ISSUE_FILTER \u003d \u0027/issues?q\u003dis:issue+is:open\u0027; // the filtered list must be an issue and must be open"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TUTORIAL_LABEL \u003d \u0027+label:tutorial.\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TEAM_LABEL \u003d \u0027+label:team.\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  EXCLUDE_DUPLICATE \u003d \u0027+-label:duplicate\u0027; // exclude duplicate issues"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private router: Router, public auth: AuthService, public phaseService: PhaseService, public userService: UserService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private location: Location, private githubEventService: GithubEventService, private issueService: IssueService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private errorHandlingService: ErrorHandlingService, private githubService: GithubService) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    router.events.pipe("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      filter((e: any) \u003d\u003e e instanceof RoutesRecognized),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      pairwise()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe(e \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      this.prevUrl \u003d e[0].urlAfterRedirects;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Replaces and resets the current phase data and routes the app to the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * newly selected phase."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param openPhase - Open Phase that is selected by the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  routeToSelectedPhase(openPhase: string): void {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Replace Current Phase Data."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.phaseService.currentPhase \u003d Phase[openPhase];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.githubService.storePhaseDetails(this.phaseService.getPhaseOwner(this.phaseService.currentPhase),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.phaseService.sessionData[openPhase]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Remove current phase issues and load selected phase issues."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.issueService.reset();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.reload();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Route app to new phase."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.router.navigateByUrl(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isBackButtonShown(): boolean {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    return `/${this.phaseService.currentPhase}` !\u003d\u003d this.router.url \u0026\u0026 this.router.url !\u003d\u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isReloadButtonShown(): boolean {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.router.url !\u003d\u003d \u0027/phase1/issues/new\u0027;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isOpenUrlButtonShown(): boolean {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase1 ||"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.userService.currentUser.role \u003d\u003d\u003d UserRole.Student ||"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    (this.issueService.getIssueTeamFilter() !\u003d\u003d \u0027All Teams\u0027 || this.router.url.includes(\u0027/issues\u0027));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  goBack() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.prevUrl \u003d\u003d\u003d `/${this.phaseService.currentPhase}/issues/new`) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      this.router.navigate([\u0027/phase1\u0027]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      this.location.back();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  viewBrowser() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const routerUrl \u003d this.router.url.substring(1); // remove the first \u0027/\u0027 from string"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const issueUrlIndex \u003d routerUrl.indexOf(\u0027/\u0027); // find the index of second \u0027/\u0027"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    let issueUrl: string;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // If can\u0027t find the index of second \u0027/\u0027, then router is at the /issues (table list) page"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    if (issueUrlIndex \u003c 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      // Apply filters to the issueUrl"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      issueUrl \u003d this.ISSUE_FILTER.concat(this.getTeamFilterString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      // issueUrl will be from the second \u0027/\u0027"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      issueUrl \u003d routerUrl.substring(issueUrlIndex);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Open the url in user\u0027s preferred browser"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    shell.openExternal(\u0027https://github.com/\u0027.concat(this.githubService.getRepoURL()).concat(issueUrl));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private getTeamFilterString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // First Phase does not need team filtering"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      return \u0027\u0027;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Initialise the team filter for Students in other Phases, as they do not have team filter assigned by default"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    if (this.userService.currentUser.team) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.issueService.setIssueTeamFilter(this.userService.currentUser.team.id); // e.g W12-3"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const teamFilter \u003d this.issueService.getIssueTeamFilter().split(\u0027-\u0027); // e.g W12-3 -\u003e W12 and 3"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // The team filter string E.g \"+label:tutorial.W12+label:team.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const teamFilterString \u003d this.TUTORIAL_LABEL.concat(teamFilter[0]).concat(this.TEAM_LABEL).concat(teamFilter[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Only include duplicate Issues in last Phase"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase3) ? teamFilterString : this.EXCLUDE_DUPLICATE.concat(teamFilterString);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  reload() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.isReloadButtonDisabled \u003d true;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.githubEventService.reloadPage().subscribe("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      (success) \u003d\u003e success,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      (error) \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.githubEventService.reloadPage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    // Prevent user from spamming the reload button"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.isReloadButtonDisabled \u003d false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    },"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    3000);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  logOut() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    this.auth.logOut();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 19,
      "KevinCJH": 77,
      "-": 39
    }
  },
  {
    "path": "src/app/shared/new-team-respond/new-team-response.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"newTeamResponseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewTeamResponse(myForm)\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\"\u003e Post your team\u0027s response here. \u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv style\u003d\"float: right;\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"submit\" style\u003d\"margin-left: 10px\" [disabled]\u003d\"newTeamResponseForm.invalid || isFormPending\" mat-button color\u003d\"primary\"\u003eSubmit\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-checkbox style\u003d\"display: inline-block; width: 20%\" formControlName\u003d\"duplicated\" (change)\u003d\"handleChangeOfDuplicateCheckbox($event)\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicated Issue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-form-field [style.visibility]\u003d\"!duplicated.value ? \u0027hidden\u0027 : \u0027visible\u0027\" style\u003d\"display: inline-block; width: 50%\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-select formControlName\u003d\"duplicateOf\" placeholder\u003d\"Duplicate of\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cmat-option *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\" [value]\u003d\"issue.id\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan class\u003d\"mat-body-strong\"\u003e #{{issue.id}}: \u003c/span\u003e  \u003cspan class\u003d\"mat-body\"\u003e{{issue.title}}\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"color: #f44336\"\u003e ({{getDisabledDupOptionErrorText(issue)}}) \u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-error *ngIf\u003d\"duplicateOf.errors \u0026\u0026 duplicateOf.errors[\u0027required\u0027] \u0026\u0026 duplicateOf.touched\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              Need to specify the duplicated issue."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-select formControlName\u003d\"severity\" placeholder\u003d\"Severity\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027severity\u0027)\" "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedSeverityColor)\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of severityValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"severity.errors \u0026\u0026 severity.errors[\u0027required\u0027] \u0026\u0026 severity.touched\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            Severity required."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-select formControlName\u003d\"type\" placeholder\u003d\"Type\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027type\u0027)\" "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedTypeColor)\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of issueTypeValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"type.errors \u0026\u0026 type.errors[\u0027required\u0027] \u0026\u0026 type.touched\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            Type required."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-select placeholder\u003d\"Assignees\" formControlName\u003d\"assignees\" multiple\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let member of teamMembers\" [value]\u003d\"member\"\u003e{{member}}\u003c/mat-option\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"assignees.errors \u0026\u0026 assignees.errors[\u0027required\u0027] \u0026\u0026 assignees.touched\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            Assignee(s) required."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-select formControlName\u003d\"responseTag\" placeholder\u003d\"Response\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027responseTag\u0027)\" "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedResponseColor)\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of responseList\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"responseTag.errors \u0026\u0026 responseTag.errors[\u0027required\u0027] \u0026\u0026 responseTag.touched\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            Response required."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"newTeamResponseForm.get(\u0027description\u0027)\" [commentForm]\u003d\"newTeamResponseForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 19,
      "-": 72
    }
  },
  {
    "path": "src/app/shared/new-team-respond/new-team-response.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Issue, SEVERITY_ORDER, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize, map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-new-team-response\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./new-team-response.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./new-team-response.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class NewTeamResponseComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  newTeamResponseForm: FormGroup;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  severityValues \u003d this.labelService.getLabelList(\u0027severity\u0027);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issueTypeValues \u003d this.labelService.getLabelList(\u0027type\u0027);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  responseList \u003d this.labelService.getLabelList(\u0027responseTag\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  teamMembers: string[];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  selectedSeverityColor: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  selectedTypeColor: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  selectedResponseColor: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public labelService: LabelService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) { }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamMembers \u003d this.issue.teamAssigned.teamMembers.map((member) \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      return member.loginId;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newTeamResponseForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      description: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [this.issue.severity, Validators.required],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [this.issue.type, Validators.required],"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      responseTag: [this.issue.responseTag, Validators.required],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: [this.issue.assignees],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicated: [false],"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: [\u0027\u0027]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicated.valueChanges.subscribe(checked \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      if (checked) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(Validators.required);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(null);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(Validators.required);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.updateValueAndValidity();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.updateValueAndValidity();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(this.issue.severity);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.selectedTypeColor \u003d this.labelService.getColorOfLabel(this.issue.type);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.selectedResponseColor \u003d this.labelService.getColorOfLabel(this.issue.responseTag);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewTeamResponse(form: NgForm) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.newTeamResponseForm.invalid) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: this.severity.value,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      type: this.type.value,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: this.assignees.value,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      responseTag: this.responseTag.value,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicated: this.duplicated.value,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      status: STATUS.Done,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      teamResponse: this.description.value,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: this.duplicateOf.value,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }).pipe(finalize(() \u003d\u003e this.isFormPending \u003d false)).subscribe((updatedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    return SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity] || (issue.duplicated || !!issue.duplicateOf);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      if (SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Issue of lower priority\u0027);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (issue.duplicated || !!issue.duplicateOf) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027A duplicated issue\u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  handleChangeOfDuplicateCheckbox(event) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      this.assignees.setValue([]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.markAsUntouched();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.markAsUntouched();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  setSelectedLabelColor(labelValue: string, labelType: string) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    switch (labelType) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.selectedTypeColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.selectedResponseColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  get assignees() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027assignees\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  get responseTag() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027responseTag\u0027);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicated() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027duplicated\u0027);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicateOf() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027duplicateOf\u0027);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 27,
      "-": 138
    }
  },
  {
    "path": "src/app/shared/tutor-response/tutor-response.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"tutorResponseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewTutorResponseForm(myForm)\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cspan style\u003d\"vertical-align: middle; margin-left: 5px\"\u003e Post your response here. \u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv style\u003d\"float: right;\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"submit\" style\u003d\"margin-left: 10px\" [disabled]\u003d\"tutorResponseForm.invalid || isFormPending\" mat-button color\u003d\"primary\"\u003eSubmit\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-checkbox style\u003d\"display: inline-block; width: 20%\" formControlName\u003d\"duplicated\" (change)\u003d\"handleChangeOfDuplicateCheckbox($event)\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicated Issue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-form-field [style.visibility]\u003d\"!duplicated.value ? \u0027hidden\u0027 : \u0027visible\u0027\" style\u003d\"display: inline-block; width: 50%\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-select formControlName\u003d\"duplicateOf\" placeholder\u003d\"Duplicate of\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cmat-option *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\" [value]\u003d\"issue.id\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan class\u003d\"mat-body-strong\"\u003e #{{issue.id}}: \u003c/span\u003e  \u003cspan class\u003d\"mat-body\"\u003e{{issue.title}}\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"color: #f44336\"\u003e ({{getDisabledDupOptionErrorText(issue)}}) \u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-error *ngIf\u003d\"duplicateOf.errors \u0026\u0026 duplicateOf.errors[\u0027required\u0027] \u0026\u0026 duplicateOf.touched\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              Need to specify the duplicated issue."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\" *ngFor\u003d\"let todo of issue.todoList; index as i; trackBy: trackTodoList\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-checkbox style\u003d\"display: inline-block; width: 20%\" [checked]\u003d\"isTodoChecked(todo)\" (change)\u003d\"handleChangeOfTodoCheckbox($event, todo, i)\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            {{ todo.substring(6) }}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-select formControlName\u003d\"severity\" placeholder\u003d\"Severity\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of severityValues\" [value]\u003d\"value\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              {{value}}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"severity.errors \u0026\u0026 severity.errors[\u0027required\u0027] \u0026\u0026 severity.touched\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            Severity required."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-select formControlName\u003d\"type\" placeholder\u003d\"Type\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of issueTypeValues\" [value]\u003d\"value\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              {{value}}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"type.errors \u0026\u0026 type.errors[\u0027required\u0027] \u0026\u0026 type.touched\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            Type required."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-select placeholder\u003d\"Assignees\" formControlName\u003d\"assignees\" multiple\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let member of issue.teamAssigned.teamMembers\" [value]\u003d\"member.loginId\"\u003e{{member.loginId}}\u003c/mat-option\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"assignees.errors \u0026\u0026 assignees.errors[\u0027required\u0027] \u0026\u0026 assignees.touched\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            Assignee(s) required."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-select formControlName\u003d\"responseTag\" placeholder\u003d\"Response\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of responseList\" [value]\u003d\"value\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              {{value}}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"responseTag.errors \u0026\u0026 responseTag.errors[\u0027required\u0027] \u0026\u0026 responseTag.touched\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            Response required."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"tutorResponseForm.get(\u0027description\u0027)\" [commentForm]\u003d\"tutorResponseForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 91
    }
  },
  {
    "path": "src/app/shared/view-issue/view-issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003capp-issue-title *ngIf\u003d\"!isIssueLoading\" [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-title\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cdiv class\u003d\"column left\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Tester\u0027s Post --\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003capp-issue-description [isEditing]\u003d\"isIssueDescriptionEditing\" (changeEditState)\u003d\"updateDescriptionEditState($event)\" "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          *ngIf\u003d\"!isIssueLoading \u0026\u0026 this.isComponentVisible(issueComponentsEnum.TESTER_POST)\" "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [issue]\u003d\"issue\" title\u003d\"Description of Issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/app-issue-description\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Team\u0027s Response --\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003capp-issue-response *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TEAM_RESPONSE) \u0026\u0026 !isIssueLoading \u0026\u0026 issue.teamResponse\" "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [issue]\u003d\"issue\" [isEditing]\u003d\"isTeamResponseEditing\" (updateEditState)\u003d\"updateTeamResponseEditState($event)\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          attributeName\u003d\"teamResponse\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/app-issue-response\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- New Team\u0027s Response --\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003capp-new-team-response *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.NEW_TEAM_RESPONSE) \u0026\u0026"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          permissions.canCRUDTeamResponse()  \u0026\u0026 !issue.teamResponse\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (issueUpdated)\u003d\"updateIssue($event)\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/app-new-team-response\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Tutor\u0027s Response --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003capp-issue-response *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TUTOR_RESPONSE) \u0026\u0026 !isIssueLoading \u0026\u0026 issue.tutorResponse\" "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          [issue]\u003d\"issue\" [isEditing]\u003d\"isTutorResponseEditing\" (updateEditState)\u003d\"updateTutorResponseEditState($event)\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          attributeName\u003d\"tutorResponse\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/app-issue-response\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- New Tutor\u0027s Response --\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003capp-tutor-response *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.NEW_TUTOR_RESPONSE)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u0026\u0026 permissions.canCRUDTutorResponse() \u0026\u0026 !issue.tutorResponse\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (issueUpdated)\u003d\"updateIssue($event)\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/app-tutor-response\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003cdiv class\u003d\"column right\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(this.isComponentVisible(issueComponentsEnum.NEW_TEAM_RESPONSE) \u0026\u0026 issue.teamResponse) ||"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (this.isComponentVisible(issueComponentsEnum.NEW_TUTOR_RESPONSE) \u0026\u0026 issue.tutorResponse) ||"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (!this.isComponentVisible(issueComponentsEnum.TEAM_RESPONSE) \u0026\u0026 !this.isComponentVisible(issueComponentsEnum.TUTOR_RESPONSE))\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Severity Label --\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003capp-issue-label *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.SEVERITY_LABEL)\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          attributeName\u003d\"severity\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Bug Type Label --\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TYPE_LABEL)\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"type\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Response Label --\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.RESPONSE_LABEL)\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"responseTag\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Assignee to this Issue --\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.ASSIGNEE)\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-assignee-component  [issue]\u003d\"issue\" [team]\u003d\"issue.teamAssigned\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-assignee-component\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Duplicate information --\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-duplicated-issues-component  [issue]\u003d\"issue\"\u003e\u003c/app-duplicated-issues-component\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-duplicate-of-component [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-duplicate-of-component\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Faulty issue warning --\u003e  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv style\u003d\"margin-top: 15px; color: red\" *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.DUPLICATE) \u0026\u0026 "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          ((issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0) \u0026\u0026"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          (issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            * Need your resolution. An issue cannot have both duplicated issues and duplicated status."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c!-- Issue To-Do list --\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003cdiv *ngIf\u003d\"this.isComponentVisible(issueComponentsEnum.TODO_LIST)\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cbr *ngIf\u003d\"issue.duplicateOf\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "          \u003capp-todo-list [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-todo-list\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 97
    }
  },
  {
    "path": "src/app/shared/view-issue/view-issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Component, OnInit, OnDestroy, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { FormBuilder } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueCommentService } from \u0027../../core/services/issue-comment.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueComment, IssueComments } from \u0027../../core/models/comment.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export enum ISSUE_COMPONENTS {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TESTER_POST,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TEAM_RESPONSE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  NEW_TEAM_RESPONSE,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TUTOR_RESPONSE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  NEW_TUTOR_RESPONSE,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TESTER_RESPONSE,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  NEW_TESTER_RESPONSE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  SEVERITY_LABEL,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TYPE_LABEL,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  RESPONSE_LABEL,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ASSIGNEE,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  DUPLICATE,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  TODO_LIST"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  selector: \u0027app-view-issue\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  templateUrl: \u0027./view-issue.component.html\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  styleUrls: [\u0027./view-issue.component.css\u0027]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "})"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export class ViewIssueComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issue: Issue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  comments: IssueComment[];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isIssueLoading \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isCommentsLoading \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isTutorResponseEditing \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isIssueDescriptionEditing \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isTeamResponseEditing \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  issueSubscription: Subscription;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  @Input() issueId: number;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  @Input() issueComponents: ISSUE_COMPONENTS[];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private readonly issueComponentsEnum \u003d ISSUE_COMPONENTS;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  constructor(private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public permissions: PermissionService,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public userService: UserService,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "              public issueService: IssueService) { }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.route.params.subscribe("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      params \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.initializeIssue(this.issueId);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.initializeComments(this.issueId);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isComponentVisible(component: ISSUE_COMPONENTS): boolean {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return this.issueComponents.includes(component);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  isEditing(): boolean {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return !this.isIssueDescriptionEditing \u0026\u0026 !this.isTutorResponseEditing \u0026\u0026 !this.isTeamResponseEditing;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private initializeIssue(id: number) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.getIssue(id);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private getIssue(id: number) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueSubscription \u003d this.issueService.getAllIssues().subscribe((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.issue \u003d issues.find(issue \u003d\u003e issue.id \u003d\u003d\u003d id);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.isIssueLoading \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeIssue(id));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  updateIssue(newIssue: Issue) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issue \u003d newIssue;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueService.updateLocalStore(this.issue);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  updateDescriptionEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.isIssueDescriptionEditing \u003d updatedState;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  updateTeamResponseEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.isTeamResponseEditing \u003d updatedState;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  updateTutorResponseEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.isTutorResponseEditing \u003d updatedState;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  private initializeComments(id: number) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueCommentService.getIssueComments(id).pipe(finalize(() \u003d\u003e this.isCommentsLoading \u003d false))"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      .subscribe((issueComments: IssueComments) \u003d\u003e {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.comments \u003d issueComments.comments;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeComments(id));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    this.issueSubscription.unsubscribe();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 118
    }
  },
  {
    "path": "src/app/shared/view-issue/view-issue.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { TutorResponseComponent } from \u0027../tutor-response/tutor-response.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { NewTeamResponseComponent } from \u0027../new-team-respond/new-team-response.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { ViewIssueComponent } from \u0027./view-issue.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { CommentEditorModule } from \u0027../comment-editor/comment-editor.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { MarkdownModule } from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { SharedModule } from \u0027../shared.module\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { IssueComponentsModule } from \u0027../issue/issue-components.module\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ViewIssueComponent"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    TutorResponseComponent,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    NewTeamResponseComponent,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    ViewIssueComponent"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    CommentEditorModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    IssueComponentsModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    MarkdownModule.forChild(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "})"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export class ViewIssueModule { }"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 28
    }
  },
  {
    "path": "src/index.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!doctype html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chead\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmeta charset\u003d\"utf-8\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctitle\u003eCATcher\u003c/title\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!--\u003cbase href\u003d\"./\"\u003e //TODO: Uncomment Prior to Release--\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbase href\u003d\"/\"\u003e \u003c!--//TODO: Comment Out Prior to Release--\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink rel\u003d\"icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.ico\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink href\u003d\"https://fonts.googleapis.com/css?family\u003dRoboto:300,400,500\" rel\u003d\"stylesheet\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink href\u003d\"https://fonts.googleapis.com/icon?family\u003dMaterial+Icons\" rel\u003d\"stylesheet\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/head\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbody\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003capp-root\u003eLoading...\u003c/app-root\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/body\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 15
    }
  },
  {
    "path": "tests/constants/label.constants.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "// Label name constants"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const SEVERITY_LOW \u003d \u0027Low\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const SEVERITY_MEDIUM \u003d \u0027Medium\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const SEVERITY_HIGH \u003d \u0027High\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const TYPE_DOCUMENTATION_BUG \u003d \u0027DocumentationBug\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const TYPE_FUNCTIONALITY_BUG \u003d \u0027FunctionalityBug\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const RESPONSE_ACCEPTED \u003d \u0027Accepted\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const RESPONSE_REJECTED \u003d \u0027Rejected\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const RESPONSE_ISSUE_UNCLEAR \u003d \u0027IssueUnclear\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const RESPONSE_CANNOT_REPRODUCE \u003d \u0027CannotReproduce\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const STATUS_DONE \u003d \u0027Done\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const STATUS_INCOMPLETE \u003d \u0027Incomplete\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "// Label category constants"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const SEVERITY \u003d \u0027severity\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const TYPE \u003d \u0027type\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const RESPONSE \u003d \u0027response\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const STATUS \u003d \u0027status\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "// Label color constants"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_BLACK  \u003d \u0027000000\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_WHITE  \u003d \u0027FFFFFF\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_SEVERITY_LOW \u003d \u0027ffb3b3\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_SEVERITY_MEDIUM \u003d \u0027ff6666\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_SEVERITY_HIGH \u003d \u0027b30000\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_TYPE_DOCUMENTATION_BUG \u003d \u0027ccb3ff\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_TYPE_FUNCTIONALITY_BUG \u003d \u0027661aff\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_RESPONSE_ACCEPTED \u003d \u002780ffcc\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_RESPONSE_REJECTED \u003d \u0027ff80b3\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_RESPONSE_ISSUE_UNCLEAR \u003d \u0027ffcc80\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_RESPONSE_CANNOT_REPRODUCE \u003d \u0027bfbfbf\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_STATUS_DONE \u003d \u0027b3ecff\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const COLOR_STATUS_INCOMPLETE \u003d \u00271ac6ff\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "// CSS style constants"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const DARK_BG_LIGHT_TEXT \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027background-color\u0027 : `#${COLOR_BLACK}`,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u0027cursor\u0027 : \u0027default\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027color\u0027 : `#${COLOR_WHITE}`,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027font-weight\u0027 : \u0027410\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const LIGHT_BG_DARK_TEXT \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027background-color\u0027 : `#${COLOR_WHITE}`,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u0027cursor\u0027 : \u0027default\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027color\u0027 : `#${COLOR_BLACK}`,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    \u0027font-weight\u0027 : \u0027410\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "};"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "// Constant array of labels to simulate Github response"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "export const LABEL_ARRAY \u003d ["
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        color: COLOR_RESPONSE_ACCEPTED,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        name: RESPONSE + \u0027.\u0027 + RESPONSE_ACCEPTED"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        color: COLOR_SEVERITY_LOW,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        name: SEVERITY + \u0027.\u0027 + SEVERITY_LOW"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        color: COLOR_TYPE_FUNCTIONALITY_BUG,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        name: TYPE + \u0027.\u0027 + TYPE_FUNCTIONALITY_BUG"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "];"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "KevinCJH": 66
    }
  },
  {
    "path": "tests/services/label.service.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { LabelService } from \u0027../../src/app/core/services/label.service\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import { Label } from \u0027../../src/app/core/models/label.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "import * as LabelConstant from \u0027../constants/label.constants\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "let labelService: LabelService;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "let labelList: Label[];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "describe(\u0027LabelService: parseLabelData()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    beforeAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d new LabelService(null);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelList \u003d labelService.parseLabelData(LabelConstant.LABEL_ARRAY);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    afterAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be response.Accepted label\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[0].labelCategory).toBe(LabelConstant.RESPONSE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[0].labelValue).toBe(LabelConstant.RESPONSE_ACCEPTED);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[0].labelColor).toBe(LabelConstant.COLOR_RESPONSE_ACCEPTED);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be severity.Low\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[1].labelCategory).toBe(LabelConstant.SEVERITY);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[1].labelValue).toBe(LabelConstant.SEVERITY_LOW);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[1].labelColor).toBe(LabelConstant.COLOR_SEVERITY_LOW);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be type.FunctionalityBug\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[2].labelCategory).toBe(LabelConstant.TYPE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[2].labelValue).toBe(LabelConstant.TYPE_FUNCTIONALITY_BUG);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelList[2].labelColor).toBe(LabelConstant.COLOR_TYPE_FUNCTIONALITY_BUG);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "});"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "describe(\u0027LabelService: isDarkColor()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d new LabelService(null);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    afterEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be true for dark color\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelService.isDarkColor(LabelConstant.COLOR_BLACK)).toBeTruthy();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be false for light color\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelService.isDarkColor(LabelConstant.COLOR_WHITE)).toBeFalsy();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "});"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "describe(\u0027LabelService: setLabelStyle()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d new LabelService(null);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    afterEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be dark color background with light color text\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelService.setLabelStyle(LabelConstant.COLOR_BLACK))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            .toEqual(LabelConstant.DARK_BG_LIGHT_TEXT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be light color background with dark color text\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelService.setLabelStyle(LabelConstant.COLOR_WHITE))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            .toEqual(LabelConstant.LIGHT_BG_DARK_TEXT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "});"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "describe(\u0027LabelService: getColorOfLabel()\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d new LabelService(null);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    afterEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        labelService \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be correct label color for Severity.Low\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelService.getColorOfLabel(LabelConstant.SEVERITY_LOW))"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            .toEqual(LabelConstant.COLOR_SEVERITY_LOW);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    it(\u0027should be white color for invalid inputs\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        expect(labelService.getColorOfLabel(null))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "            .toEqual(LabelConstant.COLOR_WHITE.toLowerCase());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    });"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 93
    }
  }
]
