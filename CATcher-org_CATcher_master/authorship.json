[
  {
    "path": "README.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# 1. Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "[![Build Status](https://travis-ci.org/CATcher-org/CATcher.svg?branch\u003dmaster)](https://travis-ci.org/CATcher-org/CATcher)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Damith C. Rajapakse"
        },
        "content": "**CAT**cher is a desktop application for **C**rowed-sourced **A**nonymous **T**esting software. It uses GitHub as the backend for hosting bug reports."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Project structure is adapted from, https://angular.io/guide/styleguide#overall-structural-guidelines and https://github.com/maximegris/angular-electron."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Currently runs with:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "- Angular v7.2.10"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "- Electron v4.0.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- Electron Builder v20.28.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "This application will support the following order of workflow:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Bug Reporting**: Testers will be informed of the teams they will be testing. Following which, they will be able to start creating new bug reports during this phase."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Team\u0027s Response**: Teams will be able to respond to the bugs that are reported during the bug _reporting phase_."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Evaluation**: Tutors and Admins will be able to view the bug reports and their respective teams\u0027 response. They can evaluate the responses, change the severity and status of the bug reports if needed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# 2. Getting Started"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.1. Set up Organization"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "A Github organization must be created first. The organization must have the following settings:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set `Base Permissions` to `None`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Under `Settings` page of your organization, click on `Member privileges` navigation tab."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    2. Under `Base permissions`, select `None`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "2. Create `admins` team."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "3. Create `students` team."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "4. Create `tutors` team."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "5. Invite github users into their respective teams."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.2. Set up Github Repositories"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "This application assumes 4 repositories will be created under the above organization."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "For each phase, users with write access will be able to upload files (e.g. screenshots, .txt files, etc...) onto the repository\u0027s `/file` folder. These files are used in conjuction with issue description and comments in a form of a link. As for images, the actual image will be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.1. `public_data` Repository"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "The name of this repository must be **exactly** `public_data`. This repository must contain 1 file called `data.csv`. This `.csv` file, will contain the following information:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "1. Roles of users. (Student, Tutor, Admin)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "2. Student\u0027s team allocation. For each student, the `.csv` file must specify which team the student is in."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "3. Tutor\u0027s team allocation. For each tutor, the `.csv` must specify which teams the tutor is assigned to."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "An example of `data.csv`: https://github.com/CATcher-org/public_data/blob/master/data.csv"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.2. Bug Reporting Repository"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "All the bug reports that are created from the application will be posted into this repository."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.3. Team\u0027s Response Repository"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "After the bug reporting phase, the issues posted during that phase will be transferred over to this repository, with the identity of the poster anonymized."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "This repository will then be used by the application for individual teams to respond to the bugs that are discovered by the testers testing their application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Response**: `response.Accepted`, `response.CannotReproduce`, `response.IssueUnclear`, `response.Rejected`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Status**: `status.Done`, `status.Incomplete`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Team**: `team.*`, with the star representing the team number."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "7. **Tutorial**: `tutorial.*`, with the star representing tutorial name."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "8. **Duplicate**: `duplicate`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "**Team** and **Tutorial** tags are compulsory tags for each issue."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.4. Evaluation Repository"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "After the teams have responded to the bugs reported by their testers. The issues and their respective responses from `pe-results` will be transferred over to this repository. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The application will then use this repository to post tutor\u0027s or admin\u0027s evaluation of each team\u0027s response and their respective bug report."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Response**: `response.Accepted`, `response.CannotReproduce`, `response.IssueUnclear`, `response.Rejected`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Team**: `team.*`,  with the star representing the team number."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Tutorial**: `tutorial.*`, with the star representing tutorial name."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "6. **Duplicate**: `duplicate`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "**Team** and **Tutorial** tags are compulsory for each issue."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.3. Set up access rights"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "For each of the teams, follow the steps below to assign the right access level to the repositories. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to their respective team page on Github."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "2. Click on `Repositories` navigation tab."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "3. Add the following repositories with the respective access right level as desribed below."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    1. For `admins` team."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Admin`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Admin`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        3. pe-evaluation: `Admin`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    2. For `students` team."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Write`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Write`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    3. For `tutors` team."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Read`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Read`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        3. pe-evaluation: `Write`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.4. The Application"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "You can download the latest release from https://github.com/CATcher-org/CATcher/releases"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Start the application by clicking on the executable file, no installation is required."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "The login page will be displayed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "![login](https://i.imgur.com/zb1tN2k.png)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Use your Github credentials for username and password."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "**Encoded Text** will contain the urls of the 3 different repositories that are created in Section 2.2.2, 2.2.3 and 2.2.4."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "# 3. Development"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "1. Clone this repository locally."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "2. Install dependencies with npm: `npm install` "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "3. Compile and start the application: `npm start`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "After compilation, an application window will start up which runs on localhost:4200. You can disable \"Developer Tools\" by commenting `win.webContents.openDevTools();` in `main.ts`."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "# 4. Commands"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "|Command|Description|"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "|--|--|"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run build`| Build the app. Your built files are in the /dist folder. |"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run build:prod`| Build the app with Angular aot. Your built files are in the /dist folder. |"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:local`| Builds your application and start electron"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:linux`| Builds your application and creates an app consumable on linux system |"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:windows`| On a Windows OS, builds your application and creates an app consumable in windows 32/64 bit systems |"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:mac`|  On a MAC OS, builds your application and generates a `.app` file of your application that can be run on Mac |"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "# 5. Future Developments"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "Here are a few suggestions that future developers can work on to improve this application!"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.1. Support Commenting"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Currently, the application only support 1 response for each phase. So a commenting section would be good to allow discussions between team members as well as between tutors and admins. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.2. Poll for updates"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "The state of the application is based on the initial log-in in which the data will be pulled from Github. However, this state is not updated as the user uses the application. This might lead to problems where the user is shown an outdated version of an issue."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.3. Add Tester\u0027s response phase (Right after the Team\u0027s Response)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "The rational for this phase is to ease the workload of tutors and admins during the evaluation phase. In this phase, testers who reported the bug will be able to look at the team\u0027s response to their bug report. If they think that the response is unjust, they can object it."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "During the evaluation phase, the tutors and admins just need focus on those bug reports with objections. Those without objections will not be moderated."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Ronak Lakhotia": 2,
      "ptvrajsk": 4,
      "Koh Jun Wei": 1,
      "-": 138,
      "Damith C. Rajapakse": 1
    }
  },
  {
    "path": "main.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { app, BrowserWindow, screen, Menu } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import * as path from \u0027path\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import * as url from \u0027url\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import MenuItemConstructorOptions \u003d Electron.MenuItemConstructorOptions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { enableProdMode, isDevMode } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "let win, serve;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "const args \u003d process.argv.slice(1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "serve \u003d args.some(val \u003d\u003e val \u003d\u003d\u003d \u0027--serve\u0027);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// TODO: enableProdMode() prior to release."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// enableProdMode();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "function createWindow() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  const electronScreen \u003d screen;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  const size \u003d electronScreen.getPrimaryDisplay().workAreaSize;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  // Create the browser window."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  win \u003d new BrowserWindow({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    x: 0,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    y: 0,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    width: size.width,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    height: size.height"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  if (serve) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    require(\u0027electron-reload\u0027)(__dirname, {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      electron: require(`${__dirname}/node_modules/electron`)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(\u0027http://localhost:4200\u0027);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(url.format({"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      pathname: path.join(__dirname, \u0027dist/index.html\u0027),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      protocol: \u0027file:\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      slashes: true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  // win.webContents.openDevTools();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  // Emitted when the window is closed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  win.on(\u0027closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // Dereference the window object, usually you would store window"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // in an array if your app supports multi windows, this is the time"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // when you should delete the corresponding element."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    win \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// Edited version of a template menu-bar provided by the electron API,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// refer to https://electronjs.org/docs/api/menu for more information."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const mainMenuTemplate: Electron.MenuItemConstructorOptions[] \u003d ["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027File\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        label: \u0027Quit CATcher\u0027, accelerator: \u0027CmdOrCtrl+Q\u0027, click() { app.quit(); }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027Edit\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027undo\u0027 },"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027redo\u0027 },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027selectAll\u0027 },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027cut\u0027 },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027copy\u0027 },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027paste\u0027 },"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027delete\u0027 },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027View\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027resetzoom\u0027 },"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027zoomin\u0027 },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027zoomout\u0027 },"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027togglefullscreen\u0027 }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    role: \u0027help\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        label: \u0027Learn More\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        // TODO: Change below url to course-site / application github site."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        click () { require(\u0027electron\u0027).shell.openExternal(\u0027https://electronjs.org\u0027); }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "if (isDevMode()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let viewSubMenu: MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  viewSubMenu \u003d mainMenuTemplate[2].submenu as MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  viewSubMenu.push("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    { role: \u0027toggledevtools\u0027}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  // This method will be called when Electron has finished"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  // initialization and is ready to create browser windows."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  // Some APIs can only be used after this event occurs."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027ready\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Build and Attach Menu-bar template to application."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const mainMenu \u003d Menu.buildFromTemplate(mainMenuTemplate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    Menu.setApplicationMenu(mainMenu);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    createWindow();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  // Quit when all windows are closed."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027window-all-closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it is common for applications and their menu bar"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    // to stay active until the user quits explicitly with Cmd + Q"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    if (process.platform !\u003d\u003d \u0027darwin\u0027) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      app.quit();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027activate\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it\u0027s common to re-create a window in the app when the"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    // dock icon is clicked and there are no other windows open."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    if (win \u003d\u003d\u003d null) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      createWindow();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "} catch (e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  // Catch Error"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  // throw e;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 66,
      "-": 75
    }
  },
  {
    "path": "src/app/app.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import \u0027reflect-metadata\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import \u0027../polyfills\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { BrowserModule } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { AppRoutingModule } from \u0027./app-routing.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { MarkdownModule, MarkedOptions } from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { AppComponent } from \u0027./app.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { SharedModule } from \u0027./shared/shared.module\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HeaderComponent } from \u0027./shared/layout\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthModule } from \u0027./auth/auth.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientModule } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase2Module} from \u0027./phase2/phase2.module\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase3Module} from \u0027./phase3/phase3.module\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase1Module} from \u0027./phase1/phase1.module\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import {BrowserAnimationsModule} from \u0027@angular/platform-browser/animations\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    AppComponent, HeaderComponent, UserConfirmationComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    BrowserModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    BrowserAnimationsModule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    AuthModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase1Module,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase2Module,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase3Module,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    HttpClientModule,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forRoot({"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      markedOptions: {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        provide: MarkedOptions,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        useValue: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          gfm: true,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          tables: true,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          breaks: true,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          pedantic: false,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          sanitize: false,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          smartLists: true,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          smartypants: true,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    AppRoutingModule,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  providers: [],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  bootstrap: [AppComponent],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  entryComponents: ["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    UserConfirmationComponent"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export class AppModule { }"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "-": 48
    }
  },
  {
    "path": "src/app/auth/auth.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Component, OnDestroy, OnInit} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthService, AuthState} from \u0027../core/services/auth.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {Subscription} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {FormBuilder, FormGroup, NgForm, Validators} from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {HttpErrorResponse} from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {Router} from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import {GithubService} from \u0027../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {PhaseService} from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Title } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-auth\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./auth.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./auth.component.css\u0027]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export class AuthComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  authState: AuthState;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  authStateSubscription: Subscription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  loginForm: FormGroup;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private auth: AuthService,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              private github: GithubService,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private titleService: Title) { }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSubscription \u003d this.auth.currentAuthState.subscribe((state) \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.authState \u003d state;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loginForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      username: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      password: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      encodedText: [\u0027CATcher-org@phase1\u003dhttps://github.com/testathorStudent/pe@phase2\u003dhttps://github.com/CATcher-org/pe-results\u0027 +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u0027@phase3\u003dhttps://github.com/CATcher-org/pe-evaluation\u0027, Validators.required],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSubscription.unsubscribe();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  login(form: NgForm) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.loginForm.invalid) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      this.auth.startAuthentication(this.loginForm.get(\u0027username\u0027).value, this.loginForm.get(\u0027password\u0027).value,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loginForm.get(\u0027encodedText\u0027).value)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          (user) \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            this.authService.changeAuthState(AuthState.Authenticated);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            form.resetForm();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            this.titleService.setTitle(\u0027CATcher \u0027.concat(this.phaseService.getPhaseDetail()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            this.router.navigateByUrl(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          (error) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          if (error instanceof HttpErrorResponse) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            this.errorHandlingService.handleHttpError(error.error);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            this.errorHandlingService.handleGeneralError(error);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 5,
      "Koh Jun Wei": 1,
      "-": 63
    }
  },
  {
    "path": "src/app/core/guards/can-deactivate-issue-guard.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Location } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ActivatedRouteSnapshot, CanDeactivate, Router, RouterStateSnapshot } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./user-confirmation/user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class CanDeactivateIssueGuard implements CanDeactivate\u003cany\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(private location: Location, private router: Router,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private dialog: MatDialog) {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Makes the dialog visible to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return The Promise of a User Selected boolean."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  openDialog(): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const dialogRef \u003d this.dialog.open(UserConfirmationComponent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return dialogRef.afterClosed();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  canDeactivate(component: any, currentRoute: ActivatedRouteSnapshot,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                currentState: RouterStateSnapshot,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                nextState?: RouterStateSnapshot): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (component.canDeactivate \u0026\u0026 !component.canDeactivate()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u0026\u0026 nextState.url !\u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const currentUrlTree \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.router.createUrlTree([], currentRoute);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      const currentUrl \u003d currentUrlTree.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.location.go(currentUrl);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return this.openDialog();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return of(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 23,
      "Koh Jun Wei": 3,
      "-": 13
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003ch1 mat-dialog-title\u003eWarning\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-content\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp\u003eDo you wish to leave the page?\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp\u003eYou have unsaved changes that will be discarded.\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-actions\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"primary\" (click)\u003d\"onNoClick()\"\u003eNo, I don\u0027t wish to leave\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"warn\" [mat-dialog-close]\u003d\"true\"\u003eYes, I wish to leave\u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 9
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "describe(\u0027UserConfirmationComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let component: UserConfirmationComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let fixture: ComponentFixture\u003cUserConfirmationComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      declarations: [ UserConfirmationComponent ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture \u003d TestBed.createComponent(UserConfirmationComponent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 25
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialogRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { CanDeactivateIssueGuard } from \u0027../can-deactivate-issue-guard.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * The UserConfirmationComponent is responsible for rendering the UserDialog"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * to verify if certain changes made to relevant inputs are to be discarded."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selector: \u0027app-user-confirmation\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  templateUrl: \u0027./user-confirmation.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  styleUrls: [\u0027./user-confirmation.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class UserConfirmationComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Injection of a reference to Dialog from the Service that it is to be"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // displayed in."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public dialogRef: MatDialogRef\u003cCanDeactivateIssueGuard\u003e) { }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Closes the dialog."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  onNoClick(): void {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.dialogRef.close(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 31
    }
  },
  {
    "path": "src/app/core/models/issue.model.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Team} from \u0027./team.model\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "export interface Issue {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly id: number;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly created_at: string;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  title: string;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  type: string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  severity: string;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  description?: string;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  responseTag?: string;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  assignees?: string[];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicated?: boolean;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateOf?: number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  status?: string;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  teamAssigned?: Team;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  todoList?: string[];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  teamResponse?: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  tutorResponse?: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "export interface Issues {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  [id: number]: Issue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * The types of labels in Issue must follow the format of `Type`.`Value`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Where `Type` represent the type of the label. (e.g. severity, type, response)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * And `Value` represent the value that is associated to the `Type` (e.g. for severity Type, it could be Low, Medium, High)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "export const LABELS \u003d [\u0027severity\u0027, \u0027type\u0027, \u0027response\u0027, \u0027duplicate\u0027, \u0027status\u0027];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "export const labelsToAttributeMapping \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027severity\u0027: \u0027severity\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027type\u0027: \u0027type\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027response\u0027: \u0027responseTag\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0027status\u0027: \u0027status\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "export const SEVERITY_ORDER \u003d { Low: 0, Medium: 1, High: 2 };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "export const ISSUE_TYPE_ORDER \u003d { DocumentationBug: 0, FunctionalityBug: 1 };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export enum STATUS {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  Incomplete \u003d \u0027Incomplete\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  Done \u003d \u0027Done\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SEVERITY {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  Low \u003d \u0027Low\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  Medium \u003d \u0027Medium\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  High \u003d \u0027High\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export enum TYPE {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  DocumentationBug \u003d \u0027DocumentationBug\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  FunctionalityBug \u003d \u0027FunctionalityBug\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "export enum RESPONSE {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  Accepted \u003d \u0027Accepted\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  Rejected \u003d \u0027Rejected\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  IssueUnclear \u003d \u0027IssueUnclear\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  CannotReproduce \u003d \u0027CannotReproduce\u0027,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "export const ISSUE_LABELS \u003d {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  severity: Object.keys(SEVERITY),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  type: Object.keys(TYPE),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  responseTag: Object.keys(RESPONSE),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "export const IssuesFilter \u003d {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  phase1: {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027FILTER_BY_CREATOR\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  phase2: {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027FILTER_BY_TEAM\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  phase3: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    Student: \u0027NO_ACCESS\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Tutor: \u0027FILTER_BY_TEAM_ASSIGNED\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Admin: \u0027NO_FILTER\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "export enum RespondType {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  teamResponse \u003d \u0027teamResponse\u0027,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  tutorResponse \u003d \u0027tutorResponse\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "export const phase2DescriptionTemplate \u003d new RegExp(\u0027(?\u003cheader\u003e# Description|# Team\\\u0027s Response|## State the duplicated issue \u0027 +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  \u0027here, if any)\\\\s+(?\u003cdescription\u003e[\\\\s\\\\S]*?)(?\u003d# Team\\\u0027s Response|## State the duplicated issue here, if any|$)\u0027, \u0027gi\u0027);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "export const phase3DescriptionTemplate \u003d new RegExp(\u0027(?\u003cheader\u003e# Description|# Team\\\u0027s Response|## State the duplicated issue \u0027 +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  \u0027here, if any|## Proposed Assignees|# Tutor\\\u0027s Response|## Tutor to check)\\\\s+(?\u003cdescription\u003e[\\\\s\\\\S]*?)(?\u003d# Team\\\u0027s Response|\u0027 +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  \u0027## State the duplicated issue here, if any|## Proposed Assignees|# Tutor\\\u0027s Response|## Tutor to check|$)\u0027, \u0027gi\u0027);"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 14,
      "-": 85
    }
  },
  {
    "path": "src/app/core/models/label.model.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export interface Label {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    labelValue: string;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    labelColor: string;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 4
    }
  },
  {
    "path": "src/app/core/services/auth.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { HttpClient, HttpHeaders } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { BehaviorSubject, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgZone } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ElectronService } from \u0027./electron.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027./user.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { PhaseService } from \u0027./phase.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { GithubService} from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027./issue.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueCommentService } from \u0027./issue-comment.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { DataService } from \u0027./data.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027./label.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Title } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { GithubEventService } from \u0027./githubevent.service\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "export enum AuthState { \u0027NotAuthenticated\u0027, \u0027AwaitingAuthentication\u0027, \u0027Authenticated\u0027 }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "export class AuthService {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  authStateSource \u003d new BehaviorSubject(AuthState.NotAuthenticated);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  currentAuthState \u003d this.authStateSource.asObservable();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private electronService: ElectronService, private router: Router, private ngZone: NgZone,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private http: HttpClient,  private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private githubService: GithubService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueService: IssueService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private labelService: LabelService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private dataService: DataService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private githubEventService: GithubEventService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private titleService: Title) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  startAuthentication(username: String, password: String, encodedText: String) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.changeAuthState(AuthState.AwaitingAuthentication);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    const header \u003d new HttpHeaders().set(\u0027Authorization\u0027, \u0027Basic \u0027 + btoa(username + \u0027:\u0027 + password));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    let userLoginId;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.http.get(\u0027https://api.github.com/user\u0027, { headers: header }).pipe("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((githubResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        userLoginId \u003d githubResponse[\u0027login\u0027];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        this.githubService.storeCredentials(username, password);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        const array \u003d this.phaseService.parseEncodedPhase(encodedText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return (this.phaseService.checkIfReposAccessible(array));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      flatMap((phaseResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        const phase \u003d this.phaseService.determinePhaseNumber(phaseResponse);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        if (phase \u003d\u003d\u003d \u0027not accessible\u0027) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          return throwError(\u0027Repo is not ready.\u0027);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.userService.createUserModel(userLoginId);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      flatMap((userResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return this.labelService.getAllLabels(userResponse);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      flatMap((labelResponse) \u003d\u003e  {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        // Initialise last modified time for this repo"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return this.githubEventService.setLatestChangeEvent(labelResponse);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  logOut(): void {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    this.userService.reset();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.reset();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueCommentService.reset();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    this.phaseService.reset();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dataService.reset();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.githubEventService.reset();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.labelService.reset();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.titleService.setTitle(\u0027CATcher\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    this.changeAuthState(AuthState.NotAuthenticated);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngZone.run(() \u003d\u003e this.router.navigate([\u0027\u0027]));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  isAuthenticated(): boolean {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    return !!(this.authStateSource.getValue() \u003d\u003d\u003d AuthState.Authenticated);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  changeAuthState(newAuthState: AuthState) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSource.next(newAuthState);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ronak Lakhotia": 3,
      "Kevin Chin": 19,
      "Koh Jun Wei": 6,
      "-": 65
    }
  },
  {
    "path": "src/app/core/services/data.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { DataFile } from \u0027../models/data-file.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Team } from \u0027../models/team.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { User, UserRole } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const parse \u003d require(\u0027csv-parse/lib/sync\u0027);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class DataService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  public dataFile: DataFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService) {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  getDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.githubService.fetchDataFile().pipe("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map((allCsvDataWrapper: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.constructData(allCsvDataWrapper);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map((jsonData: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.dataFile \u003d \u003cDataFile\u003e{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          teamStructure: this.extractTeamStructure(jsonData)};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return jsonData;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Merges all parsed Csv Data into a single readable JSON"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param allCsvDataWrapper - Object containing strings of csv data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return jsonData - Object representing merged data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructData(allCsvDataWrapper: {}): {} {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const jsonData: {} \u003d {};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const allCsvData: string \u003d allCsvDataWrapper[\u0027data\u0027];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027roles\u0027] \u003d this.parseRolesData(allCsvData);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027team-structure\u0027] \u003d this.parseTeamStructureData(allCsvData);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027students-allocation\u0027] \u003d this.parseStudentAllocation(allCsvData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027tutors-allocation\u0027] \u003d this.parseTutorAllocation(allCsvData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027admins-allocation\u0027] \u003d this.parseAdminAllocation(allCsvData);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return jsonData;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing admin allocation information"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseAdminAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        admins[entry[NAME]] \u003d {};"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return admins;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing tutor allocation information"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseTutorAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const tutor \u003d entry[NAME] in tutors ? tutors[entry[NAME]] : {};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      tutor[entry[TEAM]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      tutors[entry[NAME]] \u003d tutor;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return tutors;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing student allocation information"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseStudentAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Team Notation"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM_ID \u003d \u0027teamId\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const newStudent \u003d {};"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      newStudent[TEAM_ID] \u003d entry[TEAM];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      students[entry[NAME]] \u003d newStudent;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing team structure information"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseTeamStructureData(csvInput: string): {} {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const teams \u003d {};"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const team \u003d entry[TEAM] in teams ? teams[entry[TEAM]] : {};"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      team[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      teams[entry[TEAM]] \u003d team;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return teams;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing roles information"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseRolesData(csvInput: string): {} {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const roles \u003d {};"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        students[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        tutors[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        admins[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027students\u0027] \u003d students;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027tutors\u0027] \u003d tutors;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027admins\u0027] \u003d admins;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return roles;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Converts the input csv information to an array of"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * objects syncrhonously. Each object\u0027s values are"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * marked by the respective csv table headers."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvText - csv information."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return - Subjects that tracks the parsed data."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  csvParser(csvText: string): [{}] {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return parse(csvText, {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      columns: true"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeam(teamId: string): Team {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.dataFile.teamStructure.get(teamId);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeams(): string[] {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    return Array.from(this.dataFile.teamStructure.keys());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  // returns a mapping from teamId to their respective team structure."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  private extractTeamStructure(jsonData: {}): Map\u003cstring, Team\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamStructure \u003d new Map\u003cstring, Team\u003e();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    const jsonTeamStructure \u003d jsonData[\u0027team-structure\u0027];"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamIds \u003d Object.keys(jsonTeamStructure);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const teamId of teamIds) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMembers \u003d new Array\u003cUser\u003e();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMemberIds \u003d Object.keys(jsonTeamStructure[teamId]);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const teamMemberId of teamMemberIds) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        teamMembers.push(\u003cUser\u003e{loginId: teamMemberId, role: UserRole.Student});"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      teamStructure.set(teamId, \u003cTeam\u003e{id: teamId, teamMembers: teamMembers});"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    return teamStructure;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dataFile \u003d undefined;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 193,
      "Koh Jun Wei": 7,
      "-": 40
    }
  },
  {
    "path": "src/app/core/services/github.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { map, mergeMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { forkJoin, from, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { githubPaginatorParser } from \u0027../../shared/lib/github-paginator-parser\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueComment } from \u0027../models/comment.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "const Octokit \u003d require(\u0027@octokit/rest\u0027);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "let ORG_NAME \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "let MOD_ORG \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "let REPO \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "const DATA_REPO \u003d \u0027public_data\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "let octokit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class GithubService {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  storeCredentials(user: String, passw: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    octokit \u003d new Octokit({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      auth: {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        username: user,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        password: passw,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  updatePhaseDetails(repoName: string, orgName: string, modOrg: string) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    ORG_NAME \u003d orgName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    REPO \u003d repoName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    MOD_ORG \u003d modOrg;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * Will return an Observable with array of issues in JSON format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssues(filter?: {}): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return this.getNumberOfIssuePages(filter).pipe("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      mergeMap((numOfPages) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        const apiCalls \u003d [];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          apiCalls.push(from(octokit.issues.listForRepo({...filter, owner: ORG_NAME, repo: REPO,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            sort: \u0027created\u0027, direction: \u0027desc\u0027, per_page: 100, page: i})));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return forkJoin(apiCalls);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      map((resultArray) \u003d\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        let collatedData \u003d [];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const response of resultArray) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          collatedData \u003d ["
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            ...collatedData,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            ...response[\u0027data\u0027],"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return collatedData;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssue(id: number): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.get({owner: ORG_NAME, repo: REPO, number: id})).pipe("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  fetchIssueComments(issueId: number): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return this.getNumberOfCommentPages(issueId).pipe("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      mergeMap((numOfPages) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        const apiCalls \u003d [];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          apiCalls.push(from(octokit.issues.listComments({owner: ORG_NAME, repo: REPO, number: issueId, per_page: 1, page: i})));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return forkJoin(apiCalls);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      map((resultArray) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        let collatedData \u003d [];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        for (const response of resultArray) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          collatedData \u003d ["
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            ...collatedData,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            ...response[\u0027data\u0027],"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return collatedData;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      })"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    );"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return from(octokit.issues.listLabelsForRepo({owner: ORG_NAME, repo: REPO})).pipe("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  closeIssue(id: number): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.update({owner: ORG_NAME, repo: REPO, number: id, state: \u0027closed\u0027})).pipe("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssue(title: string, description: string, labels: string[]): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.create({owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels})).pipe("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssueComment(comment: IssueComment): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.createComment({owner: ORG_NAME, repo: REPO, number: comment.id,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      body: comment.description})).pipe("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.update({owner: ORG_NAME, repo: REPO, number: id, title: title, body: description, labels: labels,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: assignees})).pipe("
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssueComment(issueComment: IssueComment): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.updateComment({owner: ORG_NAME, repo: REPO, comment_id: issueComment.id,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      body: issueComment.description})).pipe("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.repos.createFile({owner: ORG_NAME, repo: REPO, path: `files/${filename}`,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      message: \u0027upload file\u0027, content: base64String}));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  getRepo(orgName: string, repoName: string) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.repos.get({owner: orgName, repo: repoName})).pipe("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  fetchEventsForRepo() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return from(octokit.issues.listEventsForRepo({owner: ORG_NAME, repo: REPO})).pipe("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      })"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // roles information"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return forkJoin("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      from(octokit.repos.getContents({owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027}))"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        .pipe(map(rawData \u003d\u003e atob(rawData[\u0027data\u0027][\u0027content\u0027])))"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map(([data]) \u003d\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return {data};"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private getNumberOfIssuePages(filter?: {}): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listForRepo({...filter, owner: ORG_NAME, repo: REPO, sort: \u0027created\u0027,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      direction: \u0027desc\u0027, per_page: 100, page: 1})).pipe("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        if (!response[\u0027headers\u0027].link) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          return 1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        const paginatedData \u003d githubPaginatorParser(response[\u0027headers\u0027].link);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return +paginatedData[\u0027last\u0027] || 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      })"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    );"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private getNumberOfCommentPages(issueId: number): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return from(octokit.issues.listComments({owner: ORG_NAME, repo: REPO, number: issueId, per_page: 1, page: 1})).pipe("
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        if (!response[\u0027headers\u0027].link) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          return 1;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        const paginatedData \u003d githubPaginatorParser(response[\u0027headers\u0027].link);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return +paginatedData[\u0027last\u0027] || 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      })"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 8,
      "Kevin Chin": 14,
      "Koh Jun Wei": 48,
      "-": 131
    }
  },
  {
    "path": "src/app/core/services/githubevent.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { map, flatMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { User } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { IssueService } from \u0027./issue.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export class GithubEventService {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private lastModified: string; // The timestamp when the title or label of an issue is changed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private lastModifiedComment: string; // The timestamp when the comment of an issue is changed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  constructor(private githubService: GithubService, private issueService: IssueService) { }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Calls the Github service api to return the latest github event (e.g renaming an issue\u0027s title)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * of current repository and store the timestamps of the event in this service"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  setLatestChangeEvent(userResponse: User): Observable\u003cUser\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      return this.githubService.fetchEventsForRepo().pipe("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          this.setLastModifiedTime(response[0][\u0027created_at\u0027]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          this.setLastModifiedCommentTime(response[0][\u0027issue\u0027][\u0027updated_at\u0027]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          return userResponse;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        })"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Returns the latest github event (e.g renaming an issue\u0027s title) of current repository"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @returns the json data of the latest event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  reloadPage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return this.githubService.fetchEventsForRepo().pipe("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      flatMap((response) \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        const eventResponse \u003d response[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        // Will only allow page to reload if the latest modify time is different"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        // from last modified, meaning that some changes to the repo has occured."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        if (eventResponse[\u0027created_at\u0027] !\u003d\u003d this.getLastModifiedTime() ||"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        eventResponse[\u0027issue\u0027][\u0027updated_at\u0027] !\u003d\u003d this.getLastModifiedCommentTime()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          this.setLastModifiedTime(eventResponse[\u0027created_at\u0027]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          this.setLastModifiedCommentTime(eventResponse[\u0027issue\u0027][\u0027updated_at\u0027]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          return this.issueService.reloadAllIssues();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return of(response);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      })"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  setLastModifiedTime(lastModified: string) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.lastModified \u003d lastModified;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  setLastModifiedCommentTime(lastModified: string) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.lastModifiedComment \u003d lastModified;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  getLastModifiedTime() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return this.lastModified;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  getLastModifiedCommentTime() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return this.lastModifiedComment;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.lastModified \u003d undefined;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.lastModifiedComment \u003d undefined;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 73
    }
  },
  {
    "path": "src/app/core/services/issue-comment.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Injectable} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {Observable, of} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {GithubService} from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import {IssueComment, IssueComments} from \u0027../models/comment.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {map} from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import * as moment from \u0027moment\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueCommentService {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  // A map from issueId to their respective issue comments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  comments \u003d new Map\u003cnumber, IssueComments\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  constructor(private githubService: GithubService) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  getIssueComments(issueId: number): Observable\u003cIssueComments\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.comments.get(issueId)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.initializeIssueComments(issueId);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      return of(this.comments.get(issueId));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  createIssueComment(issueId: number, description: string): Observable\u003cIssueComment\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return this.githubService.createIssueComment(\u003cIssueComment\u003e{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      id: issueId,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      description: description,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }).pipe("
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.createIssueCommentModel(response);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private updateIssueComment(issueComment: IssueComment): Observable\u003cIssueComment\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.updateIssueComment({"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      ...issueComment,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      description: issueComment.description,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }).pipe("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.createIssueCommentModel(response);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  private initializeIssueComments(issueId: number): Observable\u003cIssueComments\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.fetchIssueComments(issueId).pipe("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      map((comments: []) \u003d\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        const issueComments \u003d \u003cIssueComments\u003e{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          issueId: issueId,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          comments: [],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const comment of comments) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          issueComments.comments.push(this.createIssueCommentModel(comment));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.comments.set(issueId, \u003cIssueComments\u003e{...issueComments, issueId: issueId});"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.comments.get(issueId);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      })"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   * To add/update an issue."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  updateLocalStore(commentsToUpdate: IssueComments) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    this.comments.set(commentsToUpdate.issueId, commentsToUpdate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    this.comments.clear();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  private createIssueCommentModel(issueCommentInJson: {}): IssueComment {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    return \u003cIssueComment\u003e{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      id: issueCommentInJson[\u0027id\u0027],"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      createdAt: moment(issueCommentInJson[\u0027created_at\u0027]).format(\u0027lll\u0027),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      updatedAt: moment(issueCommentInJson[\u0027updated_at\u0027]).format(\u0027lll\u0027),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      description: issueCommentInJson[\u0027body\u0027],"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 13,
      "-": 70
    }
  },
  {
    "path": "src/app/core/services/issue.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { BehaviorSubject, forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  Issue,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  Issues,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  IssuesFilter,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  LABELS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  labelsToAttributeMapping,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  phase2DescriptionTemplate,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  phase3DescriptionTemplate,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  RespondType"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "} from \u0027../models/issue.model\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027./user.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Phase, PhaseService } from \u0027./phase.service\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueCommentService } from \u0027./issue-comment.service\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027./permission.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import * as moment from \u0027moment\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Team } from \u0027../models/team.model\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { DataService } from \u0027./data.service\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { ErrorHandlingService } from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueService {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  issues: Issues;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  issues$: BehaviorSubject\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              private userService: UserService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              private permissionService: PermissionService,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              private dataService: DataService) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$ \u003d new BehaviorSubject(new Array\u003cIssue\u003e());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Fetch all the necessary issues. If the issues have been fetched before, the function will return the existing issues instead"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * of calling from Github API."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * @return An Observable containing an array of Issues."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllIssues(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issues \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.initializeData();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issues$;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  reloadAllIssues() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return this.initializeData();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  getIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.issues \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.githubService.fetchIssue(id).pipe("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.createIssueModel(response);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      return of(this.issues[id]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssue(title: string, description: string, severity: string, type: string): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    const labelsArray \u003d [this.createLabel(\u0027severity\u0027, severity), this.createLabel(\u0027type\u0027, type)];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.createIssue(title, description, labelsArray).pipe("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.createIssueModel(response);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(issue: Issue): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const assignees \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase3 ? [] : issue.assignees;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return this.githubService.updateIssue(issue.id, issue.title, this.createGithubIssueDescription(issue),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.createLabelsForIssue(issue), assignees).pipe("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.createIssueModel(response);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        })"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * This function will create a github representation of issue\u0027s description. Given the issue model, it will piece together the different"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * attributes to create the github\u0027s description."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private createGithubIssueDescription(issue: Issue): string {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    switch (this.phaseService.currentPhase) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      case Phase.phase2:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return `# Description\\n${issue.description}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}`;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      case Phase.phase3:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        if (!issue.todoList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          issue.todoList \u003d [];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        let todoString \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        for (const todo of issue.todoList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          todoString +\u003d todo + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return `# Description\\n${issue.description}\\n# Team\\\u0027s Response\\n${issue.teamResponse}\\n ` +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          `## State the duplicated issue here, if any\\n${issue.duplicateOf ? `Duplicate of #${issue.duplicateOf}` : `--`}\\n` +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          `## Proposed Assignees\\n${issue.assignees.length \u003d\u003d\u003d 0 ? \u0027--\u0027 : issue.assignees.join(\u0027, \u0027)}\\n` +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          `# Tutor\\\u0027s Response\\n${issue.tutorResponse}\\n## Tutor to check\\n${todoString}`;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return issue.description;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteIssue(id: number): Observable\u003cIssue\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.githubService.closeIssue(id).pipe("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        const deletedIssue \u003d this.createIssueModel(response);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.deleteFromLocalStore(deletedIssue);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        return deletedIssue;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is deleted."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteFromLocalStore(issueToDelete: Issue) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    const { [issueToDelete.id]: issueToRemove, ...withoutIssueToRemove } \u003d this.issues;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d withoutIssueToRemove;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * This function will update the issue\u0027s state of the application. This function needs to be called whenever a issue is added/updated."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  updateLocalStore(issueToUpdate: Issue) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issues,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      [issueToUpdate.id]: issueToUpdate,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Check whether the issue has been responded in the phase 2/3."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  hasResponse(issueId: number): boolean {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    const responseType \u003d this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase2 ? RespondType.teamResponse : RespondType.tutorResponse;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return !!this.issues[issueId][responseType];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Obtain an observable containing an array of issues that are duplicates of the parentIssue."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  getDuplicateIssuesFor(parentIssue: Issue): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter(issue \u003d\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        return issue.duplicateOf \u003d\u003d\u003d parentIssue.id;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Obtain the team that is assigned to the given issue."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  getTeamAssignedToIssue(issueInJson: {}): Team {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    let tutorial \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    let team \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issueInJson[\u0027labels\u0027].map((label) \u003d\u003e {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      const labelName \u003d String(label[\u0027name\u0027]).split(\u0027.\u0027);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      const labelType \u003d labelName[0];"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      const labelValue \u003d labelName[1];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      if (labelType \u003d\u003d\u003d \u0027team\u0027) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        team \u003d labelValue;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      } else if (labelType \u003d\u003d\u003d \u0027tutorial\u0027) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        tutorial \u003d labelValue;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    });"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const teamId \u003d `${tutorial}-${team}`;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return this.dataService.getTeam(teamId);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues \u003d undefined;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issues$.next(new Array\u003cIssue\u003e());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  private initializeData(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    const filters \u003d [];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[this.phaseService.currentPhase][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_CREATOR\u0027:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        filters.push({creator: this.userService.currentUser.loginId});"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM\u0027: // Only student has this filter"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        const studentTeam \u003d this.userService.currentUser.team.id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        filters.push({"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "          labels: [this.createLabel(\u0027tutorial\u0027, studentTeam[0]), this.createLabel(\u0027team\u0027, studentTeam[1])]"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027: // Only for Tutors and Admins"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        const allocatedTeams \u003d this.userService.currentUser.allocatedTeams;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 0; i \u003c allocatedTeams.length; i++) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "          const labels \u003d [];"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          const team \u003d allocatedTeams[i].id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "          labels.push(this.createLabel(\u0027tutorial\u0027, team[0]));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          labels.push(this.createLabel(\u0027team\u0027, team[1]));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          filters.push({ labels: labels });"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_ACCESS\u0027:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        return of([]);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    const issuesPerFilter \u003d [];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    if (filters.length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      issuesPerFilter.push(this.githubService.fetchIssues({}));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const filter of filters) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      issuesPerFilter.push(this.githubService.fetchIssues(filter));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return forkJoin(issuesPerFilter).pipe("
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issuesByFilter: [][]) \u003d\u003e {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        let mappedResult \u003d {};"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const issues of issuesByFilter) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const issue of issues) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            const issueModel \u003d this.createIssueModel(issue);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            mappedResult \u003d {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "              ...mappedResult,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "              [issueModel.id]: issueModel,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        return mappedResult;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      map((issues: Issues) \u003d\u003e {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issues \u003d { ...this.issues, ...issues };"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issues \u003d issues;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        this.issues$.next(Object.values(this.issues));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        return Object.values(this.issues);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Will be used to parse the github representation of the issue\u0027s description"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "  private getParsedBody(issue: any) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    if (this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const array \u003d this.parseBody(issue);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issue.body \u003d array[0];"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issue.teamResponse \u003d array[1];"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issue.duplicateOf \u003d array[2];"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issue.tutorResponse \u003d array[3];"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issue.todoList \u003d array[4];"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    issue.proposedAssignees \u003d array[5];"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Actual implementation of using regex to extract out the data from github\u0027s representation of the issue\u0027s description."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private parseBody(issue: {}): any {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const body \u003d issue[\u0027body\u0027];"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    // tslint:disable-next-line"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const regexExp \u003d this.phaseService.currentPhase \u003d\u003d Phase.phase2 ? phase2DescriptionTemplate : phase3DescriptionTemplate;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    const matches \u003d body.match(regexExp);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    regexExp.lastIndex \u003d 0;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    if (matches \u003d\u003d null) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      return Array(\u0027\u0027, null, null, null, null, null);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    let description; let teamResponse; let duplicateOf; let tutorResponse; let todoList; let assignees;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    for (const match of matches) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      const groups \u003d regexExp.exec(match)[\u0027groups\u0027];"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "      regexExp.lastIndex \u003d 0;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      switch (groups[\u0027header\u0027]) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        case \u0027# Description\u0027:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          description \u003d groups[\u0027description\u0027].trim();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        case \u0027# Team\\\u0027s Response\u0027:"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          if (groups[\u0027description\u0027].trim() \u003d\u003d\u003d \u0027Write your response here.\u0027) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            teamResponse \u003d null;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            teamResponse \u003d groups[\u0027description\u0027].trim();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        case \u0027## State the duplicated issue here, if any\u0027:"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          duplicateOf \u003d this.parseDuplicateOfValue(groups[\u0027description\u0027]);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        case \u0027# Tutor\\\u0027s Response\u0027:"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          if (groups[\u0027description\u0027].trim() \u003d\u003d\u003d \u0027Write your response here.\u0027) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            tutorResponse \u003d null;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            tutorResponse \u003d groups[\u0027description\u0027].trim();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        case \u0027## Tutor to check\u0027:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          todoList \u003d groups[\u0027description\u0027].split(/\\r?\\n/);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          todoList \u003d todoList.filter(function (todo) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "            return todo.trim() !\u003d\u003d \u0027\u0027;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "          });"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        case \u0027## Proposed Assignees\u0027:"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          const proposedAssignees \u003d groups[\u0027description\u0027].split(\u0027,\u0027).map(a \u003d\u003e a.toLowerCase().trim()) || [];"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          const teamMembers \u003d this.getTeamAssignedToIssue(issue).teamMembers.map(m \u003d\u003e m.loginId);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          assignees \u003d teamMembers.filter(m \u003d\u003e proposedAssignees.includes(m.toLowerCase()));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return Array(description || \u0027\u0027, teamResponse, duplicateOf, tutorResponse, todoList || [], assignees || []);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   * Given an issue model, create the necessary labels for github."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "   */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "  private createLabelsForIssue(issue: Issue): string[] {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    const result \u003d [];"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.phaseService.currentPhase !\u003d\u003d Phase.phase1) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "      const studentTeam \u003d issue.teamAssigned.id.split(\u0027-\u0027);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027tutorial\u0027, studentTeam[0]), this.createLabel(\u0027team\u0027, studentTeam[1]));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.severity) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027severity\u0027, issue.severity));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.type) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027type\u0027, issue.type));"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.responseTag) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027response\u0027, issue.responseTag));"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.duplicated) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(\u0027duplicate\u0027);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    if (issue.status) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "      result.push(this.createLabel(\u0027status\u0027, issue.status));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "  private createLabel(prepend: string, value: string) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    return `${prepend}.${value}`;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "  private createIssueModel(issueInJson: {}): Issue {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "    this.getParsedBody(issueInJson);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    return \u003cIssue\u003e{"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "      id: +issueInJson[\u0027number\u0027],"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      created_at: moment(issueInJson[\u0027created_at\u0027]).format(\u0027lll\u0027),"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "      title: issueInJson[\u0027title\u0027],"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      assignees: this.phaseService.currentPhase \u003d\u003d\u003d Phase.phase3 ? issueInJson[\u0027proposedAssignees\u0027] :"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        issueInJson[\u0027assignees\u0027].map((assignee) \u003d\u003e assignee[\u0027login\u0027]),"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "      description: issueInJson[\u0027body\u0027],"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "      teamAssigned: this.getTeamAssignedToIssue(issueInJson),"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "      todoList: issueInJson[\u0027todoList\u0027],"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      teamResponse: issueInJson[\u0027teamResponse\u0027],"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      tutorResponse: issueInJson[\u0027tutorResponse\u0027],"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicateOf: issueInJson[\u0027duplicateOf\u0027],"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.getFormattedLabels(issueInJson[\u0027labels\u0027], LABELS),"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private parseDuplicateOfValue(toParse: string): number {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const regex \u003d /duplicate of\\s*#(\\d+)/i;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    const result \u003d regex.exec(toParse);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    if (result \u0026\u0026 result.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      return +regex.exec(toParse)[1];"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "   * Based on the kind labels specified in `desiredLabels` field, this function will produce a neatly formatted JSON object."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "   * For example:"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "   * desiredLabels \u003d [\u0027severity\u0027, \u0027type\u0027]"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "   * Output \u003d {severity: High, type: FunctionalityBug}"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "   * TODO: Add error handling for these assumptions."
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assumptions:"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "   * 1) The `labels` which were received from github has all the `desiredLabels` type we want."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "   * 2) There are no duplicates for example labels will not contain `severity.High` and `severity.Low` at the same time."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param labels defines the raw label array from which is obtained from github."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param desiredLabels defines the type of labels you want to be parsed out."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "  private getFormattedLabels(labels: Array\u003c{}\u003e, desiredLabels: Array\u003cstring\u003e): {} {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    let result \u003d {};"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const label of labels) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelName \u003d String(label[\u0027name\u0027]).split(\u0027.\u0027);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelType \u003d labelName[0];"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      const labelValue \u003d labelName[1];"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "      if (label[\u0027name\u0027] \u003d\u003d\u003d \u0027duplicate\u0027) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "          ...result,"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "          duplicated: true,"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (desiredLabels.includes(labelType)) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "          ...result,"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "          [labelsToAttributeMapping[labelType]]: labelValue,"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ronak Lakhotia": 3,
      "Kevin Chin": 7,
      "Koh Jun Wei": 167,
      "-": 258
    }
  },
  {
    "path": "src/app/core/services/label.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Label } from \u0027../models/label.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { SEVERITY_ORDER } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { User } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "})"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export class LabelService {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private severityLabels: Label[];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private typeLabels: Label[];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private responseLabels: Label[];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private labelColorMap: Map\u003cstring, string\u003e;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  constructor(private githubService: GithubService) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.severityLabels \u003d new Array();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.typeLabels \u003d new Array();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.responseLabels \u003d new Array();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.labelColorMap \u003d new Map();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Calls the Github service api to get all labels from the repository and"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * store it in a list of arrays in this label service"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  getAllLabels(userResponse: User): Observable\u003cUser\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      return this.githubService.fetchAllLabels().pipe("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          this.populateLabelLists(response);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          return userResponse;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        })"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Returns all the labels of a certain type (e.g severity)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @param attributeName: the type of the label"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @return an array of label of that type"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  getLabelList(attributeName: string): Label[] {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    switch (attributeName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return this.severityLabels;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return this.typeLabels;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027response\u0027:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return this.responseLabels;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Returns the color of the label using the label-color mapping"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @param labelValue: the label\u0027s value (e.g Low / Medium / High)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @return a string with the color code of the label, or white color if"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * no labelValue was provided or no such mapping was found"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  getColorOfLabel(labelValue: string): string {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const color \u003d this.labelColorMap.get(labelValue);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    if (color \u003d\u003d\u003d undefined || labelValue \u003d\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      return \u0027ffffff\u0027;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return color;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Stores the json data from Github api into the list of arrays in this service"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @param labels: the json data of the label"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private populateLabelLists(labels: Array\u003c{}\u003e): void {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    for (const label of labels) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      // Get the name and color of each label and store them into the service\u0027s array list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      const labelName \u003d String(label[\u0027name\u0027]).split(\u0027.\u0027);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      const labelType \u003d labelName[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      const labelValue \u003d labelName[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      const labelColor \u003d String(label[\u0027color\u0027]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      // Check for duplicate labels"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      if (this.labelColorMap.has(labelValue)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        continue;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      this.labelColorMap.set(labelValue, labelColor);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      const labelList \u003d this.getLabelList(labelType);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      if (labelList !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        labelList.push({labelValue: labelValue, labelColor: labelColor});"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    // Sort the severity labels from Low to High"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.severityLabels.sort((a, b) \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      return SEVERITY_ORDER[a.labelValue] - SEVERITY_ORDER[b.labelValue];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  reset(): void {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.severityLabels.length \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.typeLabels.length \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.responseLabels.length \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.labelColorMap.clear();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Converts the (color) hex value into RGB format"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @param hex: the hex value"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  hexToRgb(hex: string) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const rgbResult \u003d /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return rgbResult ? {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      r: parseInt(rgbResult[1], 16),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      g: parseInt(rgbResult[2], 16),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      b: parseInt(rgbResult[3], 16)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    } : null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * Returns a css style for the label to use"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @param color: the color of the label"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @return the style with background-color in rgb"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   * @throws exception if input is an invalid color code"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "   */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  setLabelStyle(color: string) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    let r: string;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    let g: string;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    let b: string;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const white \u003d \u0027255\u0027;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      r \u003d this.hexToRgb(\u0027#\u0027.concat(color)).r.toString();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      g \u003d this.hexToRgb(\u0027#\u0027.concat(color)).g.toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      b \u003d this.hexToRgb(\u0027#\u0027.concat(color)).b.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    } catch (e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      // Set rgb to white color if hexToRgb returns null"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      r \u003d white;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      g \u003d white;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      b \u003d white;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const styles \u003d {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u0027background-color\u0027 : `rgb(${r}, ${g}, ${b}, 0.55)`,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u0027border-radius\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u0027padding\u0027 : \u00273px\u0027,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    };"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return styles;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 157
    }
  },
  {
    "path": "src/app/core/services/phase.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Injectable} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClient} from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {catchError, map} from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {forkJoin, Observable, of, throwError} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {GithubService} from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "export enum Phase { phase1 \u003d \u0027phase1\u0027, phase2 \u003d \u0027phase2\u0027, phase3 \u003d \u0027phase3\u0027 }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class PhaseService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public currentPhase: Phase;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private repoName: string;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private orgName: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  public readonly phaseDescription \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase1\u0027: \u0027Bug Reporting Phase\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase2\u0027: \u0027Team\\\u0027s Response Phase\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase3\u0027: \u0027Moderation Phase\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  private phaseNum: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private http: HttpClient,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private github: GithubService,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) {}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  parseEncodedPhase(encodedText: String): string[] {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const phase \u003d encodedText.split(\u0027@\u0027, 4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const moduleOrg \u003d phase[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const phaseOneUrl \u003d phase[1].split(\u0027\u003d\u0027, 2)[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const phaseTwoUrl \u003d phase[2].split(\u0027\u003d\u0027, 2)[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const phaseThreeUrl \u003d phase[3].split(\u0027\u003d\u0027, 2)[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    let separator \u003d phaseOneUrl.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    const repoName \u003d phaseOneUrl.substring(separator + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    let separatorOrg \u003d phaseOneUrl.indexOf(\u0027.com\u0027);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    const orgName \u003d phaseOneUrl.substring(separatorOrg + 5, separator);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    separator \u003d phaseTwoUrl.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    const repoNameSecond \u003d phaseTwoUrl.substring(separator + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    separatorOrg \u003d phaseTwoUrl.indexOf(\u0027.com\u0027);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    const orgNameSecond \u003d phaseTwoUrl.substring(separatorOrg + 5, separator);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    separator \u003d phaseThreeUrl.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    const repoNameThird \u003d phaseThreeUrl.substring(separator + 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    separatorOrg \u003d phaseThreeUrl.indexOf(\u0027.com\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    const orgNameThird \u003d phaseThreeUrl.substring(separatorOrg + 5, separator);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return new Array(repoName, orgName, repoNameSecond, orgNameSecond, repoNameThird, orgNameThird, moduleOrg);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  checkIfReposAccessible(array: any): any {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    const value \u003d forkJoin("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.github.getRepo(array[1], array[0]).pipe(map(res \u003d\u003e res), catchError(e \u003d\u003e of(\u0027Oops\u0027))),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      this.github.getRepo(array[3], array[2]).pipe(map(res \u003d\u003e res), catchError(e \u003d\u003e of(\u0027Oops\u0027))),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      this.github.getRepo(array[5], array[4]).pipe(map(res \u003d\u003e res), catchError(e \u003d\u003e of(\u0027Oops\u0027))),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      map(([first, second, third]) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        return {first, second, third, array};"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  determinePhaseNumber(response: any) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    let org \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    let repo \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    let copyUrl \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    const moduleOrg \u003d response[\u0027array\u0027][6];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    if (response[\u0027first\u0027][\u0027id\u0027] !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentPhase \u003d Phase.phase1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      this.phaseNum \u003d \u0027first\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (response[\u0027second\u0027][\u0027id\u0027] !\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentPhase \u003d Phase.phase2;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      this.phaseNum \u003d \u0027second\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (response[\u0027third\u0027][\u0027id\u0027] !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentPhase \u003d Phase.phase3;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      this.phaseNum \u003d \u0027third\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.currentPhase \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      return (\u0027not accessible\u0027);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      copyUrl \u003d this.currentPhase;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      org \u003d response[this.phaseNum][\u0027full_name\u0027].split(\u0027/\u0027, 2)[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      repo \u003d response[this.phaseNum][\u0027full_name\u0027].split(\u0027/\u0027, 2)[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      this.github.updatePhaseDetails(repo, org, moduleOrg);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      this.setPhaseDetail(repo, org);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      return (copyUrl);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  private setPhaseDetail(repo: string, org: string) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.repoName \u003d repo;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.orgName \u003d org;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  public getPhaseDetail() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return this.orgName.concat(\u0027/\u0027).concat(this.repoName);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    this.currentPhase \u003d null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 21,
      "-": 89
    }
  },
  {
    "path": "src/app/phase1/issue/issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Component, OnInit, OnDestroy } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { FormBuilder } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueCommentService } from \u0027../../core/services/issue-comment.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue.component.html\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue.component.css\u0027]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export class IssueComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  issue: Issue;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueLoading \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  isEditing \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  issueSubscription: Subscription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) { }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initializeIssue();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  canDeactivate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    return !this.isEditing;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(newIssue: Issue) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issue \u003d newIssue;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateLocalStore(this.issue);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  updateEditState(newState: boolean) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isEditing \u003d newState;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * Will obtain the issue from IssueService and then check whether the responses (aka comments) has been loaded into the application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   * If they are not loaded, retrieve the comments from github. Else just use the already retrieved comments."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  private initializeIssue() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    const id \u003d +this.route.snapshot.paramMap.get(\u0027issue_id\u0027);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getIssue(id);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  private getIssue(id: number) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.issueSubscription \u003d this.issueService.getAllIssues().subscribe((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.issue \u003d issues.find(issue \u003d\u003e issue.id \u003d\u003d\u003d id);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.isIssueLoading \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeIssue());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.issueSubscription.unsubscribe();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 13,
      "Koh Jun Wei": 6,
      "-": 48
    }
  },
  {
    "path": "src/app/phase1/new-issue/new-issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1 class\u003d\"mat-display-1 title\"\u003eNew Issue\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"newIssueForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewIssue(myForm)\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"form\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cdiv class\u003d\"column left\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003cmat-form-field\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003cinput id\u003d\"title\" formControlName\u003d\"title\" matInput placeholder\u003d\"Title\" required\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"title.errors \u0026\u0026 title.errors[\u0027required\u0027] \u0026\u0026 title.touched\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            Title required."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cdiv style\u003d\"margin: 10px 0 10px 0;\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003capp-comment-editor [commentField]\u003d\"description\" [commentForm]\u003d\"newIssueForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cbutton style\u003d\"float: right\" type\u003d\"submit\" mat-stroked-button color\u003d\"primary\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [disabled]\u003d\"!newIssueForm.valid || isFormPending\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          Submit new issue"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cdiv class\u003d\"column right\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003cmat-select formControlName\u003d\"severity\" placeholder\u003d\"Severity\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027severity\u0027)\" "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedSeverityColor)\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of severityValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"severity.errors \u0026\u0026 severity.errors[\u0027required\u0027] \u0026\u0026 severity.touched\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            Severity required."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003cmat-select formControlName\u003d\"type\" placeholder\u003d\"Type\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027type\u0027)\" "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedTypeColor)\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of issueTypeValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"type.errors \u0026\u0026 type.errors[\u0027required\u0027] \u0026\u0026 type.touched\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "            Type required."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 26,
      "Koh Jun Wei": 25,
      "-": 8
    }
  },
  {
    "path": "src/app/phase1/new-issue/new-issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-new-issue\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./new-issue.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./new-issue.component.css\u0027]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class NewIssueComponent implements OnInit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  newIssueForm: FormGroup;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  severityValues \u003d this.labelService.getLabelList(\u0027severity\u0027);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  issueTypeValues \u003d this.labelService.getLabelList(\u0027type\u0027);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  selectedSeverityColor: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  selectedTypeColor: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService, private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private errorHandlingService: ErrorHandlingService, public labelService: LabelService,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router) { }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newIssueForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      title: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      description: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(\u0027\u0027);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.selectedTypeColor \u003d this.labelService.getColorOfLabel(\u0027\u0027);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewIssue(form: NgForm) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.newIssueForm.invalid) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.createIssue(this.title.value, this.description.value,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      this.severity.value, this.type.value).pipe(finalize(() \u003d\u003e this.isFormPending \u003d false))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        newIssue \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          this.issueService.updateLocalStore(newIssue);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          this.router.navigateByUrl(`phase1/issues/${newIssue.id}`);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          form.resetForm();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          error \u003d\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  setSelectedLabelColor(labelValue: string, labelType: string) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    switch (labelType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.selectedTypeColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  get title() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027title\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newIssueForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 19,
      "Koh Jun Wei": 6,
      "-": 56
    }
  },
  {
    "path": "src/app/phase1/phase1.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e {{userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u0027Issues you posted\u0027 : \u0027All Issues\u0027 }}\u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-right\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCreateNewIssue()\" mat-stroked-button color\u003d\"primary\" routerLink\u003d\"issues/new\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          New Issue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "         \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.type\" "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.type}}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.type\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.severity\" "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity}}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.severity\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"actions\" \u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e {{permissions.canDeleteIssue() ? \u0027Actions\u0027 : \u0027\u0027}} \u003c/th\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton mat-button color\u003d\"warn\" *ngIf\u003d\"permissions.canDeleteIssue() \u0026\u0026 !issuesPendingDeletion[issue.id]\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                (click)\u003d\"deleteIssue(issue.id)\"\u003e Delete \u003c/button\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-spinner color\u003d\"warn\" [diameter]\u003d\"25\" style\u003d\"display: inline; padding-right: 30px; margin-left: 5px\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                     *ngIf\u003d\"issuesPendingDeletion[issue.id]\" \u003e\u003c/mat-spinner\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 3,
      "Kevin Chin": 4,
      "Koh Jun Wei": 1,
      "-": 72
    }
  },
  {
    "path": "src/app/phase1/phase1.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssuesDataTable } from \u0027../shared/data-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { BehaviorSubject } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Issue } from \u0027../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase1\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase1.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase1.component.css\u0027]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase1Component implements OnInit {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  issues: BehaviorSubject\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesDataSource: IssuesDataTable;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesPendingDeletion: {[id: number]: boolean};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService, private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              public permissions: PermissionService, private labelService: LabelService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              public userService: UserService) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator, this.displayedColumns);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.loadIssues();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesPendingDeletion \u003d {};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.filter \u003d filterValue;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteIssue(id: number) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesPendingDeletion \u003d {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issuesPendingDeletion,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      [id]: true,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.deleteIssue(id).pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      const { [id]: issueRemoved, ...theRest } \u003d this.issuesPendingDeletion;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesPendingDeletion \u003d theRest;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    })).subscribe((removedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 2,
      "Koh Jun Wei": 10,
      "-": 44
    }
  },
  {
    "path": "src/app/phase2/issue/issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003capp-issue-title *ngIf\u003d\"!isIssueLoading\" [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-title\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"column left\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-issue-description *ngIf\u003d\"!isIssueLoading\" [issue]\u003d\"issue\" title\u003d\"Description of Issue\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                             (changeEditState)\u003d\"updateDescriptionEditState($event)\" [isEditing]\u003d\"isDescriptionEditing\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                             (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-description\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-issue-response *ngIf\u003d\"issue.teamResponse\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                          [isEditing]\u003d\"isResponseEditing\" (updateEditState)\u003d\"updateResponseEditState($event)\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                          attributeName\u003d\"teamResponse\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-response\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-new-team-response *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 !issue.teamResponse\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                             [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-new-team-response\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv *ngIf\u003d\"isCommentsLoading\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"column right\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cdiv *ngIf\u003d\"!isIssueLoading\" [style.visibility]\u003d\"issue.teamResponse ? \u0027visible\u0027 : \u0027hidden\u0027\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"severity\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"type\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"responseTag\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-assignee-component [issue]\u003d\"issue\" [team]\u003d\"issue.teamAssigned\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-assignee-component\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\" style\u003d\"margin-bottom: 15px;\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003capp-duplicated-issues-component [issue]\u003d\"issue\"\u003e\u003c/app-duplicated-issues-component\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"!!issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "          \u003capp-duplicate-of-component [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-duplicate-of-component\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv style\u003d\"margin-top: 15px; color: red\" *ngIf\u003d\"((issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0) \u0026\u0026"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            (!!issue.duplicateOf || (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0)\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          * Need your resolution. An issue cannot have both duplicated issues and duplicated status."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 11,
      "-": 38
    }
  },
  {
    "path": "src/app/phase2/issue/issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Component, OnInit, OnDestroy } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { FormBuilder } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueCommentService } from \u0027../../core/services/issue-comment.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueComment, IssueComments } from \u0027../../core/models/comment.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue.component.css\u0027]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export class IssueComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  issue: Issue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  comments: IssueComment[];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueLoading \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  isCommentsLoading \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  isResponseEditing \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  isDescriptionEditing \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  issueSubscription: Subscription;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) { }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.params.subscribe("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      params \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        const id \u003d +params[\u0027issue_id\u0027];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.initializeIssue(id);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.initializeComments(id);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  canDeactivate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return !this.isResponseEditing \u0026\u0026 !this.isDescriptionEditing;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(newIssue: Issue) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issue \u003d newIssue;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateLocalStore(this.issue);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  updateResponseEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.isResponseEditing \u003d updatedState;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  updateDescriptionEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.isDescriptionEditing \u003d updatedState;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  private initializeIssue(id: number) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.issueSubscription \u003d this.issueService.getAllIssues().subscribe((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.issue \u003d issues.find(issue \u003d\u003e issue.id \u003d\u003d\u003d id);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.isIssueLoading \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeIssue(id));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private initializeComments(id: number) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.issueCommentService.getIssueComments(id).pipe(finalize(() \u003d\u003e this.isCommentsLoading \u003d false))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      .subscribe((issueComments: IssueComments) \u003d\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.comments \u003d issueComments.comments;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        console.log(\u0027Comments: \u0027, issueComments);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeComments(id));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.issueSubscription.unsubscribe();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 12,
      "Koh Jun Wei": 26,
      "-": 46
    }
  },
  {
    "path": "src/app/phase2/issues-faulty/issues-faulty.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Faulty Issues \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"issue.duplicated \u0026\u0026 !issue.duplicateOf\" style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip style\u003d\"font-size: 12px; cursor: pointer\" [color]\u003d\"\u0027accent\u0027\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    matTooltip\u003d\"Issue marked as duplicated but duplicated issue not specified.\" matTooltipPosition\u003d\"above\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicate value not specified"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.teamAssigned \u0026\u0026  issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.type\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.type}}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.type\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.severity\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity}}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.severity\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/th\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.responseTag\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.responseTag}}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"assignees\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth [style.width]\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u002715%\u0027 : \u002710%\u0027\" mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/th\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.assignees.join(\u0027, \u0027)}}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          -"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\"  [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027\" matColumnDef\u003d\"actions\"\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Action \u003c/th\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse()\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                [routerLink]\u003d\"\u0027/phase2/issues/\u0027 + issue.id\" mat-button color\u003d\"accent\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "          Fix"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "Kevin Chin": 6,
      "-": 112
    }
  },
  {
    "path": "src/app/phase2/issues-faulty/issues-faulty.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/data-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-faulty\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-faulty.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-faulty.component.css\u0027],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesFaultyComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesDataSource: IssuesDataTable;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns: string[];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService, private errorHandlingService: ErrorHandlingService, public userService: UserService,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    public permissions: PermissionService, private labelService: LabelService) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (userService.currentUser.role \u003d\u003d\u003d UserRole.Tutor) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027actions\u0027];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesDataSource.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    const filter \u003d (issue: Issue): boolean \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.issueService.hasResponse(issue.id) \u0026\u0026"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        (!!issue.duplicateOf \u0026\u0026 this.issueService.issues$.getValue().filter(childIssue \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          return childIssue.duplicateOf \u003d\u003d\u003d issue.id;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }).length !\u003d\u003d 0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator, this.displayedColumns, filter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.loadIssues();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.filter \u003d filterValue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 3,
      "Koh Jun Wei": 8,
      "-": 48
    }
  },
  {
    "path": "src/app/phase2/issues-pending/issues-pending.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003e Issues Pending Response \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{ issue.teamAssigned \u0026\u0026 issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell [style.width]\u003d\"permissions.canCRUDTeamResponse() ? \u002715%\u0027 : \u002720%\u0027\" *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              {{issue.type || \u0027-\u0027}} "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003c/td\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell [style.width]\u003d\"permissions.canCRUDTeamResponse() ? \u002710%\u0027 : \u002715%\u0027\" *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          {{issue.severity || \u0027-\u0027}} "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          -"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\" style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"actions\" *ngIf\u003d\"permissions.canCRUDTeamResponse()\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Actions \u003c/th\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 !issueService.hasResponse(issue.id)\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          [routerLink]\u003d\"\u0027/phase2/issues/\u0027 + issue.id\" mat-button color\u003d\"accent\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          Respond"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 issueService.hasResponse(issue.id)\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                mat-button color\u003d\"primary\" (click)\u003d\"markAsResponded(issue)\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          Mark as responded"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "Kevin Chin": 10,
      "-": 75
    }
  },
  {
    "path": "src/app/phase2/issues-pending/issues-pending.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/data-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-pending\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-pending.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-pending.component.css\u0027]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesPendingComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesDataSource: IssuesDataTable;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService, private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              public permissions: PermissionService, public userService: UserService, private labelService: LabelService) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    if (permissions.canCRUDTeamResponse()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      if (userService.currentUser.role !\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027duplicatedIssues\u0027];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesDataSource.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    const filter \u003d (issue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      return (!this.issueService.hasResponse(issue.id) || (!issue.status || issue.status \u003d\u003d\u003d \u0027Incomplete\u0027)) \u0026\u0026"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        !issue.duplicateOf;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator, this.displayedColumns, filter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.loadIssues();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.filter \u003d filterValue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  markAsResponded(issue: Issue) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      ...issue,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      status: STATUS.Done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }, error \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 2,
      "Koh Jun Wei": 13,
      "-": 55
    }
  },
  {
    "path": "src/app/phase2/issues-responded/issues-responded.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Issues Responded \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"issue.duplicated \u0026\u0026 !issue.duplicateOf \u0026\u0026 (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                       style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip style\u003d\"font-size: 12px; cursor: pointer\" [color]\u003d\"\u0027accent\u0027\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    matTooltip\u003d\"Issue marked as duplicated but duplicated issue not specified.\" matTooltipPosition\u003d\"above\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicate value not specified"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.teamAssigned \u0026\u0026 issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.type\" "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.type}}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.type\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.severity\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity}}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.severity\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/th\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.responseTag\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.responseTag}}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"assignees\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth [style.width]\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u002715%\u0027 : \u002710%\u0027\" mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/th\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.assignees.join(\u0027, \u0027)}}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          -"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\"  [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027\" matColumnDef\u003d\"actions\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Action \u003c/th\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e \u003cbutton color\u003d\"primary\" mat-button (click)\u003d\"markAsPending(issue)\"\u003eMark as pending\u003c/button\u003e \u003c/td\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "Kevin Chin": 7,
      "-": 107
    }
  },
  {
    "path": "src/app/phase2/issues-responded/issues-responded.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssuesDataTable } from \u0027../../shared/data-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Issue, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserRole } from \u0027../../core/models/user.model\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issues-responded\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issues-responded.component.html\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issues-responded.component.css\u0027],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssuesRespondedComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesDataSource: IssuesDataTable;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns: string[];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() teamFilter: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  constructor(public issueService: IssueService, private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    public userService: UserService, private labelService: LabelService) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    if (userService.currentUser.role \u003d\u003d\u003d UserRole.Student) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027, \u0027actions\u0027];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (userService.currentUser.role \u003d\u003d\u003d UserRole.Tutor) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      this.displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027teamAssigned\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027responseTag\u0027, \u0027assignees\u0027, \u0027duplicatedIssues\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027actions\u0027];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(changes: SimpleChanges) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!changes.teamFilter.isFirstChange()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issuesDataSource.teamFilter \u003d changes.teamFilter.currentValue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    const filter \u003d (issue: Issue): boolean \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.issueService.hasResponse(issue.id) \u0026\u0026 !issue.duplicateOf \u0026\u0026"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        (issue.status \u003d\u003d\u003d \u0027Done\u0027);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator, this.displayedColumns, filter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.loadIssues();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.filter \u003d filterValue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  markAsPending(issue: Issue) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      ...issue,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      status: STATUS.Incomplete"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }, error \u003d\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 3,
      "Koh Jun Wei": 10,
      "-": 54
    }
  },
  {
    "path": "src/app/phase2/new-team-respond/new-team-response.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"newTeamResponseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"submitNewTeamResponse(myForm)\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan style\u003d\"vertical-align: middle; margin-left: 10px\"\u003e Post your team\u0027s response here. \u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv style\u003d\"float: right;\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"submit\" style\u003d\"margin-left: 10px\" [disabled]\u003d\"newTeamResponseForm.invalid || isFormPending\" mat-button color\u003d\"primary\"\u003eSubmit\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-checkbox style\u003d\"display: inline-block; width: 20%\" formControlName\u003d\"duplicated\" (change)\u003d\"handleChangeOfDuplicateCheckbox($event)\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicated Issue"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-form-field [style.visibility]\u003d\"!duplicated.value ? \u0027hidden\u0027 : \u0027visible\u0027\" style\u003d\"display: inline-block; width: 50%\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-select formControlName\u003d\"duplicateOf\" placeholder\u003d\"Duplicate of\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cmat-option *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\" [value]\u003d\"issue.id\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan class\u003d\"mat-body-strong\"\u003e #{{issue.id}}: \u003c/span\u003e  \u003cspan class\u003d\"mat-body\"\u003e{{issue.title}}\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"color: #f44336\"\u003e ({{getDisabledDupOptionErrorText(issue)}}) \u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-error *ngIf\u003d\"duplicateOf.errors \u0026\u0026 duplicateOf.errors[\u0027required\u0027] \u0026\u0026 duplicateOf.touched\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              Need to specify the duplicated issue."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003cmat-select formControlName\u003d\"severity\" placeholder\u003d\"Severity\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027severity\u0027)\" "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedSeverityColor)\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of severityValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"severity.errors \u0026\u0026 severity.errors[\u0027required\u0027] \u0026\u0026 severity.touched\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            Severity required."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003cmat-select formControlName\u003d\"type\" placeholder\u003d\"Type\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027type\u0027)\" "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedTypeColor)\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of issueTypeValues\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"type.errors \u0026\u0026 type.errors[\u0027required\u0027] \u0026\u0026 type.touched\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            Type required."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"container\" [style.display]\u003d\"duplicated.value ? \u0027none\u0027 : \u0027grid\u0027\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"left-half\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-select placeholder\u003d\"Assignees\" formControlName\u003d\"assignees\" multiple\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let member of teamMembers\" [value]\u003d\"member\"\u003e{{member}}\u003c/mat-option\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"assignees.errors \u0026\u0026 assignees.errors[\u0027required\u0027] \u0026\u0026 assignees.touched\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            Assignee(s) required."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-form-field class\u003d\"right-half\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003cmat-select formControlName\u003d\"responseTag\" placeholder\u003d\"Response\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          (selectionChange)\u003d\"setSelectedLabelColor($event.value, \u0027responseTag\u0027)\" "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [ngStyle]\u003d\"this.labelService.setLabelStyle(this.selectedResponseColor)\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            \u003cmat-option *ngFor\u003d\"let value of responseList\" [value]\u003d\"value.labelValue\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "            [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              {{value.labelValue}}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-error *ngIf\u003d\"responseTag.errors \u0026\u0026 responseTag.errors[\u0027required\u0027] \u0026\u0026 responseTag.touched\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            Response required."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-error\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"newTeamResponseForm.get(\u0027description\u0027)\" [commentForm]\u003d\"newTeamResponseForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 18,
      "-": 73
    }
  },
  {
    "path": "src/app/phase2/new-team-respond/new-team-response.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { FormBuilder, FormGroup, NgForm, Validators } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Issue, SEVERITY_ORDER, STATUS } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { finalize, map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-new-team-response\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./new-team-response.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./new-team-response.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class NewTeamResponseComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  newTeamResponseForm: FormGroup;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  severityValues \u003d this.labelService.getLabelList(\u0027severity\u0027);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  issueTypeValues \u003d this.labelService.getLabelList(\u0027type\u0027);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  responseList \u003d this.labelService.getLabelList(\u0027responseTag\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  teamMembers: string[];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  selectedSeverityColor: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  selectedTypeColor: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  selectedResponseColor: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              public labelService: LabelService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) { }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamMembers \u003d this.issue.teamAssigned.teamMembers.map((member) \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      return member.loginId;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newTeamResponseForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      description: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [this.issue.severity, Validators.required],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [this.issue.type, Validators.required],"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      responseTag: [this.issue.responseTag, Validators.required],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: [this.issue.assignees],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicated: [false],"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: [\u0027\u0027]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicated.valueChanges.subscribe(checked \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      if (checked) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(Validators.required);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(null);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(null);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(Validators.required);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.updateValueAndValidity();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.updateValueAndValidity();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(this.issue.severity);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.selectedTypeColor \u003d this.labelService.getColorOfLabel(this.issue.type);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.selectedResponseColor \u003d this.labelService.getColorOfLabel(this.issue.responseTag);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewTeamResponse(form: NgForm) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.newTeamResponseForm.invalid) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      severity: this.severity.value,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      type: this.type.value,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      assignees: this.assignees.value,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      responseTag: this.responseTag.value,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicated: this.duplicated.value,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      status: STATUS.Done,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      teamResponse: this.description.value,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicateOf: this.duplicateOf.value,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }).pipe(finalize(() \u003d\u003e this.isFormPending \u003d false)).subscribe((updatedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    return SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity] || (issue.duplicated || !!issue.duplicateOf);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      if (SEVERITY_ORDER[this.severity.value] \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Issue of lower priority\u0027);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (issue.duplicated || !!issue.duplicateOf) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027A duplicated issue\u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  handleChangeOfDuplicateCheckbox(event) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      this.assignees.setValue([]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.markAsUntouched();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.markAsUntouched();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  setSelectedLabelColor(labelValue: string, labelType: string) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    switch (labelType) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027severity\u0027:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.selectedSeverityColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027type\u0027:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.selectedTypeColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      case \u0027responseTag\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.selectedResponseColor \u003d this.labelService.getColorOfLabel(labelValue);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  get assignees() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027assignees\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  get responseTag() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027responseTag\u0027);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicated() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027duplicated\u0027);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicateOf() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.newTeamResponseForm.get(\u0027duplicateOf\u0027);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 27,
      "Koh Jun Wei": 19,
      "-": 119
    }
  },
  {
    "path": "src/app/phase3/issue/issue.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003capp-issue-title *ngIf\u003d\"!isIssueLoading\" [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-title\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"column left\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-issue-description *ngIf\u003d\"!isIssueLoading\" [issue]\u003d\"issue\" title\u003d\"Description of Issue\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                             [isEditing]\u003d\"isIssueDescriptionEditing\" (changeEditState)\u003d\"updateDescriptionEditState($event)\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                             (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-description\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-issue-response *ngIf\u003d\"issue.teamResponse\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                          [isEditing]\u003d\"isTeamResponseEditing\" (updateEditState)\u003d\"updateTeamResponseEditState($event)\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                          attributeName\u003d\"teamResponse\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-response\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-issue-response *ngIf\u003d\"issue.tutorResponse\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                          [isEditing]\u003d\"isTutorResponseEditing\" (updateEditState)\u003d\"updateTutorResponseEditState($event)\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                          attributeName\u003d\"tutorResponse\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-response\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-tutor-response *ngIf\u003d\"!issue.tutorResponse\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                             [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-tutor-response\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv *ngIf\u003d\"isCommentsLoading\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "           style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"column right\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cdiv *ngIf\u003d\"!isIssueLoading\" [style.visibility]\u003d\"issue.tutorResponse ? \u0027visible\u0027 : \u0027hidden\u0027\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"severity\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"type\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-issue-label [issue]\u003d\"issue\" attributeName\u003d\"responseTag\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-issue-label\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-assignee-component [issue]\u003d\"issue\" [team]\u003d\"issue.teamAssigned\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-assignee-component\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003capp-duplicate-of-component *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\" [issue]\u003d\"issue\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                                    (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-duplicate-of-component\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-duplicated-issues-component *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "                                         [issue]\u003d\"issue\"\u003e\u003c/app-duplicated-issues-component\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-divider\u003e\u003c/mat-divider\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003capp-todo-list [issue]\u003d\"issue\" (issueUpdated)\u003d\"updateIssue($event)\"\u003e\u003c/app-todo-list\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 12,
      "-": 37
    }
  },
  {
    "path": "src/app/phase3/issue/issue.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Component, OnInit, OnDestroy } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { Issue } from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { FormBuilder } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { IssueCommentService } from \u0027../../core/services/issue-comment.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueComment, IssueComments } from \u0027../../core/models/comment.model\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Subscription } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./issue.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./issue.component.css\u0027]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export class IssueComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  issue: Issue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  comments: IssueComment[];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueLoading \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  isCommentsLoading \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  isTutorResponseEditing \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  isTeamResponseEditing \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  isIssueDescriptionEditing \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  issueSubscription: Subscription;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  constructor(private issueCommentService: IssueCommentService,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "              public userService: UserService,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              public issueService: IssueService) { }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.route.params.subscribe("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      params \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        const id \u003d +params[\u0027issue_id\u0027];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.initializeIssue(id);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.initializeComments(id);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  canDeactivate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return !this.isTutorResponseEditing \u0026\u0026 !this.isIssueDescriptionEditing \u0026\u0026 !this.isTeamResponseEditing;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private initializeIssue(id: number) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getIssue(id);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  private getIssue(id: number) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.issueSubscription \u003d this.issueService.getAllIssues().subscribe((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.issue \u003d issues.find(issue \u003d\u003e issue.id \u003d\u003d\u003d id);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.isIssueLoading \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeIssue(id));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(newIssue: Issue) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issue \u003d newIssue;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateLocalStore(this.issue);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  updateTutorResponseEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.isTutorResponseEditing \u003d updatedState;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDescriptionEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isIssueDescriptionEditing \u003d updatedState;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  updateTeamResponseEditState(updatedState: boolean) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.isTeamResponseEditing \u003d updatedState;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private initializeComments(id: number) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.issueCommentService.getIssueComments(id).pipe(finalize(() \u003d\u003e this.isCommentsLoading \u003d false))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      .subscribe((issueComments: IssueComments) \u003d\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.comments \u003d issueComments.comments;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        console.log(\u0027Comments: \u0027, this.comments);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.initializeComments(id));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.issueSubscription.unsubscribe();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ronak Lakhotia": 7,
      "Kevin Chin": 14,
      "Koh Jun Wei": 32,
      "-": 41
    }
  },
  {
    "path": "src/app/phase3/phase3.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv style\u003d\"text-align: center; margin-bottom: 20px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"mat-display-1\"\u003e {{ teamList ? teamFilter : userService.currentUser.team.id}} \u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton *ngIf\u003d\"teamList\" [matMenuTriggerFor]\u003d\"teamMenu\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e settings \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-menu #teamMenu\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton mat-menu-item [disabled]\u003d\"team \u003d\u003d\u003d teamFilter\" *ngFor\u003d\"let team of teamList\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"updateDisplayedTeam(team)\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan\u003e {{team}} \u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-menu\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Issues Submitted by Students \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e  Github ID \u003c/th\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        {{issue.type || \u0027-\u0027}}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003c/span\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        {{issue.severity || \u0027-\u0027}} "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003c/span\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"Todo Remaining\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Todo Remaining \u003c/th\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"isTodoListChecked(issue) \u0026\u0026 issue.todoList.length \u003e 0\"\u003e \u003cfont color\u003d\"green\"\u003eAll tasks are completed\u003c/font\u003e \u003c/span\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"!isTodoListChecked(issue)\"\u003e \u003cfont color\u003d\"red\"\u003e{{ issue.todoList.length - todoFinished(issue) }}/{{ issue.todoList.length }} tasks pending.\u003c/font\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cprogress *ngIf\u003d\"issue.todoList.length \u003e 0\" value\u003d{{todoFinished(issue)}} max\u003d{{issue.todoList.length}} role\u003d\"progressbar\" style\u003d\"width: 100%\" aria-valuenow\u003d\"100\" aria-valuemin\u003d\"0\" aria-valuemax\u003d\"100\"\u003e\u003c/progress\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"issue.todoList.length \u003d\u003d\u003d 0\"\u003e No Todo List for this issue \u003c/span\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-card\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "Kevin Chin": 10,
      "-": 67
    }
  },
  {
    "path": "src/app/phase3/phase3.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { BehaviorSubject } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { Issue, IssuesFilter } from \u0027../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { IssuesDataTable } from \u0027../shared/data-tables/IssuesDataTable\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { MatPaginator, MatSort } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { IssueService } from \u0027../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { ErrorHandlingService } from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { UserService } from \u0027../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { Phase } from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "import { DataService } from \u0027../core/services/data.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-phase3\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./phase3.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./phase3.component.css\u0027]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class Phase3Component implements OnInit {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  issues: BehaviorSubject\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  issuesDataSource: IssuesDataTable;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  displayedColumns \u003d [\u0027id\u0027, \u0027title\u0027, \u0027type\u0027, \u0027severity\u0027, \u0027Todo Remaining\u0027];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  public teamFilter \u003d \u0027All Teams\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSort) sort: MatSort;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatPaginator) paginator: MatPaginator;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              public userService: UserService, private labelService: LabelService,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              private dataService: DataService) { }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource \u003d new IssuesDataTable(this.issueService, this.errorHandlingService, this.sort,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      this.paginator, this.displayedColumns);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.loadIssues();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  applyFilter(filterValue: string) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.filter \u003d filterValue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  get teamList(): string[] {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    const teams \u003d this.dataService.getTeams();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (IssuesFilter[Phase.phase3][this.userService.currentUser.role]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027FILTER_BY_TEAM_ASSIGNED\u0027:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...this.userService.currentUser.allocatedTeams.map(team \u003d\u003e team.id)];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      case \u0027NO_FILTER\u0027:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return [\u0027All Teams\u0027, ...teams];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDisplayedTeam(newTeam: string) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    this.teamFilter \u003d newTeam;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issuesDataSource.teamFilter \u003d this.teamFilter;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  isTodoListExists(issue): boolean {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    return issue.todoList.length !\u003d\u003d 0;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  todoFinished(issue): number {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    let count \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isTodoListExists(issue)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      return count;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const todo of issue.todoList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      if (todo.charAt(3) \u003d\u003d\u003d \u0027x\u0027) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        count +\u003d 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    return count;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  isTodoListChecked(issue): boolean {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isTodoListExists(issue)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.todoFinished(issue) \u003d\u003d\u003d issue.todoList.length) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ronak Lakhotia": 9,
      "Kevin Chin": 3,
      "-": 76
    }
  },
  {
    "path": "src/app/phase3/tutor-response/tutor-response.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Component, EventEmitter, Input, OnInit, Output} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {FormBuilder, FormGroup, NgForm, Validators} from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {Issue, RESPONSE, SEVERITY, SEVERITY_ORDER, TYPE} from \u0027../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import {Observable} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueService} from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {finalize, map} from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-tutor-response\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./tutor-response.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./tutor-response.component.css\u0027]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class TutorResponseComponent implements OnInit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  tutorResponseForm: FormGroup;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  severityValues \u003d Object.keys(SEVERITY);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  issueTypeValues \u003d Object.keys(TYPE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  responseList \u003d Object.keys(RESPONSE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  teamMembers: string[];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  isFormPending \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) { }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tutorResponseForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      description: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      severity: [this.issue.severity, Validators.required],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      type: [this.issue.type, Validators.required],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      responseTag: [this.issue.responseTag, Validators.required],"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: [this.issue.assignees],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicated: [this.issue.duplicated \u0026\u0026 !!this.issue.duplicateOf],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicateOf: [this.issue.duplicated ? this.issue.duplicateOf || \u0027\u0027 : \u0027\u0027]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicated.valueChanges.subscribe(checked \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      if (checked) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(Validators.required);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(null);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this.duplicateOf.setValidators(null);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        this.responseTag.setValidators(Validators.required);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.updateValueAndValidity();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.updateValueAndValidity();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  submitNewTutorResponseForm(form: NgForm) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.tutorResponseForm.invalid) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isFormPending \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "      severity: this.severity.value,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "      type: this.type.value,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "      assignees: this.assignees.value,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "      responseTag: this.responseTag.value,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ronak Lakhotia"
        },
        "content": "      duplicated: this.duplicated.value,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicateOf: this.duplicateOf.value,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      tutorResponse: this.description.value,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }).pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.isFormPending \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    })).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  get severity() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027severity\u0027);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  get description() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027description\u0027);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  get type() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027type\u0027);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  get assignees() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027assignees\u0027);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicated() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027duplicated\u0027);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  get duplicateOf() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027duplicateOf\u0027);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  get responseTag() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.tutorResponseForm.get(\u0027responseTag\u0027);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    return SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      if (SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Cannot set \\\u0027duplicate of\\\u0027 to an issue of lower priority\u0027);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  handleChangeOfDuplicateCheckbox(event) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      this.severity.setValue(this.issue.severity);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      this.type.setValue(this.issue.type);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      this.assignees.setValue([]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      this.responseTag.markAsUntouched();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.setValue(\u0027\u0027);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOf.markAsUntouched();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  handleChangeOfTodoCheckbox(event, todo, index) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issue.todoList[index] \u003d \u0027- [x]\u0027 + todo.substring(5);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issue.todoList[index] \u003d \u0027- [ ]\u0027 + todo.substring(5);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  trackTodoList(index: number, item: string[]): string {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    return item[index];"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  isTodoChecked(todo): boolean {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    if (todo.charAt(3) \u003d\u003d\u003d \u0027x\u0027) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      return true;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ronak Lakhotia": 7,
      "Koh Jun Wei": 11,
      "-": 143
    }
  },
  {
    "path": "src/app/shared/issue/description/description.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch3 class\u003d\"mat-title\"\u003e{{title}}\u003c/h3\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cform [formGroup]\u003d\"issueDescriptionForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateDescription(myForm)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cspan\u003e \u003cspan class\u003d\"bold-name\"\u003e Tester \u003c/span\u003e posted on {{issue.created_at}}. \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cbutton mat-button *ngIf\u003d\"permissions.canEditIssueDescription() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        Edit"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmarkdown [data]\u003d\"issue.description\"\u003e\u003c/markdown\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"issueDescriptionForm.get(\u0027description\u0027)\" [commentForm]\u003d\"issueDescriptionForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cbutton type\u003d\"button\" mat-stroked-button color\u003d\"warn\" (click)\u003d\"cancelEditMode()\"\u003eCancel\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      \u003cbutton type\u003d\"submit\" [disabled]\u003d\"issueDescriptionForm.invalid || isSavePending\" mat-stroked-button color\u003d\"primary\"\u003eSave\u003c/button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 4,
      "-": 15
    }
  },
  {
    "path": "src/app/shared/issue/duplicateOf/duplicate-of.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-checkbox [disabled]\u003d\"!permissions.canCRUDTeamResponse() \u0026\u0026 !permissions.canCRUDTutorResponse()\" labelPosition\u003d\"before\" [checked]\u003d\"issue.duplicated\" (change)\u003d\"handleCheckboxChange($event)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"mat-title\"\u003e Duplicate Status \u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"permissions.canEditIssueLabels()\" [style.visibility]\u003d\"issue.duplicated ? \u0027inherit\u0027 : \u0027hidden\u0027\" style\u003d\"float: right\" (click)\u003d\"openSelection()\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-select [style.display]\u003d\"isEditing ? \u0027block\u0027 : \u0027none\u0027\" class\u003d\"no-arrow\" placeholder\u003d\"-\" [value]\u003d\"issue.duplicateOf\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "              (selectionChange)\u003d\"updateDuplicateStatus($event)\" (openedChange)\u003d\"handleSelectionOpenChange($event)\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-select-trigger\u003e\u003c/mat-select-trigger\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cmat-option [matTooltip]\u003d\"issue.title\" [matTooltipDisabled]\u003d\"!isTooltipNecessary(issue)\" [matTooltipPosition]\u003d\"\u0027left\u0027\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                [value]\u003d\"issue.id\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cdiv class\u003d\"duplicate-dropdown-issuedetails\" [ngStyle]\u003d\"{\u0027width\u0027: dupIssueOptionIsDisabled(issue) ? \u0027150px\u0027 : \u0027auto\u0027}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        \u003cspan class\u003d\"mat-body-strong\"\u003e #{{issue.id}}: \u003c/span\u003e  \u003cspan class\u003d\"mat-body\"\u003e{{issue.title}}\u003c/span\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"display: inline-block; color: #f44336\"\u003e ({{getDisabledDupOptionErrorText(issue)}}) \u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ issue.duplicateOf ? (\u0027#\u0027 + issue.duplicateOf + \u0027: \u0027 + (issueService.getIssue(issue.duplicateOf) | async).title) : \u0027Not specified\u0027}}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"!issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e - \u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "Koh Jun Wei": 1,
      "-": 21
    }
  },
  {
    "path": "src/app/shared/issue/duplicateOf/duplicate-of.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Component,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  EventEmitter,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Input,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  OnInit,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Output,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ViewChild,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ViewEncapsulation"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ErrorHandlingService"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Issue, SEVERITY_ORDER } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { MatCheckbox, MatSelect } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-duplicate-of-component\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./duplicate-of.component.html\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./duplicate-of.component.css\u0027],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  encapsulation: ViewEncapsulation.None,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "export class DuplicateOfComponent implements OnInit {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  isEditing \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSelect) duplicateOfSelection: MatSelect;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatCheckbox) duplicatedCheckbox: MatCheckbox;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Max chars visible for a duplicate entry in duplicates dropdown list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE \u003d 17;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Max chars visible for a non-duplicate entry in duplicates dropdown list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE \u003d 37;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Checks if the supplied issue requires a tooltip"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * in the UI as some information may be hidden due to truncation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param issue - Displayed issue that may need a tooltip."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return - true (to enable tooltip) / false (to disable tooltip)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isTooltipNecessary(issue: Issue): boolean {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Maximum Possible Title length varies based on whether the issue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // is a duplicate. (Whether the Duplicate Issue Tag is visible)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let maxTitleLength: number;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    maxTitleLength \u003d issue.duplicated"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ? this.MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      : this.MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return issue.title.length \u003e maxTitleLength;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDuplicateStatus(event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicated: !!event,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicateOf: event ? event.value : null,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      || (issue.duplicated || !!issue.duplicateOf);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (SEVERITY_ORDER[this.issue.severity]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Issue of lower priority\u0027);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (issue.duplicated || !!issue.duplicateOf) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027A duplicated issue\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  handleCheckboxChange(event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      this.openSelection();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditing \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOfSelection.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOfSelection.value \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateDuplicateStatus(null);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  openSelection() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isEditing \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicateOfSelection.open();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  handleSelectionOpenChange(isOpen) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isOpen) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditing \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicatedCheckbox.checked \u003d this.duplicateOfSelection.value;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u0026\u0026 this.issue.teamAssigned.id \u003d\u003d\u003d issue.teamAssigned.id;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 42,
      "Koh Jun Wei": 18,
      "-": 73
    }
  },
  {
    "path": "src/app/shared/issue/duplicatedIssues/duplicated-issues.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Component, Input, OnInit, ViewEncapsulation} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {Issue} from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueService} from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {PermissionService} from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import {Observable} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-duplicated-issues-component\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./duplicated-issues.component.html\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./duplicated-issues.component.css\u0027],"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  encapsulation: ViewEncapsulation.None,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class DuplicatedIssuesComponent implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssues: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssues \u003d this.issueService.getDuplicateIssuesFor(this.issue);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  removeDuplicateStatus(duplicatedIssue: Issue) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      ...duplicatedIssue,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicated: false,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      duplicateOf: null,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueService.updateLocalStore(updatedIssue);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 7,
      "-": 28
    }
  },
  {
    "path": "src/app/shared/issue/issue-components.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {MatProgressBarModule} from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {TitleComponent} from \u0027./title/title.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {SharedModule} from \u0027../shared.module\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {DescriptionComponent} from \u0027./description/description.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {MarkdownModule} from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {CommentEditorModule} from \u0027../comment-editor/comment-editor.module\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import {LabelComponent} from \u0027./label/label.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import {ResponseComponent} from \u0027./response/response.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import {AssigneeComponent} from \u0027./assignee/assignee.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {DuplicateOfComponent} from \u0027./duplicateOf/duplicate-of.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import {DuplicatedIssuesComponent} from \u0027./duplicatedIssues/duplicated-issues.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { TodoListComponent } from \u0027./todo-list/todo-list.component\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    CommentEditorModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    MatProgressBarModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forChild(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    TitleComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    DescriptionComponent,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    LabelComponent,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    ResponseComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    AssigneeComponent,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    DuplicateOfComponent,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    DuplicatedIssuesComponent,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    TodoListComponent,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    TitleComponent,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    DescriptionComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    LabelComponent,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    ResponseComponent,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    AssigneeComponent,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    DuplicateOfComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    DuplicatedIssuesComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    TodoListComponent,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "export class IssueComponentsModule { }"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 3,
      "-": 40
    }
  },
  {
    "path": "src/app/shared/issue/label/label.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cspan class\u003d\"mat-title\"\u003e {{attributeName.charAt(0).toUpperCase() + attributeName.substr(1)}} \u003c/span\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbutton *ngIf\u003d\"permissions.canEditIssueLabels()\" style\u003d\"float: right\" [matMenuTriggerFor]\u003d\"labelList\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-menu #labelList\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  \u003cbutton mat-menu-item *ngFor\u003d\"let value of labelValues;\" (click)\u003d\"updateLabel(value.labelValue)\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          [disabled]\u003d\"value.labelValue \u003d\u003d\u003d this.issue[attributeName]\"  [ngStyle]\u003d\"this.labelService.setLabelStyle(value.labelColor)\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "          \u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003cspan\u003e {{value.labelValue}}\u003c/span\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-menu\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "\u003cp [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelColor)\"\u003e{{issue[attributeName] || \u0027-\u0027}}\u003c/p\u003e"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 5,
      "-": 9
    }
  },
  {
    "path": "src/app/shared/issue/label/label.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output, OnChanges } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { FormBuilder } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Issue } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { ErrorHandlingService } from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Label } from \u0027../../../core/models/label.model\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { LabelService } from \u0027../../../core/services/label.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-issue-label\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./label.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./label.component.css\u0027],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "export class LabelComponent implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  labelValues: Label[];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  labelColor: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() attributeName: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              public labelService: LabelService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    // Get the list of labels based on their type (severity, type, response)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.labelValues \u003d this.labelService.getLabelList(this.attributeName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  ngOnChanges() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    // Color will change when @Input issue changes"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.labelColor \u003d this.labelService.getColorOfLabel(this.issue[this.attributeName]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  updateLabel(value: string) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.attributeName]: value,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((editedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(editedIssue);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      this.labelColor \u003d this.labelService.getColorOfLabel(editedIssue[this.attributeName]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 14,
      "Koh Jun Wei": 6,
      "-": 32
    }
  },
  {
    "path": "src/app/shared/issue/response/response.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "\u003ch3 class\u003d\"mat-title\"\u003e{{TITLE[attributeName]}}\u003c/h3\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "\u003cform [formGroup]\u003d\"responseForm\" #myForm\u003d\"ngForm\" (ngSubmit)\u003d\"updateResponse(myForm)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  \u003cdiv class\u003d\"timeline-comment\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    \u003cdiv class\u003d\"timeline-header\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cspan\u003e \u003cspan class\u003d\"bold-name\"\u003e {{POSTER[attributeName]}} \u003c/span\u003e {{ACTION[attributeName]}}. \u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cbutton mat-button *ngIf\u003d\"canEditIssue() \u0026\u0026 !isEditing\" (click)\u003d\"changeToEditMode()\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "        Edit"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!isEditing\" class\u003d\"comment\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cmarkdown [data]\u003d\"issue[attributeName]\"\u003e\u003c/markdown\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isEditing\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003capp-comment-editor [commentField]\u003d\"responseForm.get(\u0027description\u0027)\" [commentForm]\u003d\"responseForm\"\u003e\u003c/app-comment-editor\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cbutton type\u003d\"button\" mat-stroked-button color\u003d\"warn\" (click)\u003d\"cancelEditMode()\"\u003eCancel\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      \u003cbutton type\u003d\"submit\" [disabled]\u003d\"responseForm.invalid || isSavePending\" mat-stroked-button color\u003d\"primary\"\u003eSave\u003c/button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "\u003c/form\u003e"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 19
    }
  },
  {
    "path": "src/app/shared/issue/response/response.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Component, EventEmitter, Input, OnInit, Output} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {FormBuilder, FormGroup, NgForm, Validators} from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {IssueService} from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {finalize} from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {PermissionService} from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase, PhaseService} from \u0027../../../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import {Issue} from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  selector: \u0027app-issue-response\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  templateUrl: \u0027./response.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  styleUrls: [\u0027./response.component.css\u0027],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "export class ResponseComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  isSavePending \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  responseForm: FormGroup;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly TITLE \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027teamResponse\u0027: \u0027Team\\\u0027s Response\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027tutorResponse\u0027: \u0027Tutor\\\u0027s Response\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly POSTER \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027teamResponse\u0027: \u0027Team\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027tutorResponse\u0027: \u0027Tutor\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly ACTION \u003d {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027teamResponse\u0027: \u0027responded\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027tutorResponse\u0027: \u0027responded\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() attributeName: string;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isEditing: boolean;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() updateEditState \u003d new EventEmitter\u003cboolean\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private issueService: IssueService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private permissions: PermissionService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.responseForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      description: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  changeToEditMode() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateEditState.emit(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.responseForm.setValue({"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      description: this.issue[this.attributeName] || \u0027\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  cancelEditMode() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateEditState.emit(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  updateResponse(form: NgForm) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    if (this.responseForm.invalid) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSavePending \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    this.issueService.updateIssue(this.getUpdatedIssue()).pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateEditState.emit(false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSavePending \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    })).subscribe((updatedIssue: Issue) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      form.resetForm();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  canEditIssue(): boolean {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.phaseService.currentPhase) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phase2:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.permissions.canCRUDTeamResponse();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      case Phase.phase3:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.permissions.canCRUDTutorResponse();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private createUpdatedIssue(updatedIssue: Issue) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return \u003cIssue\u003e{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      [this.attributeName]: updatedIssue"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "  private getUpdatedIssue(): Issue {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "    return \u003cIssue\u003e {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "      [this.attributeName]: this.responseForm.get(\u0027description\u0027).value"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Koh Jun Wei": 25,
      "-": 80
    }
  },
  {
    "path": "src/app/shared/layout/header.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-toolbar color\u003d\"primary\" style\u003d\"position: sticky; position: -webkit-sticky; top: 0; z-index: 1000;\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"needToShowBackButton()\" mat-icon-button class\u003d\"mat-toolbar mat-primary\" style\u003d\"transform: scale(0.9)\" (click)\u003d\"goBack()\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon\u003earrow_back_ios\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ca class\u003d\"mat-toolbar mat-primary\" style\u003d\"text-decoration: none\" [routerLink]\u003d\"phaseService.currentPhase\"\u003eCATcher\u003c/a\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan *ngIf\u003d\"auth.isAuthenticated()\" style\u003d\"margin-left: 10px\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    ({{phaseService.phaseDescription[phaseService.currentPhase]}})"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/span\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cspan style\u003d\"flex: 1 1 auto\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  \u003cbutton *ngIf\u003d\"auth.isAuthenticated() \u0026\u0026 needToShowReloadButton()\" [disabled]\u003d\"this.isReloadBtnDisabled\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    mat-button matTooltip\u003d\"Synchronize with Github data\" (click)\u003d\"reload()\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    Sync"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003cmat-icon\u003erefresh\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"auth.isAuthenticated()\" mat-button matTooltip\u003d\"Log out\" (click)\u003d\"logOut()\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    ({{userService.currentUser.loginId}})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon style\u003d\"margin-left: 2px\"\u003eexit_to_app\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-toolbar\u003e"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 5,
      "-": 15
    }
  },
  {
    "path": "src/app/shared/layout/header.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { Location } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { AuthService } from \u0027../../core/services/auth.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { PhaseService } from \u0027../../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Koh Jun Wei"
        },
        "content": "import { UserService } from \u0027../../core/services/user.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { Router, RoutesRecognized } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { filter, pairwise } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { GithubEventService } from \u0027../../core/services/githubevent.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { ErrorHandlingService } from \u0027../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "import { IssueService } from \u0027../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-layout-header\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./header.component.html\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export class HeaderComponent implements OnInit {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private prevUrl;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  isReloadBtnDisabled \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private router: Router, public auth: AuthService, public phaseService: PhaseService, public userService: UserService,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private location: Location, private githubEventService: GithubEventService, private issueService: IssueService,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    router.events.pipe("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      filter((e: any) \u003d\u003e e instanceof RoutesRecognized),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      pairwise()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe(e \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      this.prevUrl \u003d e[0].urlAfterRedirects;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  needToShowBackButton(): boolean {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    return `/${this.phaseService.currentPhase}` !\u003d\u003d this.router.url \u0026\u0026 this.router.url !\u003d\u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  needToShowReloadButton(): boolean {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    return this.router.url !\u003d\u003d \u0027/phase1/issues/new\u0027;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  goBack() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.prevUrl \u003d\u003d\u003d `/${this.phaseService.currentPhase}/issues/new`) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      this.router.navigate([\u0027/phase1\u0027]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      this.location.back();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  reload() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.isReloadBtnDisabled \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    this.githubEventService.reloadPage().subscribe("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      (success) \u003d\u003e success,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      (error) \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "        this.errorHandlingService.handleHttpError(error, () \u003d\u003e this.githubEventService.reloadPage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    // Prevent user from spamming the reload button"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "      this.isReloadBtnDisabled \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "    3000);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Chin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  logOut() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    this.auth.logOut();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Chin": 28,
      "Koh Jun Wei": 4,
      "-": 36
    }
  },
  {
    "path": "src/index.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!doctype html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chead\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmeta charset\u003d\"utf-8\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctitle\u003eCATcher\u003c/title\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!--\u003cbase href\u003d\"./\"\u003e //TODO: Uncomment Prior to Release--\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbase href\u003d\"/\"\u003e \u003c!--//TODO: Comment Out Prior to Release--\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink rel\u003d\"icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.ico\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink href\u003d\"https://fonts.googleapis.com/css?family\u003dRoboto:300,400,500\" rel\u003d\"stylesheet\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink href\u003d\"https://fonts.googleapis.com/icon?family\u003dMaterial+Icons\" rel\u003d\"stylesheet\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/head\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbody\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003capp-root\u003eLoading...\u003c/app-root\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/body\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 15
    }
  }
]
