[
  {
    "path": "README.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# 1. Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "[![Build Status](https://travis-ci.org/CATcher-org/CATcher.svg?branch\u003dmaster)](https://travis-ci.org/CATcher-org/CATcher)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "**CAT**cher is a desktop application for **C**rowed-sourced **A**nonymous **T**esting software. It uses GitHub as the backend for hosting bug reports."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Project structure is adapted from, https://angular.io/guide/styleguide#overall-structural-guidelines and https://github.com/maximegris/angular-electron."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Currently runs with:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "- Angular v7.2.10"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "- Electron v4.0.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "- Electron Builder v20.28.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "This application will support the following order of workflow:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Bug Reporting**: Testers will be informed of the teams they will be testing. Following which, they will be able to start creating new bug reports during this phase."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Team\u0027s Response**: Teams will be able to respond to the bugs that are reported during the bug _reporting phase_."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Evaluation**: Tutors and Admins will be able to view the bug reports and their respective teams\u0027 response. They can evaluate the responses, change the severity and status of the bug reports if needed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# 2. Getting Started"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.1. Set up Organization"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "A Github organization must be created first. The organization must have the following settings:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set `Base Permissions` to `None`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Under `Settings` page of your organization, click on `Member privileges` navigation tab."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    2. Under `Base permissions`, select `None`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "2. Create `admins` team."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "3. Create `students` team."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "4. Create `tutors` team."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "5. Invite github users into their respective teams."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.2. Set up Github Repositories"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "This application assumes 4 repositories will be created under the above organization."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "For each phase, users with write access will be able to upload files (e.g. screenshots, .txt files, etc...) onto the repository\u0027s `/file` folder. These files are used in conjuction with issue description and comments in a form of a link. As for images, the actual image will be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.1. `public_data` Repository"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "The name of this repository must be **exactly** `public_data`. This repository must contain 1 file called `data.csv`. This `.csv` file, will contain the following information:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "1. Roles of users. (Student, Tutor, Admin)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "2. Student\u0027s team allocation. For each student, the `.csv` file must specify which team the student is in."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "3. Tutor\u0027s team allocation. For each tutor, the `.csv` must specify which teams the tutor is assigned to."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "An example of `data.csv`: https://github.com/CATcher-org/public_data/blob/master/data.csv"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.2. Bug Reporting Repository"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "All the bug reports that are created from the application will be posted into this repository."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.3. Team\u0027s Response Repository"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "After the bug reporting phase, the issues posted during that phase will be transferred over to this repository, with the identity of the poster anonymized."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "This repository will then be used by the application for individual teams to respond to the bugs that are discovered by the testers testing their application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Response**: `response.Accepted`, `response.CannotReproduce`, `response.IssueUnclear`, `response.Rejected`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Status**: `status.Done`, `status.Incomplete`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Team**: `team.*`, with the star representing the team number."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "7. **Tutorial**: `tutorial.*`, with the star representing tutorial name."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "8. **Duplicate**: `duplicate`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "**Team** and **Tutorial** tags are compulsory tags for each issue."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "### 2.2.4. Evaluation Repository"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "After the teams have responded to the bugs reported by their testers. The issues and their respective responses from `pe-results` will be transferred over to this repository. "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "The application will then use this repository to post tutor\u0027s or admin\u0027s evaluation of each team\u0027s response and their respective bug report."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "This repository must include the following issue tags:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "1. **Severity**: `severity.High`, `severity.Medium`, `severity.Low`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "2. **Type**: `type.DocumentationBug`, `type.FunctionalityBug`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "3. **Response**: `response.Accepted`, `response.CannotReproduce`, `response.IssueUnclear`, `response.Rejected`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "4. **Team**: `team.*`,  with the star representing the team number."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "5. **Tutorial**: `tutorial.*`, with the star representing tutorial name."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "6. **Duplicate**: `duplicate`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "**Team** and **Tutorial** tags are compulsory for each issue."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.3. Set up access rights"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "For each of the teams, follow the steps below to assign the right access level to the repositories. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to their respective team page on Github."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "2. Click on `Repositories` navigation tab."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "3. Add the following repositories with the respective access right level as desribed below."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    1. For `admins` team."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Admin`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Admin`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        3. pe-evaluation: `Admin`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    2. For `students` team."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Write`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Write`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    3. For `tutors` team."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        1. pe: `Read`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        2. pe-results: `Read`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        3. pe-evaluation: `Write`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "## 2.4. The Application"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "You can download the latest release from https://github.com/CATcher-org/CATcher/releases"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Start the application by clicking on the executable file, no installation is required."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "The login page will be displayed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "![login](https://i.imgur.com/zb1tN2k.png)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Use your Github credentials for username and password."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "**Encoded Text** will contain the urls of the 3 different repositories that are created in Section 2.2.2, 2.2.3 and 2.2.4."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "# 3. Development"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "1. Clone this repository locally."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "2. Install dependencies with npm: `npm install` "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "3. Compile and start the application: `npm start`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "After compilation, an application window will start up which runs on localhost:4200. You can disable \"Developer Tools\" by commenting `win.webContents.openDevTools();` in `main.ts`."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "# 4. Commands"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "|Command|Description|"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "|--|--|"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run build`| Build the app. Your built files are in the /dist folder. |"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run build:prod`| Build the app with Angular aot. Your built files are in the /dist folder. |"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:local`| Builds your application and start electron"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:linux`| Builds your application and creates an app consumable on linux system |"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:windows`| On a Windows OS, builds your application and creates an app consumable in windows 32/64 bit systems |"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "|`npm run electron:mac`|  On a MAC OS, builds your application and generates a `.app` file of your application that can be run on Mac |"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "# 5. Future Developments"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "Here are a few suggestions that future developers can work on to improve this application!"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.1. Support Commenting"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Currently, the application only support 1 response for each phase. So a commenting section would be good to allow discussions between team members as well as between tutors and admins. "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.2. Poll for updates"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "The state of the application is based on the initial log-in in which the data will be pulled from Github. However, this state is not updated as the user uses the application. This might lead to problems where the user is shown an outdated version of an issue."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "## 5.3. Add Tester\u0027s response phase (Right after the Team\u0027s Response)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "The rational for this phase is to ease the workload of tutors and admins during the evaluation phase. In this phase, testers who reported the bug will be able to look at the team\u0027s response to their bug report. If they think that the response is unjust, they can object it."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "During the evaluation phase, the tutors and admins just need focus on those bug reports with objections. Those without objections will not be moderated."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "-": 142
    }
  },
  {
    "path": "main.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { app, BrowserWindow, screen, Menu } from \u0027electron\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import * as path from \u0027path\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import * as url from \u0027url\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import MenuItemConstructorOptions \u003d Electron.MenuItemConstructorOptions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { enableProdMode, isDevMode } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "let win, serve;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "const args \u003d process.argv.slice(1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "serve \u003d args.some(val \u003d\u003e val \u003d\u003d\u003d \u0027--serve\u0027);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// TODO: enableProdMode() prior to release."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// enableProdMode();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "function createWindow() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  const electronScreen \u003d screen;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  const size \u003d electronScreen.getPrimaryDisplay().workAreaSize;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  // Create the browser window."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  win \u003d new BrowserWindow({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    x: 0,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    y: 0,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    width: size.width,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    height: size.height"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  if (serve) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    require(\u0027electron-reload\u0027)(__dirname, {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      electron: require(`${__dirname}/node_modules/electron`)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(\u0027http://localhost:4200\u0027);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    win.loadURL(url.format({"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      pathname: path.join(__dirname, \u0027dist/index.html\u0027),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      protocol: \u0027file:\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      slashes: true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  // win.webContents.openDevTools();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  // Emitted when the window is closed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  win.on(\u0027closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // Dereference the window object, usually you would store window"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // in an array if your app supports multi windows, this is the time"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // when you should delete the corresponding element."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    win \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// Edited version of a template menu-bar provided by the electron API,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "// refer to https://electronjs.org/docs/api/menu for more information."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const mainMenuTemplate: Electron.MenuItemConstructorOptions[] \u003d ["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027File\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        label: \u0027Quit CATcher\u0027, accelerator: \u0027CmdOrCtrl+Q\u0027, click() { app.quit(); }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027Edit\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027undo\u0027 },"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027redo\u0027 },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027selectAll\u0027 },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027cut\u0027 },"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027copy\u0027 },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027paste\u0027 },"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027delete\u0027 },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    label: \u0027View\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027resetzoom\u0027 },"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027zoomin\u0027 },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027zoomout\u0027 },"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      { role: \u0027togglefullscreen\u0027 }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  },"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    role: \u0027help\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    submenu: ["
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        label: \u0027Learn More\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        // TODO: Change below url to course-site / application github site."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        click () { require(\u0027electron\u0027).shell.openExternal(\u0027https://electronjs.org\u0027); }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "if (isDevMode()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let viewSubMenu: MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  viewSubMenu \u003d mainMenuTemplate[2].submenu as MenuItemConstructorOptions[];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  viewSubMenu.push("
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    { type: \u0027separator\u0027 },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    { role: \u0027toggledevtools\u0027}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  // This method will be called when Electron has finished"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  // initialization and is ready to create browser windows."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  // Some APIs can only be used after this event occurs."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027ready\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Build and Attach Menu-bar template to application."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const mainMenu \u003d Menu.buildFromTemplate(mainMenuTemplate);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    Menu.setApplicationMenu(mainMenu);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    createWindow();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  // Quit when all windows are closed."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027window-all-closed\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it is common for applications and their menu bar"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    // to stay active until the user quits explicitly with Cmd + Q"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    if (process.platform !\u003d\u003d \u0027darwin\u0027) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      app.quit();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  app.on(\u0027activate\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    // On OS X it\u0027s common to re-create a window in the app when the"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    // dock icon is clicked and there are no other windows open."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    if (win \u003d\u003d\u003d null) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      createWindow();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "} catch (e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  // Catch Error"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  // throw e;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 66,
      "-": 75
    }
  },
  {
    "path": "src/app/app.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import \u0027reflect-metadata\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import \u0027../polyfills\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { BrowserModule } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { AppRoutingModule } from \u0027./app-routing.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { MarkdownModule, MarkedOptions } from \u0027ngx-markdown\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { AppComponent } from \u0027./app.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { SharedModule } from \u0027./shared/shared.module\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HeaderComponent } from \u0027./shared/layout\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthModule } from \u0027./auth/auth.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientModule } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase2Module} from \u0027./phase2/phase2.module\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase3Module} from \u0027./phase3/phase3.module\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {Phase1Module} from \u0027./phase1/phase1.module\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import {BrowserAnimationsModule} from \u0027@angular/platform-browser/animations\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./core/guards/user-confirmation/user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    AppComponent, HeaderComponent, UserConfirmationComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    BrowserModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    BrowserAnimationsModule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    AuthModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase1Module,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase2Module,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    Phase3Module,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    SharedModule,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    HttpClientModule,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    MarkdownModule.forRoot({"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      markedOptions: {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        provide: MarkedOptions,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        useValue: {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          gfm: true,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          tables: true,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          breaks: true,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          pedantic: false,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          sanitize: false,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          smartLists: true,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          smartypants: true,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    AppRoutingModule,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  providers: [],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  bootstrap: [AppComponent],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  entryComponents: ["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    UserConfirmationComponent"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export class AppModule { }"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "-": 48
    }
  },
  {
    "path": "src/app/auth/auth.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Component, OnDestroy, OnInit} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {AuthService, AuthState} from \u0027../core/services/auth.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {Subscription} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {FormBuilder, FormGroup, NgForm, Validators} from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {HttpErrorResponse} from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {Router} from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import {GithubService} from \u0027../core/services/github.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {PhaseService} from \u0027../core/services/phase.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { Title } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-auth\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./auth.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./auth.component.css\u0027]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export class AuthComponent implements OnInit, OnDestroy {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  authState: AuthState;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  authStateSubscription: Subscription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  loginForm: FormGroup;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private auth: AuthService,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              private github: GithubService,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              private formBuilder: FormBuilder,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "              private phaseService: PhaseService,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private titleService: Title) { }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSubscription \u003d this.auth.currentAuthState.subscribe((state) \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.authState \u003d state;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loginForm \u003d this.formBuilder.group({"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      username: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      password: [\u0027\u0027, Validators.required],"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      encodedText: [\u0027CATcher-org@phase1\u003dhttps://github.com/testathorStudent/pe@phase2\u003dhttps://github.com/CATcher-org/pe-results\u0027 +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027@phase3\u003dhttps://github.com/CATcher-org/pe-evaluation\u0027, Validators.required],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnDestroy() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authStateSubscription.unsubscribe();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  login(form: NgForm) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.loginForm.invalid) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      this.auth.startAuthentication(this.loginForm.get(\u0027username\u0027).value, this.loginForm.get(\u0027password\u0027).value,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loginForm.get(\u0027encodedText\u0027).value)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          (user) \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            this.authService.changeAuthState(AuthState.Authenticated);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            form.resetForm();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            this.titleService.setTitle(\u0027CATcher \u0027.concat(this.phaseService.getPhaseDetail()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            this.router.navigateByUrl(this.phaseService.currentPhase);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          (error) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          if (error instanceof HttpErrorResponse) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            this.errorHandlingService.handleHttpError(error.error);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            this.errorHandlingService.handleGeneralError(error);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 1,
      "-": 68
    }
  },
  {
    "path": "src/app/core/guards/can-deactivate-issue-guard.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Location } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRouteSnapshot, CanDeactivate, Router, RouterStateSnapshot } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialog } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./user-confirmation/user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class CanDeactivateIssueGuard implements CanDeactivate\u003cany\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(private location: Location, private router: Router,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "              private dialog: MatDialog) {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Makes the dialog visible to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return The Promise of a User Selected boolean."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  openDialog(): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const dialogRef \u003d this.dialog.open(UserConfirmationComponent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return dialogRef.afterClosed();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  canDeactivate(component: any, currentRoute: ActivatedRouteSnapshot,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                currentState: RouterStateSnapshot,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                nextState?: RouterStateSnapshot): Observable\u003cboolean\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    if (component.canDeactivate \u0026\u0026 !component.canDeactivate()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u0026\u0026 nextState.url !\u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const currentUrlTree \u003d"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.router.createUrlTree([], currentRoute);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      const currentUrl \u003d currentUrlTree.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.location.go(currentUrl);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      return this.openDialog();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return of(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 23,
      "-": 16
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003ch1 mat-dialog-title\u003eWarning\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-content\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp\u003eDo you wish to leave the page?\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cp\u003eYou have unsaved changes that will be discarded.\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003cdiv mat-dialog-actions\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"primary\" (click)\u003d\"onNoClick()\"\u003eNo, I don\u0027t wish to leave\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbutton mat-raised-button color\u003d\"warn\" [mat-dialog-close]\u003d\"true\"\u003eYes, I wish to leave\u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 9
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { UserConfirmationComponent } from \u0027./user-confirmation.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "describe(\u0027UserConfirmationComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let component: UserConfirmationComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  let fixture: ComponentFixture\u003cUserConfirmationComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      declarations: [ UserConfirmationComponent ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture \u003d TestBed.createComponent(UserConfirmationComponent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 25
    }
  },
  {
    "path": "src/app/core/guards/user-confirmation/user-confirmation.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { MatDialogRef } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { CanDeactivateIssueGuard } from \u0027../can-deactivate-issue-guard.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * The UserConfirmationComponent is responsible for rendering the UserDialog"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " * to verify if certain changes made to relevant inputs are to be discarded."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  selector: \u0027app-user-confirmation\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  templateUrl: \u0027./user-confirmation.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  styleUrls: [\u0027./user-confirmation.component.css\u0027]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "export class UserConfirmationComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Injection of a reference to Dialog from the Service that it is to be"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // displayed in."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructor(public dialogRef: MatDialogRef\u003cCanDeactivateIssueGuard\u003e) { }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Closes the dialog."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  onNoClick(): void {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    this.dialogRef.close(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 31
    }
  },
  {
    "path": "src/app/core/services/data.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { GithubService } from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { DataFile } from \u0027../models/data-file.model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Team } from \u0027../models/team.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { User, UserRole } from \u0027../models/user.model\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "const parse \u003d require(\u0027csv-parse/lib/sync\u0027);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class DataService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  public dataFile: DataFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private githubService: GithubService) {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  getDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return this.githubService.fetchDataFile().pipe("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map((allCsvDataWrapper: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.constructData(allCsvDataWrapper);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map((jsonData: {}) \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        this.dataFile \u003d \u003cDataFile\u003e{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          teamStructure: this.extractTeamStructure(jsonData)};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return jsonData;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Merges all parsed Csv Data into a single readable JSON"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param allCsvDataWrapper - Object containing strings of csv data."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return jsonData - Object representing merged data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  constructData(allCsvDataWrapper: {}): {} {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const jsonData: {} \u003d {};"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const allCsvData: string \u003d allCsvDataWrapper[\u0027data\u0027];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027roles\u0027] \u003d this.parseRolesData(allCsvData);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027team-structure\u0027] \u003d this.parseTeamStructureData(allCsvData);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027students-allocation\u0027] \u003d this.parseStudentAllocation(allCsvData);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027tutors-allocation\u0027] \u003d this.parseTutorAllocation(allCsvData);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    jsonData[\u0027admins-allocation\u0027] \u003d this.parseAdminAllocation(allCsvData);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return jsonData;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing admin allocation information"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseAdminAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        admins[entry[NAME]] \u003d {};"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return admins;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing tutor allocation information"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseTutorAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const tutor \u003d entry[NAME] in tutors ? tutors[entry[NAME]] : {};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      tutor[entry[TEAM]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      tutors[entry[NAME]] \u003d tutor;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return tutors;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing student allocation information"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseStudentAllocation(csvInput: string): {} {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Team Notation"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM_ID \u003d \u0027teamId\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const newStudent \u003d {};"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      newStudent[TEAM_ID] \u003d entry[TEAM];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      students[entry[NAME]] \u003d newStudent;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing team structure information"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseTeamStructureData(csvInput: string): {} {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const TEAM \u003d \u0027team\u0027;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const teams \u003d {};"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (!(entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      const team \u003d entry[TEAM] in teams ? teams[entry[TEAM]] : {};"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      team[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      teams[entry[TEAM]] \u003d team;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return teams;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Parses the input string containing roles information"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * into application readable Object."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvInput - string containing csv data."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return admins - object that represents parsed csv data."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  parseRolesData(csvInput: string): {} {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // CSV Headers"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const ROLE \u003d \u0027role\u0027;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const NAME \u003d \u0027name\u0027;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const roles \u003d {};"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const students \u003d {};"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const tutors \u003d {};"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    const admins \u003d {};"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let parsedCSV: [{}];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV \u003d this.csvParser(csvInput);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Formats the parsed information for easier app reading"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    parsedCSV.forEach(entry \u003d\u003e {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (entry[ROLE] \u003d\u003d\u003d UserRole.Student.toLowerCase()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        students[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Tutor.toLowerCase()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        tutors[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      } else if (entry[ROLE] \u003d\u003d\u003d UserRole.Admin.toLowerCase()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        admins[entry[NAME]] \u003d \u0027true\u0027;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027students\u0027] \u003d students;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027tutors\u0027] \u003d tutors;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    roles[\u0027admins\u0027] \u003d admins;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return roles;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Converts the input csv information to an array of"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * objects syncrhonously. Each object\u0027s values are"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * marked by the respective csv table headers."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param csvText - csv information."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return - Subjects that tracks the parsed data."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  csvParser(csvText: string): [{}] {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return parse(csvText, {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      columns: true"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    });"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeam(teamId: string): Team {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.dataFile.teamStructure.get(teamId);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  getTeams(): string[] {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    return Array.from(this.dataFile.teamStructure.keys());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  // returns a mapping from teamId to their respective team structure."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  private extractTeamStructure(jsonData: {}): Map\u003cstring, Team\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamStructure \u003d new Map\u003cstring, Team\u003e();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    const jsonTeamStructure \u003d jsonData[\u0027team-structure\u0027];"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    const teamIds \u003d Object.keys(jsonTeamStructure);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const teamId of teamIds) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMembers \u003d new Array\u003cUser\u003e();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      const teamMemberIds \u003d Object.keys(jsonTeamStructure[teamId]);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const teamMemberId of teamMemberIds) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        teamMembers.push(\u003cUser\u003e{loginId: teamMemberId, role: UserRole.Student});"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      teamStructure.set(teamId, \u003cTeam\u003e{id: teamId, teamMembers: teamMembers});"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    return teamStructure;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    this.dataFile \u003d undefined;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 193,
      "-": 47
    }
  },
  {
    "path": "src/app/core/services/github.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { map, mergeMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, from, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { githubPaginatorParser } from \u0027../../shared/lib/github-paginator-parser\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueComment } from \u0027../models/comment.model\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "const Octokit \u003d require(\u0027@octokit/rest\u0027);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "let ORG_NAME \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "let MOD_ORG \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "let REPO \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "const DATA_REPO \u003d \u0027public_data\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "let octokit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class GithubService {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  storeCredentials(user: String, passw: String) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    octokit \u003d new Octokit({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      auth: {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        username: user,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        password: passw,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "  updatePhaseDetails(repoName: string, orgName: string, modOrg: string) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    ORG_NAME \u003d orgName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    REPO \u003d repoName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    MOD_ORG \u003d modOrg;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * Will return an Observable with array of issues in JSON format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssues(filter?: {}): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.getNumberOfIssuePages(filter).pipe("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      mergeMap((numOfPages) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        const apiCalls \u003d [];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          apiCalls.push(from(octokit.issues.listForRepo({...filter, owner: ORG_NAME, repo: REPO,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            sort: \u0027created\u0027, direction: \u0027desc\u0027, per_page: 100, page: i})));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return forkJoin(apiCalls);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      map((resultArray) \u003d\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        let collatedData \u003d [];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const response of resultArray) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          collatedData \u003d ["
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            ...collatedData,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            ...response[\u0027data\u0027],"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        return collatedData;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssue(id: number): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.get({owner: ORG_NAME, repo: REPO, number: id})).pipe("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchIssueComments(issueId: number): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.getNumberOfCommentPages(issueId).pipe("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      mergeMap((numOfPages) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        const apiCalls \u003d [];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let i \u003d 1; i \u003c\u003d numOfPages; i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          apiCalls.push(from(octokit.issues.listComments({owner: ORG_NAME, repo: REPO, number: issueId, per_page: 1, page: i})));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        return forkJoin(apiCalls);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      }),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      map((resultArray) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        let collatedData \u003d [];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const response of resultArray) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          collatedData \u003d ["
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            ...collatedData,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            ...response[\u0027data\u0027],"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          ];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        return collatedData;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchAllLabels(): Observable\u003cArray\u003c{}\u003e\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listLabelsForRepo({owner: ORG_NAME, repo: REPO})).pipe("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  closeIssue(id: number): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.update({owner: ORG_NAME, repo: REPO, number: id, state: \u0027closed\u0027})).pipe("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssue(title: string, description: string, labels: string[]): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.create({owner: ORG_NAME, repo: REPO, title: title, body: description, labels: labels})).pipe("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  createIssueComment(comment: IssueComment): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.createComment({owner: ORG_NAME, repo: REPO, number: comment.id,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      body: comment.description})).pipe("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssue(id: number, title: string, description: string, labels: string[], assignees?: string[]): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.update({owner: ORG_NAME, repo: REPO, number: id, title: title, body: description, labels: labels,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      assignees: assignees})).pipe("
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIssueComment(issueComment: IssueComment): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.updateComment({owner: ORG_NAME, repo: REPO, comment_id: issueComment.id,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      body: issueComment.description})).pipe("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadFile(filename: string, base64String: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.repos.createFile({owner: ORG_NAME, repo: REPO, path: `files/${filename}`,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      message: \u0027upload file\u0027, content: base64String}));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  getRepo(orgName: string, repoName: string) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.repos.get({owner: orgName, repo: repoName})).pipe("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchEventsForRepo() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listEventsForRepo({owner: ORG_NAME, repo: REPO})).pipe("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      map(response \u003d\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        return response[\u0027data\u0027];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  fetchDataFile(): Observable\u003c{}\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // roles information"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return forkJoin("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      from(octokit.repos.getContents({owner: MOD_ORG, repo: DATA_REPO, path: \u0027data.csv\u0027}))"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        .pipe(map(rawData \u003d\u003e atob(rawData[\u0027data\u0027][\u0027content\u0027])))"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      map(([data]) \u003d\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return {data};"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      })"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  private getNumberOfIssuePages(filter?: {}): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listForRepo({...filter, owner: ORG_NAME, repo: REPO, sort: \u0027created\u0027,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      direction: \u0027desc\u0027, per_page: 100, page: 1})).pipe("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!response[\u0027headers\u0027].link) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          return 1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        const paginatedData \u003d githubPaginatorParser(response[\u0027headers\u0027].link);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        return +paginatedData[\u0027last\u0027] || 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  private getNumberOfCommentPages(issueId: number): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    return from(octokit.issues.listComments({owner: ORG_NAME, repo: REPO, number: issueId, per_page: 1, page: 1})).pipe("
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      map((response) \u003d\u003e {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!response[\u0027headers\u0027].link) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "          return 1;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        const paginatedData \u003d githubPaginatorParser(response[\u0027headers\u0027].link);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        return +paginatedData[\u0027last\u0027] || 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  getRepoURL(): string {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    return ORG_NAME.concat(\u0027/\u0027).concat(REPO);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 8,
      "KevinCJH": 4,
      "-": 193
    }
  },
  {
    "path": "src/app/core/services/phase.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {Injectable} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClient} from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {catchError, map} from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import {forkJoin, Observable, of, throwError} from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {GithubService} from \u0027./github.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {ErrorHandlingService} from \u0027./error-handling.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "export enum Phase { phase1 \u003d \u0027phase1\u0027, phase2 \u003d \u0027phase2\u0027, phase3 \u003d \u0027phase3\u0027 }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class PhaseService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  public currentPhase: Phase;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  private repoName: string;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  private orgName: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  public readonly phaseDescription \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase1\u0027: \u0027Bug Reporting Phase\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase2\u0027: \u0027Team\\\u0027s Response Phase\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0027phase3\u0027: \u0027Moderation Phase\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  private phaseNum: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private http: HttpClient,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              private github: GithubService,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService) {}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  parseEncodedPhase(encodedText: String): string[] {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const phase \u003d encodedText.split(\u0027@\u0027, 4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const moduleOrg \u003d phase[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const phaseOneUrl \u003d phase[1].split(\u0027\u003d\u0027, 2)[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const phaseTwoUrl \u003d phase[2].split(\u0027\u003d\u0027, 2)[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const phaseThreeUrl \u003d phase[3].split(\u0027\u003d\u0027, 2)[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    let separator \u003d phaseOneUrl.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    const repoName \u003d phaseOneUrl.substring(separator + 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    let separatorOrg \u003d phaseOneUrl.indexOf(\u0027.com\u0027);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    const orgName \u003d phaseOneUrl.substring(separatorOrg + 5, separator);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    separator \u003d phaseTwoUrl.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    const repoNameSecond \u003d phaseTwoUrl.substring(separator + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    separatorOrg \u003d phaseTwoUrl.indexOf(\u0027.com\u0027);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    const orgNameSecond \u003d phaseTwoUrl.substring(separatorOrg + 5, separator);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    separator \u003d phaseThreeUrl.lastIndexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    const repoNameThird \u003d phaseThreeUrl.substring(separator + 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    separatorOrg \u003d phaseThreeUrl.indexOf(\u0027.com\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    const orgNameThird \u003d phaseThreeUrl.substring(separatorOrg + 5, separator);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    return new Array(repoName, orgName, repoNameSecond, orgNameSecond, repoNameThird, orgNameThird, moduleOrg);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  checkIfReposAccessible(array: any): any {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    const value \u003d forkJoin("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.github.getRepo(array[1], array[0]).pipe(map(res \u003d\u003e res), catchError(e \u003d\u003e of(\u0027Oops\u0027))),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      this.github.getRepo(array[3], array[2]).pipe(map(res \u003d\u003e res), catchError(e \u003d\u003e of(\u0027Oops\u0027))),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      this.github.getRepo(array[5], array[4]).pipe(map(res \u003d\u003e res), catchError(e \u003d\u003e of(\u0027Oops\u0027))),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      map(([first, second, third]) \u003d\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "        return {first, second, third, array};"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      })"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    return value;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  determinePhaseNumber(response: any) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    let org \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    let repo \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    let copyUrl \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "    const moduleOrg \u003d response[\u0027array\u0027][6];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    if (response[\u0027first\u0027][\u0027id\u0027] !\u003d null) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentPhase \u003d Phase.phase1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      this.phaseNum \u003d \u0027first\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (response[\u0027second\u0027][\u0027id\u0027] !\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentPhase \u003d Phase.phase2;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      this.phaseNum \u003d \u0027second\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (response[\u0027third\u0027][\u0027id\u0027] !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currentPhase \u003d Phase.phase3;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      this.phaseNum \u003d \u0027third\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.currentPhase \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      return (\u0027not accessible\u0027);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      copyUrl \u003d this.currentPhase;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      org \u003d response[this.phaseNum][\u0027full_name\u0027].split(\u0027/\u0027, 2)[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      repo \u003d response[this.phaseNum][\u0027full_name\u0027].split(\u0027/\u0027, 2)[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KevinCJH"
        },
        "content": "      this.github.updatePhaseDetails(repo, org, moduleOrg);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      this.setPhaseDetail(repo, org);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      return (copyUrl);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  private setPhaseDetail(repo: string, org: string) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    this.repoName \u003d repo;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    this.orgName \u003d org;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  public getPhaseDetail() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.orgName.concat(\u0027/\u0027).concat(this.repoName);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  reset() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    this.currentPhase \u003d null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KevinCJH": 9,
      "-": 101
    }
  },
  {
    "path": "src/app/phase1/phase1.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e {{userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u0027Issues you posted\u0027 : \u0027All Issues\u0027 }}\u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-right\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCreateNewIssue()\" mat-stroked-button color\u003d\"primary\" routerLink\u003d\"issues/new\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          New Issue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.type\" "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.type}}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.type\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.severity\" "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity}}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.severity\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"actions\" \u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e {{permissions.canDeleteIssue() ? \u0027Actions\u0027 : \u0027\u0027}} \u003c/th\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton mat-button color\u003d\"warn\" *ngIf\u003d\"permissions.canDeleteIssue() \u0026\u0026 !issuesPendingDeletion[issue.id]\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                (click)\u003d\"deleteIssue(issue.id)\"\u003e Delete \u003c/button\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-spinner color\u003d\"warn\" [diameter]\u003d\"25\" style\u003d\"display: inline; padding-right: 30px; margin-left: 5px\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                     *ngIf\u003d\"issuesPendingDeletion[issue.id]\" \u003e\u003c/mat-spinner\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 3,
      "-": 77
    }
  },
  {
    "path": "src/app/phase2/issues-faulty/issues-faulty.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Faulty Issues \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"issue.duplicated \u0026\u0026 !issue.duplicateOf\" style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip style\u003d\"font-size: 12px; cursor: pointer\" [color]\u003d\"\u0027accent\u0027\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    matTooltip\u003d\"Issue marked as duplicated but duplicated issue not specified.\" matTooltipPosition\u003d\"above\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicate value not specified"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.teamAssigned \u0026\u0026  issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.type\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.type}}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.type\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.severity\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity}}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.severity\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/th\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.responseTag\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.responseTag}}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"assignees\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth [style.width]\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u002715%\u0027 : \u002710%\u0027\" mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/th\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.assignees.join(\u0027, \u0027)}}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          -"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\"  [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027\" matColumnDef\u003d\"actions\"\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Action \u003c/th\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse()\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                [routerLink]\u003d\"\u0027/phase2/issues/\u0027 + issue.id\" mat-button color\u003d\"accent\"\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "          Fix"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "-": 118
    }
  },
  {
    "path": "src/app/phase2/issues-pending/issues-pending.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0\"\u003e Issues Pending Response \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{ issue.teamAssigned \u0026\u0026 issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell [style.width]\u003d\"permissions.canCRUDTeamResponse() ? \u002715%\u0027 : \u002720%\u0027\" *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              {{issue.type || \u0027-\u0027}} "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/td\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell [style.width]\u003d\"permissions.canCRUDTeamResponse() ? \u002710%\u0027 : \u002715%\u0027\" *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity || \u0027-\u0027}} "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          -"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\" style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"actions\" *ngIf\u003d\"permissions.canCRUDTeamResponse()\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Actions \u003c/th\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 !issueService.hasResponse(issue.id)\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          [routerLink]\u003d\"\u0027/phase2/issues/\u0027 + issue.id\" mat-button color\u003d\"accent\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          Respond"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton *ngIf\u003d\"permissions.canCRUDTeamResponse() \u0026\u0026 issueService.hasResponse(issue.id)\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                mat-button color\u003d\"primary\" (click)\u003d\"markAsResponded(issue)\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          Mark as responded"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "-": 85
    }
  },
  {
    "path": "src/app/phase2/issues-responded/issues-responded.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Issues Responded \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e ID \u003c/th\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"issue.duplicated \u0026\u0026 !issue.duplicateOf \u0026\u0026 (issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                       style\u003d\"display: inline-block; margin-left: 5px;\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip style\u003d\"font-size: 12px; cursor: pointer\" [color]\u003d\"\u0027accent\u0027\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    matTooltip\u003d\"Issue marked as duplicated but duplicated issue not specified.\" matTooltipPosition\u003d\"above\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Duplicate value not specified"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role !\u003d\u003d \u0027Student\u0027\" matColumnDef\u003d\"teamAssigned\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Team \u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.teamAssigned \u0026\u0026 issue.teamAssigned.id || \u0027-\u0027}} \u003c/td\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.type\" "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.type}}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.type\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.severity\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.severity}}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.severity\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"responseTag\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Response \u003c/th\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.responseTag\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.responseTag))\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.responseTag}}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"!issue.responseTag\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"assignees\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth [style.width]\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 ? \u002715%\u0027 : \u002710%\u0027\" mat-header-cell *matHeaderCellDef mat-sort-header\u003e Assignees \u003c/th\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length !\u003d\u003d 0\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          {{issue.assignees.join(\u0027, \u0027)}}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"issue.assignees.length \u003d\u003d\u003d 0\" style\u003d\"margin-left: 10%\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-icon matTooltip\u003d\"Should not be empty\" matTooltipPosition\u003d\"above\" color\u003d\"warn\"\u003ewarning\u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container matColumnDef\u003d\"duplicatedIssues\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Duplicates \u003c/th\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          -"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmat-chip-list *ngIf\u003d\"(issueService.getDuplicateIssuesFor(issue) | async).length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cmat-chip *ngFor\u003d\"let duplicateIssue of (issueService.getDuplicateIssuesFor(issue) | async)\"  [routerLink]\u003d\"[\u0027issues/\u0027 + duplicateIssue.id]\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    [matTooltip]\u003d\"duplicateIssue.title\" matTooltipPosition\u003d\"above\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    style\u003d\"font-size: 12px; cursor: pointer\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            #{{duplicateIssue.id}}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/mat-chip\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/mat-chip-list\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-container *ngIf\u003d\"userService.currentUser.role \u003d\u003d\u003d \u0027Student\u0027 || userService.currentUser.role \u003d\u003d\u003d \u0027Admin\u0027\" matColumnDef\u003d\"actions\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth mat-header-cell *matHeaderCellDef\u003e Action \u003c/th\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003ctd mat-cell *matCellDef\u003d\"let issue\" (click)\u003d\"$event.stopPropagation()\"\u003e \u003cbutton color\u003d\"primary\" mat-button (click)\u003d\"markAsPending(issue)\"\u003eMark as pending\u003c/button\u003e \u003c/td\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-card\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 4,
      "-": 114
    }
  },
  {
    "path": "src/app/phase3/phase3.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv style\u003d\"text-align: center; margin-bottom: 20px\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"mat-display-1\"\u003e {{ teamList ? teamFilter : userService.currentUser.team.id}} \u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton *ngIf\u003d\"teamList\" [matMenuTriggerFor]\u003d\"teamMenu\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e settings \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-menu #teamMenu\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton mat-menu-item [disabled]\u003d\"team \u003d\u003d\u003d teamFilter\" *ngFor\u003d\"let team of teamList\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"updateDisplayedTeam(team)\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan\u003e {{team}} \u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-menu\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-grid-list cols\u003d\"3\" rowHeight\u003d\"80px\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"grid-flush-left\"\u003e \u003ch1 class\u003d\"mat-headline\" style\u003d\"margin: 0px\"\u003e Issues Submitted by Students \u003c/h1\u003e \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-grid-tile\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cmat-form-field class\u003d\"full-grid-width\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput matInput (keyup)\u003d\"applyFilter($event.target.value)\" placeholder\u003d\"Search\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/mat-form-field\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-grid-tile\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-grid-list\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctable mat-table [dataSource]\u003d\"issuesDataSource\" matSort class\u003d\"mat-elevation-z8\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"id\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e  Github ID \u003c/th\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e {{issue.id}} \u003c/td\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"title\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell mat-sort-header *matHeaderCellDef\u003e Title \u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ca class\u003d\"no-underline link-grey-dark\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e {{issue.title}} \u003c/a\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"type\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Type \u003c/th\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.type))\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        {{issue.type || \u0027-\u0027}}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/span\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"severity\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Severity \u003c/th\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan [ngStyle]\u003d\"this.labelService.setLabelStyle(this.labelService.getColorOfLabel(issue.severity))\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {{issue.severity || \u0027-\u0027}} "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/span\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container matColumnDef\u003d\"Todo Remaining\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cth mat-header-cell *matHeaderCellDef mat-sort-header\u003e Todo Remaining \u003c/th\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctd mat-cell *matCellDef\u003d\"let issue\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"isTodoListChecked(issue) \u0026\u0026 issue.todoList.length \u003e 0\"\u003e \u003cfont color\u003d\"green\"\u003eAll tasks are completed\u003c/font\u003e \u003c/span\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"!isTodoListChecked(issue)\"\u003e \u003cfont color\u003d\"red\"\u003e{{ issue.todoList.length - todoFinished(issue) }}/{{ issue.todoList.length }} tasks pending.\u003c/font\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cprogress *ngIf\u003d\"issue.todoList.length \u003e 0\" value\u003d{{todoFinished(issue)}} max\u003d{{issue.todoList.length}} role\u003d\"progressbar\" style\u003d\"width: 100%\" aria-valuenow\u003d\"100\" aria-valuemin\u003d\"0\" aria-valuemax\u003d\"100\"\u003e\u003c/progress\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"issue.todoList.length \u003d\u003d\u003d 0\"\u003e No Todo List for this issue \u003c/span\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctr mat-header-row *matHeaderRowDef\u003d\"displayedColumns\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003ctr mat-row *matRowDef\u003d\"let issue; columns: displayedColumns;\" [routerLink]\u003d\"\u0027issues/\u0027 + issue.id\"\u003e\u003c/tr\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/table\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-card *ngIf\u003d\"issuesDataSource.isLoading$ | async\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          style\u003d\"display: flex; justify-content: center; align-items: center\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-progress-spinner color\u003d\"primary\" mode\u003d\"indeterminate\" diameter\u003d\"50\" strokeWidth\u003d\"5\"\u003e\u003c/mat-progress-spinner\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/mat-card\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmat-paginator [pageSize]\u003d\"20\" [pageSizeOptions]\u003d\"[10, 20, 50]\"\u003e\u003c/mat-paginator\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 77
    }
  },
  {
    "path": "src/app/shared/issue/duplicateOf/duplicate-of.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-checkbox [disabled]\u003d\"!permissions.canCRUDTeamResponse() \u0026\u0026 !permissions.canCRUDTutorResponse()\" labelPosition\u003d\"before\" [checked]\u003d\"issue.duplicated\" (change)\u003d\"handleCheckboxChange($event)\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"mat-title\"\u003e Duplicate Status \u003c/span\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-checkbox\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton *ngIf\u003d\"permissions.canEditIssueLabels()\" [style.visibility]\u003d\"issue.duplicated ? \u0027inherit\u0027 : \u0027hidden\u0027\" style\u003d\"float: right\" (click)\u003d\"openSelection()\" mat-icon-button\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-icon style\u003d\"font-size: 20px; margin-bottom: 7px; color: #586069\"\u003e edit \u003c/mat-icon\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmat-select [style.display]\u003d\"isEditing ? \u0027block\u0027 : \u0027none\u0027\" class\u003d\"no-arrow\" placeholder\u003d\"-\" [value]\u003d\"issue.duplicateOf\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "              (selectionChange)\u003d\"updateDuplicateStatus($event)\" (openedChange)\u003d\"handleSelectionOpenChange($event)\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmat-select-trigger\u003e\u003c/mat-select-trigger\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    \u003cmat-option [matTooltip]\u003d\"issue.title\" [matTooltipDisabled]\u003d\"!isTooltipNecessary(issue)\" [matTooltipPosition]\u003d\"\u0027left\u0027\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                *ngFor\u003d\"let issue of duplicatedIssueList | async\" [disabled]\u003d\"dupIssueOptionIsDisabled(issue)\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "                [value]\u003d\"issue.id\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cdiv class\u003d\"duplicate-dropdown-issuedetails\" [ngStyle]\u003d\"{\u0027width\u0027: dupIssueOptionIsDisabled(issue) ? \u0027150px\u0027 : \u0027auto\u0027}\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan class\u003d\"mat-body-strong\"\u003e #{{issue.id}}: \u003c/span\u003e  \u003cspan class\u003d\"mat-body\"\u003e{{issue.title}}\u003c/span\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      \u003cspan *ngIf\u003d\"dupIssueOptionIsDisabled(issue)\" class\u003d\"mat-caption\" style\u003d\"display: inline-block; color: #f44336\"\u003e ({{getDisabledDupOptionErrorText(issue)}}) \u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/mat-option\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/mat-select\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ issue.duplicateOf ? (\u0027#\u0027 + issue.duplicateOf + \u0027: \u0027 + (issueService.getIssue(issue.duplicateOf) | async).title) : \u0027Not specified\u0027}}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"!issue.duplicated\" style\u003d\"margin-top: 5px\"\u003e - \u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 6,
      "-": 22
    }
  },
  {
    "path": "src/app/shared/issue/duplicateOf/duplicate-of.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Component,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  EventEmitter,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Input,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  OnInit,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  Output,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ViewChild,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ViewEncapsulation"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  ErrorHandlingService"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "} from \u0027../../../core/services/error-handling.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { Issue, SEVERITY_ORDER } from \u0027../../../core/models/issue.model\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { IssueService } from \u0027../../../core/services/issue.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatCheckbox, MatSelect } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { PermissionService } from \u0027../../../core/services/permission.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027app-duplicate-of-component\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./duplicate-of.component.html\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./duplicate-of.component.css\u0027],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  encapsulation: ViewEncapsulation.None,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "export class DuplicateOfComponent implements OnInit {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  isEditing \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicatedIssueList: Observable\u003cIssue[]\u003e;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() issue: Issue;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output() issueUpdated \u003d new EventEmitter\u003cIssue\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatSelect) duplicateOfSelection: MatSelect;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(MatCheckbox) duplicatedCheckbox: MatCheckbox;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Max chars visible for a duplicate entry in duplicates dropdown list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE \u003d 17;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  // Max chars visible for a non-duplicate entry in duplicates dropdown list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  readonly MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE \u003d 37;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(public issueService: IssueService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private errorHandlingService: ErrorHandlingService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              public permissions: PermissionService) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * Checks if the supplied issue requires a tooltip"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * in the UI as some information may be hidden due to truncation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @param issue - Displayed issue that may need a tooltip."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   * @return - true (to enable tooltip) / false (to disable tooltip)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  isTooltipNecessary(issue: Issue): boolean {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // Maximum Possible Title length varies based on whether the issue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    // is a duplicate. (Whether the Duplicate Issue Tag is visible)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    let maxTitleLength: number;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    maxTitleLength \u003d issue.duplicated"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      ? this.MAX_TITLE_LENGTH_FOR_DUPLICATE_ISSUE"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      : this.MAX_TITLE_LENGTH_FOR_NON_DUPLICATE_ISSUE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return issue.title.length \u003e maxTitleLength;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicatedIssueList \u003d this.getDupIssueList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  updateDuplicateStatus(event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.issueService.updateIssue({"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.issue,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicated: !!event,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      duplicateOf: event ? event.value : null,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((updatedIssue) \u003d\u003e {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      this.issueUpdated.emit(updatedIssue);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (error) \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      this.errorHandlingService.handleHttpError(error);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  dupIssueOptionIsDisabled(issue: Issue): boolean {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "    return SEVERITY_ORDER[this.issue.severity] \u003e SEVERITY_ORDER[issue.severity]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      || (issue.duplicated || !!issue.duplicateOf);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  getDisabledDupOptionErrorText(issue: Issue): string {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    const reason \u003d new Array\u003cstring\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.dupIssueOptionIsDisabled(issue)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "      if (SEVERITY_ORDER[this.issue.severity]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        \u003e SEVERITY_ORDER[issue.severity]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027Issue of lower priority\u0027);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (issue.duplicated || !!issue.duplicateOf) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        reason.push(\u0027A duplicated issue\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    return reason.join(\u0027, \u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  handleCheckboxChange(event) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.checked) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      this.openSelection();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditing \u003d false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOfSelection.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicateOfSelection.value \u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateDuplicateStatus(null);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  openSelection() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isEditing \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicateOfSelection.open();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  handleSelectionOpenChange(isOpen) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!isOpen) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditing \u003d false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      this.duplicatedCheckbox.checked \u003d this.duplicateOfSelection.value;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDupIssueList(): Observable\u003cIssue[]\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.issueService.issues$.pipe(map((issues) \u003d\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      return issues.filter((issue) \u003d\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "        return this.issue.id !\u003d\u003d issue.id"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "          \u0026\u0026 this.issue.teamAssigned.id \u003d\u003d\u003d issue.teamAssigned.id;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 42,
      "-": 91
    }
  },
  {
    "path": "src/index.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!doctype html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chead\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmeta charset\u003d\"utf-8\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctitle\u003eCATcher\u003c/title\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003c!--\u003cbase href\u003d\"./\"\u003e //TODO: Uncomment Prior to Release--\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ptvrajsk"
        },
        "content": "  \u003cbase href\u003d\"/\"\u003e \u003c!--//TODO: Comment Out Prior to Release--\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink rel\u003d\"icon\" type\u003d\"image/x-icon\" href\u003d\"favicon.ico\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink href\u003d\"https://fonts.googleapis.com/css?family\u003dRoboto:300,400,500\" rel\u003d\"stylesheet\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003clink href\u003d\"https://fonts.googleapis.com/icon?family\u003dMaterial+Icons\" rel\u003d\"stylesheet\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/head\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbody\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003capp-root\u003eLoading...\u003c/app-root\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/body\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "ptvrajsk": 2,
      "-": 15
    }
  }
]
