[
  {
    "path": "src/main/java/teammates/common/util/Const.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.common.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.LinkedHashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * Stores constants that are widely used across classes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " * this class contains several nested classes, each containing a specific"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * category of constants."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public final class Const {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     * This section holds constants that are defined as constants primarily"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "     * because they are repeated in many places."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String HTML_BR_TAG \u003d \"\u003cbr\u003e\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_NOBODY_TEXT \u003d \"-\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_UNKNOWN_TEXT \u003d \"Unknown user\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String TEAM_OF_EMAIL_OWNER \u003d \"\u0027s Team\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NONE_OF_THE_ABOVE \u003d \"None of the above\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DELETION_DATE_NOT_APPLICABLE \u003d \"Not Applicable\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_SESSION_VISIBLE_TIME_CUSTOM \u003d \"custom\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_SESSION_VISIBLE_TIME_ATOPEN \u003d \"atopen\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_CUSTOM \u003d \"custom\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_ATVISIBLE \u003d \"atvisible\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_VISIBLE_TIME_LATER \u003d \"later\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String INSTRUCTOR_FEEDBACK_RESULTS_MISSING_RESPONSE \u003d \"No Response\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_COURSE_STATUS_YET_TO_JOIN \u003d \"Yet to join\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String STUDENT_COURSE_STATUS_JOINED \u003d \"Joined\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_NAME_FOR_SELF \u003d \"Myself\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String NO_SPECIFIC_SECTION \u003d \"No specific section\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ACTION_RESULT_FAILURE \u003d \"Servlet Action Failure\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int SIZE_LIMIT_PER_ENROLLMENT \u003d 100;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INSTRUCTOR_VIEW_RESPONSE_LIMIT \u003d 8000;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_SECTION \u003d \"None\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final ZoneId DEFAULT_TIME_ZONE \u003d ZoneId.of(\"UTC\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * These constants are used as variable values to mean that the variable"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * is in a \u0027special\u0027 state."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int INT_UNINITIALIZED \u003d -9999;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_EQUAL_SHARE \u003d 100;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_NOT_SURE \u003d -101;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int POINTS_NOT_SUBMITTED \u003d -999;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int VISIBILITY_TABLE_GIVER \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final int VISIBILITY_TABLE_RECIPIENT \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_TEAM \u003d \"%TEAM%\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_NOBODY \u003d \"%NOBODY%\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String USER_IS_MISSING \u003d \"%MISSING%\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_LATER;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_NOW;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31 12:00 AM +0000\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22 12:00 AM +0000\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01 12:00 AM +0000\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14 12:00 AM +0000\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01 12:00 AM +0000\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * Other Constants"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    private Const() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        // Utility class containing constants"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SystemParams {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENCODING \u003d \"UTF8\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT \u003d 24;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        /** This is the limit after which TEAMMATES will send error message."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "         * Must be within the range of int */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MAX_PROFILE_PIC_SIZE \u003d 5000000;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        /** e.g. \"2014-04-01 11:59 PM UTC\" */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEFAULT_DATE_TIME_FORMAT \u003d \"yyyy-MM-dd h:mm a Z\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Number to trim the Google ID when displaying to the user. */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int USER_ID_MAX_DISPLAY_LENGTH \u003d 23;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        /* Field sizes and error messages for invalid fields can be found"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "         * in the FieldValidator class."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final ZoneId ADMIN_TIME_ZONE \u003d ZoneId.of(\"Asia/Singapore\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DEFAULT_PROFILE_PICTURE_PATH \u003d \"/images/profile_picture_default.png\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        @Deprecated"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final List\u003cString\u003e PAGES_REQUIRING_ORIGIN_VALIDATION \u003d Collections.unmodifiableList("
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                Arrays.asList("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_REMIND,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_COURSE_STUDENT_DELETE,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_PUBLISH,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                        ActionURIs.INSTRUCTOR_FEEDBACK_UNPUBLISH));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Text displayed to the user when the mouse hover over certain elements in"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     * the UI."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class Tooltips {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CLAIMED \u003d"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Claimed Contribution: This is the student\u0027s own estimation of his/her contributions\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PERCEIVED \u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Perceived Contribution: This is the average of what other team members think this student contributed\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DETAILS \u003d \"View the details of the student\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_EDIT \u003d"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Use this to edit the details of this student. \u003cbr\u003eTo edit multiple students\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" in one go, you can use the enroll page: \u003cbr\u003e\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Simply enroll students using the updated data and existing data will be updated accordingly\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_REMIND \u003d"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Email an invitation to the student requesting him/her to join the course using his/her \""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Google Account. Note: Students can use TEAMMATES without ‘joining’, \""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"but a joined student can access extra features e.g. set up a user profile\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DELETE \u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Delete the student and the corresponding submissions from the course\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_DIFF \u003d \"Perceived Contribution - Claimed Contribution\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_POINTS_RECEIVED \u003d"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The list of points that this student received from others\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_NOT_AVAILABLE \u003d"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Not Available: There is no data for this or the data is not enough\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_CONTRIBUTION_NOT_SURE \u003d \"Not sure about the contribution\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDIT \u003d \"Edit feedback session details\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISH \u003d \"Make session responses available for viewing\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISH \u003d \"Make responses no longer visible\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_AWAITING \u003d \"This session is not yet opened\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATE_FEEDBACK \u003d \"Edit the responses given by this student\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS_OPTION \u003d"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Respondents will have to distribute the total points specified here among the options, \""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 options, \""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"respondents will have to distribute 100 points among 3 options.\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS_RECIPIENT \u003d"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Respondents will have to distribute the total points specified here among the recipients, \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 recipients, \""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"respondents will have to distribute 100 points among 3 recipients.\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION \u003d"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The number of points to distribute will vary based on the number of options, \""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 options, \""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the total number of points to distribute among 3 options will be 300 (i.e. 100 x 3).\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT \u003d"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The number of points to distribute will vary based on the number of recipients, \""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"e.g. if you specify 100 points here and there are 3 recipients, \""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"the total number of points to distribute among 3 recipients will be 300 (i.e. 100 x 3).\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MAX \u003d \"Maximum acceptable response value\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_STEP \u003d \"Value to be increased/decreased each step\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MIN \u003d \"Minimum acceptable response value\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the choices for calculating statistics.\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the columns for calculating statistics.\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_ASSIGN_WEIGHTS \u003d"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Assign weights to the choices for calculating statistics.\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_ADD \u003d \"Add comment\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_EDIT \u003d \"Edit this comment\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_DELETE \u003d \"Delete this comment\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COMMENT_DISCARD_CHANGES \u003d \"Discard changes to comment\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACTION_NOT_ALLOWED \u003d \"You do not have the permissions to access this feature\";"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackQuestion {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final Map\u003cString, String\u003e COMMON_VISIBILITY_OPTIONS;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e visibilityOptionInit \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_AND_INSTRUCTORS\","
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient and instructors\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_VISIBLE_TO_INSTRUCTORS\","
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient, visible to instructors\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\","
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                                     \"Shown anonymously to recipient and team members, visible to instructors\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"VISIBLE_TO_INSTRUCTORS_ONLY\", \"Visible to instructors only\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            visibilityOptionInit.put(\"VISIBLE_TO_RECIPIENT_AND_INSTRUCTORS\", \"Visible to recipient and instructors\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            COMMON_VISIBILITY_OPTIONS \u003d Collections.unmodifiableMap(visibilityOptionInit);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final Map\u003cFeedbackParticipantType, List\u003cFeedbackParticipantType\u003e\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                COMMON_FEEDBACK_PATHS;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        static {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackParticipantType, List\u003cFeedbackParticipantType\u003e\u003e initializer \u003d new LinkedHashMap\u003c\u003e();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS)));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.OWN_TEAM_MEMBERS,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            initializer.put(FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                    new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                            Arrays.asList(FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                                    FeedbackParticipantType.INSTRUCTORS)));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            COMMON_FEEDBACK_PATHS \u003d Collections.unmodifiableMap(initializer);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        // Mcq"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MCQ_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.MCQ + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is not a valid option for the \" + Const.FeedbackQuestionTypeNames.MCQ + \".\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \" + Const.FeedbackQuestionTypeNames.MCQ"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid non-negative numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_EMPTY_MCQ_OPTION \u003d \"The Mcq options cannot be empty\";"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ_ERROR_OTHER_CONTENT_NOT_PROVIDED \u003d \"No text provided for other option\";"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        // Msq"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int MSQ_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_EMPTY_MSQ_OPTION \u003d \"The Msq options cannot be empty\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_OTHER_CONTENT_NOT_PROVIDED \u003d \"No text provided for other option\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NONE_OF_THE_ABOVE_ANSWER \u003d \"No other choices are allowed with \""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"None of the above option\";"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is not a valid option for the \" + Const.FeedbackQuestionTypeNames.MSQ + \".\";"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL \u003d"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Maximum selectable choices exceeds the total number of options for \" + Const.FeedbackQuestionTypeNames.MSQ;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NUM_SELECTED_MORE_THAN_MAXIMUM \u003d"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Number of choices selected is more than the maximum number \";"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_SELECTABLE_MORE_THAN_NUM_CHOICES \u003d"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices exceeds number of options \";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_NUM_SELECTED_LESS_THAN_MINIMUM \u003d"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Number of choices selected is less than the minimum number \";"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_SELECTABLE_EXCEEDED_MAX_SELECTABLE \u003d"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices exceeds maximum selectable choices for \""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestionTypeNames.MSQ;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_FOR_MAX_SELECTABLE_CHOICES \u003d"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Maximum selectable choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \" must be at least 2.\";"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_MIN_FOR_MIN_SELECTABLE_CHOICES \u003d"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum selectable choices for \" + Const.FeedbackQuestionTypeNames.MSQ + \" must be at least 1.\";"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of a \" + Const.FeedbackQuestionTypeNames.MSQ"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ_ANSWER_NONE_OF_THE_ABOVE \u003d \"None of the above\";"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        // Numscale"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_MIN_MAX \u003d"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Minimum value must be \u003c maximum value for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_STEP \u003d"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Step value must be \u003e 0 for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE_ERROR_OUT_OF_RANGE \u003d"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                \" is out of the range for \" + Const.FeedbackQuestionTypeNames.NUMSCALE + \".\";"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        // Contribution"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_OPTION \u003d"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Invalid option for the \" + Const.FeedbackQuestionTypeNames.CONTRIB + \".\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_FEEDBACK_PATH \u003d"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.FeedbackQuestionTypeNames.CONTRIB + \" must have \""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                + FeedbackParticipantType.STUDENTS.toDisplayGiverName()"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" and \" + FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF.toDisplayRecipientName()"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" as the feedback giver and recipient respectively.\""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" These values will be used instead.\";"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB_ERROR_INVALID_VISIBILITY_OPTIONS \u003d"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.FeedbackQuestionTypeNames.CONTRIB + \" must use one of the common visibility options. The \\\"\""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestion.COMMON_VISIBILITY_OPTIONS"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .get(\"ANONYMOUS_TO_RECIPIENT_AND_TEAM_VISIBLE_TO_INSTRUCTORS\")"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\\\" option will be used instead.\";"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        // Constant sum"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int CONST_SUM_MIN_NUM_OF_OPTIONS \u003d 2;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int CONST_SUM_MIN_NUM_OF_POINTS \u003d 1;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NOT_ENOUGH_OPTIONS \u003d"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little options for \" + Const.FeedbackQuestionTypeNames.CONSTSUM_OPTION"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_DUPLICATE_OPTIONS \u003d \"Duplicate options are not allowed.\";"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NOT_ENOUGH_POINTS \u003d"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little points for \" + Const.FeedbackQuestionTypeNames.CONSTSUM_RECIPIENT"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                + \". Minimum number of points is: \";"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_MISMATCH \u003d"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please distribute all the points for distribution questions. \""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To skip a distribution question, leave the boxes blank.\";"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_NEGATIVE \u003d \"Points given must be 0 or more.\";"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_UNIQUE \u003d \"Every option must be given a different number of points.\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONST_SUM_ERROR_SOME_UNIQUE \u003d"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                \"At least some options must be given a different number of points.\";"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        // Rubric"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_MIN_NUM_OF_CHOICES \u003d 2;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_NOT_ENOUGH_CHOICES \u003d"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little choices for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \". Minimum number of options is: \";"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final int RUBRIC_MIN_NUM_OF_SUB_QUESTIONS \u003d 1;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_NOT_ENOUGH_SUB_QUESTIONS \u003d"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Too little sub-questions for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \". \""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Minimum number of sub-questions is: \";"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_DESC_INVALID_SIZE \u003d"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Invalid number of descriptions for \" + Const.FeedbackQuestionTypeNames.RUBRIC;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_EMPTY_SUB_QUESTION \u003d"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Sub-questions for \" + Const.FeedbackQuestionTypeNames.RUBRIC + \" cannot be empty.\";"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC_ERROR_INVALID_WEIGHT \u003d"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The weights for the choices of each Sub-question of a \""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                + Const.FeedbackQuestionTypeNames.RUBRIC"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                + \" must be valid numbers with precision up to 2 decimal places.\";"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        // Text Question"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEXT_ERROR_INVALID_RECOMMENDED_LENGTH \u003d \"Recommended length must be 0 or greater\";"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackQuestionTypeNames {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEXT \u003d \"Essay question\";"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MCQ \u003d \"Multiple-choice (single answer) question\";"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MSQ \u003d \"Multiple-choice (multiple answers) question\";"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NUMSCALE \u003d \"Numerical-scale question\";"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONSTSUM_OPTION \u003d \"Distribute points (among options) question\";"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONSTSUM_RECIPIENT \u003d \"Distribute points (among recipients) question\";"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RANK_OPTION \u003d \"Rank (options) question\";"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RANK_RECIPIENT \u003d \"Rank (recipients) question\";"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CONTRIB \u003d \"Team contribution question\";"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RUBRIC \u003d \"Rubric question\";"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class FeedbackSessionResults {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION_SORT_TYPE \u003d \"question\";"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GRQ_SORT_TYPE \u003d \"giver-recipient-question\";"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RGQ_SORT_TYPE \u003d \"recipient-giver-question\";"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String GQR_SORT_TYPE \u003d \"giver-question-recipient\";"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RQG_SORT_TYPE \u003d \"recipient-question-giver\";"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class InstructorPermissionRoleNames {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ParamsNames {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BLOB_KEY \u003d \"blob-key\";"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_TOKEN \u003d \"token\";"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_FEEDBACK_SESSION_NAME \u003d \"copiedfsname\";"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COPIED_COURSES_ID \u003d \"copiedcoursesid\";"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CSV_TO_HTML_TABLE_NEEDED \u003d \"csvtohtmltable\";"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ID \u003d \"courseid\";"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_NAME \u003d \"coursename\";"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_TIME_ZONE \u003d \"coursetimezone\";"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDIT_MAIN_INDEX \u003d \"courseeditmainindex\";"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STATUS \u003d \"coursestatus\";"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_ENROLLMENT_INFO \u003d \"enrollstudents\";"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_IS_DISPLAYED_TO_STUDENT \u003d \"instructorisdisplayed\";"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_DISPLAY_NAME \u003d \"instructordisplayname\";"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_ROLE_NAME \u003d \"instructorrole\";"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SECTION \u003d \"section\";"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SECTION_GROUP \u003d \"sectiongroup\";"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_COURSE \u003d \"canmodifycourse\";"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_SESSION \u003d \"canmodifysession\";"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_STUDENT \u003d \"canmodifystudent\";"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PERMISSION_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                \"canmodifysessioncommentinsection\";"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_REMIND_STUDENT_IS_FROM \u003d \"pagenameremindstudentisfrom\";"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVE_STATUS \u003d \"archive\";"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_KEY \u003d \"searchkey\";"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOCAL_DATE_TIME \u003d \"localdatetime\";"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIME_ZONE \u003d \"timezone\";"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INDEX \u003d \"fsindex\";"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTDATE \u003d \"startdate\";"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDDATE \u003d \"enddate\";"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLEDATE \u003d \"visibledate\";"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_VISIBLETIME \u003d \"visibletime\";"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHDATE \u003d \"publishdate\";"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHTIME \u003d \"publishtime\";"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_GRACEPERIOD \u003d \"graceperiod\";"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SESSIONVISIBLEBUTTON \u003d \"sessionVisibleFromButton\";"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESULTSVISIBLEBUTTON \u003d \"resultsVisibleFromButton\";"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_SENDREMINDEREMAIL \u003d \"sendreminderemail\";"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_INSTRUCTIONS \u003d \"instructions\";"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        @Deprecated"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ENABLE_EDIT \u003d \"editsessiondetails\";"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBER \u003d \"questionnum\";"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBER_STATIC \u003d \"questionnum-static\";"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXT \u003d \"questiontext\";"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXT_RECOMMENDEDLENGTH \u003d \"recommendedlength\";"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DESCRIPTION \u003d \"questiondescription\";"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TYPE \u003d \"questiontype\";"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFCHOICECREATED \u003d \"noofchoicecreated\";"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQCHOICE \u003d \"mcqOption\";"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQOTHEROPTION \u003d \"mcqOtherOption\";"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQOTHEROPTIONFLAG \u003d \"mcqOtherOptionFlag\";"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_ISOTHEROPTIONANSWER \u003d \"mcqIsOtherOptionAnswer\";"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_HAS_WEIGHTS_ASSIGNED \u003d \"mcqHasAssignedWeights\";"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_WEIGHT \u003d \"mcqWeight\";"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_OTHER_WEIGHT \u003d \"mcqOtherWeight\";"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQCHOICE \u003d \"msqOption\";"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQOTHEROPTION \u003d \"msqOtherOption\";"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQOTHEROPTIONFLAG \u003d \"msqOtherOptionFlag\";"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ISOTHEROPTIONANSWER \u003d \"msqIsOtherOptionAnswer\";"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_MAX_SELECTABLE_CHOICES \u003d \"msqMaxSelectableChoices\";"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_MIN_SELECTABLE_CHOICES \u003d \"msqMinSelectableChoices\";"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ENABLE_MAX_SELECTABLE_CHOICES \u003d \"msqEnableMaxSelectableChoices\";"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_ENABLE_MIN_SELECTABLE_CHOICES \u003d \"msqEnableMinSelectableChoices\";"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_HAS_WEIGHTS_ASSIGNED \u003d \"msqHasAssignedWeights\";"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_WEIGHT \u003d \"msqWeight\";"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_OTHER_WEIGHT \u003d \"msqOtherWeight\";"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMOPTION \u003d \"constSumOption\";"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMTORECIPIENTS \u003d \"constSumToRecipients\";"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMNUMOPTION \u003d \"constSumNumOption\";"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: rename FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION to a more accurate name"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSPEROPTION \u003d \"constSumPointsPerOption\";"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTS \u003d \"constSumPoints\";"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHOPTION \u003d \"constSumPointsForEachOption\";"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMPOINTSFOREACHRECIPIENT \u003d \"constSumPointsForEachRecipient\";"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMDISTRIBUTEUNEVENLY \u003d \"constSumUnevenDistribution\";"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMDISTRIBUTEPOINTSOPTIONS \u003d \"constSumDistributePointsOptions\";"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMALLUNEVENDISTRIBUTION \u003d \"All options\";"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMSOMEUNEVENDISTRIBUTION \u003d \"At least some options\";"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONSTSUMNOUNEVENDISTRIBUTION \u003d \"None\";"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_CONTRIBISNOTSUREALLOWED \u003d \"isNotSureAllowedCheck\";"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MCQ_GENERATED_OPTIONS \u003d \"mcqGeneratedOptions\";"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_MSQ_GENERATED_OPTIONS \u003d \"msqGeneratedOptions\";"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_GIVERTYPE \u003d \"givertype\";"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RECIPIENTTYPE \u003d \"recipienttype\";"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIES \u003d \"numofrecipients\";"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIESTYPE \u003d \"numofrecipientstype\";"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITTYPE \u003d \"questionedittype\";"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWRESPONSESTO \u003d \"showresponsesto\";"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWGIVERTO \u003d \"showgiverto\";"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_SHOWRECIPIENTTO \u003d \"showrecipientto\";"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MIN \u003d \"numscalemin\";"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_MAX \u003d \"numscalemax\";"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMSCALE_STEP \u003d \"numscalestep\";"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_SUBQUESTION \u003d \"rubricSubQn\";"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_CHOICE \u003d \"rubricChoice\";"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_DESCRIPTION \u003d \"rubricDesc\";"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_WEIGHTS_ASSIGNED \u003d \"rubricAssignWeights\";"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_WEIGHT \u003d \"rubricWeight\";"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_NUM_ROWS \u003d \"rubricNumRows\";"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_NUM_COLS \u003d \"rubricNumCols\";"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_MOVE_COL_LEFT \u003d \"rubric-move-col-left\";"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RUBRIC_MOVE_COL_RIGHT \u003d \"rubric-move-col-right\";"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKOPTION \u003d \"rankOption\";"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKTORECIPIENTS \u003d \"rankToRecipients\";"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKNUMOPTIONS \u003d \"rankNumOptions\";"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANKISDUPLICATESALLOWED \u003d \"rankAreDuplicatesAllowed\";"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MIN_OPTIONS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                \"minOptionsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MAX_OPTIONS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                \"maxOptionsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MIN_OPTIONS_TO_BE_RANKED \u003d \"minOptionsToBeRanked\";"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MAX_OPTIONS_TO_BE_RANKED \u003d \"maxOptionsToBeRanked\";"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MIN_RECIPIENTS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                \"minRecipientsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_IS_MAX_RECIPIENTS_TO_BE_RANKED_ENABLED \u003d"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                \"maxRecipientsToBeRankedEnabled\";"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MIN_RECIPIENTS_TO_BE_RANKED \u003d \"minRecipientsToBeRanked\";"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_RANK_MAX_RECIPIENTS_TO_BE_RANKED \u003d \"maxRecipientsToBeRanked\";"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_RECIPIENT \u003d \"responserecipient\";"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_TEXT \u003d \"responsetext\";"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_TEXT \u003d \"responsecommenttext\";"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_ADD_TEXT \u003d \"responsecommentaddtext\";"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_UPLOADDOWNLOADBUTTON \u003d \"fruploaddownloadbtn\";"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SORTTYPE \u003d \"frsorttype\";"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYTEAM \u003d \"frgroupbyteam\";"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_GROUPBYSECTIONDETAIL \u003d \"frgroupbysectiondetail\";"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SHOWSTATS \u003d \"frshowstats\";"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_INDICATE_MISSING_RESPONSES \u003d \"frindicatemissingresponses\";"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_NEED_AJAX \u003d \"frneedajax\";"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_MAIN_INDEX \u003d \"frmainindex\";"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREVIEWAS \u003d \"previewas\";"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_ID \u003d \"googleid\";"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INVITER_ID \u003d \"invitergoogleid\";"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String REGKEY \u003d \"key\";"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EMAIL \u003d \"studentemail\";"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_SHORT_NAME \u003d \"studentshortname\";"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EMAIL \u003d \"studentprofileemail\";"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_INSTITUTION \u003d \"studentprofileinstitute\";"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NATIONALITY \u003d \"studentnationality\";"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_GENDER \u003d \"studentgender\";"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_MOREINFO \u003d \"studentprofilemoreinfo\";"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NAME \u003d \"studentname\";"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENTS_SHOWCOMMENTSTO \u003d \"showresponsecommentsto\";"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENTS_SHOWGIVERTO \u003d \"showresponsegiverto\";"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_NAME \u003d \"sectionname\";"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_NAME_DETAIL \u003d \"sectionnamedetail\";"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAM_NAME \u003d \"teamname\";"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATES \u003d \"teammates\";"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STATUS_MESSAGES_LIST \u003d \"statusMessagesToUser\";"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR \u003d \"error\";"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NEXT_URL \u003d \"next\";"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String USER_ID \u003d \"user\";"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT \u003d \"hint\";"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        //Email parameters"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_RECEIVER \u003d \"user\";"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_COURSE \u003d \"course\";"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_FEEDBACK \u003d \"feedback\";"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_CONTENT \u003d \"content\";"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SENDER \u003d \"sender\";"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SENDERNAME \u003d \"sendername\";"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_SUBJECT \u003d \"subject\";"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EMAIL_REPLY_TO_ADDRESS \u003d \"reply\";"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_SUBMISSION_EMAIL \u003d \"sendsubmissionemail\";"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        //Submission parameters for Task Queue"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_COURSE \u003d \"course\";"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_FEEDBACK \u003d \"feedback\";"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_REMIND_USERLIST \u003d \"usersToRemind\";"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_RESEND_PUBLISHED_EMAIL_USER_LIST \u003d \"usersToResendEmail\";"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_KEY \u003d \"searchkey\";"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_EMAIL \u003d \"respondentemail\";"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_IS_INSTRUCTOR \u003d \"respondentisinstructor\";"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONDENT_IS_TO_BE_REMOVED \u003d \"respondentistoberemoved\";"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_LINKS_RECOVERY_EMAIL \u003d \"sessionlinksrecoveryemail\";"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        //Parameters for checking persistence of data during Eventual Consistency"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String CHECK_PERSISTENCE_COURSE \u003d \"persistencecourse\";"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_STUDENTS \u003d \"searchstudents\";"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCH_FEEDBACK_SESSION_DATA \u003d \"searchfeedbacksessiondata\";"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENTITY_TYPE \u003d \"entitytype\";"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INTENT \u003d \"intent\";"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SearchIndex {"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT \u003d \"feedbackresponsecomment\";"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"student\";"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"instructor\";"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class SearchDocumentField {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_GIVER_NAME \u003d \"frCommentGiverName\";"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_GIVER_NAME \u003d \"feedbackResponseGiverName\";"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_RECEIVER_NAME \u003d \"feedbackResponseReceiverName\";"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEARCHABLE_TEXT \u003d \"searchableText\";"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ID \u003d \"courseId\";"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "     * The course status respect to the instructor\u0027s point of view."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "     * This parameter is used to get a course list for instructor."
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CourseStatus {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACTIVE \u003d \"active\";"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ARCHIVED \u003d \"archived\";"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SOFT_DELETED \u003d \"softDeleted\";"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EntityType {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"student\";"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"instructor\";"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN \u003d \"admin\";"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CsrfConfig {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TOKEN_HEADER_NAME \u003d \"X-CSRF-TOKEN\";"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TOKEN_COOKIE_NAME \u003d \"CSRF-TOKEN\";"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class LegacyURIs {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class WebPageURIs {"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String URI_PREFIX \u003d \"/web\";"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_HELP_PAGE \u003d FRONT_PAGE + \"/help/instructor\";"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ResourceURIs {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String URI_PREFIX \u003d \"/webapi\";"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOGOUT \u003d \"/logout\";"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DATABUNDLE \u003d \"/databundle\";"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String EXCEPTION \u003d \"/exception\";"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ERROR_REPORT \u003d \"/errorreport\";"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTH \u003d \"/auth\";"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNT \u003d \"/account\";"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNTS_SEARCH \u003d \"/accounts/search\";"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNT_RESET \u003d \"/account/reset\";"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ACCOUNT_DOWNGRADE \u003d \"/account/downgrade\";"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE_COMMENT \u003d \"/responsecomment\";"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE \u003d \"/course\";"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVE \u003d \"/course/archive\";"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BIN_COURSE \u003d \"/bin/course\";"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_SECTIONS \u003d \"/course/sections\";"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSES \u003d \"/courses\";"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTORS \u003d \"/instructors\";"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR \u003d \"/instructor\";"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_PRIVILEGE \u003d \"/instructor/privilege\";"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESULT \u003d \"/result\";"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS \u003d \"/students\";"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT \u003d \"/student\";"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSIONS_ONGOING \u003d \"/sessions/ongoing\";"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION \u003d \"/session\";"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_PUBLISH \u003d \"/session/publish\";"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_REMIND_SUBMISSION \u003d \"/session/remind/submission\";"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_REMIND_RESULT \u003d \"/session/remind/result\";"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_STATS \u003d \"/session/stats\";"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        public static final String SESSION_SUBMITTED_GIVER_SET \u003d \"/session/submitted/giverset\";"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSIONS \u003d \"/sessions\";"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BIN_SESSION \u003d \"/bin/session\";"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTIONS \u003d \"/questions\";"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION \u003d \"/question\";"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String QUESTION_RECIPIENTS \u003d \"/question/recipients\";"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSE \u003d \"/response\";"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String RESPONSES \u003d \"/responses\";"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HAS_RESPONSES \u003d \"/hasResponses\";"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SUBMISSION_CONFIRMATION \u003d \"/submission/confirmation\";"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN \u003d \"/join\";"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String JOIN_REMIND \u003d \"/join/remind\";"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIMEZONE \u003d \"/timezone\";"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String LOCAL_DATE_TIME \u003d \"/localdatetime\";"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SESSION_LINKS_RECOVERY \u003d \"/sessionlinksrecovery\";"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NATIONALITIES \u003d \"/nationalities\";"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSES \u003d \"/instructor/courses\";"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_DETAILS \u003d \"/courses/details\";"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_STUDENT_DETAILS \u003d \"/courses/students/details\";"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE \u003d \"/student/course\";"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE \u003d \"/student/profilePic\";"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE \u003d \"/student/profile\";"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSES \u003d \"/student/courses\";"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_CSV \u003d \"/students/csv\";"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH \u003d \"/studentsAndSessionData/search\";"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EDIT_DETAILS \u003d \"/students/editDetails\";"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDIT_DETAILS \u003d \"/instructors/course/details\";"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_RECORDS \u003d \"/students/records\";"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ENROLL_STUDENTS \u003d \"/course/enroll/students\";"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ActionURIs {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        /* _PAGE/Page in the Action URI name means \u0027show page\u0027 */"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_STUDENT_DELETE \u003d \"/page/instructorCourseStudentDelete\";"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_REMIND \u003d \"/page/instructorCourseRemind\";"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_AJAX_PAGE \u003d \"/page/instructorStudentRecordsAjaxPage\";"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS_PAGE \u003d"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackRemindParticularStudentsPage\";"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_REMIND_PARTICULAR_STUDENTS \u003d"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/page/instructorFeedbackRemindParticularStudents\";"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_PUBLISH \u003d \"/page/instructorFeedbackPublish\";"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_UNPUBLISH \u003d \"/page/instructorFeedbackUnpublish\";"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_DOWNLOAD \u003d \"/page/instructorFeedbackResultsDownload\";"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE \u003d \"/page/studentProfilePic\";"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CronJobURIs {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_EXCEPTION_TEST \u003d \"/auto/exception\";"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_LOG_COMPILATION \u003d \"/auto/compileLogs\";"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_DATASTORE_BACKUP \u003d \"/auto/datastoreBackup\";"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d \"/auto/feedbackSessionOpeningReminders\";"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d \"/auto/feedbackSessionClosedReminders\";"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d \"/auto/feedbackSessionClosingReminders\";"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d \"/auto/feedbackSessionPublishedReminders\";"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "     * Configurations for task queue."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class TaskQueue {"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-published-email-queue\";"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionPublishedEmail\";"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-resend-published-email-queue\";"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionResendPublishedEmail\";"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d \"/worker/feedbackSessionRemindEmail\";"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-remind-particular-users-email-queue\";"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionRemindParticularUsersEmail\";"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-unpublished-email-queue\";"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionUnpublishedEmail\";"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UPDATE_RESPONDENT_QUEUE_NAME \u003d"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "                \"feedback-session-update-respondent-queue\";"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UPDATE_RESPONDENT_WORKER_URL \u003d"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/worker/feedbackSessionUpdateRespondent\";"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d \"/worker/instructorCourseJoinEmail\";"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SEND_EMAIL_WORKER_URL \u003d \"/worker/sendEmail\";"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d \"/worker/studentCourseJoinEmail\";"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ViewURIs {"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        /* We omit adding the \u0027page\u0027 prefix to views because all of them are \"pages\" */"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_TOP \u003d \"/jsp/instructorFeedbackResultsTop.jsp\";"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BOTTOM \u003d \"/jsp/instructorFeedbackResultsBottom.jsp\";"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_GIVER_RECIPIENT_QUESTION \u003d"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByGiverRecipientQuestion.jsp\";"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_RECIPIENT_GIVER_QUESTION \u003d"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByRecipientGiverQuestion.jsp\";"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_GIVER_QUESTION_RECIPIENT \u003d"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByGiverQuestionRecipient.jsp\";"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_RECIPIENT_QUESTION_GIVER \u003d"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                \"/jsp/instructorFeedbackResultsByRecipientQuestionGiver.jsp\";"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_FEEDBACK_RESULTS_BY_QUESTION \u003d \"/jsp/instructorFeedbackResultsByQuestion.jsp\";"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH \u003d \"/jsp/instructorSearch.jsp\";"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_STUDENT_RECORDS_AJAX \u003d \"/jsp/instructorStudentRecordsAjax.jsp\";"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MASHUP \u003d \"/test/mashup.jsp\";"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TABLE_SORT \u003d \"/test/tableSort.jsp\";"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These are status messages that may be shown to the user */"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StatusMessages {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DUPLICATE_EMAIL_INFO \u003d \"Same email address as the student in line\";"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EDITED \u003d \"The course has been edited.\";"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_ARCHIVED \u003d"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The course %s has been archived. It will not appear in the home page any more.\";"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: Let undo process to be in the Course page for now."
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        // Should implement to be able to undo the archiving from the home page later."
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_MOVED_TO_RECYCLE_BIN \u003d"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The course %s has been deleted. You can restore it from the deleted courses table below.\";"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_EMPTY \u003d"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You do not seem to have any courses. Use the form above to create a course.\";"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_REMINDER_SENT_TO \u003d \"An email has been sent to \";"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAM_INVALID_SECTION_EDIT \u003d"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The team \\\"%s\\\" is in multiple sections. \""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"The team ID should be unique across the entire course \""
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"and a team cannot be spread across multiple sections.\u003cbr\u003e\";"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String SECTION_QUOTA_EXCEED \u003d"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You are trying enroll more than 100 students in section \\\"%s\\\". \""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To avoid performance problems, please do not enroll more than 100 students in a single section.\u003cbr\u003e\";"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_ADDED \u003d \"The instructor %s has been added successfully. \""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"An email containing how to \u0027join\u0027 this course will be sent to %s in a few minutes.\";"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EXISTS \u003d"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "                \"An instructor with the same email address already exists in the course.\";"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_EDITED \u003d \"The changes to the instructor %s has been updated.\";"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETED \u003d \"The instructor has been deleted from the course.\";"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String COURSE_INSTRUCTOR_DELETE_NOT_ALLOWED \u003d"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The instructor you are trying to delete is the last instructor in the course. \""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Deleting the last instructor from the course is not allowed.\";"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EVENTUAL_CONSISTENCY \u003d"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "                \"If the student was created during the last few minutes, \""
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"try again in a few more minutes as the student may still be being saved.\";"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EDITED \u003d \"The student has been edited successfully.\";"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_EDIT \u003d"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to edit does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_DELETED \u003d \"The student has been removed from the course\";"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_EDITED \u003d \"Your profile has been edited successfully\";"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PICTURE_SAVED \u003d \"Your profile picture has been saved successfully\";"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_PIC_TOO_LARGE \u003d \"The uploaded profile picture was too large. \""
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please try again with a smaller picture.\";"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_EMAIL_TAKEN_MESSAGE \u003d"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Trying to update to an email that is already used by: %s/%s\";"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ADDED \u003d"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been added. \""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Click the \\\"Add New Question\\\" button below to begin adding questions for the feedback session.\";"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPIED \u003d"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been copied. Please modify settings/questions as necessary.\";"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY_NONESELECTED \u003d"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not selected any course to copy the feedback session to\";"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_COPY_ALREADYEXISTS \u003d"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A feedback session with the name \\\"%s\\\" already exists in the following course(s): %s.\";"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EDITED \u003d \"The feedback session has been updated.\";"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_END_TIME_EARLIER_THAN_START_TIME \u003d"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The end time for this feedback session cannot be earlier than the start time.\";"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_MOVED_TO_RECYCLE_BIN \u003d"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been deleted. You can restore it from the deleted sessions table below.\";"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESTORED \u003d \"The feedback session has been restored.\";"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_ALL_RESTORED \u003d \"All sessions have been restored.\";"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_DOWNLOAD_FILE_SIZE_EXCEEDED \u003d \"This session has more responses than \""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"that can be downloaded in one go. Please download responses for one question at a time instead. \""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To download responses for a specific question, click on the corresponding question number.\";"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_PUBLISHED \u003d"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session has been published. \""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_RESEND_EMAIL_EMPTY_RECIPIENT \u003d"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                \"You have not selected any student to email.\";"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_UNPUBLISHED \u003d \"The feedback session has been unpublished.\";"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSSENT \u003d"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Reminder e-mails have been sent out to those students and instructors. \""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please allow up to 1 hour for all the notification emails to be sent out.\";"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSSESSIONNOTOPEN \u003d"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The feedback session is not open for submissions. \""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"You cannot send reminders for a session that is not open.\";"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_REMINDERSEMPTYRECIPIENT \u003d \"You have not selected any student to remind.\";"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_SESSION_EXISTS \u003d"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                \"A feedback session by this name already exists under this course\";"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ADDED \u003d \"The question has been added to this feedback session.\";"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_ADDED_MULTIPLE \u003d"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The questions have been added to this feedback session.\";"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DUPLICATED \u003d \"The question has been duplicated below.\";"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_EDITED \u003d \"The changes to the question have been updated.\";"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_DELETED \u003d \"The question has been deleted.\";"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_NUMBEROFENTITIESINVALID \u003d"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter the maximum number of recipients each respondents should give feedback to.\";"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_QUESTION_TEXTINVALID \u003d"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Please enter a valid question. The question text cannot be empty.\";"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_SAVED \u003d \"All responses submitted successfully!\";"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MSQ_MIN_CHECK \u003d \"Minimum selectable choices for question %d is %d.\";"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSES_MSQ_MAX_CHECK \u003d \"Maximum selectable choices for question %d is %d.\";"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESPONSE_COMMENT_EMPTY \u003d \"Comment cannot be empty\";"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_UNANSWERED_QUESTIONS \u003d \"Note that some questions are yet to be answered. \""
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"They are: \";"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_SECTIONVIEWWARNING \u003d"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This session seems to have a large number of responses. \""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It is recommended to view the results one question/section at a time. \""
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view responses for a particular question, click on the question below. \""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view response for a particular section, click the \u0027Edit View\u0027 button above and choose a section.\";"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FEEDBACK_RESULTS_QUESTIONVIEWWARNING \u003d"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                \"This session seems to have a large number of responses. \""
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"It is recommended to view the results for one question at a time. \""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"To view responses for a particular question, click on the question below.\";"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ENROLL_LINES_PROBLEM_DETAIL_PREFIX \u003d \"\u0026bull;\";"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_REMOVED_FROM_COURSE \u003d \"The Instructor has been removed from the Course\";"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_NO_RESULTS \u003d \"No results found.\";"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String INSTRUCTOR_SEARCH_TIPS \u003d"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Search Tips:\u003cbr\u003e\""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003cul\u003e\""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cli\u003ePut more keywords to search for more precise results.\u003c/li\u003e\""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"\u003cli\u003ePut quotation marks around words \u003cb\u003e\\\"[any word]\\\"\u003c/b\u003e\""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \" to search for an exact phrase in an exact order.\u003c/li\u003e\""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"\u003c/ul\u003e\";"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String HINT_FOR_NO_SESSIONS_STUDENT \u003d"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Currently, there are no open feedback sessions in the course %s. \""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"When a session is open for submission you will be notified.\";"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        // Messages that are templates only"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Template String. Parameters: Student\u0027s name, Course ID */"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_COURSE_JOIN_SUCCESSFUL \u003d \"You have been successfully added to the course %s.\";"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "        /** Template String. Parameters:  Course ID */"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NOT_A_PICTURE \u003d \"The file that you have uploaded is not a picture. \""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"Please upload a picture (usually it ends with .jpg or .png)\";"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_PROFILE_NO_PICTURE_GIVEN \u003d \"Please specify a file to be uploaded.\";"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String STUDENT_NOT_FOUND_FOR_RECORDS \u003d"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The student you tried to view records for does not exist. \" + STUDENT_EVENTUAL_CONSISTENCY;"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AMBIGUOUS_LOCAL_DATE_TIME_GAP \u003d"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The %s, %s, falls within the gap period when clocks spring forward at the start of DST. \""
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"It was resolved to %s.\";"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AMBIGUOUS_LOCAL_DATE_TIME_OVERLAP \u003d"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The %s, %s, falls within the overlap period when clocks fall back at the end of DST. \""
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"It can refer to %s or %s. It was resolved to %s.\";"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "    /* These indicate status of an operation, but they are not shown to the user */"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class StatusCodes {"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "        // Backdoor responses"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR_STATUS_SUCCESS \u003d \"[BACKDOOR_STATUS_SUCCESS]\";"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String BACKDOOR_STATUS_FAILURE \u003d \"[BACKDOOR_STATUS_FAILURE]\";"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        // General Error codes"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_PARAMETER \u003d \"ERRORCODE_NULL_PARAMETER\";"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        // Error message used across DB level"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String DBLEVEL_NULL_INPUT \u003d \"Supplied parameter was null\";"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        // POST parameter null message"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_POST_PARAMETER \u003d \"The %s POST parameter is null%n\";"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        // HTTP parameter null message"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_HTTP_PARAMETER \u003d \"The [%s] HTTP parameter is null.\";"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        // body parameter null message"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String NULL_BODY_PARAMETER \u003d \"The body parameter is null\";"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "     * These are constants that may be used in {@link ActivityLogEntry}."
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class ActivityLog {"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TEAMMATESLOG \u003d \"TEAMMATESLOG\";"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String UNKNOWN \u003d \"Unknown\";"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_ADMIN \u003d \"Admin\";"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_INSTRUCTOR \u003d \"Instructor\";"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_STUDENT \u003d \"Student\";"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_AUTO \u003d \"Auto\";"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_UNREGISTERED \u003d \"Unregistered\";"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String ROLE_MASQUERADE_POSTFIX \u003d \"(M)\";"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_STUDENT_PAGE \u003d \"student\";"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_INSTRUCTOR_PAGE \u003d \"instructor\";"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String PREFIX_AUTO_PAGE \u003d \"/auto\";"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String AUTH_NOT_LOGIN \u003d \"Unknown\";"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_SEPARATOR \u003d \"|||\";"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String FIELD_CONNECTOR \u003d \"%\";"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TIME_FORMAT_LOGID \u003d \"yyyyMMddHHmmssSS\";"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String TESTING_DATA_EMAIL_POSTFIX \u003d \".tmt\";"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MESSAGE_ERROR_ACTION_NAME \u003d \"Error when getting ActionName for requestUrl : %1$s\";"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "        public static final String MESSAGE_ERROR_LOG_MESSAGE_FORMAT \u003d \"Log message format not as expected: %1$s\";"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 1,
      "-": 1090
    }
  },
  {
    "path": "src/main/java/teammates/logic/api/Logic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseDetailsBundle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseSummaryBundle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackResponseCommentSearchResultBundle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResponseStatus;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorPrivileges;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorSearchResultBundle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetailsBundle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.StudentSearchResultBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.TeamDetailsBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EnrollException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ExceedingRangeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.AccountsLogic;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.DataBundleLogic;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackQuestionsLogic;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponseCommentsLogic;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponsesLogic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.InstructorsLogic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.ProfilesLogic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": " * Provides the business logic for production usage of the system."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount(String googleId) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.getAccount(googleId);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated student profile"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes both instructor and student privileges, as long as the account and associated student profile."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions:\u003c/p\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAccountCascade(String googleId) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(googleId);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * Delete the picture associated with the {@code key} in Cloud Storage."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * All parameters are non-null."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the {@code key} doesn\u0027t exist.\u003c/p\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePicture(String key) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePicture(key);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes {@code pictureKey} for the student profile associated with {@code googleId}."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the associated profile doesn\u0027t exist, create a new one.\u003c/p\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePictureKey(String googleId) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePictureKey(googleId);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add an instructor for a course. \u003cbr\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructor(String courseId, String name, String email, String role)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(name);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes.builder(courseId, email)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(name)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRole(role)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPrivileges(new InstructorPrivileges(role))"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an instructor."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions:\u003c/p\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created instructor"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the instructor is not valid"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the instructor already exists in the Datastore"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes createInstructor(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     * search instructors in the whole system."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorSearchResultBundle searchInstructorsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given Instructors."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putInstructorDocuments(List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.putDocuments(instructors);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForEmail(courseId, email);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorById(String courseId, String email) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorById(courseId, email);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForRegistrationKey(String encryptedKey) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForRegistrationKey(encryptedKey);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the encrypted registration key for the instructor."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForInstructor(String courseId, String email)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getEncryptedKeyForInstructor(courseId, email);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user has instructor privileges."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructor(String googleId) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.isAccountAnInstructor(googleId);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user is an instructor of the course."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorOfCourse(String googleId, String courseId) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isGoogleIdOfInstructorOfCourse(googleId, courseId);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the instructor is a new user."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#isNewInstructor(String)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isNewInstructor(String googleId) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isNewInstructor(googleId);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade update the comments and responses given by the instructor."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated instructor"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the instructor cannot be found"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated instructor"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the instructor cannot be found"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.updateInstructorByEmail(updateOptions);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the instructor if there is no account exist for him."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.joinCourseForInstructor(encryptedKey, googleId, institute);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "     * Downgrades an instructor account to student account."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade deletes all instructors associated with the account."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(googleId);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor cascade its associated feedback responses and comments."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the student does not exist."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorCascade(String courseId, String email) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorCascade(courseId, email);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a course and an associated instructor for the course."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr/\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code instructorGoogleId} already has an account and instructor privileges."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorGoogleId);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseAttributes);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse(String courseId) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourse(courseId);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed version of course data. \u003cbr\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseDetailsBundle getCourseDetails(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummary(courseId);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a course data, including its feedback sessions, according to the instructor passed in.\u003cbr\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithFeedbackSessions(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummaryWithFeedbackSessionsForInstructor(instructor);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForStudentAccount(googleId);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor without stats."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseSummaryBundle\u003e getCourseSummariesWithoutStatsForInstructor(String googleId,"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                            boolean omitArchived) {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesSummaryWithoutStatsForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructor(String googleId)"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummariesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Details of courses the student is in. CourseData objects"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     *         returned contain details of feedback sessions too (except the ones"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     *         still AWAITING)."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseDetailsBundle\u003e getCourseDetailsListForStudent(String googleId)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseDetailsListForStudent(googleId);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCoursesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the given instructors is in except for courses in Recycle Bin."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses in Recycle Bin that the given instructors is in."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getSoftDeletedCourseForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSoftDeletedCourseForInstructor(instructor);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a course by {@link CourseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated course"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the course cannot be found"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.updateCourseCascade(updateOptions);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "     * Changes the archive status of a course for an instructor."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId The course of which the archive status is to be changed"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param archiveStatus The archive status to be set"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(archiveStatus);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a course cascade its students, instructors, sessions, responses and comments."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if no such course."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.deleteCourseCascade(courseId);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the course is present in the system based on its courseid."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCoursePresent(String courseid) {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.isCoursePresent(courseid);"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "     * Moves a course to Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.moveCourseToRecycleBin(courseId);"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a course and all data related to the course from Recycle Bin by"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "     * its given corresponding ID."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreCourseFromRecycleBin(String courseId)"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreCourseFromRecycleBin(courseId);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all courses and all data related to these courses from Recycle Bin."
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllCoursesFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreAllCoursesFromRecycleBin(instructorList);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for students. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudents(queryString, instructors);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "     * search students in the whole system."
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudentsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudentsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(registrationKey);"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForRegistrationKey(registrationKey);"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForEmail(courseId, email);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an empty list if no match found."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getAllStudentForEmail(String email) {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getAllStudentsForEmail(email);"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets student profile associated with the {@code googleId}."
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if no match found."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes getStudentProfile(String googleId) {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.getStudentProfile(googleId);"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if no match found."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForGoogleId(googleId);"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the course with ID courseId."
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsNameForCourse(String)"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsNameForCourse(courseId);"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link SectionDetailsBundle} for a given course using courseId."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsForCourseWithoutStats(String)"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cSectionDetailsBundle\u003e getSectionsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsForCourseWithoutStats(courseId);"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTeamDetailsBundle\u003e getTeamsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getTeamsForCourse(courseId);"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "    public TeamDetailsBundle getTeamDetailsForStudent(StudentAttributes student) {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getTeamDetailsForStudent(student);"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForStudent(String courseId, String email) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getEncryptedKeyForStudent(courseId, email);"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the googleId associated with the student."
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the associated googleId of an instructor."
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a student."
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created student."
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the student is not valid."
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the student already exists in the Datastore."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes createStudent(StudentAttributes student)"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student.getCourse());"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student.getEmail());"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.createStudent(student);"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a student by {@link StudentAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses the student gives/receives."
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated student"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the student cannot be found"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the student cannot be updated"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent student"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.updateStudentCascade(updateOptions);"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the student if there is no account exist for him."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param key the encrypted registration key"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes joinCourseForStudent(String key, String googleId)"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.joinCourseForStudent(key, googleId);"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByInstructor(fsa, userEmail);"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail) {"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, userEmail);"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student cascade its associated feedback responses and comments."
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the student does not exist."
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentCascade(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentCascade(courseId, studentEmail);"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all the students in the course cascade their associated responses and comments."
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentsInCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentsInCourseCascade(courseId);"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Checks if a course has sections for each team"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "     *  * All parameters are non-null."
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasIndicatedSections(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.hasIndicatedSections(courseId);"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates sections for any limit violations and teams for any team name violations."
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see StudentsLogic#validateSectionsAndTeams(List, String)"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentList);"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.validateSectionsAndTeams(studentList, courseId);"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates teams for any team name violations."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see StudentsLogic#validateTeams(List, String)"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validateTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentList);"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.validateTeams(studentList, courseId);"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all students of a team."
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForTeam(teamName, courseId);"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates search documents for the given students."
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putStudentDocuments(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.putDocuments(students);"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates students list of a course in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseStudentListAsCsv(String courseId, String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseStudentListAsCsv(courseId, googleId);"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback session."
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback session"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the session is not valid"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the session already exist"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSession);"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the data storage."
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found or in recycle bin."
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the recycle bin."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionDetails(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions WITHOUT their response"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor given by his googleId."
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsListForInstructor(String, boolean)"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions in Recycle Bin WITHOUT their response"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor."
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructor(instructor);"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that an instructor can view/submit as a"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForInstructor(String, String, String)"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForInstructor(String feedbackSessionName,"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String courseId,"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String userEmail)"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that a student can view/submit as a"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForStudent(String, String, String)"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String courseId,"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String userEmail)"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the recipients of a feedback question for student."
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackQuestionsLogic#getRecipientsOfQuestionForStudent(FeedbackQuestionAttributes, String, String)"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, String\u003e getRecipientsOfQuestionForStudent("
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, String giverEmail, String giverTeam) {"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverTeam);"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getRecipientsOfQuestionForStudent(question, giverEmail, giverTeam);"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the recipients of a feedback question for instructor."
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackQuestionsLogic#getRecipientsOfQuestionForInstructor(FeedbackQuestionAttributes, String)"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, String\u003e getRecipientsOfQuestionForInstructor(FeedbackQuestionAttributes question, String giverEmail) {"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getRecipientsOfQuestionForInstructor(question, giverEmail);"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackSessionName,"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String courseId,"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          int questionNumber) {"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackSessionName, courseId, questionNumber);"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a list of all questions for the given session that"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "     * students can view/submit."
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a {@code List} of all questions for the given session that"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "     * instructor can view/submit."
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String instructorEmail) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructor(feedbackSessionName, courseId, instructorEmail);"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryAsCsv(String, String,"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, String, boolean, boolean)"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryAsCsv("
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail,"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isMissingResponsesShown, boolean isStatsShown, String questionId)"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, questionId,"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) within a section in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryInSectionAsCsv(String, String, String,"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, SectionDetail, String, boolean, boolean)"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail, String section,"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "            SectionDetail sectionDetail, String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(sectionDetail);"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, section, sectionDetail,"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user in the course."
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourse(String courseId, String userEmail)"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForUserInCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasStudentSubmittedFeedback(FeedbackSessionAttributes fsa, String studentEmail) {"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, studentEmail);"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAdjust email sending status if necessary."
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback session"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds an instructor with {@code email} in the instructor respondent set"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "     * in feedback session {@code feedbackSessionName} in {@code courseId}."
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a student with {@code email} in the student respondent set"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "     * in feedback session {@code feedbackSessionName} in {@code courseId}."
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addStudentRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor with {@code email} in the instructor respondent set"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "     * in session {@code feedbackSessionName} of course {@code courseId}."
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student with {@code email} in the student respondent set"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "     * in session {@code feedbackSessionName} of course {@code courseId}."
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteStudentFromRespondentList(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "     * Publishes a feedback session."
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @return the published feedback session"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if session is already published"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * Unpublishes a feedback session."
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @return the unpublished feedback session"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "     *             if the feedback session is not ready to be unpublished."
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback session cascade to its associated questions, responses and comments."
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "     * Soft-deletes a specific session to Recycle Bin."
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a specific session from Recycle Bin to feedback sessions table."
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all sessions from Recycle Bin to feedback sessions table."
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllFeedbackSessionsFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.restoreAllFeedbackSessionsFromRecycleBin(instructorList);"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new feedback question."
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created question"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the question is invalid"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestion);"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade adjust the question number of questions in the same session."
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade adjust the existing response of the question."
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback question"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback question cannot be found"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback question cascade its responses and comments."
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eSilently fail if question does not exist."
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will also be updated due the deletion of question."
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackQuestionCascade(String questionId) {"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(questionId);"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether there are responses for a question."
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all copiable questions for an instructor\u003cbr\u003e"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getCopiableFeedbackQuestionsForInstructor(String googleId)"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getCopiableFeedbackQuestionsForInstructor(googleId);"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all questions for a feedback session.\u003cbr\u003e"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the response rate status for a session."
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResponseStatus(String, String)"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResponseStatus getFeedbackSessionResponseStatus(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResponseStatus(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the student for a feedback session."
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            String courseId, String userEmail)"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session within the given range"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorWithinRangeFromView("
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, int range, String viewType)"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(viewType);"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorWithinRangeFromView(feedbackSessionName,"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               courseId, userEmail,"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               range, viewType);"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a section within the given range"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session to a section within the given range"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "crizyli"
        },
        "content": "     * Gets a set of giver identifiers that has at least one response under a feedback session."
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "crizyli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId)"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestion(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        userEmail, questionId);"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "     * in a given section."
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String questionId, String selectedSection, SectionDetail selectedSectionDetail)"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(selectedSection);"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(selectedSectionDetail);"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "                                            feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "                                            questionId, selectedSection, selectedSectionDetail);"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session."
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a specific section."
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSection(String feedbackSessionName,"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail, String section, SectionDetail sectionDetail)"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(sectionDetail);"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorInSection(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                     userEmail, section, sectionDetail);"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from student or his team for the given question."
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, StudentAttributes student) {"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from instructor for the given question."
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorAttributes);"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseId);"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId,"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String giverEmail,"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String recipient) {"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(recipient);"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackQuestionId, giverEmail, recipient);"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback response."
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback response"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the response is not valid"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response already exist"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponse);"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasGiverRespondedForSession(String userEmail, String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasGiverRespondedForSession(userEmail, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasResponsesForCourse(String courseId) {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isOpenOrPublishedEmailSentForTheCourse(String courseId) {"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isOpenOrPublishedEmailSentForTheCourse(courseId);"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade updates its associated feedback response comment"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "     * (e.g. associated response ID, giverSection and recipientSection)."
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "     * as question-giver-recipient is the primary key."
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback response"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response cannot be updated"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent response"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback response cascade its associated comments."
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will NOT be updated."
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseCascade(String responseId) {"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create a feedback response comment, and return the created comment."
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes createFeedbackResponseComment("
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes feedbackResponseComment)"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseComment);"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment("
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "            String responseId, String giverEmail, Instant creationDate) {"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(creationDate);"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(responseId, giverEmail, creationDate);"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseCommentAttributes\u003e getFeedbackResponseCommentForGiver(String courseId,"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String giverEmail) {"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseCommentsForGiver(courseId, giverEmail);"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates or updates document for the given comment."
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocument(FeedbackResponseCommentAttributes)"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocument(FeedbackResponseCommentAttributes comment) {"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocument(comment);"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given comments."
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putFeedbackResponseCommentDocuments(List\u003cFeedbackResponseCommentAttributes\u003e comments) {"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocuments(comments);"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for FeedbackResponseComment. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentSearchResultBundle searchFeedbackResponseComments(String queryString,"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.searchFeedbackResponseComments(queryString, instructors);"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated comment"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a comment."
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseComment(long commentId) {"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getArchivedCourseIds(List\u003cCourseAttributes\u003e allCourses,"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, InstructorAttributes\u003e instructorsForCourses) {"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(allCourses);"
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorsForCourses);"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getArchivedCourseIds(allCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "            getFeedbackResponsesForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns returns a list of sessions that were closed within past hour."
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of sessions that require automated emails to be sent as they are published."
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSectionForTeam(String courseId, String teamName) {"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getSectionForTeam(courseId, teamName);"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "     * Persists the given data bundle to the datastore."
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#persistDataBundle(DataBundle)"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "    public void persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.persistDataBundle(dataBundle);"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the given data bundle from the datastore."
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#removeDataBundle(DataBundle)"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeDataBundle(DataBundle dataBundle) {"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.removeDataBundle(dataBundle);"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "     * Puts searchable documents from the data bundle to the datastore."
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#putDocuments(DataBundle)"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocuments(DataBundle dataBundle) {"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.putDocuments(dataBundle);"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 17,
      "crizyli": 11,
      "-": 1985
    }
  },
  {
    "path": "src/main/java/teammates/logic/core/FeedbackResponsesLogic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.AttributesDeletionQuery;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseRoster;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.UserRole;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Logger;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackResponsesDb;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles operations related to feedback responses."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackResponseAttributes"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackResponsesDb"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public final class FeedbackResponsesLogic {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger log \u003d Logger.getLogger();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackResponsesLogic instance \u003d new FeedbackResponsesLogic();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesDb frDb \u003d new FeedbackResponsesDb();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResponsesLogic() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        // prevent initialization"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static FeedbackResponsesLogic inst() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "     * Gets a set of giver identifiers that has at least one response under a feedback session."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return frDb.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback response."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback response"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the response is not valid"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response already exist"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes fra)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.createEntity(fra);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackResponseId) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponse(feedbackResponseId);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String giverEmail, String recipient) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponse(feedbackQuestionId, giverEmail, recipient);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSession("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInSection("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * Retrieves the list of feedback responses for the section selected."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackSessionName       Feedback session name"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId                  Course ID"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param section                   Name of the section selected, null if all section is selected"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return                          List of feedback response attributes that matches the section selected"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInGiverAndRecipientSection("
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionInGiverAndRecipientSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionFromSection("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionFromSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionToSection("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionToSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionWithinRange("
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, int range) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionWithinRange(feedbackSessionName, courseId, range);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInSectionWithinRange("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSessionWithinRange(feedbackSessionName, courseId, range);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionInSectionWithinRange(feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSessionWithinRange(feedbackSessionName, courseId, range);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionFromSectionWithinRange(feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForSessionWithinRange(feedbackSessionName, courseId, range);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForSessionToSectionWithinRange(feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether there are responses for a question."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.areThereResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String section, SectionDetail sectionDetail) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForQuestionInSection(feedbackQuestionId, section, sectionDetail);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForQuestion("
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String userEmail) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForReceiverForQuestion(feedbackQuestionId, userEmail);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String userEmail, String section) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesForReceiverForQuestion(feedbackQuestionId, userEmail);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackQuestionId, userEmail, section);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String userEmail) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesFromGiverForQuestion(feedbackQuestionId, userEmail);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String userEmail, String section) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesFromGiverForQuestion(feedbackQuestionId, userEmail);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackQuestionId, userEmail, section);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForSessionWithinRange("
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverEmail, String feedbackSessionName, String courseId, int range) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesFromGiverForSessionWithinRange(giverEmail, feedbackSessionName, courseId, range);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether a giver has responded a session."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasGiverRespondedForSession(String userEmail, String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        return !getFeedbackResponsesFromGiverForSessionWithinRange(userEmail, feedbackSessionName, courseId, 1).isEmpty();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForCourse("
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesForReceiverForCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForCourse("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesFromGiverForCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from student or his team for the given"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "     * question."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, StudentAttributes student) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackResponsesFromTeamForQuestion("
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                    question.getId(), question.courseId, student.team);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.getFeedbackResponsesFromGiverForQuestion(question.getId(), student.email);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getViewableFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, String userEmail,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, String section, SectionDetail sectionDetail) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e viewableResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add responses that the user submitted himself"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        addNewResponses("
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                viewableResponses,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                        question.getId(), userEmail, section));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add responses that user is a receiver of when question is visible to"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        // receiver."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            addNewResponses("
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                    viewableResponses,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                    getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                            question.getId(), userEmail, section));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (role) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        case STUDENT:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            // many queries"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            addNewResponses(viewableResponses,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                            getViewableFeedbackResponsesForStudentForQuestion(question, userEmail));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        case INSTRUCTOR:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.isResponseVisibleTo(FeedbackParticipantType.INSTRUCTORS)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                addNewResponses(viewableResponses,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                                getFeedbackResponsesForQuestionInSection(question.getId(), section, sectionDetail));"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"The role of the requesting use has to be Student or Instructor\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        return viewableResponses;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isNameVisibleToUser("
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, boolean isGiverName, CourseRoster roster) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question \u003d\u003d null) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        // Early return if user is giver"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            // if response is given by team, then anyone in the team can see the response"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            if (roster.isStudentsInSameTeam(response.giver, userEmail)) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            if (response.giver.equals(userEmail)) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        return isFeedbackParticipantNameVisibleToUser(question, response,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                userEmail, role, isGiverName, roster);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isFeedbackParticipantNameVisibleToUser("
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail, UserRole role, boolean isGiverName, CourseRoster roster) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackParticipantType\u003e showNameTo \u003d isGiverName"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 ? question.showGiverNameTo"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 : question.showRecipientNameTo;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackParticipantType type : showNameTo) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            case INSTRUCTORS:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                if (roster.getInstructorForEmail(userEmail) !\u003d null \u0026\u0026 role \u003d\u003d UserRole.INSTRUCTOR) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            case OWN_TEAM_MEMBERS:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            case OWN_TEAM_MEMBERS_INCLUDING_SELF:"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                // Refers to Giver\u0027s Team Members"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                if (roster.isStudentsInSameTeam(response.giver, userEmail)) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            case RECEIVER:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                // Response to team"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                if (question.recipientType.isTeam()) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (roster.isStudentInTeam(userEmail, response.recipient)) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                        // this is a team name"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Response to individual"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (response.recipient.equals(userEmail)) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            case RECEIVER_TEAM_MEMBERS:"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                // Response to team; recipient \u003d teamName"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                if (question.recipientType.isTeam()) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (roster.isStudentInTeam(userEmail, response.recipient)) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                        // this is a team name"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (roster.isStudentsInSameTeam(response.recipient, userEmail)) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Response to individual"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            case STUDENTS:"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                if (roster.isStudentInCourse(userEmail)) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(\"Invalid FeedbackParticipantType for showNameTo in \""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"FeedbackResponseLogic.isFeedbackParticipantNameVisibleToUser()\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the responses of the question are visible to students."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isResponseOfFeedbackQuestionVisibleToStudent(FeedbackQuestionAttributes question) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isStudentRecipientType \u003d"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                   question.recipientType.equals(FeedbackParticipantType.STUDENTS)"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                || question.recipientType.equals(FeedbackParticipantType.OWN_TEAM_MEMBERS)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                || question.recipientType.equals(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF)"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                || question.recipientType.equals(FeedbackParticipantType.GIVER)"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 question.giverType.equals(FeedbackParticipantType.STUDENTS);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((isStudentRecipientType || question.recipientType.isTeam())"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                || question.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        return question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasResponsesForCourse(String courseId) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        return frDb.hasFeedbackResponseEntitiesForCourse(courseId);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade updates its associated feedback response comment"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "     * (e.g. associated response ID, giverSection and recipientSection)."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * as question-giver-recipient is the primary key."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback response"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response cannot be updated"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent response"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes oldResponse \u003d frDb.getFeedbackResponse(updateOptions.getFeedbackResponseId());"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes newResponse \u003d frDb.updateFeedbackResponse(updateOptions);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isResponseIdChanged \u003d !oldResponse.getId().equals(newResponse.getId());"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isGiverSectionChanged \u003d !oldResponse.giverSection.equals(newResponse.giverSection);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isRecipientSectionChanged \u003d !oldResponse.recipientSection.equals(newResponse.recipientSection);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isResponseIdChanged || isGiverSectionChanged || isRecipientSectionChanged) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseCommentAttributes\u003e responseComments \u003d"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcLogic.getFeedbackResponseCommentForResponse(oldResponse.getId());"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            for (FeedbackResponseCommentAttributes responseComment : responseComments) {"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseCommentAttributes.UpdateOptions.Builder updateOptionsBuilder \u003d"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponseCommentAttributes.updateOptionsBuilder(responseComment.getId());"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isResponseIdChanged) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                    updateOptionsBuilder.withFeedbackResponseId(newResponse.getId());"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isGiverSectionChanged) {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                    updateOptionsBuilder.withGiverSection(newResponse.giverSection);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isRecipientSectionChanged) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                    updateOptionsBuilder.withReceiverSection(newResponse.recipientSection);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.updateFeedbackResponseComment(updateOptionsBuilder.build());"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        return newResponse;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates responses for a student when his team changes."
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThis is done by deleting responses that are no longer relevant to him in his new team."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackResponsesForChangingTeam("
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail, String oldTeam, String newTeam) {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question;"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e studentEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e instructorEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        // deletes all responses given by the user to team members or given by the user as a representative of a team."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesFromUser \u003d"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesFromGiverForCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesFromUser) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            question \u003d fqLogic.getFeedbackQuestion(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                    || isRecipientTypeTeamMembers(question)) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteFeedbackResponseCascade(response.getId());"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                studentEmailsNeedRespondentsUpdate"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                        .computeIfAbsent(response.feedbackSessionName, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                        .add(response.giver);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        // Deletes all responses given by other team members to the user."
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesToUser \u003d"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesForReceiverForCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesToUser) {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            question \u003d fqLogic.getFeedbackQuestion(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isRecipientTypeTeamMembers(question)) {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteFeedbackResponseCascade(response.getId());"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                if (question.getGiverType() \u003d\u003d FeedbackParticipantType.STUDENTS) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                    studentEmailsNeedRespondentsUpdate"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                            .computeIfAbsent(response.feedbackSessionName, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                            .add(response.giver);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isOldTeamEmpty \u003d studentsLogic.getStudentsForTeam(oldTeam, courseId).isEmpty();"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isOldTeamEmpty) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteResponsesInvolvedTeam(courseId, oldTeam,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                    studentEmailsNeedRespondentsUpdate, instructorEmailsNeedRespondentsUpdate);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        // update respondents"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        studentEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteStudentFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteInstructorFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback response involved a team."
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId the course id"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param teamName the team name"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param studentEmailsNeedRespondentsUpdate map to keep track of deleted response for student respondents update"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructorEmailsNeedRespondentsUpdate map to keep track of deleted response for instructor respondents update"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteResponsesInvolvedTeam(String courseId, String teamName,"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, Set\u003cString\u003e\u003e studentEmailsNeedRespondentsUpdate,"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, Set\u003cString\u003e\u003e instructorEmailsNeedRespondentsUpdate) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        // Deletes all responses given by the team."
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesFromOldTeam \u003d"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesFromGiverForCourse(courseId, teamName);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesFromOldTeam) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteFeedbackResponseCascade(response.getId());"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        // Deletes all responses received by the team."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesToOldTeam \u003d"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesForReceiverForCourse(courseId, teamName);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesToOldTeam) {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteFeedbackResponseCascade(response.getId());"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.getGiverType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                    || question.getGiverType() \u003d\u003d FeedbackParticipantType.SELF) {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorEmailsNeedRespondentsUpdate"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                        .computeIfAbsent(response.feedbackSessionName, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                        .add(response.giver);"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.getGiverType() \u003d\u003d FeedbackParticipantType.STUDENTS) {"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                studentEmailsNeedRespondentsUpdate"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                        .computeIfAbsent(response.feedbackSessionName, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                        .add(response.giver);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates responses for a student when his section changes."
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackResponsesForChangingSection("
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail, String oldSection, String newSection)"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        updateSectionOfResponsesFromUser(courseId, userEmail, newSection);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        updateSectionOfResponsesToUser(courseId, userEmail, newSection);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateSectionOfResponsesToUser(String courseId, String userEmail, String newSection)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesToUser \u003d"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesForReceiverForCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesToUser) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                                .withRecipientSection(newSection)"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                                .build());"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityAlreadyExistsException e) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(\"Not possible to trigger recreating of response\");"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            frcLogic.updateFeedbackResponseCommentsForResponse(response.getId());"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateSectionOfResponsesFromUser(String courseId, String userEmail, String newSection)"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesFromUser \u003d"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesFromGiverForCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesFromUser) {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                                .withGiverSection(newSection)"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                                .build());"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityAlreadyExistsException e) {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(\"Not possible to trigger recreating of response\");"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "            frcLogic.updateFeedbackResponseCommentsForResponse(response.getId());"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "     * Delete student from session respondents if he does not have any responses for the session."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteStudentFromRespondentsIfNecessary(String courseId, String sessionName, String... studentEmails) {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String studentEmail : studentEmails) {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!hasGiverRespondedForSession(studentEmail, sessionName, courseId)) {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "                    fsLogic.deleteStudentFromRespondentList(studentEmail, sessionName, courseId);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityDoesNotExistException | InvalidParametersException e) {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                log.warning(String.format("
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Cannot adjust response rate for student %s course %s feedbackSession %s because of %s\","
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                        studentEmail, courseId, sessionName, TeammatesException.toStringWithStackTrace(e)));"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "     * Delete instructor from session respondents if he does not have any responses for the session."
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteInstructorFromRespondentsIfNecessary("
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String sessionName, String... instructorEmails) {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String instructorEmail : instructorEmails) {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!hasGiverRespondedForSession(instructorEmail, sessionName, courseId)) {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                    fsLogic.deleteInstructorRespondent(instructorEmail, sessionName, courseId);"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityDoesNotExistException | InvalidParametersException e) {"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "                log.warning(String.format("
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Cannot adjust response rate for instructor %s course %s feedbackSession %s because of %s\","
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "                        instructorEmail, courseId, sessionName, TeammatesException.toStringWithStackTrace(e)));"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isRecipientTypeTeamMembers(FeedbackQuestionAttributes question) {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        return question.recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "               || question.recipientType \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF;"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates responses for a student when his email changes."
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackResponsesForChangingEmail("
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String oldEmail, String newEmail)"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesFromUser \u003d"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesFromGiverForCourse(courseId, oldEmail);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesFromUser) {"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                updateFeedbackResponseCascade("
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                                .withGiver(newEmail)"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "                                .build());"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.updateFeedbackResponseCommentsEmails(courseId, oldEmail, newEmail);"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityAlreadyExistsException e) {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                        .fail(\"Feedback response failed to update successfully\""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"as email was already in use.\");"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesToUser \u003d"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesForReceiverForCourse(courseId, oldEmail);"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesToUser) {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                updateFeedbackResponseCascade("
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponseAttributes.updateOptionsBuilder(response.getId())"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                                .withRecipient(newEmail)"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                                .build());"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityAlreadyExistsException e) {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "                        .fail(\"Feedback response failed to update successfully \""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \"as email was already in use.\");"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes responses using {@link AttributesDeletionQuery}."
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponses(AttributesDeletionQuery query) {"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses(query);"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback response cascade its associated comments."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will NOT be updated."
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseCascade(String responseId) {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        frcLogic.deleteFeedbackResponseComments("
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseId(responseId)"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponse(responseId);"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback responses of a question cascade its associated comments."
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will also be updated."
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponsesForQuestionCascade(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesForQuestion \u003d"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e emails \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        // record all giver and prepare respondents update"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesForQuestion) {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "            emails.add(response.giver);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete all responses, comments of the question"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        AttributesDeletionQuery query \u003d AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionId(feedbackQuestionId)"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteFeedbackResponses(query);"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        frcLogic.deleteFeedbackResponseComments(query);"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.SELF"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                || question.getGiverType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS) {"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteInstructorFromRespondentsIfNecessary("
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                    question.getCourseId(), question.getFeedbackSessionName(), emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.getGiverType() \u003d\u003d FeedbackParticipantType.STUDENTS) {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteStudentFromRespondentsIfNecessary("
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                    question.getCourseId(), question.getFeedbackSessionName(), emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback responses involved a student cascade its associated comments."
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will also be updated."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponsesInvolvedStudentOfCourseCascade(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e studentEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e instructorEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteFeedbackResponsesInvolvedEntityOfCourseCascade(courseId, studentEmail,"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "                studentEmailsNeedRespondentsUpdate, instructorEmailsNeedRespondentsUpdate);"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        // update respondents"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        studentEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteStudentFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteInstructorFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteStudentFromRespondentsList(courseId, studentEmail);"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback responses involved a team cascade its associated comments."
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponsesInvolvedTeamOfCourseCascade(String courseId, String teamName) {"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e studentEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e instructorEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteResponsesInvolvedTeam(courseId, teamName,"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                studentEmailsNeedRespondentsUpdate, instructorEmailsNeedRespondentsUpdate);"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        // update respondents"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "        studentEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteStudentFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteInstructorFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback responses involved an instructor cascade its associated comments."
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will also be updated."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponsesInvolvedInstructorOfCourseCascade(String courseId, String instructorEmail) {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e studentEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        // key is feedback session name, value is a set of student emails that need respondents update"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e instructorEmailsNeedRespondentsUpdate \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteFeedbackResponsesInvolvedEntityOfCourseCascade(courseId, instructorEmail,"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "                studentEmailsNeedRespondentsUpdate, instructorEmailsNeedRespondentsUpdate);"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        // update respondents"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        studentEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteStudentFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorEmailsNeedRespondentsUpdate.forEach((sessionName, emails) -\u003e {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteInstructorFromRespondentsIfNecessary(courseId, sessionName, emails.toArray(new String[0]));"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteInstructorFromRespondentsList(courseId, instructorEmail);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all feedback responses involved an entity cascade its associated comments."
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId the course id"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param entityEmail the entity email"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param studentEmailsNeedRespondentsUpdate map to keep track of deleted responses for student respondents update"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructorEmailsNeedRespondentsUpdate map to keep track of deleted responses for instructor respondents update"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteFeedbackResponsesInvolvedEntityOfCourseCascade("
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String entityEmail,"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, Set\u003cString\u003e\u003e studentEmailsNeedRespondentsUpdate,"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, Set\u003cString\u003e\u003e instructorEmailsNeedRespondentsUpdate) {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete responses from the entity"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesFromStudent \u003d"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesFromGiverForCourse(courseId, entityEmail);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesFromStudent) {"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteFeedbackResponseCascade(response.getId());"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete responses to the entity"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responsesToStudent \u003d"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponsesForReceiverForCourse(courseId, entityEmail);"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question;"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responsesToStudent) {"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "            question \u003d fqLogic.getFeedbackQuestion(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteFeedbackResponseCascade(response.getId());"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.getGiverType() \u003d\u003d FeedbackParticipantType.STUDENTS) {"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                studentEmailsNeedRespondentsUpdate"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                        .computeIfAbsent(response.feedbackSessionName, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                        .add(response.giver);"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.getGiverType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "                    || question.getGiverType() \u003d\u003d FeedbackParticipantType.SELF) {"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorEmailsNeedRespondentsUpdate"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "                        .computeIfAbsent(response.feedbackSessionName, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                        .add(response.giver);"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds {@link FeedbackResponseAttributes} in {@code newResponses} that are"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "     * not already in to {@code existingResponses} to {@code existingResponses}."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addNewResponses("
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseAttributes\u003e existingResponses,"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseAttributes\u003e newResponses) {"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e existingResponseIds \u003d existingResponses.stream()"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(FeedbackResponseAttributes::getId)"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes newResponse : newResponses) {"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "            String newResponseId \u003d newResponse.getId();"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!existingResponseIds.contains(newResponseId)) {"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                existingResponses.add(newResponse);"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                existingResponseIds.add(newResponseId);"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromTeamForQuestion("
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String courseId, String teamName) {"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e studentsInTeam \u003d"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForTeam(teamName, courseId);"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        for (StudentAttributes student : studentsInTeam) {"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            responses.addAll(frDb.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackQuestionId, student.email));"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        responses.addAll(frDb.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackQuestionId, teamName));"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        return responses;"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForTeamMembersOfStudent("
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, StudentAttributes student) {"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e studentsInTeam \u003d studentsLogic.getStudentsForTeam(student.team, student.course);"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e teamResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "        for (StudentAttributes studentInTeam : studentsInTeam) {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            if (studentInTeam.email.equals(student.email)) {"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                    frDb.getFeedbackResponsesForReceiverForQuestion(feedbackQuestionId, studentInTeam.email);"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "            teamResponses.addAll(responses);"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        return teamResponses;"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e getViewableFeedbackResponsesForStudentForQuestion("
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, String studentEmail) {"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e viewableResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "            addNewResponses(viewableResponses,"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "                    getFeedbackResponsesForQuestion(question.getId()));"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            // Early return as STUDENTS covers all other student types."
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            return viewableResponses;"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d studentsLogic.getStudentForEmail(question.courseId, studentEmail);"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType.isTeam()"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 question.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)) {"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "            addNewResponses("
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                    viewableResponses,"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                    getFeedbackResponsesForReceiverForQuestion("
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                            question.getId(), student.team));"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "                || question.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)) {"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            addNewResponses(viewableResponses,"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "                    getFeedbackResponsesFromTeamForQuestion("
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "                            question.getId(), question.courseId, student.team));"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                .isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS)) {"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "            addNewResponses("
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "                    viewableResponses,"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "                    getFeedbackResponsesForTeamMembersOfStudent("
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "                            question.getId(), student));"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        return viewableResponses;"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 7,
      "-": 930
    }
  },
  {
    "path": "src/main/java/teammates/logic/core/FeedbackSessionsLogic.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map.Entry;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.AttributesDeletionQuery;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseRoster;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResponseStatus;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.UserRole;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackQuestionDetails;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ExceedingRangeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const.SystemParams;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Logger;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.SanitizationHelper;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.StringHelper;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackSessionsDb;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles operations related to feedback sessions."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackSessionAttributes"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackSessionsDb"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "public final class FeedbackSessionsLogic {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger log \u003d Logger.getLogger();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String QUESTION_ID_FOR_RESPONSE_RATE \u003d \"-1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_NAME_PAIR \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_LASTNAME_PAIR \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int EMAIL_TEAMNAME_PAIR \u003d 2;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_FROM_SECTION \u003d \"fromSection\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_IN_SECTION \u003d \"inSection\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_IS_INCLUDE_RESPONSE_STATUS \u003d \"isIncludeResponseStatus\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_QUESTION_ID \u003d \"questionId\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_RANGE \u003d \"range\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_SECTION \u003d \"section\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_TO_SECTION \u003d \"toSection\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PARAM_VIEW_TYPE \u003d \"viewType\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ASSUMPTION_FAIL_DELETE_INSTRUCTOR \u003d \"Fail to delete instructor respondent for \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ASSUMPTION_FAIL_RESPONSE_ORIGIN \u003d \"Client did not indicate the origin of the response(s)\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NUMBER_OF_RESPONSES_EXCEEDS_RANGE \u003d \"Number of responses exceeds the limited range\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_COURSE \u003d \"Error getting feedback session(s): Course does not exist.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_STUDENT \u003d \"Error getting feedback session(s): Student does not exist.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_STRING_FORMAT \u003d \"Trying to %s a non-existent feedback session: \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_GET \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"get\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_UPDATE \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"update\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_CHECK \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"check\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_NON_EXISTENT_FS_VIEW \u003d String.format(ERROR_NON_EXISTENT_FS_STRING_FORMAT, \"view\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_FS_ALREADY_PUBLISH \u003d \"Error publishing feedback session: \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                                                           + \"Session has already been published.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String ERROR_FS_ALREADY_UNPUBLISH \u003d \"Error unpublishing feedback session: \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             + \"Session has already been unpublished.\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackSessionsLogic instance \u003d new FeedbackSessionsLogic();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsDb fsDb \u003d new FeedbackSessionsDb();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionsLogic() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        // prevent initialization"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public static FeedbackSessionsLogic inst() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback session."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback session"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the session is not valid"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the session already exist"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes fsa)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.createEntity(fsa);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getAllOngoingSessions(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the data storage."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found or in recycle bin."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the recycle bin."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getSoftDeletedFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the specified course exists, then gets the feedback sessions for"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * the specified user in the course if it does exist."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user for his course."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourse("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!coursesLogic.isCoursePresent(courseId)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_COURSE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionsForUserInCourseSkipCheck(courseId, userEmail);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the feedback sessions for the specified user in the specified course"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * without checking for the course\u0027s existence.\u003cbr\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method is usually called after the course\u0027s existence is assumed or"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * has been verified."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user for his course."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourseSkipCheck("
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e viewableSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!sessions.isEmpty()) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isInstructorOfCourse \u003d instructor !\u003d null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isFeedbackSessionViewableTo(session, isInstructorOfCourse)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                    viewableSessions.add(session);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        return viewableSessions;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of feedback sessions within the time range or an empty list if nothing was found."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllFeedbackSessionsWithinTimeRange(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSessionsWithinTimeRange(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if there is some open or published email sent for the course."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId - ID of the course"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isOpenOrPublishedEmailSentForTheCourse(String courseId) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            if (session.isSentOpenEmail() || session.isSentPublishedEmail()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions bundled with their"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "     * response statistics for a instructor given by his googleId.\u003cbr\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not return private sessions unless the instructor is the creator."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForInstructor("
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            String googleId)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionDetailsForInstructor(googleId, false);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions bundled with their"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "     * response statistics for a instructor given by his googleId.\u003cbr\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not return private sessions unless the instructor is the creator."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived sessions if omitArchived \u003d\u003d true"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForInstructor("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            String googleId, boolean omitArchived)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionDetailsBundle\u003e fsDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDetails.addAll(getFeedbackSessionDetailsForCourse(instructor.courseId));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDetails;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions WITHOUT their response"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor given by his googleId.\u003cbr\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not return private sessions unless the instructor is the creator."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits sessions from archived courses if omitArchived \u003d\u003d true"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructorList \u003d"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionsListForInstructor(instructorList);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e courseNotDeletedInstructorList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(instructor -\u003e !coursesLogic.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : courseNotDeletedInstructorList) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            fsList.addAll(getFeedbackSessionsListForCourse(instructor.courseId));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsList;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of feedback sessions in the Recycle Bin for a specific instructor."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits sessions if the corresponding course is archived or in Recycle Bin"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        if (coursesLogic.getCourse(instructor.courseId).isCourseDeleted()) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            return fsList;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        fsList.addAll(getSoftDeletedFeedbackSessionsListForCourse(instructor.courseId));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsList;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of feedback sessions in the Recycle Bin for the instructors."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr\u003e"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits sessions if the corresponding courses are archived or in Recycle Bin"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e courseNotDeletedInstructorList \u003d instructorList.stream()"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(instructor -\u003e !coursesLogic.getCourse(instructor.courseId).isCourseDeleted())"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : courseNotDeletedInstructorList) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            fsList.addAll(getSoftDeletedFeedbackSessionsListForCourse(instructor.courseId));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsList;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionListForInstructor("
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        if (coursesLogic.getCourse(instructor.courseId).isCourseDeleted()) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionsListForCourse(instructor.courseId);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that an instructor can view/submit as a"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsForInstructor("
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_GET + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Map\u003cString, String\u003e\u003e recipientList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForInstructor(feedbackSessionName,"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, userEmail);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e commentsForResponses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster(studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questions) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            updateBundleAndRecipientListWithResponsesForInstructor(courseId,"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                    userEmail, fsa, instructor, bundle, recipientList,"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, instructor, null);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            updateBundleWithCommentsForResponses(bundle.get(question), commentsForResponses);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionQuestionsBundle(fsa, bundle, recipientList, commentsForResponses, roster);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateBundleAndRecipientListWithResponsesForInstructor("
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId,"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes fsa,"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle,"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, Map\u003cString, String\u003e\u003e recipientList,"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructorGiver, StudentAttributes studentGiver)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                        question.getId(), userEmail);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e recipients \u003d"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getRecipientsForQuestion(question, userEmail, instructorGiver, studentGiver);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        // instructor can only see students in allowed sections for him/her"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType.equals(FeedbackParticipantType.STUDENTS)) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            recipients.entrySet().removeIf(studentEntry -\u003e {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, studentEntry.getKey());"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                return !instructor.isAllowedForPrivilege(student.section,"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                        fsa.getFeedbackSessionName(), Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        // instructor can only see teams in allowed sections for him/her"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType.equals(FeedbackParticipantType.TEAMS)) {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            recipients.entrySet().removeIf(teamEntry -\u003e {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                String teamSection \u003d studentsLogic.getSectionForTeam(courseId, teamEntry.getKey());"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                return !instructor.isAllowedForPrivilege(teamSection,"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "                        fsa.getFeedbackSessionName(), Const.ParamsNames.INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        normalizeMaximumResponseEntities(question, recipients);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        bundle.put(question, responses);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        recipientList.put(question.getId(), recipients);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that a student can view/submit as a"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_GET + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student \u003d\u003d null) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_STUDENT);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Map\u003cString, String\u003e\u003e recipientList \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName,"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e hiddenInstructorEmails \u003d null;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e commentsForResponses \u003d"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster(studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questions) {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question.getRecipientType() \u003d\u003d FeedbackParticipantType.INSTRUCTORS) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                hiddenInstructorEmails \u003d getHiddenInstructorEmails(courseId);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questions) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            updateBundleAndRecipientListWithResponsesForStudent(userEmail, student,"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                    bundle, recipientList, question, hiddenInstructorEmails);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            updateBundleWithCommentsForResponses(bundle.get(question), commentsForResponses);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionQuestionsBundle(fsa, bundle, recipientList, commentsForResponses, roster);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateBundleWithCommentsForResponses(List\u003cFeedbackResponseAttributes\u003e responses,"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                                                 Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e commentsForResponses) {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : responses) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseCommentAttributes\u003e comments \u003d"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcLogic.getFeedbackResponseCommentForResponse(response.getId());"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            commentsForResponses.put(response.getId(), comments);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "    private void updateBundleAndRecipientListWithResponsesForStudent("
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes student,"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e bundle,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, Map\u003cString, String\u003e\u003e recipientList,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cString\u003e hiddenInstructorEmails)"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesFromStudentOrTeamForQuestion("
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                        question, student);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e recipients \u003d"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getRecipientsForQuestion(question, userEmail, null, student);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        removeHiddenInstructors(question, responses, recipients, hiddenInstructorEmails);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        normalizeMaximumResponseEntities(question, recipients);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        bundle.put(question, responses);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        recipientList.put(question.getId(), recipients);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes instructors who are not displayed to students from"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code recipients}. Responses to the hidden instructors are also removed"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     * from {@code responses}."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param question"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "     *            the feedback question"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param responses"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "     *            a {@link List} of feedback responses to the {@code question}"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param recipients"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "     *            a {@link Map} that maps the emails of the recipients to their"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "     *            names"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param hiddenInstructorEmails"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "     *            a {@link Set} of emails of the instructors who are not"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     *            displayed to students"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    private void removeHiddenInstructors(FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                                         List\u003cFeedbackResponseAttributes\u003e responses,"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                                         Map\u003cString, String\u003e recipients,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                                         Set\u003cString\u003e hiddenInstructorEmails) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isNoChangeRequired \u003d hiddenInstructorEmails \u003d\u003d null"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                                   || hiddenInstructorEmails.isEmpty()"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                                   || question.getRecipientType() !\u003d FeedbackParticipantType.INSTRUCTORS;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isNoChangeRequired) {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String instructorEmail : hiddenInstructorEmails) {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipients.containsKey(instructorEmail)) {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                recipients.remove(instructorEmail);"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            // Remove responses to the hidden instructors if they have been stored already"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            responses.removeIf(response -\u003e response.recipient.equals(instructorEmail));"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@link Set} of emails of the instructors who are not displayed"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     * to students in the course specified by {@code courseId}."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "     *            the ID of the course"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cString\u003e getHiddenInstructorEmails(String courseId) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e hiddenInstructorEmails \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructor.isDisplayedToStudents()) {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                hiddenInstructorEmails.add(instructor.email);"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        return hiddenInstructorEmails;"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the response rate status for a session."
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResponseStatus getFeedbackSessionResponseStatus(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session \u003d\u003d null) {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_VIEW + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d fqLogic.getFeedbackQuestionsForSession(feedbackSessionName,"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster(studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                                               instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResponseStatus(session, roster, allQuestions);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResponseStatus getFeedbackSessionResponseStatus("
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes fsa, CourseRoster roster,"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e questions) {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d new FeedbackSessionResponseStatus();"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d roster.getStudents();"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d roster.getInstructors();"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e studentQns \u003d fqLogic"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                .getFeedbackQuestionsForStudents(questions);"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e studentNoResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e studentResponded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e instructorNoResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!studentQns.isEmpty()) {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes student : students) {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                studentNoResponses.add(student.email);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailNameTable.put(student.email, student.name);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailSectionTable.put(student.email, student.section);"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailTeamNameTable.put(student.email, student.team);"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        studentNoResponses.removeAll(fsa.getRespondingStudentList());"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        studentResponded.addAll(fsa.getRespondingStudentList());"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e instructorQns \u003d fqLogic"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getFeedbackQuestionsForInstructor(questions,"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                            fsa.isCreator(instructor.email));"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructorQns.isEmpty() \u0026\u0026 responseStatus.emailNameTable.get(instructor.email) \u003d\u003d null) {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorNoResponses.add(instructor.email);"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                responseStatus.emailNameTable.put(instructor.email, instructor.name);"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorNoResponses.removeAll(fsa.getRespondingInstructorList());"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        responseStatus.studentsWhoDidNotRespond.addAll(studentNoResponses);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        responseStatus.studentsWhoResponded.addAll(studentResponded);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        responseStatus.studentsWhoDidNotRespond.addAll(instructorNoResponses);"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        return responseStatus;"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor from an indicated question."
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question."
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId)"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                    throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        // Load details of students and instructors once and pass it to callee"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        // methods"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        // (rather than loading them many times)."
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_QUESTION_ID, questionId);"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params, SectionDetail.NOT_APPLICABLE);"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor from an indicated question"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "     * and in a section."
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question."
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId,"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            String selectedSection, SectionDetail selectedSectionDetail)"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d initializeParamsWithSelectedSectionDetail(selectedSectionDetail);"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_QUESTION_ID, questionId);"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, selectedSection);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params, selectedSectionDetail);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in an indicated range."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorWithinRangeFromView("
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, int range, String viewType)"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, null, SectionDetail.NOT_APPLICABLE,"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                range, viewType);"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in a section in an indicated range."
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, SectionDetail sectionDetail,"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            int range, String viewType)"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d initializeParamsWithSelectedSectionDetail(sectionDetail);"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        if (range \u003e 0) {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_RANGE, String.valueOf(range));"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_VIEW_TYPE, viewType);"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params, sectionDetail);"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in a section in an indicated range."
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"true\");"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        if (range \u003e 0) {"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_RANGE, String.valueOf(range));"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params, SectionDetail.NOT_APPLICABLE);"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor in a section in an indicated range."
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_TO_SECTION, \"true\");"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        if (range \u003e 0) {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_RANGE, String.valueOf(range));"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          UserRole.INSTRUCTOR, roster, params, SectionDetail.NOT_APPLICABLE);"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForInstructorInSection(feedbackSessionName, courseId, userEmail, null,"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "                SectionDetail.NOT_APPLICABLE);"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to an instructor for a specific section."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSection("
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            String section, SectionDetail sectionDetail)"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d initializeParamsWithSelectedSectionDetail(sectionDetail);"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_IS_INCLUDE_RESPONSE_STATUS, \"true\");"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        params.put(PARAM_SECTION, section);"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserWithParams(feedbackSessionName,"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, userEmail, UserRole.INSTRUCTOR, roster, params, sectionDetail);"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets results of a feedback session to show to a student."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent("
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                UserRole.STUDENT, null);"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "            String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, null, SectionDetail.NOT_APPLICABLE,"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section,"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            SectionDetail sectionDetail, String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResultsBundle results;"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        int indicatedRange \u003d section \u003d\u003d null ? Const.INSTRUCTOR_VIEW_RESPONSE_LIMIT : -1;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        if (questionId \u003d\u003d null) {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            results \u003d getFeedbackSessionResultsForInstructorInSectionWithinRangeFromView("
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, section, sectionDetail,"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "                indicatedRange, Const.FeedbackSessionResults.GRQ_SORT_TYPE);"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (section \u003d\u003d null) {"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            results \u003d getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackSessionName, courseId, userEmail, questionId);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            results \u003d getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "                    feedbackSessionName, courseId, userEmail, questionId, section, sectionDetail);"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!results.isComplete) {"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ExceedingRangeException(ERROR_NUMBER_OF_RESPONSES_EXCEEDS_RANGE);"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        // sort responses by giver \u003e recipient \u003e qnNumber"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "        results.responses.sort(results.compareByGiverRecipientQuestion);"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder(100);"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(String.format(\"Course,%s\","
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                             SanitizationHelper.sanitizeForCsv(results.feedbackSession.getCourseId())))"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                     .append(System.lineSeparator())"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "                     .append(String.format(\"Session Name,%s\","
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "                             SanitizationHelper.sanitizeForCsv(results.feedbackSession.getFeedbackSessionName())))"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "                     .append(System.lineSeparator());"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        if (section !\u003d null) {"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(String.format(\"Section Name,%s\", SanitizationHelper.sanitizeForCsv(section)))"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "                         .append(System.lineSeparator());"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sectionDetail !\u003d SectionDetail.NOT_APPLICABLE) {"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(String.format(\"Section View Detail,%s\", SanitizationHelper.sanitizeForCsv("
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "                    sectionDetail.getSectionDetail()))).append(System.lineSeparator());"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(System.lineSeparator()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cEntry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e\u003e entrySet \u003d"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                results.getQuestionResponseMap().entrySet();"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Map.Entry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e entry : entrySet) {"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(getFeedbackSessionResultsForQuestionInCsvFormat("
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "                    results, entry, isMissingResponsesShown, isStatsShown, section));"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder.toString();"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringBuilder getFeedbackSessionResultsForQuestionInCsvFormat("
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle fsrBundle,"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.Entry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e entry,"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isMissingResponsesShown, boolean isStatsShown, String section) {"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d entry.getKey();"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionDetails questionDetails \u003d question.getQuestionDetails();"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e allResponses \u003d entry.getValue();"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(\"Question \" + Integer.toString(question.questionNumber) + \",\""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                + SanitizationHelper.sanitizeForCsv(questionDetails.getQuestionText())"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                + System.lineSeparator() + System.lineSeparator());"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        String statistics \u003d questionDetails.getQuestionResultStatisticsCsv(allResponses,"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                                    question, fsrBundle);"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!statistics.isEmpty() \u0026\u0026 isStatsShown) {"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(\"Summary Statistics,\").append(System.lineSeparator());"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(statistics).append(System.lineSeparator());"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e possibleGiversWithoutResponses \u003d fsrBundle.getPossibleGiversInSection(question, section);"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e possibleRecipientsForGiver \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        String prevGiver \u003d \"\";"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        int maxNumOfInstructorComments \u003d getMaxNumberOfInstructorComments(allResponses, fsrBundle.getResponseComments());"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(questionDetails.getCsvDetailedResponsesHeader(maxNumOfInstructorComments));"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : allResponses) {"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!fsrBundle.isRecipientVisible(response) || !fsrBundle.isGiverVisible(response)) {"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "                possibleGiversWithoutResponses.clear();"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                possibleRecipientsForGiver.clear();"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            // keep track of possible recipients with no responses"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "            removeParticipantIdentifierFromList(question.giverType,"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "                    possibleGiversWithoutResponses, response.giver, fsrBundle);"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isNewGiver \u003d !prevGiver.equals(response.giver);"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "            // print missing responses from the current giver"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isNewGiver \u0026\u0026 isMissingResponsesShown) {"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "                exportBuilder.append(getRowsOfPossibleRecipientsInCsvFormat(fsrBundle,"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                        question, questionDetails,"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                        possibleRecipientsForGiver, prevGiver));"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                String giverIdentifier \u003d question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                                             ? fsrBundle.getFullNameFromRoster(response.giver)"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                                             : response.giver;"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                possibleRecipientsForGiver \u003d fsrBundle.getPossibleRecipients(question, giverIdentifier);"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "            removeParticipantIdentifierFromList(question.recipientType, possibleRecipientsForGiver,"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "                                                response.recipient, fsrBundle);"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "            prevGiver \u003d response.giver;"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(questionDetails.getCsvDetailedResponsesRow(fsrBundle, response, question));"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        // add the rows for the possible givers and recipients who have missing responses"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isMissingResponsesShown) {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append("
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "                    getRemainingRowsInCsvFormat("
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "                            fsrBundle, entry, question, questionDetails,"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "                            possibleGiversWithoutResponses, possibleRecipientsForGiver, prevGiver));"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "        exportBuilder.append(System.lineSeparator() + System.lineSeparator());"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder;"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "    private int getMaxNumberOfInstructorComments(List\u003cFeedbackResponseAttributes\u003e allResponses,"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments) {"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        if (allResponses \u003d\u003d null || allResponses.isEmpty()) {"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        int maxCommentsNum \u003d 0;"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : allResponses) {"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseCommentAttributes\u003e commentAttributes \u003d responseComments.get(response.getId());"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            if (commentAttributes !\u003d null) {"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "                commentAttributes \u003d commentAttributes.stream()"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "                                            .filter(comment -\u003e !comment.isCommentFromFeedbackParticipant)"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "                                            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "                if (maxCommentsNum \u003c commentAttributes.size()) {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                    maxCommentsNum \u003d commentAttributes.size();"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        return maxCommentsNum;"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "     * Given a participantIdentifier, remove it from participantIdentifierList."
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eBefore removal, {@link FeedbackSessionResultsBundle#getFullNameFromRoster} is used to"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "     * convert the identifier into a canonical form if the participantIdentifierType is TEAMS."
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "    private void removeParticipantIdentifierFromList("
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackParticipantType participantIdentifierType,"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e participantIdentifierList, String participantIdentifier,"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle bundle) {"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        if (participantIdentifierType \u003d\u003d FeedbackParticipantType.TEAMS) {"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            participantIdentifierList.remove(bundle.getFullNameFromRoster(participantIdentifier));"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "            participantIdentifierList.remove(participantIdentifier);"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generate rows of missing responses for the remaining possible givers and recipients."
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf for the prevGiver, possibleRecipientsForGiver is not empty,"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "     * the remaining missing responses for the prevGiver will be generated first."
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the remaining rows of missing responses in csv format"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringBuilder getRemainingRowsInCsvFormat("
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle results,"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "            Map.Entry\u003cFeedbackQuestionAttributes, List\u003cFeedbackResponseAttributes\u003e\u003e entry,"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionDetails questionDetails,"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e remainingPossibleGivers,"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e possibleRecipientsForGiver, String prevGiver) {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "        if (possibleRecipientsForGiver !\u003d null) {"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(getRowsOfPossibleRecipientsInCsvFormat(results,"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, questionDetails, possibleRecipientsForGiver,"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                    prevGiver));"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        removeParticipantIdentifierFromList(question.giverType, remainingPossibleGivers, prevGiver, results);"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String possibleGiverWithNoResponses : remainingPossibleGivers) {"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e possibleRecipientsForRemainingGiver \u003d"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                    results.getPossibleRecipients(entry.getKey(), possibleGiverWithNoResponses);"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "            exportBuilder.append(getRowsOfPossibleRecipientsInCsvFormat(results,"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, questionDetails, possibleRecipientsForRemainingGiver,"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "                    possibleGiverWithNoResponses));"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder;"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "     * For a giver and a list of possibleRecipientsForGiver, generate rows"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "     * of missing responses between the giver and the possible recipients."
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "    private StringBuilder getRowsOfPossibleRecipientsInCsvFormat("
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionResultsBundle results,"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionDetails questionDetails,"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cString\u003e possibleRecipientsForGiver, String giver) {"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder exportBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String possibleRecipient : possibleRecipientsForGiver) {"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverName \u003d results.getFullNameFromRoster(giver);"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverLastName \u003d results.getLastNameFromRoster(giver);"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverEmail \u003d results.getDisplayableEmailFromRoster(giver);"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "            String possibleRecipientName \u003d results.getFullNameFromRoster(possibleRecipient);"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "            String possibleRecipientLastName \u003d results.getLastNameFromRoster(possibleRecipient);"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "            String possibleRecipientEmail \u003d results.getDisplayableEmailFromRoster(possibleRecipient);"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            if (questionDetails.shouldShowNoResponseText(question)) {"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                exportBuilder.append(SanitizationHelper.sanitizeForCsv(results.getTeamNameFromRoster(giver))"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(giverName))"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(giverLastName))"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(giverEmail))"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(results.getTeamNameFromRoster(possibleRecipient))"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(possibleRecipientName))"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(possibleRecipientLastName))"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + SanitizationHelper.sanitizeForCsv(StringHelper.removeExtraSpace(possibleRecipientEmail))"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \",\" + questionDetails.getNoResponseTextInCsv(giver, possibleRecipient, results, question)"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "        return exportBuilder;"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "     * Criteria: must be published, publishEmail must be enabled and"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "     * resultsVisibleTime must be custom."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return returns a list of sessions that require automated emails to be"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "     *         sent as they are published"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsDb.getFeedbackSessionsPossiblyNeedingPublishedEmail();"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToSendEmailsFor \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "            // automated emails are required only for custom publish times"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!coursesLogic.getCourse(session.getCourseId()).isCourseDeleted()"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 session.isPublished()"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !TimeHelper.isSpecialTime(session.getResultsVisibleFromTime())) {"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionsToSendEmailsFor.add(session);"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionsToSendEmailsFor;"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsDb.getFeedbackSessionsPossiblyNeedingOpenEmail();"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToSendEmailsFor \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!coursesLogic.getCourse(session.getCourseId()).isCourseDeleted() \u0026\u0026 session.isOpened()) {"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionsToSendEmailsFor.add(session);"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        return sessionsToSendEmailsFor;"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCreatorOfSession(String feedbackSessionName, String courseId, String userEmail) {"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "        return fs.getCreatorEmail().equals(userEmail);"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionExists(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSession(courseId, feedbackSessionName) !\u003d null;"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionHasQuestionForStudents("
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName,"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFeedbackSessionExists(feedbackSessionName, courseId)) {"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_CHECK + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName,"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId);"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "        return !allQuestions.isEmpty();"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail) {"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa.getRespondingStudentList().contains(userEmail)) {"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fsa.getFeedbackSessionName();"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fsa.getCourseId();"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        // if there is no question for students, session is complete"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "        return allQuestions.isEmpty();"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa.getRespondingInstructorList().contains(userEmail)) {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fsa.getFeedbackSessionName();"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fsa.getCourseId();"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        // if there is no question for instructor, session is complete"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "        return allQuestions.isEmpty();"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAdjust email sending status if necessary."
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback session"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes oldSession \u003d"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSession(updateOptions.getCourseId(), updateOptions.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession \u003d\u003d null) {"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + updateOptions.getCourseId()"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"/\" + updateOptions.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes newSession \u003d oldSession.getCopy();"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        newSession.update(updateOptions);"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes.UpdateOptions.Builder newUpdateOptions \u003d"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(updateOptions);"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "        // adjust email sending status"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "        // reset sentOpenEmail if the session has opened but is being un-opened"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        // now, or else leave it as sent if so."
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession.isSentOpenEmail()) {"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            newUpdateOptions.withSentOpenEmail(newSession.isOpened());"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "        // reset sentClosedEmail if the session has closed but is being un-closed"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "        // now, or else leave it as sent if so."
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession.isSentClosedEmail()) {"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            newUpdateOptions.withSentClosedEmail(newSession.isClosed());"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "            // also reset sentClosingEmail"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "            newUpdateOptions.withSentClosingEmail("
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "                    newSession.isClosed()"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "                            || newSession.isClosedAfter(SystemParams.NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT));"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        // reset sentPublishedEmail if the session has been published but is"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "        // going to be unpublished now, or else leave it as sent if so."
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldSession.isSentPublishedEmail()) {"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "            newUpdateOptions.withSentPublishedEmail(newSession.isPublished());"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.updateFeedbackSession(newUpdateOptions.build());"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates all feedback sessions of {@code courseId} to have be in {@code courseTimeZone}."
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateFeedbackSessionsTimeZoneForCourse(String courseId, ZoneId courseTimeZone) {"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseTimeZone);"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsForCourse \u003d fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        fsForCourse.forEach(fs -\u003e {"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackSessionAttributes.updateOptionsBuilder(fs.getFeedbackSessionName(), fs.getCourseId())"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "                                .withTimeZone(courseTimeZone)"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "                                .build());"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (EntityDoesNotExistException | InvalidParametersException e) {"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "                log.severe(\"Cannot adjust timezone of courses: \" + e.getMessage());"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the instructor with {@code oldEmail} to {@code newEmail} in the instructor respondent list"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "     * in all feedback session of course {@code courseId}."
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateRespondentsForInstructor(String oldEmail, String newEmail, String courseId)"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e feedbackSessions \u003d getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : feedbackSessions) {"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "                    FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "                            .withUpdatingInstructorRespondent(oldEmail, newEmail)"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "                            .build());"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the student with {@code oldEmail} to {@code newEmail} in the student respondent list"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "     * in all feedback session of course {@code courseId}."
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateRespondentsForStudent(String oldEmail, String newEmail, String courseId)"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e feedbackSessions \u003d getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : feedbackSessions) {"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "                    FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "                            .withUpdatingStudentRespondent(oldEmail, newEmail)"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                            .build());"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the instructor\u0027s email from the instructor respondents set of all feedback sessions"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "     * in the corresponding course."
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorFromRespondentsList(String courseId, String email) {"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToUpdate \u003d"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessionsToUpdate) {"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteInstructorRespondent(email, session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (InvalidParametersException | EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_DELETE_INSTRUCTOR + session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the student\u0027s email from the student respondents set of all feedback sessions"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "     * in the corresponding course."
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentFromRespondentsList(String courseId, String email) {"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionsToUpdate \u003d"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessionsToUpdate) {"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                deleteStudentFromRespondentList(email, session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (InvalidParametersException | EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_DELETE_INSTRUCTOR + session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds an instructor in the instructor respondent set of a feedback session."
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(feedbackSessionName, courseId)"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withAddingInstructorRespondent(email)"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a student in the instructor respondent set of a feedback session."
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(feedbackSessionName, courseId)"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withAddingStudentRespondent(email)"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor in the instructor respondent set of a feedback session."
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(feedbackSessionName, courseId)"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRemovingInstructorRespondent(email)"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student in the instructor respondent set of a feedback session."
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentFromRespondentList(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, feedbackSessionName);"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, courseId);"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.NULL_PARAMETER, email);"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(feedbackSessionName, courseId)"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRemovingStudentRespondent(email)"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "     * Publishes a feedback session."
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @return the published feedback session"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if session is already published"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes sessionToPublish \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        if (sessionToPublish \u003d\u003d null) {"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sessionToPublish.isPublished()) {"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(ERROR_FS_ALREADY_PUBLISH);"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return updateFeedbackSession("
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(sessionToPublish.getFeedbackSessionName(), sessionToPublish.getCourseId())"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(Instant.now())"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "     * Unpublishes a feedback session."
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @return the unpublished feedback session"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if session is already unpublished"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes sessionToUnpublish \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        if (sessionToUnpublish \u003d\u003d null) {"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_UPDATE + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!sessionToUnpublish.isPublished()) {"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(ERROR_FS_ALREADY_UNPUBLISH);"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return updateFeedbackSession("
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(sessionToUnpublish.getFeedbackSessionName(), sessionToUnpublish.getCourseId())"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e requiredSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsDb.getFeedbackSessionsPossiblyNeedingClosingEmail();"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!coursesLogic.getCourse(session.getCourseId()).isCourseDeleted()"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 session.isClosingWithinTimeLimit(SystemParams.NUMBER_OF_HOURS_BEFORE_CLOSING_ALERT)) {"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "                requiredSessions.add(session);"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        return requiredSessions;"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns returns a list of sessions that were closed within past hour."
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e requiredSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsDb.getFeedbackSessionsPossiblyNeedingClosedEmail();"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : sessions) {"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "            // is session closed in the past 1 hour"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!coursesLogic.getCourse(session.getCourseId()).isCourseDeleted() \u0026\u0026 session.isClosedWithinPastHour()) {"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "                requiredSessions.add(session);"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "        return requiredSessions;"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback session cascade to its associated questions, responses and comments."
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "        AttributesDeletionQuery query \u003d AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(courseId)"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(feedbackSessionName)"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "        frcLogic.deleteFeedbackResponseComments(query);"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "        frLogic.deleteFeedbackResponses(query);"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        fqLogic.deleteFeedbackQuestions(query);"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.deleteFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes sessions using {@link AttributesDeletionQuery}."
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessions(AttributesDeletionQuery query) {"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.deleteFeedbackSessions(query);"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "     * Soft-deletes a specific feedback session to Recycle Bin."
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the time when the feedback session is moved to the recycle bin"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "    public Instant moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.softDeleteFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a specific feedback session from Recycle Bin."
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.restoreDeletedFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all feedback sessions from Recycle Bin."
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllFeedbackSessionsFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(\"Supplied parameter was null\", instructorList);"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e feedbackSessionsList \u003d"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "                getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : feedbackSessionsList) {"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "            restoreFeedbackSessionFromRecycleBin(session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fsa \u003d\u003d null) {"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(\"Feedback session does not exist\");"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionDetails(fsa);"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails(FeedbackSessionAttributes fsa) {"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionDetailsBundle details \u003d"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "                new FeedbackSessionDetailsBundle(fsa);"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "        details.stats.expectedTotal \u003d 0;"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "        details.stats.submittedTotal \u003d 0;"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(fsa.getCourseId());"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(fsa.getCourseId());"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questions \u003d"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId());"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e studentQns \u003d fqLogic.getFeedbackQuestionsForStudents(questions);"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!studentQns.isEmpty()) {"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "            details.stats.expectedTotal +\u003d students.size();"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructors) {"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e instructorQns \u003d"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "                    fqLogic.getFeedbackQuestionsForInstructor(questions, fsa.isCreator(instructor.email));"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!instructorQns.isEmpty()) {"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "                details.stats.expectedTotal +\u003d 1;"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        details.stats.submittedTotal +\u003d fsa.getRespondingStudentList().size() + fsa.getRespondingInstructorList().size();"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Get the feedback results for user in a section iterated by questions */"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, String section)"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "        // Load details of students and instructors once and pass it to callee"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        // methods"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "        // (rather than loading them many times)."
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRoster roster \u003d new CourseRoster("
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsLogic.getStudentsForCourse(courseId),"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorsLogic.getInstructorsForCourse(courseId));"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, role, section, roster);"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "    /* Get the feedback results for user in a section iterated by questions */"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForUserInSectionByQuestions("
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, String section, CourseRoster roster)"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d fsDb.getFeedbackSession("
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session \u003d\u003d null) {"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_VIEW + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "        // create empty data containers to store results"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailLastNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, boolean[]\u003e visibilityTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d new FeedbackSessionResponseStatus();"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d fqLogic.getFeedbackQuestionsForSession("
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : allQuestions) {"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackResponseAttributes\u003e responsesForThisQn;"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "            responsesForThisQn \u003d frLogic.getViewableFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "                    question, userEmail, role, section, null);"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasResponses \u003d !responsesForThisQn.isEmpty();"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasResponses) {"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "                relevantQuestions.put(question.getId(), question);"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "                responses.addAll(responsesForThisQn);"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "                for (FeedbackResponseAttributes response : responsesForThisQn) {"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "                    relevantResponse.put(response.getId(), response);"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailNamePairsToTable(emailNameTable, response,"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "                            question, roster);"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailLastNamePairsToTable(emailLastNameTable, response,"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "                            question, roster);"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailTeamNamePairsToTable(emailTeamNameTable, response,"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "                            question, roster);"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "                    addVisibilityToTable(visibilityTable, question, response,"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "                            userEmail, role, roster);"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d null;"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e studentsEmailInTeam \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isStudent(role)) {"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "            student \u003d studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cStudentAttributes\u003e studentsInTeam \u003d studentsLogic"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getStudentsForTeam(student.team, courseId);"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes teammates : studentsInTeam) {"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsEmailInTeam.add(teammates.email);"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e allResponseComments \u003d"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSession(courseId,"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName);"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseCommentAttributes frc : allResponseComments) {"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes relatedResponse \u003d relevantResponse.get(frc.feedbackResponseId);"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion \u003d relevantQuestions.get(frc.feedbackQuestionId);"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isVisibleResponseComment \u003d frcLogic.isResponseCommentVisibleForUser(userEmail,"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "                    role, student, studentsEmailInTeam, relatedResponse, relatedQuestion, frc);"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isVisibleResponseComment) {"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!frcLogic.isNameVisibleToUser(frc, relatedResponse, userEmail, roster)) {"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "                    frc.commentGiver \u003d Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT;"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "                responseComments.computeIfAbsent(frc.feedbackResponseId, string -\u003e new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "                        .add(frc);"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "        for (List\u003cFeedbackResponseCommentAttributes\u003e responseCommentList : responseComments"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "                .values()) {"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "            sortByCreatedDate(responseCommentList);"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        addSectionTeamNamesToTable(sectionTeamNameTable, roster, courseId, userEmail, role, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionResultsBundle("
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "                        session, responses, relevantQuestions, emailNameTable,"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "                        emailLastNameTable, emailTeamNameTable, sectionTeamNameTable,"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "                        visibilityTable, responseStatus, roster, responseComments);"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, String\u003e initializeParamsWithSelectedSectionDetail(SectionDetail sectionDetail) {"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "        switch(sectionDetail) {"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "        // default for \u0027all\u0027 section selected will be EITHER case"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "        case NOT_APPLICABLE:"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "        case EITHER:"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "            // either giver or recipient needs to be in the selected section"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_IN_SECTION, \"true\");"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "        case GIVER:"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_FROM_SECTION, \"true\");"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_TO_SECTION, \"false\");"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        case EVALUEE:"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_FROM_SECTION, \"false\");"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_TO_SECTION, \"true\");"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "        case BOTH:"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "            // both giver and recipient must be from the selected section"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_IN_SECTION, \"false\");"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_FROM_SECTION, \"true\");"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "            params.put(PARAM_TO_SECTION, \"true\");"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Invalid section detail entered.\");"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "        return params;"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForUserWithParams("
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, CourseRoster roster, Map\u003cString, String\u003e params, SectionDetail sectionDetail)"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d fsDb.getFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session \u003d\u003d null) {"
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_VIEW + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "        //Show all questions even if no responses, unless is an ajax request for a specific question."
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions \u003d getAllQuestions(role, params, allQuestions);"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isIncludeResponseStatus \u003d Boolean.parseBoolean(params.get(PARAM_IS_INCLUDE_RESPONSE_STATUS));"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "        String section \u003d params.get(PARAM_SECTION);"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d params.get(PARAM_QUESTION_ID);"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "        if (questionId !\u003d null) {"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "            return getFeedbackSessionResultsForQuestionId(feedbackSessionName, courseId, userEmail, role, roster, session,"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "                    allQuestions, relevantQuestions, isIncludeResponseStatus, section, sectionDetail, questionId);"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e allQuestionsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "        putQuestionsIntoMap(allQuestions, allQuestionsMap);"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e allResponses \u003d getAllResponses(feedbackSessionName, courseId, params, section);"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "        String rangeString \u003d params.get(PARAM_RANGE);"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isComplete \u003d rangeString \u003d\u003d null || allResponses.size() \u003c\u003d Integer.parseInt(rangeString);"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isComplete) {"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "            putQuestionsIntoMap(allQuestions, relevantQuestions);"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        // create empty data containers to store results"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailLastNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, boolean[]\u003e visibilityTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d section \u003d\u003d null \u0026\u0026 isIncludeResponseStatus"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     ? getFeedbackSessionResponseStatus(session, roster, allQuestions)"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "                                                     : null;"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d getStudent(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e studentsEmailInTeam \u003d getTeammateEmails(courseId, student);"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d getInstructor(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : allResponses) {"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion \u003d allQuestionsMap.get(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "            if (relatedQuestion !\u003d null) {"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isVisibleResponse \u003d isResponseVisibleForUser("
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "                        userEmail, role, student, studentsEmailInTeam, response, relatedQuestion, instructor);"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isVisibleResponse) {"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "                    responses.add(response);"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "                    relevantResponse.put(response.getId(), response);"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "                    relevantQuestions.put(relatedQuestion.getId(), relatedQuestion);"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailNamePairsToTable(emailNameTable, response, relatedQuestion, roster);"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailLastNamePairsToTable(emailLastNameTable, response, relatedQuestion, roster);"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "                    addEmailTeamNamePairsToTable(emailTeamNameTable, response, relatedQuestion, roster);"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "                    addVisibilityToTable(visibilityTable, relatedQuestion, response, userEmail, role, roster);"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d getResponseComments("
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, userEmail, role, roster, relevantQuestions, section, student,"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsEmailInTeam, relevantResponse);"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        addSectionTeamNamesToTable(sectionTeamNameTable, roster, courseId, userEmail, role, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionResultsBundle("
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "                session, responses, relevantQuestions, emailNameTable,"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "                emailLastNameTable, emailTeamNameTable, sectionTeamNameTable,"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "                visibilityTable, responseStatus, roster, responseComments, isComplete);"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e getResponseComments("
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, UserRole role, CourseRoster roster,"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions, String section, StudentAttributes student,"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cString\u003e studentsEmailInTeam, Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse) {"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e allResponseComments \u003d"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSessionInSection(courseId, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseCommentAttributes frc : allResponseComments) {"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes relatedResponse \u003d relevantResponse.get(frc.feedbackResponseId);"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion \u003d relevantQuestions.get(frc.feedbackQuestionId);"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isVisibleResponseComment \u003d frcLogic.isResponseCommentVisibleForUser("
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "                    userEmail, role, student, studentsEmailInTeam, relatedResponse, relatedQuestion, frc);"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isVisibleResponseComment) {"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!frcLogic.isNameVisibleToUser(frc, relatedResponse, userEmail, roster)) {"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "                    frc.commentGiver \u003d Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT;"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFeedbackResponseCommentAttributes\u003e frcList \u003d responseComments.get(frc.feedbackResponseId);"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "                if (frcList \u003d\u003d null) {"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcList.add(frc);"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseComments.put(frc.feedbackResponseId, frcList);"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "                    frcList.add(frc);"
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "        for (List\u003cFeedbackResponseCommentAttributes\u003e responseCommentList : responseComments.values()) {"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "            sortByCreatedDate(responseCommentList);"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "        return responseComments;"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "    private void putQuestionsIntoMap("
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFeedbackQuestionAttributes\u003e questions, Map\u003cString, FeedbackQuestionAttributes\u003e questionMap) {"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes qn : questions) {"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "            questionMap.put(qn.getId(), qn);"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes getInstructor(String courseId, String userEmail, UserRole role) {"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructor(role)) {"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "            return instructorsLogic.getInstructorForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "    * Gets emails of student\u0027s teammates if student is not null, else returns an empty Set\u003cString\u003e"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "    */"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cString\u003e getTeammateEmails(String courseId, StudentAttributes student) {"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e studentsEmailInTeam \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "        if (student !\u003d null) {"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cStudentAttributes\u003e studentsInTeam \u003d studentsLogic.getStudentsForTeam(student.team, courseId);"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes teammates : studentsInTeam) {"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "                studentsEmailInTeam.add(teammates.email);"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsEmailInTeam;"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes getStudent(String courseId, String userEmail, UserRole role) {"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isStudent(role)) {"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "            return studentsLogic.getStudentForEmail(courseId, userEmail);"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionResultsBundle getFeedbackSessionResultsForQuestionId(String feedbackSessionName,"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "                String courseId, String userEmail, UserRole role, CourseRoster roster, FeedbackSessionAttributes session,"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFeedbackQuestionAttributes\u003e allQuestions, Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions,"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isIncludeResponseStatus, String section, SectionDetail sectionDetail, String questionId) {"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailLastNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e emailTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, boolean[]\u003e visibilityTable \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, List\u003cFeedbackResponseCommentAttributes\u003e\u003e responseComments \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResponseStatus responseStatus \u003d new FeedbackSessionResponseStatus();"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isQueryingResponseRateStatus \u003d questionId.equals(QUESTION_ID_FOR_RESPONSE_RATE);"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isQueryingResponseRateStatus) {"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "            responseStatus \u003d section \u003d\u003d null \u0026\u0026 isIncludeResponseStatus"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "                           ? getFeedbackSessionResponseStatus(session, roster, allQuestions)"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "                           : null;"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question \u003d fqLogic.getFeedbackQuestion(questionId);"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "            if (question !\u003d null) {"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "                relevantQuestions.put(question.getId(), question);"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cFeedbackResponseAttributes\u003e responsesForThisQn;"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "                responsesForThisQn \u003d frLogic.getViewableFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "                                                question, userEmail, UserRole.INSTRUCTOR, section, sectionDetail);"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "                StudentAttributes student \u003d getStudent(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "                Set\u003cString\u003e studentsEmailInTeam \u003d getTeammateEmails(courseId, student);"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean hasResponses \u003d !responsesForThisQn.isEmpty();"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "                if (hasResponses) {"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "                    Map\u003cString, FeedbackResponseAttributes\u003e relevantResponse \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (FeedbackResponseAttributes response : responsesForThisQn) {"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "                        InstructorAttributes instructor \u003d getInstructor(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "                        boolean isVisibleResponse \u003d isResponseVisibleForUser(userEmail, role, null, null, response,"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                             question, instructor);"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (isVisibleResponse) {"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "                            relevantResponse.put(response.getId(), response);"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "                            relevantQuestions.put(question.getId(), question);"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "                            responses.add(response);"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "                            addEmailNamePairsToTable(emailNameTable, response, question, roster);"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "                            addEmailLastNamePairsToTable(emailLastNameTable, response, question, roster);"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "                            addEmailTeamNamePairsToTable(emailTeamNameTable, response, question, roster);"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "                            addVisibilityToTable(visibilityTable, question, response, userEmail, role, roster);"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseComments \u003d getResponseComments("
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "                            feedbackSessionName, courseId, userEmail, role, roster, relevantQuestions, section, student,"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "                            studentsEmailInTeam, relevantResponse);"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "        addSectionTeamNamesToTable("
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "                sectionTeamNameTable, roster, courseId, userEmail, role, feedbackSessionName, section);"
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "        return new FeedbackSessionResultsBundle("
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "                session, responses, relevantQuestions, emailNameTable,"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "                emailLastNameTable, emailTeamNameTable, sectionTeamNameTable,"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "                visibilityTable, responseStatus, roster, responseComments, true);"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, FeedbackQuestionAttributes\u003e getAllQuestions("
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, Map\u003cString, String\u003e params, List\u003cFeedbackQuestionAttributes\u003e allQuestions) {"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackQuestionAttributes\u003e relevantQuestions \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructor(role) \u0026\u0026 !params.containsKey(PARAM_QUESTION_ID)) {"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "            putQuestionsIntoMap(allQuestions, relevantQuestions);"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "        return relevantQuestions;"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isStudent(UserRole role) {"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "        return role \u003d\u003d UserRole.STUDENT;"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isInstructor(UserRole role) {"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "        return role \u003d\u003d UserRole.INSTRUCTOR;"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e getAllResponses(String feedbackSessionName, String courseId,"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e params, String section) {"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isInSection \u003d Boolean.parseBoolean(params.get(PARAM_IN_SECTION));"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isToSection \u003d Boolean.parseBoolean(params.get(PARAM_TO_SECTION));"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isFromSection \u003d Boolean.parseBoolean(params.get(PARAM_FROM_SECTION));"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "        if (params.get(PARAM_RANGE) \u003d\u003d null) {"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isFromSection \u0026\u0026 isToSection) {"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionInGiverAndRecipientSection(feedbackSessionName,"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, section);"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isInSection) {"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isFromSection) {"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionFromSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isToSection) {"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionToSection(feedbackSessionName, courseId, section);"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_RESPONSE_ORIGIN);"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": "            int range \u003d Integer.parseInt(params.get(PARAM_RANGE));"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isInSection) {"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionInSectionWithinRange("
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isFromSection) {"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (isToSection) {"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "                return frLogic.getFeedbackResponsesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range);"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "                Assumption.fail(ASSUMPTION_FAIL_RESPONSE_ORIGIN);"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "        return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addSectionTeamNamesToTable(Map\u003cString, Set\u003cString\u003e\u003e sectionTeamNameTable,"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "                                    CourseRoster roster, String courseId, String userEmail, UserRole role,"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String feedbackSessionName, String sectionToView) {"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d getInstructor(courseId, userEmail, role);"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": "        if (instructor !\u003d null) {"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "            for (StudentAttributes student : roster.getStudents()) {"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isVisibleResponse \u003d"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "                        instructor.isAllowedForPrivilege("
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "                                           student.section,"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "                                           feedbackSessionName,"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "                                           Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isStudentInSelectedSection \u003d student.section.equals(sectionToView);"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "                boolean isViewingAllSections \u003d sectionToView \u003d\u003d null;"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isVisibleResponse \u0026\u0026 (isViewingAllSections"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "                                          || isStudentInSelectedSection)) {"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "                    String section \u003d student.section;"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "                    sectionTeamNameTable.computeIfAbsent(section, key -\u003e new HashSet\u003c\u003e())"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "                                        .add(student.team);"
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isResponseVisibleForUser(String userEmail,"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role, StudentAttributes student,"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cString\u003e studentsEmailInTeam,"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes relatedQuestion, InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isVisibleResponse \u003d false;"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructor(role) \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "                || response.recipient.equals(userEmail)"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "                || response.giver.equals(userEmail)"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "                || isStudent(role) \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.STUDENTS)) {"
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "            isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (studentsEmailInTeam !\u003d null \u0026\u0026 isStudent(role)) {"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "            if (relatedQuestion.recipientType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER)"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 response.recipient.equals(student.team)) {"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (relatedQuestion.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "                       \u0026\u0026 studentsEmailInTeam.contains(response.giver)) {"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.OWN_TEAM_MEMBERS)"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "                       \u0026\u0026 studentsEmailInTeam.contains(response.giver)) {"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (relatedQuestion.isResponseVisibleTo(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS)"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "                       \u0026\u0026 studentsEmailInTeam.contains(response.recipient)) {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d true;"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isVisibleResponse \u0026\u0026 instructor !\u003d null) {"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isGiverSectionRestricted \u003d"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "                    !instructor.isAllowedForPrivilege(response.giverSection,"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      response.feedbackSessionName,"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "                                                      Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "            // If instructors are not restricted to view the giver\u0027s section,"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "            // they are allowed to view responses to GENERAL, subject to visibility options"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isRecipientSectionRestricted \u003d"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "                    relatedQuestion.recipientType !\u003d FeedbackParticipantType.NONE"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !instructor.isAllowedForPrivilege(response.recipientSection,"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         response.feedbackSessionName,"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         Const.ParamsNames.INSTRUCTOR_PERMISSION_VIEW_SESSION_IN_SECTIONS);"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isNotAllowedForInstructor \u003d isGiverSectionRestricted || isRecipientSectionRestricted;"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isNotAllowedForInstructor) {"
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "                isVisibleResponse \u003d false;"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "        return isVisibleResponse;"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "    private void sortByCreatedDate(List\u003cFeedbackResponseCommentAttributes\u003e responseCommentList) {"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "        responseCommentList.sort(Comparator.comparing(responseComment -\u003e responseComment.createdAt));"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addVisibilityToTable(Map\u003cString, boolean[]\u003e visibilityTable,"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "            String userEmail,"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "            UserRole role,"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseRoster roster) {"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean[] visibility \u003d new boolean[2];"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "        visibility[Const.VISIBILITY_TABLE_GIVER] \u003d frLogic.isNameVisibleToUser("
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": "                question, response, userEmail, role, true, roster);"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "        visibility[Const.VISIBILITY_TABLE_RECIPIENT] \u003d frLogic.isNameVisibleToUser("
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "                question, response, userEmail, role, false, roster);"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "        visibilityTable.put(response.getId(), visibility);"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailNamePairsToTable(Map\u003cString, String\u003e emailNameTable,"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster) {"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "        // keys of emailNameTable are participantIdentifiers,"
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "        // which consists of students\u0027 email, instructors\u0027 email, team names, or %GENERAL%."
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "        // participants identifiers of anonymous responses are not anonymised in the tables"
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "        addEmailNamePairsToTable(emailNameTable, response, question, roster,"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "                EMAIL_NAME_PAIR);"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailNamePairsToTable(Map\u003cString, String\u003e emailNameTable,"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster,"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "            int pairType) {"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 roster.isStudentInCourse(response.giver)) {"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "            emailNameTable.putIfAbsent("
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "                        response.giver + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "                        getNameTeamNamePairForEmail(question.giverType,"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "                                response.giver, roster)[pairType]);"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes studentGiver \u003d roster.getStudentForEmail(response.giver);"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "            if (studentGiver !\u003d null) {"
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "-"
        },
        "content": "                emailNameTable.putIfAbsent(studentGiver.team, getNameTeamNamePairForEmail("
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "-"
        },
        "content": "                        question.giverType,"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "-"
        },
        "content": "                        response.giver, roster)[pairType]);"
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "-"
        },
        "content": "            emailNameTable.putIfAbsent("
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "-"
        },
        "content": "                    response.giver,"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "-"
        },
        "content": "                    getNameTeamNamePairForEmail(question.giverType,"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "-"
        },
        "content": "                            response.giver, roster)[pairType]);"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackParticipantType recipientType \u003d null;"
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.recipientType \u003d\u003d FeedbackParticipantType.SELF) {"
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientType \u003d question.giverType;"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientType \u003d question.recipientType;"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "-"
        },
        "content": "        emailNameTable.putIfAbsent("
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "-"
        },
        "content": "                    response.recipient,"
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "-"
        },
        "content": "                    getNameTeamNamePairForEmail(recipientType,"
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "-"
        },
        "content": "                            response.recipient, roster)[pairType]);"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailLastNamePairsToTable(Map\u003cString, String\u003e emailLastNameTable,"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster) {"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "-"
        },
        "content": "        addEmailNamePairsToTable(emailLastNameTable, response, question, roster,"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "-"
        },
        "content": "                EMAIL_LASTNAME_PAIR);"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addEmailTeamNamePairsToTable("
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e emailTeamNameTable,"
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes response,"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, CourseRoster roster) {"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "-"
        },
        "content": "        addEmailNamePairsToTable(emailTeamNameTable, response, question,"
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "-"
        },
        "content": "                roster, EMAIL_TEAMNAME_PAIR);"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackSessionDetailsBundle\u003e getFeedbackSessionDetailsForCourse(String courseId)"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionDetailsBundle\u003e fsDetails \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e fsInCourse \u003d"
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "-"
        },
        "content": "                fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : fsInCourse) {"
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "-"
        },
        "content": "            fsDetails.add(getFeedbackSessionDetails(fsa));"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDetails;"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForCourse(String courseId) {"
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForCourse(String courseId) {"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "-"
        },
        "content": "        return fsDb.getSoftDeletedFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "-"
        },
        "content": "    // return a pair of String that contains Giver/Recipient\u0027sName (at index 0)"
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "-"
        },
        "content": "    // and TeamName (at index 1)"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "-"
        },
        "content": "    private String[] getNameTeamNamePairForEmail(FeedbackParticipantType type,"
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "-"
        },
        "content": "            String email, CourseRoster roster) {"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverRecipientName \u003d null;"
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverRecipientLastName \u003d null;"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "-"
        },
        "content": "        String teamName \u003d null;"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "-"
        },
        "content": "        String name \u003d null;"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "-"
        },
        "content": "        String lastName \u003d null;"
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "-"
        },
        "content": "        String team \u003d null;"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d roster.getStudentForEmail(email);"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isStudent \u003d student !\u003d null;"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isStudent) {"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "-"
        },
        "content": "            name \u003d student.name;"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "-"
        },
        "content": "            team \u003d student.team;"
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "-"
        },
        "content": "            lastName \u003d student.lastName;"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructor \u003d roster"
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "-"
        },
        "content": "                    .getInstructorForEmail(email);"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isInstructor \u003d instructor !\u003d null;"
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isInstructor) {"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "-"
        },
        "content": "                name \u003d instructor.name;"
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "-"
        },
        "content": "                lastName \u003d instructor.name;"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "-"
        },
        "content": "                team \u003d Const.USER_TEAM_FOR_INSTRUCTOR;"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "-"
        },
        "content": "                if (email.equals(Const.GENERAL_QUESTION)) {"
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Email represents that there is no specific recipient."
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "-"
        },
        "content": "                    name \u003d Const.USER_IS_NOBODY;"
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "-"
        },
        "content": "                    lastName \u003d Const.USER_IS_NOBODY;"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "-"
        },
        "content": "                    team \u003d email;"
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "-"
        },
        "content": "                    // The email represents a missing *Attribute."
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "-"
        },
        "content": "                    // It might be a team name or the *Attribute has been deleted."
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "-"
        },
        "content": "                    name \u003d Const.USER_IS_MISSING;"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "-"
        },
        "content": "                    lastName \u003d Const.USER_IS_MISSING;"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "-"
        },
        "content": "                    team \u003d email;"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "-"
        },
        "content": "        if (type \u003d\u003d FeedbackParticipantType.TEAMS || type \u003d\u003d FeedbackParticipantType.OWN_TEAM) {"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientName \u003d team;"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientLastName \u003d team;"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "-"
        },
        "content": "            teamName \u003d \"\";"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientName \u003d name;"
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "-"
        },
        "content": "            giverRecipientLastName \u003d lastName;"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "-"
        },
        "content": "            if (name.equals(Const.USER_IS_NOBODY) || name.equals(Const.USER_IS_MISSING)) {"
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "-"
        },
        "content": "                teamName \u003d \"\";"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "-"
        },
        "content": "                teamName \u003d team;"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "-"
        },
        "content": "        return new String[] { giverRecipientName, giverRecipientLastName, teamName };"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionFullyCompletedByStudent("
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName,"
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail)"
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFeedbackSessionExists(feedbackSessionName, courseId)) {"
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_NON_EXISTENT_FS_CHECK + courseId + \"/\" + feedbackSessionName);"
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e allQuestions \u003d"
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents(feedbackSessionName,"
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId);"
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : allQuestions) {"
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!fqLogic.isQuestionFullyAnsweredByUser(question, userEmail)) {"
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "-"
        },
        "content": "                // If any question is not completely answered, session is not"
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "-"
        },
        "content": "                // completed"
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether the feedback session is viewable to the specified user."
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isFeedbackSessionViewableTo("
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes session,"
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isInstructorOfCourse) {"
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow all instructors to view always"
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isInstructorOfCourse) {"
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow viewing if session is viewable to students"
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "-"
        },
        "content": "        return isFeedbackSessionViewableToStudents(session);"
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionViewableToStudents("
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow students to view the feedback session if there are questions for them"
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsToAnswer \u003d"
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "-"
        },
        "content": "                        session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "-"
        },
        "content": "        if (session.isVisible() \u0026\u0026 !questionsToAnswer.isEmpty()) {"
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "-"
        },
        "content": "        // Allow students to view the feedback session"
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "-"
        },
        "content": "        // if there are any questions for instructors to answer"
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "-"
        },
        "content": "        // where the responses of the questions are visible to the students"
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsWithVisibleResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsForInstructors \u003d"
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "-"
        },
        "content": "                                        fqLogic.getFeedbackQuestionsForCreatorInstructor(session);"
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackQuestionAttributes question : questionsForInstructors) {"
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "-"
        },
        "content": "            if (frLogic.isResponseOfFeedbackQuestionVisibleToStudent(question)) {"
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "-"
        },
        "content": "                questionsWithVisibleResponses.add(question);"
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "-"
        },
        "content": "        return session.isVisible() \u0026\u0026 !questionsWithVisibleResponses.isEmpty();"
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if there are any questions for students to answer."
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionForStudentsToAnswer(FeedbackSessionAttributes session) {"
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackQuestionAttributes\u003e questionsToAnswer \u003d"
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "-"
        },
        "content": "                        session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "-"
        },
        "content": "        return session.isVisible() \u0026\u0026 !questionsToAnswer.isEmpty();"
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "-"
        },
        "content": "    private void normalizeMaximumResponseEntities("
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question,"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String\u003e recipients) {"
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "-"
        },
        "content": "        // change constant to actual maximum size."
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "-"
        },
        "content": "        if (question.numberOfEntitiesToGiveFeedbackTo \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "-"
        },
        "content": "            question.numberOfEntitiesToGiveFeedbackTo \u003d recipients.size();"
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 20,
      "-": 2208
    }
  },
  {
    "path": "src/main/java/teammates/storage/api/FeedbackResponsesDb.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.storage.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static com.googlecode.objectify.ObjectifyService.ofy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.Key;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.cmd.LoadType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import com.googlecode.objectify.cmd.Query;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.AttributesDeletionQuery;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.entity.FeedbackResponse;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles CRUD operations for feedback responses."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackResponse"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * @see FeedbackResponseAttributes"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class FeedbackResponsesDb extends EntitiesDb\u003cFeedbackResponse, FeedbackResponseAttributes\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "     * Gets a set of giver identifiers that has at least one response under a feedback session."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crizyli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        List\u003cKey\u003cFeedbackResponse\u003e\u003e keysOfResponses \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                load().filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        .filter(\"feedbackSessionName \u003d\", feedbackSessionName)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        .keys()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        .list();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        // the following process makes use of the key pattern of feedback response entity"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        // see generateId() in FeedbackResponse.java"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Set\u003cString\u003e giverSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        for (Key\u003cFeedbackResponse\u003e key : keysOfResponses) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            String[] tokens \u003d key.getName().split(\"%\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            if (tokens.length \u003e\u003d 3) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                giverSet.add(tokens[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return giverSet;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback response."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackResponseId);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponse fr \u003d getFeedbackResponseEntity(feedbackResponseId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributesOrNull(fr);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback response by unique constraint question-giver-receiver."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String giverEmail, String receiverEmail) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, giverEmail);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, receiverEmail);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponse fr \u003d"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponseEntity(FeedbackResponse.generateId(feedbackQuestionId, giverEmail, receiverEmail));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributesOrNull(fr);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all feedback responses of a question in a specific section."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003e{@code sectionDetail} specifies the criteria of classifying a response in a section\u003c/p\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForQuestionInSection("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String section, SectionDetail sectionDetail) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, sectionDetail);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForQuestionInSection(feedbackQuestionId, section, sectionDetail));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all feedback responses for a question."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForQuestion(feedbackQuestionId));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether there are responses for a question."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        return !load()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                .limit(1)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                .list()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                .isEmpty();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses of a feedback session in a course."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSession("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForSession(feedbackSessionName, courseId));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses of a feedback session in a course with limit."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionWithinRange("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, int range) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForSessionWithinRange(feedbackSessionName, courseId, range));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to/from a section in a feedback session in a course."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInSection("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForSessionInSection(feedbackSessionName, courseId, section));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to\u0026from a section in a feedback session in a course."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInGiverAndRecipientSection("
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForSessionInGiverAndRecipientSection(feedbackSessionName,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, section));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given from a section in a feedback session in a course."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionFromSection("
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForSessionFromSection(feedbackSessionName, courseId, section));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to a section in a feedback session in a course."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionToSection("
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForSessionToSection(feedbackSessionName, courseId, section));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to/from a section in a feedback session in a course with limit."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionInSectionWithinRange("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes("
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponseEntitiesForSessionInSectionWithinRange("
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given from a section in a feedback session in a course with limit."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes("
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponseEntitiesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to a section in a feedback session in a course with limit."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes("
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponseEntitiesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSessionName, courseId, section, range));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to a user for a question."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForQuestion("
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String receiver) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, receiver);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForReceiverForQuestion(feedbackQuestionId, receiver));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to a user and given by a section for a question."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String receiver, String section) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, receiver);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes("
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponseEntitiesForReceiverForQuestionInSection(feedbackQuestionId, receiver, section));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given by a user for a question."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String giverEmail) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, giverEmail);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesFromGiverForQuestion(feedbackQuestionId, giverEmail));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given by a user and given to a section for a question."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String giverEmail, String section) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackQuestionId);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, giverEmail);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, section);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes("
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                getFeedbackResponseEntitiesFromGiverForQuestionInSection(feedbackQuestionId, giverEmail, section));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given by a user in a feedback session of a course with limit."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForSessionWithinRange("
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverEmail, String feedbackSessionName, String courseId, int range) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, giverEmail);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, feedbackSessionName);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesFromGiverForSessionWithinRange("
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                giverEmail, feedbackSessionName, courseId, range));"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given to a user in a course."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesForReceiverForCourse("
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String receiver) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, receiver);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesForReceiverForCourse(courseId, receiver));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all responses given by a user in a course."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromGiverForCourse("
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String giverEmail) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, giverEmail);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        return makeAttributes(getFeedbackResponseEntitiesFromGiverForCourse(courseId, giverEmail));"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response with {@link FeedbackResponseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     * as question-giver-recipient is the primary key."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback response"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response cannot be updated"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent response"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes updateFeedbackResponse(FeedbackResponseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, updateOptions);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponse oldResponse \u003d getFeedbackResponseEntity(updateOptions.getFeedbackResponseId());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        if (oldResponse \u003d\u003d null) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityDoesNotExistException(ERROR_UPDATE_NON_EXISTENT);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes newAttributes \u003d makeAttributes(oldResponse);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        newAttributes.update(updateOptions);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        newAttributes.sanitizeForSaving();"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!newAttributes.isValid()) {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidParametersException(newAttributes.getInvalidityInfo());"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        if (newAttributes.recipient.equals(oldResponse.getRecipientEmail())"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 newAttributes.giver.equals(oldResponse.getGiverEmail())) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            // update only if change"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasSameAttributes \u003d"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.\u003cString\u003ehasSameValue(oldResponse.getGiverSection(), newAttributes.getGiverSection())"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 this.\u003cString\u003ehasSameValue(oldResponse.getRecipientSection(), newAttributes.getRecipientSection())"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 this.\u003cString\u003ehasSameValue("
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                            oldResponse.getResponseMetaData(), newAttributes.getSerializedFeedbackResponseDetail());"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasSameAttributes) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                log.info(String.format("
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                        OPTIMIZED_SAVING_POLICY_APPLIED, FeedbackResponse.class.getSimpleName(), updateOptions));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                return newAttributes;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            oldResponse.setGiverSection(newAttributes.giverSection);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            oldResponse.setRecipientSection(newAttributes.recipientSection);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            oldResponse.setAnswer(newAttributes.getSerializedFeedbackResponseDetail());"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            saveEntity(oldResponse);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            return makeAttributes(oldResponse);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "            // need to recreate the entity"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            newAttributes \u003d FeedbackResponseAttributes"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                    .builder(newAttributes.getFeedbackQuestionId(), newAttributes.getGiver(), newAttributes.getRecipient())"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withCourseId(newAttributes.getCourseId())"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withFeedbackSessionName(newAttributes.getFeedbackSessionName())"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withResponseDetails(newAttributes.getResponseDetails())"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withGiverSection(newAttributes.getGiverSection())"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                    .withRecipientSection(newAttributes.getRecipientSection())"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                    .build();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            newAttributes \u003d createEntity(newAttributes);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteEntity(Key.create(FeedbackResponse.class, oldResponse.getId()));"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            return newAttributes;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback response."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponse(String responseId) {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, responseId);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteEntity(Key.create(FeedbackResponse.class, responseId));"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes responses using {@link AttributesDeletionQuery}."
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponses(AttributesDeletionQuery query) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, query);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        Query\u003cFeedbackResponse\u003e entitiesToDelete \u003d load().project();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        if (query.isCourseIdPresent()) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            entitiesToDelete \u003d entitiesToDelete.filter(\"courseId \u003d\", query.getCourseId());"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        if (query.isFeedbackSessionNamePresent()) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            entitiesToDelete \u003d entitiesToDelete.filter(\"feedbackSessionName \u003d\", query.getFeedbackSessionName());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        if (query.isQuestionIdPresent()) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            entitiesToDelete \u003d entitiesToDelete.filter(\"feedbackQuestionId \u003d\", query.getQuestionId());"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteEntity(entitiesToDelete.keys().list().toArray(new Key\u003c?\u003e[0]));"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if there are existing responses in any feedback session in the course."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasFeedbackResponseEntitiesForCourse(String courseId) {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, courseId);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        return !load().filter(\"courseId \u003d\", courseId).limit(1).list().isEmpty();"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResponse getFeedbackResponseEntity(String feedbackResponseId) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        return load().id(feedbackResponseId).now();"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    private Set\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForQuestionInSection("
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                String feedbackQuestionId, String section, SectionDetail sectionDetail) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cFeedbackResponse\u003e feedbackResponses \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sectionDetail \u003d\u003d SectionDetail.BOTH) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            // responses in section with giver or recipient as None are added to respective section selected"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"receiverSection \u003d\", \"None\")"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                    .list());"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"giverSection \u003d\", \"None\")"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                    .list());"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                    .list());"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sectionDetail \u003d\u003d SectionDetail.GIVER || sectionDetail \u003d\u003d SectionDetail.EITHER) {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                    .list());"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sectionDetail \u003d\u003d SectionDetail.EVALUEE || sectionDetail \u003d\u003d SectionDetail.EITHER) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                    .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                    .list());"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponses;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackResponseEntitiesForSessionWithinRange(feedbackSessionName, courseId, -1);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionWithinRange("
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, int range) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackSessionName \u003d\", feedbackSessionName)"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                .limit(range + 1).list();"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    private Collection\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionInSection("
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponse\u003e feedbackResponses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse result : getFeedbackResponseEntitiesForSessionFromSection("
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, section)) {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(result.getId(), result);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse result : getFeedbackResponseEntitiesForSessionToSection("
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, section)) {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(result.getId(), result);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponses.values();"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionInGiverAndRecipientSection("
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponse\u003e feedbackResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackSessionName \u003d \", feedbackSessionName)"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                .list());"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        // also show responses in section with giver but without recipient"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponses.addAll(load()"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackSessionName \u003d \", feedbackSessionName)"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiverSection \u003d\", \"None\")"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                .list());"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponses;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionFromSection("
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackResponseEntitiesForSessionFromSectionWithinRange(feedbackSessionName, courseId, section, -1);"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionToSection("
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section) {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        return getFeedbackResponseEntitiesForSessionToSectionWithinRange(feedbackSessionName, courseId, section, -1);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "    private Collection\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionInSectionWithinRange("
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponse\u003e feedbackResponses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse result : getFeedbackResponseEntitiesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, section, range)) {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(result.getId(), result);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse result : getFeedbackResponseEntitiesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, section, range)) {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(result.getId(), result);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponses.values();"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionFromSectionWithinRange("
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackSessionName \u003d\", feedbackSessionName)"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                .limit(range + 1).list();"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForSessionToSectionWithinRange("
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String section, int range) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackSessionName \u003d\", feedbackSessionName)"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                .limit(range + 1).list();"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForReceiverForQuestion("
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String receiver) {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiver \u003d\", receiver)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "    private Collection\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String receiver, String section) {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponse\u003e feedbackResponses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponse\u003e firstQueryResponses \u003d load()"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiver \u003d\", receiver)"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse response : firstQueryResponses) {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(response.getId(), response);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponse\u003e secondQueryResponses \u003d load()"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiver \u003d\", receiver)"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse response : secondQueryResponses) {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(response.getId(), response);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponses.values();"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesFromGiverForQuestion("
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String giverEmail) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverEmail \u003d\", giverEmail)"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    private Collection\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackQuestionId, String giverEmail, String section) {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackResponse\u003e feedbackResponses \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponse\u003e firstQueryResponses \u003d load()"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverEmail \u003d\", giverEmail)"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverSection \u003d\", section)"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse response : firstQueryResponses) {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(response.getId(), response);"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponse\u003e secondQueryResponses \u003d load()"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackQuestionId \u003d\", feedbackQuestionId)"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverEmail \u003d\", giverEmail)"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiverSection \u003d\", section)"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponse response : secondQueryResponses) {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackResponses.put(response.getId(), response);"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponses.values();"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesFromGiverForSessionWithinRange("
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverEmail, String feedbackSessionName, String courseId, int range) {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverEmail \u003d\", giverEmail)"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"feedbackSessionName \u003d\", feedbackSessionName)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                .limit(range + 1).list();"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesForReceiverForCourse("
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String receiver) {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"receiver \u003d\", receiver)"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponse\u003e getFeedbackResponseEntitiesFromGiverForCourse("
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String giverEmail) {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        return load()"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"courseId \u003d\", courseId)"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(\"giverEmail \u003d\", giverEmail)"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                .list();"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "    protected LoadType\u003cFeedbackResponse\u003e load() {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        return ofy().load().type(FeedbackResponse.class);"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean hasExistingEntities(FeedbackResponseAttributes entityToCreate) {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        return !load()"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                .filterKey(Key.create(FeedbackResponse.class,"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponse.generateId(entityToCreate.getFeedbackQuestionId(),"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                                entityToCreate.getGiver(), entityToCreate.getRecipient())))"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                .list()"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                .isEmpty();"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "    protected FeedbackResponseAttributes makeAttributes(FeedbackResponse entity) {"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(Const.StatusCodes.DBLEVEL_NULL_INPUT, entity);"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        return FeedbackResponseAttributes.valueOf(entity);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 26,
      "-": 662
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/ActionFactory.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.HttpServletRequest;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.HttpServletResponse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpDelete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpGet;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPost;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPut;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ActionMappingException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.TeammatesException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const.ResourceURIs;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Generates the matching {@link Action} for a given URI and request method."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class ActionFactory {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String GET \u003d HttpGet.METHOD_NAME;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String POST \u003d HttpPost.METHOD_NAME;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String PUT \u003d HttpPut.METHOD_NAME;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNTS_SEARCH, GET, SearchAccountsAction.class);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        //STUDENTS APIs"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        //STUDENT APIs"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE, POST, CreateFeedbackResponseAction.class);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE, PUT, UpdateFeedbackResponseAction.class);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.RESPONSE, DELETE, DeleteFeedbackResponseAction.class);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SUBMISSION_CONFIRMATION, POST, ConfirmFeedbackSessionSubmissionAction.class);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.LOCAL_DATE_TIME, GET, GetLocalDateTimeInfoAction.class);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_ENROLL_STUDENTS, GET, GetCourseEnrollStudentsAction.class);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR_COURSES, GET, GetInstructorCoursesAction.class);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_STUDENT_DETAILS, GET, GetCourseStudentDetailsAction.class);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_COURSE, GET, StudentGetCourseDetailsAction.class);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_COURSES, GET, GetStudentCoursesAction.class);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS_CSV, GET, GetStudentsAsCsvAction.class);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH, GET, SearchStudentsAndFeedbackSessionDataAction.class);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_EDIT_DETAILS, GET, GetStudentEditDetailsAction.class);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.COURSE_EDIT_DETAILS, GET, GetCourseEditDetailsAction.class);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.STUDENT_RECORDS, GET, GetStudentRecordsAction.class);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        map(ResourceURIs.INSTRUCTOR_COURSE_DETAILS, GET, GetInstructorCourseDetailsAction.class);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        ACTION_MAPPINGS.computeIfAbsent(ResourceURIs.URI_PREFIX + uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the matching {@link Action} object for the URI and method in {@code req}."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public Action getAction(HttpServletRequest req, String method, HttpServletResponse resp) throws ActionMappingException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        String uri \u003d req.getRequestURI();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        if (uri.contains(\";\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            uri \u003d uri.split(\";\")[0];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        Action action \u003d getAction(uri, method);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        action.init(req, resp);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return action;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    private Action getAction(String uri, String method) throws ActionMappingException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!ACTION_MAPPINGS.containsKey(uri)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        Class\u003c? extends Action\u003e controllerClass \u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        if (controllerClass \u003d\u003d null) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    HttpStatus.SC_METHOD_NOT_ALLOWED);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            return controllerClass.newInstance();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            Assumption.fail(\"Could not create the action for \" + uri + \": \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                    + TeammatesException.toStringWithStackTrace(e));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 1,
      "-": 164
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/GetFeedbackSessionSubmittedGiverSetAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionSubmittedGiverSet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * Get a set of givers that has given at least one response in the feedback session."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "public class GetFeedbackSessionSubmittedGiverSetAction extends Action {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        InstructorAttributes instructor \u003d logic.getInstructorForGoogleId(courseId, userInfo.id);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        gateKeeper.verifyAccessible(instructor, fsa);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        FeedbackSessionSubmittedGiverSet output \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                new FeedbackSessionSubmittedGiverSet("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        logic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return new JsonResult(output);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 42
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/PublishFeedbackSessionAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Publish a feedback session."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class PublishFeedbackSessionAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d logic.getInstructorForGoogleId(courseId, userInfo.getId());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyAccessible(instructor, session,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            FeedbackSessionAttributes publishFeedbackSession \u003d logic.publishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            if (publishFeedbackSession.isPublishedEmailEnabled()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                taskQueuer.scheduleFeedbackSessionPublishedEmail(publishFeedbackSession.getCourseId(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                        publishFeedbackSession.getFeedbackSessionName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            return new JsonResult(new FeedbackSessionData(publishFeedbackSession));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(e.getMessage(), HttpStatus.SC_BAD_REQUEST);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 7,
      "-": 47
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/UnpublishFeedbackSessionAction.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Unpublish a feedback session."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class UnpublishFeedbackSessionAction extends Action {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d logic.getInstructorForGoogleId(courseId, userInfo.getId());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyAccessible(instructor, session,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_SESSION);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            FeedbackSessionAttributes unpublishFeedbackSession \u003d"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                    logic.unpublishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            if (unpublishFeedbackSession.isPublishedEmailEnabled()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                taskQueuer.scheduleFeedbackSessionUnpublishedEmail(unpublishFeedbackSession.getCourseId(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                        unpublishFeedbackSession.getFeedbackSessionName());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            return new JsonResult(new FeedbackSessionData(unpublishFeedbackSession));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidParametersException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(e.getMessage(), HttpStatus.SC_BAD_REQUEST);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 8,
      "-": 47
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/FeedbackSessionSubmittedGiverSet.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * The API output format of all givers who submitted a feedback session."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "public class FeedbackSessionSubmittedGiverSet extends ApiOutput {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    private final Set\u003cString\u003e giverIdentifiers;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public FeedbackSessionSubmittedGiverSet(Set\u003cString\u003e giverIdentifiers) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.giverIdentifiers \u003d giverIdentifiers;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public Set\u003cString\u003e getGiverIdentifiers() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return giverIdentifiers;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 18
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/request/FeedbackResponseBasicRequest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.request;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackQuestionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackResponseDetails;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * The basic request of modifying a feedback response."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class FeedbackResponseBasicRequest extends BasicRequest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private String recipientIdentifier;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackQuestionType questionType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, Object\u003e responseDetails;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRecipientIdentifier() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return recipientIdentifier;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionType getQuestionType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return questionType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the feedback response details in the request."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseDetails getResponseDetails() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseDetails details \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                JsonUtils.fromJson(JsonUtils.toJson(responseDetails), questionType.getResponseDetailsClass());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        details.setQuestionType(questionType);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    public void setRecipientIdentifier(String recipientIdentifier) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        this.recipientIdentifier \u003d recipientIdentifier;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    public void setQuestionType(FeedbackQuestionType feedbackQuestionType) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        this.questionType \u003d feedbackQuestionType;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    public void setResponseDetails(FeedbackResponseDetails feedbackResponseDetails) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        this.responseDetails \u003d JsonUtils.fromJson(JsonUtils.toJson(feedbackResponseDetails), Map.class);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(recipientIdentifier !\u003d null, \"recipientIdentifier cannot be null\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(questionType !\u003d null, \"questionType cannot be null\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(responseDetails !\u003d null, \"responseDetails cannot be null\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 12,
      "-": 44
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/automated/FeedbackSessionPublishedRemindersActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.automated;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.automated.FeedbackSessionPublishedRemindersAction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link FeedbackSessionPublishedRemindersAction}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class FeedbackSessionPublishedRemindersActionTest"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        extends BaseAutomatedActionTest\u003cFeedbackSessionPublishedRemindersAction\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.CronJobURIs.AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public void allTests() throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"default state of typical data bundle: 1 session published with email unsent\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionPublishedRemindersAction action \u003d getAction();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        action.execute();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySpecifiedTasksAdded(action, Const.TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME, 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"1 session published by moving automated publish time, \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                 + \"1 session published similarly with disabled published reminder, \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                 + \"1 session published manually\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        // Publish session by moving automated publish time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        session1.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(session1.getFeedbackSessionName(), session1.getCourseId())"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(session1.getResultsVisibleFromTime())"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(session1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        // Publish session by moving automated publish time and disable publish reminder"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d dataBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        session2.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        session2.setPublishedEmailEnabled(false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(session2.getFeedbackSessionName(), session2.getCourseId())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(session2.getResultsVisibleFromTime())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withIsPublishedEmailEnabled(session2.isPublishedEmailEnabled())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(session2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // Do a manual publish"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session3 \u003d dataBundle.feedbackSessions.get(\"gracePeriodSession\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(session3.getFeedbackSessionName(), session3.getCourseId())"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        fsLogic.publishFeedbackSession(session3.getFeedbackSessionName(), session3.getCourseId());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        session3.setResultsVisibleFromTime("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session3.getFeedbackSessionName(), session3.getCourseId())"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getResultsVisibleFromTime());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(session3);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        action.execute();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySpecifiedTasksAdded(action, Const.TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME, 4);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"1 session unpublished manually\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        fsLogic.unpublishFeedbackSession(session3.getFeedbackSessionName(), session3.getCourseId());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        action.execute();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySpecifiedTasksAdded(action, Const.TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME, 3);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"1 session published with emails sent\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        session1.setSentPublishedEmail(true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(session1.getFeedbackSessionName(), session1.getCourseId())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(session1.isSentPublishedEmail())"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        action.execute();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySpecifiedTasksAdded(action, Const.TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME, 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 2,
      "-": 104
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/automated/FeedbackSessionRemindEmailWorkerActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.automated;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const.ParamsNames;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TaskWrapper;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.InstructorsLogic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.automated.FeedbackSessionRemindEmailWorkerAction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link FeedbackSessionRemindEmailWorkerAction}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class FeedbackSessionRemindEmailWorkerActionTest"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        extends BaseAutomatedActionTest\u003cFeedbackSessionRemindEmailWorkerAction\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void allTests() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Send feedback session reminder email\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1 \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        // re-read from Datastore to update the respondents list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        session1 \u003d fsLogic.getFeedbackSession(session1.getFeedbackSessionName(), session1.getCourseId());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                ParamsNames.SUBMISSION_FEEDBACK, session1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                ParamsNames.SUBMISSION_COURSE, session1.getCourseId(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                ParamsNames.USER_ID, instructor1.getGoogleId(),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionRemindEmailWorkerAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        action.execute();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        // 1 student and 4 instructors sent reminder, 1 instructor notified"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySpecifiedTasksAdded(action, Const.TaskQueue.SEND_EMAIL_QUEUE_NAME, 6);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Set\u003cString\u003e giverSet \u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                logic.getGiverSetThatAnswerFeedbackSession(session1.getCourseId(), session1.getFeedbackSessionName());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e studentRecipientList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        for (StudentAttributes student : studentsLogic.getStudentsForCourse(session1.getCourseId())) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            if (!giverSet.contains(student.getEmail())) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                studentRecipientList.add(student.getEmail());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e instructorRecipientList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e instructorNotifiedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        for (InstructorAttributes instructor : instructorsLogic.getInstructorsForCourse(session1.getCourseId())) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            if (!giverSet.contains(instructor.getEmail())) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorRecipientList.add(instructor.email);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorNotifiedList.add(instructorsLogic.getInstructorForGoogleId(session1.getCourseId(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor1.getGoogleId()).email);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseName \u003d coursesLogic.getCourse(session1.getCourseId()).getName();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cTaskWrapper\u003e tasksAdded \u003d action.getTaskQueuer().getTasksAdded();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        for (TaskWrapper task : tasksAdded) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            Map\u003cString, String[]\u003e paramMap \u003d task.getParamMap();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            assertEquals(String.format(EmailType.FEEDBACK_SESSION_REMINDER.getSubject(), courseName,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                                       session1.getFeedbackSessionName()),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                         paramMap.get(ParamsNames.EMAIL_SUBJECT)[0]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            String header \u003d \"The email below has been sent to students of course: [\" + session1.getCourseId() + \"]\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            String content \u003d paramMap.get(ParamsNames.EMAIL_CONTENT)[0];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            String recipient \u003d paramMap.get(ParamsNames.EMAIL_RECEIVER)[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            if (content.contains(header)) { // notification to only requesting instructors"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                assertTrue(instructorNotifiedList.contains(recipient));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorNotifiedList.remove(recipient);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            if (studentRecipientList.contains(recipient)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                studentRecipientList.remove(recipient);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instructorRecipientList.contains(recipient)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorRecipientList.remove(recipient);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            fail(\"Email recipient \" + recipient + \" is not in the list!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // Ensure that every email recipient is accounted for"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(String.valueOf(studentRecipientList.size()), studentRecipientList.isEmpty());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(String.valueOf(instructorRecipientList.size()), instructorRecipientList.isEmpty());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(instructorNotifiedList.isEmpty());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 7,
      "-": 110
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/logic/FeedbackSessionsLogicTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeMethod;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.AttributesDeletionQuery;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionStats;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TimeHelper;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackQuestionsLogic;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponseCommentsLogic;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponsesLogic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackSessionsDb;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.AssertHelper;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.CsvChecker;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.TimeHelperExtension;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link FeedbackSessionsLogic}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "public class FeedbackSessionsLogicTest extends BaseLogicTest {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    private static CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // see beforeMethod()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeMethod"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void beforeMethod() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundle \u003d loadDataBundle(\"/FeedbackSessionsLogicTest.json\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(dataBundle);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackSessionCascade_deleteSessionNotInRecycleBin_shouldDoCascadeDeletion()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fsLogic.getFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(fsLogic.getFeedbackSessionFromRecycleBin(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSession(fsa.getCourseId(), fsa.getFeedbackSessionName()).isEmpty());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete existing feedback session directly"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessionCascade(fsa.getFeedbackSessionName(), fsa.getCourseId());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(fsLogic.getFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(fsLogic.getFeedbackSessionFromRecycleBin(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSession(fsa.getCourseId(), fsa.getFeedbackSessionName()).isEmpty());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackSessionCascade_deleteSessionInRecycleBin_shouldDoCascadeDeletion()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSession(fsa.getCourseId(), fsa.getFeedbackSessionName()).isEmpty());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.moveFeedbackSessionToRecycleBin(fsa.getFeedbackSessionName(), fsa.getCourseId());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(fsLogic.getFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fsLogic.getFeedbackSessionFromRecycleBin(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete feedback session in recycle bin"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessionCascade(fsa.getFeedbackSessionName(), fsa.getCourseId());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(fsLogic.getFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(fsLogic.getFeedbackSessionFromRecycleBin(fsa.getFeedbackSessionName(), fsa.getCourseId()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                frLogic.getFeedbackResponsesForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                frcLogic.getFeedbackResponseCommentForSession(fsa.getCourseId(), fsa.getFeedbackSessionName()).isEmpty());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackSessions_byCourseId_shouldDeleteAllSessionsUnderCourse() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session2InCourse1 \u003d dataBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull("
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId()));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // they are in the same course"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getCourseId(), session2InCourse1.getCourseId());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1InCourse2 \u003d dataBundle.feedbackSessions.get(\"session1InCourse2\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse2.getFeedbackSessionName(), session1InCourse2.getCourseId()));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete all session under the course"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessions("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        // they should gone"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId()));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId()));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        // sessions in different courses should not be affected"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull("
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse2.getFeedbackSessionName(), session1InCourse2.getCourseId()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteInstructorFromRespondentsList_typicalData_emailShouldBeRemoved() throws Exception {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.addInstructorRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session2InCourse1 \u003d dataBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.addInstructorRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        // they are in the same course"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getCourseId(), session2InCourse1.getCourseId());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingInstructorList()"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId())"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingInstructorList()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        // remove email from all respondents list"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteInstructorFromRespondentsList(session1InCourse1.getCourseId(), \"test@email.com\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        // the email should not appear"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingInstructorList()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId())"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingInstructorList()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteStudentFromRespondentsList_typicalData_emailShouldBeRemoved() throws Exception {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.addStudentRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session2InCourse1 \u003d dataBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.addStudentRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        // they are in the same course"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getCourseId(), session2InCourse1.getCourseId());"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingStudentList()"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId())"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingStudentList()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        // remove email from all respondents list"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteStudentFromRespondentsList(session1InCourse1.getCourseId(), \"test@email.com\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        // the email should not appear"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingStudentList()"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session2InCourse1.getFeedbackSessionName(), session2InCourse1.getCourseId())"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingStudentList()"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteInstructorRespondent_typicalData_shouldRemoveFromRespondentList() throws Exception {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.addInstructorRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingInstructorList()"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete the instructor from the list"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteInstructorRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingInstructorList()"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteStudentRespondent_typicalData_shouldRemoveFromRespondentList() throws Exception {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.addStudentRespondent(\"test@email.com\","
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue("
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingStudentList()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        // delete the student from the list"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteStudentFromRespondentList(\"test@email.com\","
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse("
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId())"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                        .getRespondingStudentList()"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                        .contains(\"test@email.com\"));"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testFeedbackSessionNotification() throws Exception {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionsWhichNeedOpenMailsToBeSent();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionWhichNeedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testAll() throws Exception {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionsForCourse();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionsListForInstructor();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetSoftDeletedFeedbackSessionsListForInstructor();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetSoftDeletedFeedbackSessionsListForInstructors();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionDetailsForInstructor();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionQuestionsForStudent();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionQuestionsForInstructor();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionResultsForUser();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        testGetFeedbackSessionResultsSummaryAsCsv();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        testIsFeedbackSessionViewableToStudents();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        testCreateAndDeleteFeedbackSession();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        testUpdateFeedbackSession();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        testPublishUnpublishFeedbackSession();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        testIsFeedbackSessionHasQuestionForStudents();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        testIsFeedbackSessionCompletedByStudent();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        testIsFeedbackSessionCompletedByInstructor();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        testIsFeedbackSessionFullyCompletedByStudent();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        testMoveFeedbackSessionToRecycleBin();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        testRestoreFeedbackSessionFromRecycleBin();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        testRestoreAllFeedbackSessionsFromRecycleBin();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionsListForInstructor() {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e finalFsa \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        Collection\u003cFeedbackSessionAttributes\u003e allFsa \u003d dataBundle.feedbackSessions.values();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d dataBundle.courses.get(\"typicalCourse1\").getId();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorGoogleId \u003d dataBundle.instructors.get(\"instructor1OfCourse1\").googleId;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : allFsa) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fsa.getCourseId().equals(courseId)) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                finalFsa.add(fsa);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertSameContentIgnoreOrder("
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                finalFsa, fsLogic.getFeedbackSessionsListForInstructor(instructorGoogleId, false));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetSoftDeletedFeedbackSessionsListForInstructor() {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e softDeletedFsa \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        Collection\u003cFeedbackSessionAttributes\u003e allFsa \u003d dataBundle.feedbackSessions.values();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d dataBundle.courses.get(\"typicalCourse3\").getId();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse3\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : allFsa) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fsa.getCourseId().equals(courseId) \u0026\u0026 fsa.isSessionDeleted()) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                softDeletedFsa.add(fsa);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertSameContentIgnoreOrder("
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                softDeletedFsa, fsLogic.getSoftDeletedFeedbackSessionsListForInstructor(instructor));"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetSoftDeletedFeedbackSessionsListForInstructors() {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e softDeletedFsa \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        Collection\u003cFeedbackSessionAttributes\u003e allFsa \u003d dataBundle.feedbackSessions.values();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d dataBundle.courses.get(\"typicalCourse3\").getId();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse3\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        instructors.add(instructor);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : allFsa) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fsa.getCourseId().equals(courseId) \u0026\u0026 fsa.isSessionDeleted()) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                softDeletedFsa.add(fsa);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertSameContentIgnoreOrder("
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                softDeletedFsa, fsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructors));"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testIsFeedbackSessionHasQuestionForStudents() throws Exception {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        // no need to removeAndRestoreTypicalDataInDatastore() as the previous test does not change the db"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionWithStudents \u003d dataBundle.feedbackSessions.get(\"gracePeriodSession\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionWithoutStudents \u003d dataBundle.feedbackSessions.get(\"closedSession\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent session/courseId\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.isFeedbackSessionHasQuestionForStudents(\"nOnEXistEnT session\", \"someCourse\"));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to check a non-existent feedback session: someCourse/nOnEXistEnT session\","
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"session contains students\");"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionHasQuestionForStudents(sessionWithStudents.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                   sessionWithStudents.getCourseId()));"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"session does not contain students\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.isFeedbackSessionHasQuestionForStudents(sessionWithoutStudents.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    sessionWithoutStudents.getCourseId()));"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionsClosingWithinTimeLimit() throws Exception {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"init : 0 standard sessions closing within time-limit\");"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionList \u003d fsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 open session in undeleted course closing within time-limit\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d getNewFeedbackSession();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setTimeZone(ZoneId.of(\"UTC\"));"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSessionVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(1));"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.createFeedbackSession(session);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.createCourse("
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                CourseAttributes.builder(session.getCourseId())"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withName(\"Test Course\")"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withTimezone(ZoneId.of(\"UTC\"))"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, sessionList.size());"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session.getFeedbackSessionName(), sessionList.get(0).getFeedbackSessionName());"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 open session in deleted course closing within time-limit\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.moveCourseToRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        // restore the new course from Recycle Bin, and delete the newly added session as"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        // removeAndRestoreTypicalDataInDatastore() wont do it"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreCourseFromRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessionCascade(session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionsClosedWithinThePastHour() throws Exception {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"init : 0 standard sessions closed within the past hour\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionList \u003d fsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 closed session in undeleted course within the past hour\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d getNewFeedbackSession();"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setTimeZone(ZoneId.of(\"UTC\"));"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSessionVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(-59));"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.createFeedbackSession(session);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, sessionList.size());"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session.getFeedbackSessionName(), sessionList.get(0).getFeedbackSessionName());"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 closed session in deleted course within the past hour\");"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.moveCourseToRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        // restore the new course from Recycle Bin, and delete the newly added session as"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        // removeAndRestoreTypicalDataInDatastore() wont do it"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreCourseFromRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessionCascade(session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionsWhichNeedOpenMailsToBeSent() throws Exception {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"init : 0 open sessions\");"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 open session in undeleted course with mail unsent\");"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d getNewFeedbackSession();"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setTimeZone(ZoneId.of(\"UTC\"));"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSessionVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setStartTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-23));"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(1));"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentOpenEmail(false);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.createFeedbackSession(session);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, sessionList.size());"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(sessionList.get(0).getFeedbackSessionName(), session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 open session in undeleted course with mail sent\");"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentOpenEmail(true);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentOpenEmail(session.isSentOpenEmail())"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 closed session in undeleted course with mail unsent\");"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentOpenEmail(false);"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentOpenEmail(session.isSentOpenEmail())"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(session.getEndTime())"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 open session in deleted course with mail unsent\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.moveCourseToRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(1));"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(session.getEndTime())"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 open session in deleted course with mail sent\");"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentOpenEmail(true);"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentOpenEmail(session.isSentOpenEmail())"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 closed session in deleted course with mail unsent\");"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentOpenEmail(false);"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentOpenEmail(session.isSentOpenEmail())"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(session.getEndTime())"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        // restore the new course from Recycle Bin, and delete the newly added session as"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        // removeAndRestoreTypicalDataInDatastore() wont do it"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreCourseFromRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessionCascade(session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionWhichNeedPublishedEmailsToBeSent() throws Exception {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"init : no published sessions\");"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        unpublishAllSessions();"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e sessionList \u003d fsLogic"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                .getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 published session in undeleted course with mail unsent\");"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setTimeZone(ZoneId.of(\"UTC\"));"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentPublishedEmail(false);"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withTimeZone(session.getTimeZone())"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withStartTime(session.getStartTime())"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(session.getEndTime())"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(session.getResultsVisibleFromTime())"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(session.isSentPublishedEmail())"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, sessionList.size());"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(sessionList.get(0).getFeedbackSessionName(), session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 published session in undeleted course with mail sent\");"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentPublishedEmail(true);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(session.isSentPublishedEmail())"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 published session in deleted course with mail unsent\");"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.moveCourseToRecycleBin(session.getCourseId());"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentPublishedEmail(false);"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(session.isSentPublishedEmail())"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"case : 1 published session in deleted course with mail sent\");"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        session.setSentPublishedEmail(true);"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(session.getFeedbackSessionName(), session.getCourseId())"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(session.isSentPublishedEmail())"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionList \u003d fsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, sessionList.size());"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testCreateAndDeleteFeedbackSession() throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test create\");"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d getNewFeedbackSession();"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.createFeedbackSession(fs);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(fs);"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes finalFs \u003d fs;"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test create with invalid session name\");"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        fs.setFeedbackSessionName(\"test \u0026 test\");"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        Exception e \u003d assertThrows(Exception.class, () -\u003e fsLogic.createFeedbackSession(finalFs));"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                \"The provided feedback session name is not acceptable to TEAMMATES \""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"as it cannot contain the following special html characters in brackets: \""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"(\u0026lt; \u0026gt; \u0026quot; \u0026#x2f; \u0026#39; \u0026amp;)\","
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                e.getMessage());"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        fs.setFeedbackSessionName(\"test %| test\");"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        e \u003d assertThrows(Exception.class, () -\u003e fsLogic.createFeedbackSession(finalFs));"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\\\"test %| test\\\" is not acceptable to TEAMMATES as a/an feedback session name \""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"because it contains invalid characters. A/An feedback session name \""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"must start with an alphanumeric character, and cannot contain \""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                        + \"any vertical bar (|) or percent sign (%).\","
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                e.getMessage());"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"test delete\");"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        fs \u003d getNewFeedbackSession();"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create a question under the session to test for cascading during delete."
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes fq \u003d FeedbackQuestionAttributes.builder()"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(fs.getFeedbackSessionName())"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(fs.getCourseId())"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionNumber(1)"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                .withNumberOfEntitiesToGiveFeedbackTo(Const.MAX_POSSIBLE_RECIPIENTS)"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverType(FeedbackParticipantType.STUDENTS)"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientType(FeedbackParticipantType.TEAMS)"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDetails(new FeedbackTextQuestionDetails(\"question to be deleted through cascade\"))"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowResponsesTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowRecipientNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowGiverNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        fqLogic.createFeedbackQuestion(fq);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.deleteFeedbackSessionCascade(fs.getFeedbackSessionName(), fs.getCourseId());"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(fs);"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(fq);"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionDetailsForInstructor() throws Exception {"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        // This file contains a session with a standard"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        // session + a special session with all questions without recipients."
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        DataBundle newDataBundle \u003d loadDataBundle(\"/FeedbackSessionDetailsTest.json\");"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(newDataBundle);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, FeedbackSessionDetailsBundle\u003e detailsMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        String instrGoogleId \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\").googleId;"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionDetailsBundle\u003e detailsList \u003d fsLogic.getFeedbackSessionDetailsForInstructor(instrGoogleId);"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e expectedSessions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedSessions.add(newDataBundle.feedbackSessions.get(\"standard.session\").toString());"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedSessions.add(newDataBundle.feedbackSessions.get(\"no.responses.session\").toString());"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedSessions.add(newDataBundle.feedbackSessions.get(\"no.recipients.session\").toString());"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder actualSessionsBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionDetailsBundle details : detailsList) {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            actualSessionsBuilder.append(details.feedbackSession.toString());"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            detailsMap.put("
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                    details.feedbackSession.getFeedbackSessionName() + \"%\" + details.feedbackSession.getCourseId(),"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                    details);"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        String actualSessions \u003d actualSessionsBuilder.toString();"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard session\");"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(3, detailsList.size());"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedSessions, actualSessions);"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionStats stats \u003d"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                detailsMap.get(newDataBundle.feedbackSessions.get(\"standard.session\").getFeedbackSessionName() + \"%\""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                               + newDataBundle.feedbackSessions.get(\"standard.session\").getCourseId()).stats;"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "        // 2 instructors, 6 students \u003d 8"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, stats.expectedTotal);"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        // 1 instructor, 1 student, did not respond \u003d\u003e 8-2\u003d6"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(6, stats.submittedTotal);"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"No recipients session\");"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        stats \u003d detailsMap.get(newDataBundle.feedbackSessions.get(\"no.recipients.session\").getFeedbackSessionName() + \"%\""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "                               + newDataBundle.feedbackSessions.get(\"no.recipients.session\").getCourseId()).stats;"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        // 2 instructors, 6 students \u003d 8"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, stats.expectedTotal);"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "        // only 1 student responded"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, stats.submittedTotal);"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"No responses session\");"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        stats \u003d detailsMap.get(newDataBundle.feedbackSessions.get(\"no.responses.session\").getFeedbackSessionName() + \"%\""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "                               + newDataBundle.feedbackSessions.get(\"no.responses.session\").getCourseId()).stats;"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        // 1 instructors, 1 students \u003d 2"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, stats.expectedTotal);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        // no responses"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, stats.submittedTotal);"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"instructor does not exist\");"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.getFeedbackSessionDetailsForInstructor(\"non-existent.google.id\").isEmpty());"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionsForCourse() throws Exception {"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e actualSessions \u003d null;"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.getFeedbackSessionsForUserInCourse(\"NonExistentCourseId\", \"randomUserId\"));"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Error getting feedback session(s): Course does not exist.\", ednee.getMessage());"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Student viewing: 2 visible, 1 awaiting, 1 no questions\");"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        // 2 valid sessions in course 1, 0 in course 2."
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        actualSessions \u003d fsLogic.getFeedbackSessionsForUserInCourse(\"idOfTypicalCourse1\", \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        // Student can see sessions 1 and 2. Session 3 has no questions. Session 4 is not yet visible for students."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        String expected \u003d"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                dataBundle.feedbackSessions.get(\"session1InCourse1\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"session2InCourse1\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"gracePeriodSession\").toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : actualSessions) {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertHelper.assertContains(session.toString(), expected);"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(3, actualSessions.size());"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        // Course 2 only has an instructor session."
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        // The instructor session has questions where responses are visible"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        actualSessions \u003d fsLogic.getFeedbackSessionsForUserInCourse(\"idOfTypicalCourse2\", \"student1InCourse2@gmail.tmt\");"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, actualSessions.size());"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor viewing\");"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        // 3 valid sessions in course 1, 1 in course 2."
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        actualSessions \u003d fsLogic.getFeedbackSessionsForUserInCourse(\"idOfTypicalCourse1\", \"instructor1@course1.tmt\");"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        // Instructors should be able to see all sessions for the course"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        expected \u003d"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                dataBundle.feedbackSessions.get(\"session1InCourse1\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"session2InCourse1\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"empty.session\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"awaiting.session\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"closedSession\").toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                + dataBundle.feedbackSessions.get(\"gracePeriodSession\").toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes session : actualSessions) {"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertHelper.assertContains(session.toString(), expected);"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(6, actualSessions.size());"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        // We should only have one session here as there is only one session in the course."
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        actualSessions \u003d fsLogic.getFeedbackSessionsForUserInCourse(\"idOfTypicalCourse2\", \"instructor2@course2.tmt\");"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(actualSessions.get(0).toString(),"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "                dataBundle.feedbackSessions.get(\"session1InCourse2\").toString());"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, actualSessions.size());"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Feedback session without questions for students but with visible responses are visible\");"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        actualSessions \u003d fsLogic.getFeedbackSessionsForUserInCourse(\"idOfArchivedCourse\", \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(dataBundle.feedbackSessions.get(\"archiveCourse.session1\").toString(),"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                actualSessions.toString());"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionQuestionsForStudent() throws Exception {"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard test\");"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionQuestionsBundle actual \u003d"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"First feedback session\", \"idOfTypicalCourse1\", \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        // We just test this once."
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(dataBundle.feedbackSessions.get(\"session1InCourse1\").toString(), actual.feedbackSession.toString());"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        // There should be 3 questions for students to do in session 1."
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        // Other questions are set for instructors."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(3, actual.questionResponseBundle.size());"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question 1"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes expectedQuestion \u003d"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "                getQuestionFromDatastore(\"qn1InSession1InCourse1\");"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedResponsesString \u003d getResponseFromDatastore(\"response1ForQ1S1C1\", dataBundle).toString();"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e actualResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes responsesForQn : actual.questionResponseBundle.get(expectedQuestion)) {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "            actualResponses.add(responsesForQn.toString());"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, actualResponses.size());"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(actualResponses, expectedResponsesString);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        // Comment on response 1 of question 1"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e frcList \u003d"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                actual.commentsForResponses.get(actual.questionResponseBundle.get(expectedQuestion).get(0).getId());"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, frcList.size());"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedCommentString \u003d getCommentFromDatastore(\"comment1FromT1C1ToR1Q1S1C1\", dataBundle).toString();"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedCommentString, frcList.get(0).toString());"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question 2"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedQuestion \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedResponsesString \u003d getResponseFromDatastore(\"response2ForQ2S1C1\", dataBundle).toString();"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        actualResponses.clear();"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes responsesForQn : actual.questionResponseBundle.get(expectedQuestion)) {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "            actualResponses.add(responsesForQn.toString());"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, actualResponses.size());"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(actualResponses, expectedResponsesString);"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        // Comment on response 1 of question 2"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        frcList \u003d actual.commentsForResponses.get(actual.questionResponseBundle.get(expectedQuestion).get(0).getId());"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, frcList.size());"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question for students to instructors"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedQuestion \u003d getQuestionFromDatastore(\"qn5InSession1InCourse1\");"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check that instructors (except the one who is not displayed to student) appear as recipients"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, String\u003e recipients \u003d actual.recipientList.get(expectedQuestion.getId());"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(recipients.containsKey(\"instructor1@course1.tmt\"));"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(recipients.containsKey(\"instructor2@course1.tmt\"));"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(recipients.containsKey(\"instructor3@course1.tmt\"));"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(recipients.containsKey(\"instructorNotYetJoinedCourse1@email.tmt\"));"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(recipients.containsKey(\"helper@course1.tmt\"));"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"team feedback test\");"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "        // Check that student3 get team member\u0027s (student4) feedback response as well (for team question)."
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        actual \u003d fsLogic.getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Second feedback session\", \"idOfTypicalCourse1\", \"student3InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, actual.questionResponseBundle.size());"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question 1"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedQuestion \u003d getQuestionFromDatastore(\"team.feedback\");"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedResponsesString \u003d getResponseFromDatastore("
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                \"response1ForQ1S2C1\", dataBundle).toString();"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        actualResponses.clear();"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes responsesForQn : actual.questionResponseBundle"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "                .get(expectedQuestion)) {"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "            actualResponses.add(responsesForQn.toString());"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, actualResponses.size());"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(actualResponses, expectedResponsesString);"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question 2, no responses from this student yet"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedQuestion \u003d getQuestionFromDatastore(\"team.members.feedback\");"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.get(expectedQuestion).isEmpty());"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: invalid session\");"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"invalid session\", \"idOfTypicalCourse1\", \"student3InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to get a non-existent feedback session: idOfTypicalCourse1/invalid session\","
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: non-existent student\");"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.getFeedbackSessionQuestionsForStudent("
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Second feedback session\", \"idOfTypicalCourse1\", \"randomUserId\"));"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Error getting feedback session(s): Student does not exist.\", ednee.getMessage());"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionQuestionsForInstructor() throws Exception {"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard test\");"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionQuestionsBundle actual \u003d"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSessionQuestionsForInstructor("
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Instructor feedback session\", \"idOfTypicalCourse2\", \"instructor1@course2.tmt\");"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "        // We just test this once."
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(dataBundle.feedbackSessions.get(\"session1InCourse2\").toString(),"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                actual.feedbackSession.toString());"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        // There should be 2 question for students to do in session 1."
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        // The final question is set for SELF (creator) only."
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, actual.questionResponseBundle.size());"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question 1"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes expectedQuestion \u003d"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                getQuestionFromDatastore(\"qn1InSession1InCourse2\");"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedResponsesString \u003d getResponseFromDatastore(\"response1ForQ1S1C2\", dataBundle).toString();"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e actualResponses \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes responsesForQn : actual.questionResponseBundle.get(expectedQuestion)) {"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            actualResponses.add(responsesForQn.toString());"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, actualResponses.size());"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(actualResponses, expectedResponsesString);"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        // Comment on response 1 of question 1"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e frcList \u003d"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "                actual.commentsForResponses.get(actual.questionResponseBundle.get(expectedQuestion).get(0).getId());"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, frcList.size());"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "        String expectedCommentString \u003d getCommentFromDatastore(\"comment1FromT1C1ToR1Q1S1C2\", dataBundle).toString();"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedCommentString, frcList.get(0).toString());"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        // Question 2"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedQuestion \u003d getQuestionFromDatastore(\"qn2InSession1InCourse2\");"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.containsKey(expectedQuestion));"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(actual.questionResponseBundle.get(expectedQuestion).isEmpty());"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: invalid session\");"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.getFeedbackSessionQuestionsForInstructor("
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"invalid session\", \"idOfTypicalCourse1\", \"instructor1@course1.tmt\"));"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to get a non-existent feedback session: idOfTypicalCourse1/invalid session\","
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionResultsForUser() throws Exception {"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "        // This file contains a session with a standard"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        // session which needs to have enough qn/response combinations to cover as much"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        // of the SUT as possible"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        DataBundle responseBundle \u003d loadDataBundle(\"/FeedbackSessionResultsTest.json\");"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(responseBundle);"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard session with varied visibilities\");"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "                responseBundle.feedbackSessions.get(\"standard.session\");"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        /*** Test result bundle for student1 ***/"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "                responseBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionResultsBundle results \u003d"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSessionResultsForStudent(session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                        session.getCourseId(), student.email);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        // We just check for correct session once"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session.toString(), results.feedbackSession.toString());"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        // Student can see responses: q1r1, q2r1,3, q3r1, qr4r2-3, q5r1, q7r1-2, q8r1-2"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        // We don\u0027t check the actual IDs as this is also implicitly tested"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        // later when checking the visibility table."
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(11, results.responses.size());"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(7, results.questions.size());"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the user email-name maps used for display purposes"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "        String mapString \u003d results.emailNameTable.toString();"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e expectedStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        String student2AnonEmail \u003d getStudentAnonEmail(responseBundle, \"student2InCourse1\");"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "        String student2AnonName \u003d getStudentAnonName(responseBundle, \"student2InCourse1\");"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        String student4AnonEmail \u003d getStudentAnonEmail(responseBundle, \"student4InCourse1\");"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        String student4AnonName \u003d getStudentAnonName(responseBundle, \"student4InCourse1\");"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u003dstudent1 In Course1\","
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u003dstudent2 In Course1\","
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student4InCourse1@gmail.tmt\u003dstudent4 In Course1\","
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.2\u003dTeam 1.2\","
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.3\u003dTeam 1.3\","
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\u003dTeam 1.4\","
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr1@course1.tmt\u003dInstructor1 Course1\","
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\" + Const.TEAM_OF_EMAIL_OWNER + \"\u003dTeam 1.1\","
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\" + Const.TEAM_OF_EMAIL_OWNER + \"\u003dTeam 1.1\","
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student4InCourse1@gmail.tmt\" + Const.TEAM_OF_EMAIL_OWNER + \"\u003dTeam 1.2\","
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                student2AnonEmail + \"\u003d\" + student2AnonName,"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                student4AnonEmail + \"\u003d\" + student4AnonName);"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(13, results.emailNameTable.size());"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the user email-teamName maps used for display purposes"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d results.emailTeamNameTable.toString();"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student4InCourse1@gmail.tmt\u003dTeam 1.2\","
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u0027s Team\u003d\","
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u0027s Team\u003d\","
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student4InCourse1@gmail.tmt\u0027s Team\u003d\","
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\u003d\","
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.3\u003d\","
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.2\u003d\","
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\u003d\","
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr1@course1.tmt\u003dInstructors\","
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                student2AnonEmail + \"\u003d\" + student2AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                student4AnonEmail + \"\u003d\" + student4AnonName + Const.TEAM_OF_EMAIL_OWNER);"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(13, results.emailTeamNameTable.size());"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test \u0027Append TeamName to Name\u0027 for display purposes with Typical Cases"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e actualStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes response : results.responses) {"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverName \u003d results.getNameForEmail(response.giver);"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            String giverTeamName \u003d results.getTeamNameForEmail(response.giver);"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            giverName \u003d results.appendTeamNameToName(giverName, giverTeamName);"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "            String recipientName \u003d results.getNameForEmail(response.recipient);"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "            String recipientTeamName \u003d results.getTeamNameForEmail(response.recipient);"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientName \u003d results.appendTeamNameToName(recipientName, recipientTeamName);"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "            actualStrings.add(giverName);"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "            actualStrings.add(recipientName);"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                getStudentAnonName(responseBundle, \"student2InCourse1\"),"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                getStudentAnonName(responseBundle, \"student4InCourse1\"),"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "                \"student1 In Course1\u003c/td\u003e\u003c/div\u003e\u0027\\\" (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "                \"student2 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "                \"student4 In Course1 (Team 1.2)\","
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Instructor1 Course1 (Instructors)\","
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.2\","
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.3\","
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\");"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, actualStrings.toString());"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test \u0027Append TeamName to Name\u0027 for display purposes with Special Cases"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        actualStrings.clear();"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        // case: Unknown User"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "        String unknownUserName \u003d Const.USER_UNKNOWN_TEXT;"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "        String someTeamName \u003d \"Some Team Name\";"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "        unknownUserName \u003d results.appendTeamNameToName(unknownUserName, someTeamName);"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "        actualStrings.add(unknownUserName);"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "        // case: Nobody"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "        String nobodyUserName \u003d Const.USER_NOBODY_TEXT;"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        nobodyUserName \u003d results.appendTeamNameToName(nobodyUserName, someTeamName);"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        actualStrings.add(nobodyUserName);"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "        // case: Anonymous User"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        String anonymousUserName \u003d Const.DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT + \" \" + System.currentTimeMillis();"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "        anonymousUserName \u003d results.appendTeamNameToName(anonymousUserName, someTeamName);"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "        actualStrings.add(anonymousUserName);"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.USER_UNKNOWN_TEXT,"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.USER_NOBODY_TEXT,"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "                anonymousUserName);"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expectedStrings.toString(), actualStrings.toString());"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the generated response visibilityTable for userNames."
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d tableToString(results.visibilityTable);"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn1.resp1\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp1\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp3\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn3.resp1\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn4.resp2\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn4.resp3\", responseBundle) + \"\u003d{false,true}\","
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn5.resp1\", responseBundle) + \"\u003d{true,false}\","
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn7.resp1\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn7.resp2\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn8.resp1\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn8.resp2\", responseBundle) + \"\u003d{true,true}\");"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(11, results.visibilityTable.size());"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        /*** Test result bundle for instructor1 within a course ***/"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                responseBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        results \u003d fsLogic.getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getCourseId(), instructor.email);"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "        // Instructor can see responses: q2r1-3, q3r1-2, q4r1-3, q5r1, q6r1"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(10, results.responses.size());"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        //Instructor should still see all questions"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, results.questions.size());"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the user email-name maps used for display purposes"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d results.emailNameTable.toString();"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "        String student1AnonEmail \u003d getStudentAnonEmail(responseBundle, \"student1InCourse1\");"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        String student1AnonName \u003d getStudentAnonName(responseBundle, \"student1InCourse1\");"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        String student3AnonEmail \u003d getStudentAnonEmail(responseBundle, \"student3InCourse1\");"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "        String student3AnonName \u003d getStudentAnonName(responseBundle, \"student3InCourse1\");"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        String student6AnonEmail \u003d getStudentAnonEmail(responseBundle, \"student6InCourse1\");"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        String student6AnonName \u003d getStudentAnonName(responseBundle, \"student6InCourse1\");"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructor1AnonEmail \u003d FeedbackSessionResultsBundle.getAnonEmail("
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "                                          FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "                                          responseBundle.instructors.get(\"instructor1OfCourse1\").name);"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructor1AnonName \u003d FeedbackSessionResultsBundle.getAnonName("
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "                                          FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "                                          responseBundle.instructors.get(\"instructor1OfCourse1\").name);"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructor2AnonEmail \u003d FeedbackSessionResultsBundle.getAnonEmail("
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "                                          FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "                                          responseBundle.instructors.get(\"instructor2OfCourse1\").name);"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructor2AnonName \u003d FeedbackSessionResultsBundle.getAnonName("
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                                          FeedbackParticipantType.INSTRUCTORS,"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "                                          responseBundle.instructors.get(\"instructor2OfCourse1\").name);"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "                \"%GENERAL%\u003d%NOBODY%\","
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u003dstudent1 In Course1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u003dstudent2 In Course1\","
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student3InCourse1@gmail.tmt\u003dstudent3 In Course1\","
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student4InCourse1@gmail.tmt\u003dstudent4 In Course1\","
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student5InCourse1@gmail.tmt\u003dstudent5 In Course1\","
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student6InCourse1@gmail.tmt\u003dstudent6 In Course1\","
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr1@course1.tmt\u003dInstructor1 Course1\","
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr2@course1.tmt\u003dInstructor2 Course1\","
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                student1AnonEmail + \"\u003d\" + student1AnonName,"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                student2AnonEmail + \"\u003d\" + student2AnonName,"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                student3AnonEmail + \"\u003d\" + student3AnonName,"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                student6AnonEmail + \"\u003d\" + student6AnonName,"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor1AnonEmail + \"\u003d\" + instructor1AnonName,"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor2AnonEmail + \"\u003d\" + instructor2AnonName,"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.2\u003dTeam 1.2\","
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.3\u003dTeam 1.3\","
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\u003dTeam 1.4\");"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(18, results.emailNameTable.size());"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the user email-teamName maps used for display purposes"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d results.emailTeamNameTable.toString();"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "                \"%GENERAL%\u003d\","
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student3InCourse1@gmail.tmt\u003dTeam 1.2\","
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student4InCourse1@gmail.tmt\u003dTeam 1.2\","
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student5InCourse1@gmail.tmt\u003dTeam 1.3\","
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student6InCourse1@gmail.tmt\u003dTeam 1.4\","
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr2@course1.tmt\u003dInstructors\","
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr1@course1.tmt\u003dInstructors\","
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                student1AnonEmail + \"\u003d\" + student1AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                student2AnonEmail + \"\u003d\" + student2AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "                student3AnonEmail + \"\u003d\" + student3AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "                student6AnonEmail + \"\u003d\" + student6AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor1AnonEmail + \"\u003d\" + instructor1AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor2AnonEmail + \"\u003d\" + instructor2AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.3\u003d\","
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.2\u003d\","
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\u003d\");"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(18, results.emailTeamNameTable.size());"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the generated response visibilityTable for userNames."
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d tableToString(results.visibilityTable);"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp1\", responseBundle) + \"\u003d{false,false}\","
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp2\", responseBundle) + \"\u003d{false,false}\","
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp3\", responseBundle) + \"\u003d{false,false}\","
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn3.resp1\", responseBundle) + \"\u003d{true,false}\","
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn3.resp2\", responseBundle) + \"\u003d{false,false}\","
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn4.resp1\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn4.resp2\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn4.resp3\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn5.resp1\", responseBundle) + \"\u003d{false,true}\","
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn6.resp1\", responseBundle) + \"\u003d{true,true}\");"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(10, results.visibilityTable.size());"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "        /*** Test result bundle for instructor1 within a section ***/"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard case to view by Section A with default section detail\");"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        results \u003d fsLogic.getFeedbackSessionResultsForInstructorInSection("
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getCourseId(), instructor.email, \"Section A\", SectionDetail.EITHER);"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "        // Instructor can see responses: q2r1-3, q3r1-2, q4r1-3, q5r1, q6r1"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "        // after filtering by section, the number of responses seen by instructor will differ."
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "        // Responses viewed by instructor after filtering: q2r1-3, q3r1, q4r2-3, q5r1"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(7, results.responses.size());"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        //Instructor should still see all questions"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, results.questions.size());"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the user email-name maps used for display purposes"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d results.emailNameTable.toString();"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u003dstudent1 In Course1\","
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "                student1AnonEmail + \"\u003d\" + student1AnonName,"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "                student2AnonEmail + \"\u003d\" + student2AnonName,"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "                student3AnonEmail + \"\u003d\" + student3AnonName,"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                student6AnonEmail + \"\u003d\" + student6AnonName,"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor1AnonEmail + \"\u003d\" + instructor1AnonName,"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u003dstudent2 In Course1\","
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\u003dTeam 1.4\","
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr1@course1.tmt\u003dInstructor1 Course1\");"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(13, results.emailNameTable.size());"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the user email-teamName maps used for display purposes"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d results.emailTeamNameTable.toString();"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student1InCourse1@gmail.tmt\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "                student1AnonEmail + \"\u003d\" + student1AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "                student2AnonEmail + \"\u003d\" + student2AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                student3AnonEmail + \"\u003d\" + student3AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "                student6AnonEmail + \"\u003d\" + student6AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "                instructor1AnonEmail + \"\u003d\" + instructor1AnonName + Const.TEAM_OF_EMAIL_OWNER,"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.student2InCourse1@gmail.tmt\u003dTeam 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Team 1.4\u003d\","
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "                \"FSRTest.instr1@course1.tmt\u003dInstructors\");"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(13, results.emailTeamNameTable.size());"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "        // Test the generated response visibilityTable for userNames."
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "        mapString \u003d tableToString(results.visibilityTable);"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "        expectedStrings.clear();"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.addAll(expectedStrings,"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn3.resp1\", responseBundle) + \"\u003d{true,false}\","
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn4.resp3\", responseBundle) + \"\u003d{true,true}\","
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp3\", responseBundle) + \"\u003d{false,false}\","
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "                getResponseId(\"qn2.resp1\", responseBundle) + \"\u003d{false,false}\");"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(expectedStrings, mapString);"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(7, results.visibilityTable.size());"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO: test student2 too."
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard case to view by receiver in Section A\");"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "        results \u003d fsLogic.getFeedbackSessionResultsForInstructorInSection("
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getCourseId(), instructor.email, \"Section A\", SectionDetail.EVALUEE);"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "        // Responses viewed by instructor after filtering: q1r1, q2r1, q4r3"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(3, results.responses.size());"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, results.questions.size());"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard case to view by giver in Section A\");"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "        results \u003d fsLogic.getFeedbackSessionResultsForInstructorInSection("
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getCourseId(), instructor.email, \"Section A\", SectionDetail.GIVER);"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        // Responses viewed by instructor after filtering: q2r1-3, q3r1, q4r2-3, q5r1"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(7, results.responses.size());"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, results.questions.size());"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard case to view by both giver and receiver in Section A\");"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "        results \u003d fsLogic.getFeedbackSessionResultsForInstructorInSection("
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getCourseId(), instructor.email, \"Section A\", SectionDetail.BOTH);"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        // Responses viewed by instructor after filtering: q2r1, q2r3, q3r1, q4r3"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(4, results.responses.size());"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(8, results.questions.size());"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: no session\");"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"invalid session\", session.getCourseId(), instructor.email));"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to view a non-existent feedback session: \" + session.getCourseId() + \"/invalid session\","
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "        //TODO: check for cases where a person is both a student and an instructor"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testGetFeedbackSessionResultsSummaryAsCsv() throws Exception {"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical case: get all results\");"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        String export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsAllResults.csv\");"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical case: get all results with unchecked isMissingResponsesShown\");"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, false, true);"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsHideMissingResponses.csv\");"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical case: get results for single question\");"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        // results for single question with sectionDetail is tested in InstructorFeedbackResultsDownloadActionTest.java"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        int questionNum \u003d dataBundle.feedbackQuestions.get(\"qn2InSession1InCourse1\").getQuestionNumber();"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d fqLogic.getFeedbackQuestion(session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getCourseId(), questionNum).getId();"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, questionId, true, true);"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsSingleQuestion.csv\");"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"MCQ results\");"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "        DataBundle newDataBundle \u003d loadDataBundle(\"/FeedbackSessionQuestionTypeTest.json\");"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreDataBundle(newDataBundle);"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"mcqSession\");"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsMcqResults.csv\");"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"MSQ results\");"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"msqSession\");"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsMsqResults.csv\");"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"NUMSCALE results\");"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"numscaleSession\");"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsNumscaleResults.csv\");"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"CONSTSUM results\");"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"constSumSession\");"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsConstsumResults.csv\");"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor without privilege to view responses\");"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsConstsumResultsInstructorNoPrivilege.csv\");"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"CONTRIB results\");"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"contribSession\");"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsContribResults.csv\");"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"CONTRIB summary visibility variations\");"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "        // instructor not allowed to see student"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"contribSessionStudentAnonymised\");"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsContribResultsStudentsAnonymous.csv\");"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "        // instructor not allowed to view student responses in section"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"contribSessionInstructorSectionRestricted\");"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourseWithSections\");"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsContribResultsRestrictedSections.csv\");"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"RUBRIC results\");"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"rubricSession\");"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsRubricResults.csv\");"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"RANK results\");"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"rankSession\");"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, true);"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "        CsvChecker.verifyCsvContent(export, \"/feedbackSessionResultsRankResults.csv\");"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"MSQ results without statistics\");"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d newDataBundle.feedbackSessions.get(\"msqSession\");"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor \u003d newDataBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "        export \u003d fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), instructor.email, null, true, false);"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(export.contains(\"Summary Statistics\"));"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-existent Course/Session\");"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes finalInstructor \u003d instructor;"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"non.existent\", \"no course\", finalInstructor.email, null, true, true));"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to view a non-existent feedback session: no course/non.existent\","
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getStudentAnonEmail(DataBundle dataBundle, String studentKey) {"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "        return FeedbackSessionResultsBundle.getAnonEmail(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         dataBundle.students.get(studentKey).name);"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getStudentAnonName(DataBundle dataBundle, String studentKey) {"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "        return FeedbackSessionResultsBundle.getAnonName(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        dataBundle.students.get(studentKey).name);"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testIsFeedbackSessionViewableToStudents() {"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Session with questions for students to answer\");"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionViewableToStudents(session));"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Session without questions for students, but with visible responses\");"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d dataBundle.feedbackSessions.get(\"archiveCourse.session1\");"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionViewableToStudents(session));"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d dataBundle.feedbackSessions.get(\"session1InCourse2\");"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionViewableToStudents(session));"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"empty session\");"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "        session \u003d dataBundle.feedbackSessions.get(\"empty.session\");"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.isFeedbackSessionViewableToStudents(session));"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testUpdateFeedbackSession() throws Exception {"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: non-existent session name\");"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes.UpdateOptions updateOptions \u003d"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(\"asdf_randomName1423\", \"idOfTypicalCourse1\")"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withInstructions(\"test\")"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build();"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.updateFeedbackSession(updateOptions));"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Trying to update a non-existent feedback session: \""
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "                        + updateOptions.getCourseId() + \"/\" + updateOptions.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success 1: typical case\");"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "        fsa.setInstructions(\"test\");"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes updatedFeedbackSession \u003d fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder(fsa.getFeedbackSessionName(), fsa.getCourseId())"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withInstructions(fsa.getInstructions())"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(fsa.toString(), fsLogic.getFeedbackSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).toString());"
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(fsa.toString(), updatedFeedbackSession.toString());"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testUpdateFeedbackSession_shouldAdjustEmailSendingStatusAccordingly() throws Exception {"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionsDb fsDb \u003d new FeedbackSessionsDb();"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes typicalSession \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"open email sent, whether the updated session is open determines the open email sending status\");"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentOpenEmail(true)"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2))"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1))"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "        // updated session not open, status set to false"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentOpenEmail());"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentOpenEmail(true)"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withStartTime(TimeHelper.getInstantDaysOffsetFromNow(-1))"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(TimeHelper.getInstantDaysOffsetFromNow(1))"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        // updated session open, status set to true"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentOpenEmail());"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"closed email sent, whether the updated session is closed determines the \""
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"closed/closing email sending status\");"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentClosedEmail(true)"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2))"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1))"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "        // updated session closed, status set to true"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentClosedEmail());"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentClosingEmail());"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentClosedEmail(true)"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withStartTime(TimeHelper.getInstantDaysOffsetFromNow(-1))"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(TimeHelper.getInstantDaysOffsetFromNow(2))"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "        //  updated session not closed, status set to false"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentClosedEmail());"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentClosingEmail());"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentClosedEmail(true)"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withStartTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(-10))"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withEndTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(10))"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "        // updated session not closed, status set to false"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentClosedEmail());"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "        // closed in 10 minutes, should not send closing email anymore"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentClosingEmail());"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"published email sent, whether the updated session is published determines the \""
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"publish email sending status\");"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(true)"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(Const.TIME_REPRESENTS_NOW)"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "        // updated session published, status set to true"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentPublishedEmail());"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "        fsDb.updateFeedbackSession("
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withSentPublishedEmail(true)"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes.updateOptionsBuilder("
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "                        typicalSession.getFeedbackSessionName(), typicalSession.getCourseId())"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER)"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "        // updated session not published, status set to false"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalSession.getFeedbackSessionName(), typicalSession.getCourseId()).isSentPublishedEmail());"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testPublishUnpublishFeedbackSession() throws Exception {"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: publish\");"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionUnderTest \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "        // set as manual publish"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionUnderTest.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.updateFeedbackSession("
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackSessionAttributes"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "                        .updateOptionsBuilder(sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId())"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResultsVisibleFromTime(sessionUnderTest.getResultsVisibleFromTime())"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        fsLogic.publishFeedbackSession(sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId());"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "        // Set real time of publishing"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes sessionPublished \u003d"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession(sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId());"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionUnderTest.setResultsVisibleFromTime(sessionPublished.getResultsVisibleFromTime());"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(sessionUnderTest.toString(), sessionPublished.toString());"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: already published\");"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                () -\u003e fsLogic.publishFeedbackSession("
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                        sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId()));"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Error publishing feedback session: Session has already been published.\", ipe.getMessage());"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: unpublish\");"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        fsLogic.unpublishFeedbackSession(sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId());"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionUnderTest.setResultsVisibleFromTime(Const.TIME_REPRESENTS_LATER);"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "                sessionUnderTest.toString(),"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "                fsLogic.getFeedbackSession("
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "                        sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId()).toString());"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: not published\");"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ipe \u003d assertThrows(InvalidParametersException.class,"
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                () -\u003e fsLogic.unpublishFeedbackSession("
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                        sessionUnderTest.getFeedbackSessionName(), sessionUnderTest.getCourseId()));"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Error unpublishing feedback session: Session has already been unpublished.\", ipe.getMessage());"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"failure: publish/unpublish non-existent session\");"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(fsLogic.getFeedbackSession(\"randomName\", \"randomId\"));"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                () -\u003e fsLogic.publishFeedbackSession(\"randomName\", \"randomId\"));"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(\"Trying to update a non-existent feedback session: randomId/randomName\", ednee.getMessage());"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                () -\u003e fsLogic.unpublishFeedbackSession(\"randomName\", \"randomId\"));"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(\"Trying to update a non-existent feedback session: randomId/randomName\", ednee.getMessage());"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testIsFeedbackSessionCompletedByInstructor() throws Exception {"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: empty session\");"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d dataBundle.feedbackSessions.get(\"empty.session\");"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionCompletedByInstructor(fs, instructor.email));"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testIsFeedbackSessionCompletedByStudent() {"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success: empty session\");"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d dataBundle.feedbackSessions.get(\"empty.session\");"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student \u003d dataBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionCompletedByStudent(fs, student.email));"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testIsFeedbackSessionFullyCompletedByStudent() throws Exception {"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1OfCourse1 \u003d dataBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student3OfCourse1 \u003d dataBundle.students.get(\"student3InCourse1\");"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"failure: non-existent feedback session for student\");"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e fsLogic.isFeedbackSessionFullyCompletedByStudent("
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"nonExistentFSName\", fs.getCourseId(), \"random.student@email\"));"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to check a non-existent feedback session: \" + fs.getCourseId() + \"/nonExistentFSName\","
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "                ednee.getMessage());"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success case: fully done by student 1\");"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(fsLogic.isFeedbackSessionFullyCompletedByStudent(fs.getFeedbackSessionName(), fs.getCourseId(),"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    student1OfCourse1.email));"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success case: partially done by student 3\");"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(fsLogic.isFeedbackSessionFullyCompletedByStudent(fs.getFeedbackSessionName(), fs.getCourseId(),"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                     student3OfCourse1.email));"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes getNewFeedbackSession() {"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "        return FeedbackSessionAttributes.builder(\"fsTest1\", \"testCourse\")"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCreatorEmail(\"valid@email.tmt\")"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "                .withSessionVisibleFromTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(-62))"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "                .withStartTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1))"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "                .withEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(0))"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "                .withResultsVisibleFromTime(TimeHelperExtension.getInstantMinutesOffsetFromNow(1))"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGracePeriod(Duration.ofMinutes(5))"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "                .withInstructions(\"Give feedback.\")"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackQuestionAttributes getQuestionFromDatastore(String jsonId) {"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes questionToGet \u003d dataBundle.feedbackQuestions.get(jsonId);"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "        questionToGet \u003d fqLogic.getFeedbackQuestion("
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "                questionToGet.feedbackSessionName,"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "                questionToGet.courseId,"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "                questionToGet.questionNumber);"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        return questionToGet;"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "    // Extract response id from datastore based on json key."
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "    private String getResponseId(String jsonId, DataBundle bundle) {"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "        return getResponseFromDatastore(jsonId, bundle).getId();"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResponseAttributes getResponseFromDatastore(String jsonId, DataBundle bundle) {"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response \u003d bundle.feedbackResponses.get(jsonId);"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d null;"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "            int qnNumber \u003d Integer.parseInt(response.feedbackQuestionId);"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "            questionId \u003d fqLogic.getFeedbackQuestion("
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "                        response.feedbackSessionName, response.courseId,"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "                        qnNumber).getId();"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "            questionId \u003d response.feedbackQuestionId;"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "        return frLogic.getFeedbackResponse(questionId,"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "                response.giver, response.recipient);"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResponseCommentAttributes getCommentFromDatastore(String jsonId, DataBundle bundle) {"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentAttributes comment \u003d bundle.feedbackResponseComments.get(jsonId);"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "        return frcLogic.getFeedbackResponseComment(comment.feedbackResponseId, comment.commentGiver, comment.createdAt);"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "    private void unpublishAllSessions() throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fs : dataBundle.feedbackSessions.values()) {"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fs.isPublished()) {"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                fsLogic.unpublishFeedbackSession(fs.getFeedbackSessionName(), fs.getCourseId());"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "    // Stringifies the visibility table for easy testing/comparison."
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "    private String tableToString(Map\u003cString, boolean[]\u003e table) {"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "        return table.entrySet().stream()"
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(entry -\u003e \"{\" + entry.getKey() + \"\u003d{\" + entry.getValue()[0] + \u0027,\u0027 + entry.getValue()[1] + \"}}\")"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.joining(\",\"));"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testMoveFeedbackSessionToRecycleBin() throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes feedbackSession \u003d dataBundle.feedbackSessions.get(\"session2InCourse3\");"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d dataBundle.feedbackSessions.get(\"session2InCourse3\").getFeedbackSessionName();"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d dataBundle.courses.get(\"typicalCourse3\").getId();"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(feedbackSession.isSessionDeleted());"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "        Instant deletedTime \u003d fsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSession.setDeletedTime(deletedTime);"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes actualFs \u003d fsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(JsonUtils.toJson(feedbackSession), JsonUtils.toJson(actualFs));"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(feedbackSession.isSessionDeleted());"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testRestoreFeedbackSessionFromRecycleBin() throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes feedbackSession \u003d dataBundle.feedbackSessions.get(\"session2InCourse3\");"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d dataBundle.feedbackSessions.get(\"session2InCourse3\").getFeedbackSessionName();"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d dataBundle.courses.get(\"typicalCourse3\").getId();"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(feedbackSession.isSessionDeleted());"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSession.resetDeletedTime();"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(feedbackSession);"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(feedbackSession.isSessionDeleted());"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "    private void testRestoreAllFeedbackSessionsFromRecycleBin()"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d dataBundle.instructors.get(\"instructor1OfCourse3\");"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cInstructorAttributes\u003e instructors \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "        instructors.add(instructor);"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackSessionAttributes\u003e softDeletedFsa \u003d fsLogic.getSoftDeletedFeedbackSessionsListForInstructor(instructor);"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : softDeletedFsa) {"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "            assertTrue(fsa.isSessionDeleted());"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "        fsLogic.restoreAllFeedbackSessionsFromRecycleBin(instructors);"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackSessionAttributes fsa : softDeletedFsa) {"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "            fsa.resetDeletedTime();"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "            verifyPresentInDatastore(fsa);"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "            assertFalse(fsa.isSessionDeleted());"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 19,
      "-": 1808
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/storage/FeedbackResponsesDbTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.AfterMethod;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeClass;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeMethod;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import com.google.common.collect.Sets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.AttributesDeletionQuery;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackResponseDetails;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.FieldValidator;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackQuestionsDb;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackResponsesDb;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.cases.BaseComponentTestCase;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.AssertHelper;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link FeedbackResponsesDb}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "public class FeedbackResponsesDbTest extends BaseComponentTestCase {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesDb frDb \u003d new FeedbackResponsesDb();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsDb fqDb \u003d new FeedbackQuestionsDb();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private DataBundle dataBundle;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private Map\u003cString, FeedbackResponseAttributes\u003e fras;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeClass"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public void beforeClass() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add questions to DB"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e keys \u003d dataBundle.feedbackQuestions.keySet();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String i : keys) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            fqDb.createEntity(dataBundle.feedbackQuestions.get(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeMethod"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void beforeMethod() throws Exception {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        addQuestionsAndResponsesToDb();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        fras \u003d dataBundle.feedbackResponses;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private void addQuestionsAndResponsesToDb() throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // Add responses for corresponding question to DB"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e keys \u003d dataBundle.feedbackResponses.keySet();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String i : keys) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseAttributes fra \u003d dataBundle.feedbackResponses.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            // Update feedbackQuestionId for response"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes fqa \u003d logic.getFeedbackQuestion(fra.feedbackSessionName,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    fra.courseId, Integer.parseInt(fra.feedbackQuestionId));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            fra.feedbackQuestionId \u003d fqa.getId();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            frDb.createEntity(fra);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public void testGetGiverSetThatAnswerFeedbackSession_emptyResponses_shouldReturnEmptySet() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Set\u003cString\u003e giverSet \u003d frDb.getGiverSetThatAnswerFeedbackSession(\"courseA\", \"session\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertTrue(giverSet.isEmpty());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    public void testGetGiverSetThatAnswerFeedbackSession_giverIsUser_shouldReturnCorrectIdentifier() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        Set\u003cString\u003e giverSet \u003d frDb.getGiverSetThatAnswerFeedbackSession(\"idOfTypicalCourse1\", \"First feedback session\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertEquals(Sets.newHashSet(\"student1InCourse1@gmail.tmt\", \"student2InCourse1@gmail.tmt\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                \"student5InCourse1@gmail.tmt\", \"student3InCourse1@gmail.tmt\", \"instructor1@course1.tmt\"),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                giverSet);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testTimestamp()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success : created\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fra \u003d getNewFeedbackResponseAttributes();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        // remove possibly conflicting entity from the database"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteResponse(fra);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.createEntity(fra);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(fra);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackQuestionId \u003d fra.feedbackQuestionId;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverEmail \u003d fra.giver;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        String recipientEmail \u003d fra.recipient;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponse(feedbackQuestionId, giverEmail, recipientEmail);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        // Assert dates are now."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertInstantIsNow(feedbackResponse.getCreatedAt());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertInstantIsNow(feedbackResponse.getUpdatedAt());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"success : update lastUpdated\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        String newRecipientEmail \u003d \"new-email@tmt.com\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponse.recipient \u003d newRecipientEmail;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(feedbackResponse.getId())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipient(newRecipientEmail)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes updatedFr \u003d frDb.getFeedbackResponse(feedbackQuestionId, giverEmail, newRecipientEmail);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        // Assert lastUpdate has changed, and is now."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(feedbackResponse.getUpdatedAt().equals(updatedFr.getUpdatedAt()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertInstantIsNow(updatedFr.getUpdatedAt());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackResponse() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent id\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponse(\"not-existent\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fra \u003d fras.get(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        fra \u003d frDb.getFeedbackResponse(fra.feedbackQuestionId, fra.giver, fra.recipient);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fra);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponse(fra.getId());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(frDb.getFeedbackResponse(fra.getId()));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackResponses_byQuestionId() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fra \u003d fras.get(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frDb.getFeedbackResponsesForQuestion(fra.feedbackQuestionId).isEmpty());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fraFromAnotherQuestion \u003d fras.get(\"response1ForQ2S1C1\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frDb.getFeedbackResponsesForQuestion(fraFromAnotherQuestion.feedbackQuestionId).isEmpty());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(fra.feedbackQuestionId, fraFromAnotherQuestion.feedbackQuestionId);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withQuestionId(fra.feedbackQuestionId)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        // all response of questions are deleted"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForQuestion(fra.feedbackQuestionId).isEmpty());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        // responses of other questions remain"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frDb.getFeedbackResponsesForQuestion(fraFromAnotherQuestion.feedbackQuestionId).isEmpty());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent question id\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        // should pass silently"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withQuestionId(\"not-exist\")"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        // responses are not deleted accidentally"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frDb.getFeedbackResponsesForQuestion(fraFromAnotherQuestion.feedbackQuestionId).isEmpty());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackResponses_byCourseIdAndSessionName() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fra \u003d fras.get(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        fra \u003d frDb.getFeedbackResponse(fra.feedbackQuestionId, fra.giver, fra.recipient);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fra);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fraFromAnotherSession \u003d fras.get(\"response1ForQ1S2C1\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        fraFromAnotherSession \u003d frDb.getFeedbackResponse("
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                fraFromAnotherSession.feedbackQuestionId, fraFromAnotherSession.giver, fraFromAnotherSession.recipient);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fraFromAnotherSession);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        // response are belong to the same course"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(fra.courseId, fraFromAnotherSession.courseId);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        // but in different session"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(fra.feedbackSessionName, fraFromAnotherSession.feedbackSessionName);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fra.courseId)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(fra.feedbackSessionName)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(frDb.getFeedbackResponse(fra.getId()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        // other responses remains"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(frDb.getFeedbackResponse(fraFromAnotherSession.getId()));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course id\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        // should pass silently"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(\"not_exist\")"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(fra.feedbackSessionName)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        // other responses remain"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(frDb.getFeedbackResponse(fraFromAnotherSession.getId()));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent session name\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        // should pass silently"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fra.courseId)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(\"not-exist\")"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        // other responses remain"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(frDb.getFeedbackResponse(fraFromAnotherSession.getId()));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course and session name\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        // should pass silently"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(\"not-exist\")"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(\"not-exist\")"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        // other responses remain"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(frDb.getFeedbackResponse(fraFromAnotherSession.getId()));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testDeleteFeedbackResponses_byCourseId() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fra \u003d fras.get(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        fra \u003d frDb.getFeedbackResponse(fra.feedbackQuestionId, fra.giver, fra.recipient);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fra);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fraFromAnotherCourse \u003d fras.get(\"response1ForQ1S1C2\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        fraFromAnotherCourse \u003d frDb.getFeedbackResponse("
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                fraFromAnotherCourse.feedbackQuestionId, fraFromAnotherCourse.giver, fraFromAnotherCourse.recipient);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(fraFromAnotherCourse);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        // response are belong to different courses"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(fra.courseId, fraFromAnotherCourse.courseId);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fra.courseId)"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        // all response of courses are deleted"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(frDb.getFeedbackResponse(fra.getId()));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        // responses of other course remain"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(frDb.getFeedbackResponse(fraFromAnotherCourse.getId()));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course id\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        // should pass silently"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponses("
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                AttributesDeletionQuery.builder()"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(\"not-exist\")"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        // responses are not deleted accidentally"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(frDb.getFeedbackResponse(fraFromAnotherCourse.getId()));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testCreateFeedbackResponse() throws Exception {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes fra \u003d getNewFeedbackResponseAttributes();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        // remove possibly conflicting entity from the database"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteResponse(fra);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.createEntity(fra);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        // sets the id for fra"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(fra);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"duplicate - with same id.\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityAlreadyExistsException eaee \u003d assertThrows(EntityAlreadyExistsException.class, () -\u003e frDb.createEntity(fra));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(FeedbackResponsesDb.ERROR_CREATE_ENTITY_ALREADY_EXISTS, fra.toString()), eaee.getMessage());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"delete - with id specified\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteResponse(fra);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAbsentInDatastore(fra);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class, () -\u003e frDb.createEntity(null));"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"invalid params\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        fra.courseId \u003d \"invalid course id!\";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class, () -\u003e frDb.createEntity(fra));"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains("
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                getPopulatedErrorMessage("
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                        FieldValidator.COURSE_ID_ERROR_MESSAGE, \"invalid course id!\","
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                        FieldValidator.COURSE_ID_FIELD_NAME, FieldValidator.REASON_INCORRECT_FORMAT,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                        FieldValidator.COURSE_ID_MAX_LENGTH),"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                ipe.getLocalizedMessage());"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponses() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes expected \u003d getResponseAttributes(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes actual \u003d"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponse(expected.feedbackQuestionId, expected.giver, expected.recipient);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected.toString(), actual.toString());"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent response\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(frDb.getFeedbackResponse(expected.feedbackQuestionId, \"student1InCourse1@gmail.tmt\","
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                                            \"student3InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null fqId\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponse(null, \"student1InCourse1@gmail.tmt\", \"student1InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null giverEmail\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponse(expected.feedbackQuestionId, null, \"student1InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null receiverEmail\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponse(expected.feedbackQuestionId, \"student1InCourse1@gmail.tmt\", null));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"get by id\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        actual \u003d frDb.getFeedbackResponse(actual.getId()); //Id from first success case"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(expected.toString(), actual.toString());"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"get non-existent response by id\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        actual \u003d frDb.getFeedbackResponse(\"non-existent id\");"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(actual);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForQuestion() {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForQuestion(fras.get(\"response1ForQ1S1C1\").feedbackQuestionId);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, responses.size());"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForQuestion(null));"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForQuestion(\"non-existent fq id\").isEmpty());"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForQuestionInSection() {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d fras.get(\"response1ForQ2S1C1\").feedbackQuestionId;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d frDb.getFeedbackResponsesForQuestionInSection(questionId, \"Section 1\","
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                SectionDetail.EITHER);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(3, responses.size());"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"show response after filtering by giver from section 1\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        responses \u003d frDb.getFeedbackResponsesForQuestionInSection(questionId, \"Section 1\", SectionDetail.GIVER);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, responses.size());"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"show response after filtering by recipient from section 2\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        responses \u003d frDb.getFeedbackResponsesForQuestionInSection(questionId, \"Section 2\", SectionDetail.EVALUEE);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, responses.size());"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"no responses as they are filtered by both giver and recipient from section 2\");"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        responses \u003d frDb.getFeedbackResponsesForQuestionInSection(questionId, \"Section 2\", SectionDetail.BOTH);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, responses.size());"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForQuestionInSection(null, \"Section 1\", SectionDetail.EITHER));"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForQuestionInSection(questionId, null, SectionDetail.EITHER));"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForQuestionInSection(questionId, \"Section 1\", null));"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForQuestionInSection(\"non-existent fq id\", \"Section 1\","
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                SectionDetail.EITHER).isEmpty());"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForSession() {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fras.get(\"response1ForQ1S1C1\").feedbackSessionName;"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d frDb.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(6, responses.size());"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSession(null, courseId));"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSession(feedbackSessionName, null));"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback session\");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSession(\"non-existent feedback session\", courseId).isEmpty());"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSession(feedbackSessionName, \"non-existent courseId\").isEmpty());"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForReceiverForQuestion() {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d fras.get(\"response1ForQ1S1C1\").feedbackQuestionId;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForReceiverForQuestion(questionId,"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, responses.size());"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForQuestion(null, \"student1InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForQuestion(questionId, null));"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForReceiverForQuestion("
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent fq id\", \"student1InCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent receiver\");"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForReceiverForQuestion("
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, \"non-existentStudentInCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForReceiverForQuestionInSection() {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d fras.get(\"response1ForQ1S1C1\").feedbackQuestionId;"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForReceiverForQuestionInSection(questionId,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\", \"Section 1\");"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, responses.size());"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"No responses as they are filtered out\");"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        responses \u003d"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForReceiverForQuestionInSection(questionId,"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\", \"Section 2\");"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(responses.size(), 0);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                        null, \"student1InCourse1@gmail.tmt\", \"Section 1\"));"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForQuestionInSection(questionId, null, \"Section 1\"));"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                        questionId, \"student1InCourse1@gmail.tmt\", null));"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"non-existent fq id\", \"student1InCourse1@gmail.tmt\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent receiver\");"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForReceiverForQuestionInSection("
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                                questionId, \"non-existentStudentInCourse1@gmail.tmt\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForReceiverForCourse() {"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForReceiverForCourse(courseId,"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, responses.size());"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForCourse(null, \"student1InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForReceiverForCourse(courseId, null));"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent courseId\");"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForReceiverForCourse("
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent courseId\", \"student1InCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent receiver\");"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForReceiverForCourse("
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, \"non-existentStudentInCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesFromGiverForQuestion() {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d fras.get(\"response1ForQ1S1C1\").feedbackQuestionId;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesFromGiverForQuestion(questionId,"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(responses.size(), 1);"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesFromGiverForQuestion(null, \"student1InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class, () -\u003e frDb.getFeedbackResponsesFromGiverForQuestion(questionId, null));"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent fq id\", \"student1InCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent receiver\");"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, \"non-existentStudentInCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesFromGiverForQuestionInSection() {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        String questionId \u003d fras.get(\"response1ForQ1S1C1\").feedbackQuestionId;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesFromGiverForQuestionInSection(questionId,"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\", \"Section 1\");"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(responses.size(), 1);"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"No reponses as they are filtered out\");"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        responses \u003d"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesFromGiverForQuestionInSection(questionId,"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\", \"Section 2\");"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(responses.size(), 0);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                        null, \"student1InCourse1@gmail.tmt\", \"Section 1\"));"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesFromGiverForQuestionInSection(questionId, null, \"Section 1\"));"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "                        questionId, \"student1InCourse1@gmail.tmt\", null));"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"non-existent fq id\", \"student1InCourse1@gmail.tmt\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent receiver\");"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesFromGiverForQuestionInSection("
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                            questionId, \"non-existentstudentInCourse1@gmail.tmt\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesFromGiverForCourse() {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesFromGiverForCourse(courseId,"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"student1InCourse1@gmail.tmt\");"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(2, responses.size());"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesFromGiverForCourse(null, \"student1InCourse1@gmail.tmt\"));"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class, () -\u003e frDb.getFeedbackResponsesFromGiverForCourse(courseId, null));"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback question\");"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesFromGiverForCourse("
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent courseId\", \"student1InCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent giver\");"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesFromGiverForCourse("
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                courseId, \"non-existentStudentInCourse1@gmail.tmt\").isEmpty());"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForSessionWithinRange() {"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fras.get(\"response1ForQ1S1C1\").feedbackSessionName;"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForSessionWithinRange(feedbackSessionName, courseId, 1);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(responses.size(), 2);"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionWithinRange(null, courseId, 5));"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionWithinRange(feedbackSessionName, null, 4));"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback session\");"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionWithinRange("
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent feedback session\", courseId, 1).isEmpty());"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionWithinRange("
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, \"non-existent courseId\", 1).isEmpty());"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForSessionInSection() {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fras.get(\"response1ForQ1S1C1\").feedbackSessionName;"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForSessionInSection(feedbackSessionName, courseId, \"Section 1\");"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(5, responses.size());"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionInSection(null, courseId, \"Section 1\"));"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionInSection(feedbackSessionName, null, \"Section 1\"));"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback session\");"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionInSection("
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent feedback session\", courseId, \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionInSection("
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, \"non-existent courseId\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForSessionFromSection() {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fras.get(\"response1ForQ1S1C1\").feedbackSessionName;"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForSessionFromSection(feedbackSessionName, courseId, \"Section 2\");"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, responses.size());"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionFromSection(null, courseId, \"Section 1\"));"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionFromSection(feedbackSessionName, null, \"Section 1\"));"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback session\");"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionFromSection("
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent feedback session\", courseId, \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionFromSection("
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, \"non-existent courseId\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"no responses for session\");"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionFromSection("
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Empty feedback session\", \"idOfTypicalCourse1\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testGetFeedbackResponsesForSessionToSection() {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d fras.get(\"response1ForQ1S1C1\").courseId;"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d fras.get(\"response1ForQ1S1C1\").feedbackSessionName;"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseAttributes\u003e responses \u003d"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponsesForSessionToSection(feedbackSessionName, courseId, \"Section 1\");"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(4, responses.size());"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionToSection(null, courseId, \"Section 1\"));"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        ae \u003d assertThrows(AssertionError.class,"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.getFeedbackResponsesForSessionToSection(feedbackSessionName, null, \"Section 1\"));"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent feedback session\");"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionToSection("
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                \"non-existent feedback session\", courseId, \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionToSection("
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, \"non-existent courseId\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"no responses for session\");"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(frDb.getFeedbackResponsesForSessionToSection("
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Empty feedback session\", \"idOfTypicalCourse1\", \"Section 1\").isEmpty());"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testUpdateFeedbackResponse_noChangeToResponse_shouldNotIssueSaveRequest() throws Exception {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes typicalResponse \u003d getResponseAttributes(\"response3ForQ2S1C1\");"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        typicalResponse \u003d frDb.getFeedbackResponse(typicalResponse.feedbackQuestionId,"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalResponse.giver, typicalResponse.recipient);"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes updatedResponse \u003d frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(typicalResponse.getId())"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(JsonUtils.toJson(typicalResponse), JsonUtils.toJson(updatedResponse));"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalResponse.getUpdatedAt(), updatedResponse.getUpdatedAt());"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "        updatedResponse \u003d frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(typicalResponse.getId())"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiver(typicalResponse.getGiver())"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiverSection(typicalResponse.getGiverSection())"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipient(typicalResponse.getRecipient())"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipientSection(typicalResponse.getRecipientSection())"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(typicalResponse.getResponseDetails())"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(JsonUtils.toJson(typicalResponse), JsonUtils.toJson(updatedResponse));"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalResponse.getUpdatedAt(), updatedResponse.getUpdatedAt());"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testUpdateFeedbackResponse() throws Exception {"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"null params\");"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertionError ae \u003d assertThrows(AssertionError.class, () -\u003e frDb.updateFeedbackResponse(null));"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.StatusCodes.DBLEVEL_NULL_INPUT, ae.getLocalizedMessage());"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"feedback response does not exist\");"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "                        FeedbackResponseAttributes.updateOptionsBuilder(\"non-existent\")"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                                .withGiver(\"giverIdentifier\")"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                                .build()));"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(FeedbackResponsesDb.ERROR_UPDATE_NON_EXISTENT, ednee.getLocalizedMessage());"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case\");"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes modifiedResponse \u003d getResponseAttributes(\"response3ForQ2S1C1\");"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        modifiedResponse \u003d frDb.getFeedbackResponse(modifiedResponse.feedbackQuestionId,"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "                modifiedResponse.giver, modifiedResponse.recipient);"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseDetails frd \u003d new FeedbackTextResponseDetails(\"New answer text!\");"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        modifiedResponse.setResponseDetails(frd);"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(modifiedResponse.getId())"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(frd)"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyPresentInDatastore(modifiedResponse);"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        modifiedResponse \u003d frDb.getFeedbackResponse(modifiedResponse.feedbackQuestionId,"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    modifiedResponse.giver,"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    modifiedResponse.recipient);"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"New answer text!\", modifiedResponse.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"standard success case, recreate response when recipient/giver change\");"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes updatedResponse \u003d frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(modifiedResponse.getId())"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiver(\"giver@email.com\")"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipient(\"recipient@email.com\")"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(frDb.getFeedbackResponse(modifiedResponse.getId()));"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes actualResponse \u003d frDb.getFeedbackResponse(updatedResponse.getId());"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(actualResponse);"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"giver@email.com\", updatedResponse.giver);"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(updatedResponse.giver, actualResponse.giver);"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"recipient@email.com\", updatedResponse.recipient);"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(updatedResponse.recipient, actualResponse.recipient);"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(modifiedResponse.courseId, updatedResponse.courseId);"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(modifiedResponse.feedbackSessionName, updatedResponse.feedbackSessionName);"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(modifiedResponse.getFeedbackQuestionType(), updatedResponse.getFeedbackQuestionType());"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "    // the test is to ensure that optimized saving policy is implemented without false negative"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testUpdateFeedbackResponse_singleFieldUpdate_shouldUpdateCorrectly() throws Exception {"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes typicalResponse \u003d getResponseAttributes(\"response3ForQ2S1C1\");"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        typicalResponse \u003d frDb.getFeedbackResponse("
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalResponse.getFeedbackQuestionId(), typicalResponse.getGiver(), typicalResponse.getRecipient());"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(\"testSection\", typicalResponse.getGiverSection());"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes updatedResponse \u003d frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(typicalResponse.getId())"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiverSection(\"testSection\")"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes actualResponse \u003d frDb.getFeedbackResponse(typicalResponse.getId());"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"testSection\", updatedResponse.getGiverSection());"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"testSection\", actualResponse.getGiverSection());"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(\"testSection\", typicalResponse.getRecipientSection());"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "        updatedResponse \u003d frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(typicalResponse.getId())"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipientSection(\"testSection\")"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        actualResponse \u003d frDb.getFeedbackResponse(typicalResponse.getId());"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"testSection\", updatedResponse.getRecipientSection());"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"testSection\", actualResponse.getRecipientSection());"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotEquals(\"testResponse\", typicalResponse.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        updatedResponse \u003d frDb.updateFeedbackResponse("
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes.updateOptionsBuilder(typicalResponse.getId())"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(new FeedbackTextResponseDetails(\"testResponse\"))"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build());"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "        actualResponse \u003d frDb.getFeedbackResponse(typicalResponse.getId());"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"testResponse\", updatedResponse.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"testResponse\", actualResponse.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "        frDb.deleteFeedbackResponse(typicalResponse.getId());"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResponseAttributes getNewFeedbackResponseAttributes() {"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "        return FeedbackResponseAttributes.builder("
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                \"testFeedbackQuestionId\", \"giver@email.tmt\", \"recipient@email.tmt\")"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(\"testCourse\")"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(\"fsTest1\")"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverSection(\"None\")"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientSection(\"None\")"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "                .withResponseDetails(new FeedbackTextResponseDetails(\"Text response\"))"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackResponseAttributes getResponseAttributes(String id) {"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes result \u003d fras.get(id);"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        return FeedbackResponseAttributes.builder(result.feedbackQuestionId, result.giver, result.recipient)"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(result.courseId)"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(result.feedbackSessionName)"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverSection(result.giverSection)"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientSection(result.recipientSection)"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "                .withResponseDetails(result.responseDetails)"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "    @AfterMethod"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "    public void afterMethod() {"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteResponsesFromDb();"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteResponsesFromDb() {"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        Set\u003cString\u003e keys \u003d dataBundle.feedbackResponses.keySet();"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String i : keys) {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteResponse(dataBundle.feedbackResponses.get(i));"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteResponse(FeedbackResponseAttributes attributes) {"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "                frDb.getFeedbackResponse(attributes.feedbackQuestionId, attributes.giver, attributes.recipient);"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        if (feedbackResponse !\u003d null) {"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "            frDb.deleteFeedbackResponse(feedbackResponse.getId());"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 18,
      "-": 992
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/CreateFeedbackResponseActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackQuestionType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackResponseDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.exception.InvalidHttpRequestBodyException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.CreateFeedbackResponseAction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.action.Intent;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.output.FeedbackResponseData;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.request.FeedbackResponseCreateRequest;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link CreateFeedbackResponseAction}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class CreateFeedbackResponseActionTest extends BaseActionTest\u003cCreateFeedbackResponseAction\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackQuestionAttributes qn1InSession1InCourse1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private StudentAttributes student1InCourse1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private InstructorAttributes instructor1OfCourse1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private InstructorAttributes instructor2OfCourse1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackQuestionAttributes qn2InGracePeriodInCourse1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private InstructorAttributes instructor1OfCourse2;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackQuestionAttributes qn1InClosedSessionInCourse1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private StudentAttributes student2InCourse1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private StudentAttributes student5InCourse1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackQuestionAttributes qn2InSession1InCourse1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.RESPONSE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        return POST;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackSessionAttributes gracePeriodSession \u003d typicalBundle.feedbackSessions.get(\"gracePeriodSession\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackSessionAttributes closedSession \u003d typicalBundle.feedbackSessions.get(\"closedSession\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        qn1InSession1InCourse1 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId(), 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        qn2InGracePeriodInCourse1 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                gracePeriodSession.getFeedbackSessionName(), gracePeriodSession.getCourseId(), 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        qn1InClosedSessionInCourse1 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                closedSession.getFeedbackSessionName(), closedSession.getCourseId(), 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        instructor1OfCourse2 \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        student2InCourse1 \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        student5InCourse1 \u003d typicalBundle.students.get(\"student5InCourse1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        instructor2OfCourse1 \u003d typicalBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        qn2InSession1InCourse1 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId(), 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"not enough attributes\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"typical case for student\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student2InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] paramsQn2 \u003d {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseCreateRequest createRequest \u003d getResponseRequest(student1InCourse1.getEmail());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        CreateFeedbackResponseAction typicalAction \u003d getAction(createRequest, paramsQn2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        JsonResult typicalResult \u003d getJsonResult(typicalAction);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, typicalResult.getStatusCode());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseData typicalData \u003d (FeedbackResponseData) typicalResult.getOutput();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseAttributes responseAddedForStudent \u003d"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                logic.getFeedbackResponse(qn2InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                        student2InCourse1.getEmail(), student1InCourse1.getEmail());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(responseAddedForStudent);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(\"This is the text\", typicalData.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), typicalData.getRecipientIdentifier());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(typicalData.getFeedbackResponseId());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(student2InCourse1.getEmail(), typicalData.getGiverIdentifier());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"typical case for instructor\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor2OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] paramsQn2Grace \u003d {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseCreateRequest requestForInstructor \u003d getResponseRequest(instructor2OfCourse1.getEmail());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        CreateFeedbackResponseAction typicalActionForInstructor \u003d getAction(requestForInstructor, paramsQn2Grace);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        JsonResult typicalResultInstructor \u003d getJsonResult(typicalActionForInstructor);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, typicalResultInstructor.getStatusCode());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseData typicalDataInstructor \u003d (FeedbackResponseData) typicalResultInstructor.getOutput();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseAttributes responseAddedForInstructor \u003d"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                logic.getFeedbackResponse(qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                        instructor2OfCourse1.getEmail(), instructor2OfCourse1.getEmail());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(responseAddedForInstructor);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(\"This is the text\", typicalDataInstructor.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(typicalDataInstructor.getFeedbackResponseId());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(instructor2OfCourse1.getEmail(), typicalDataInstructor.getGiverIdentifier());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(instructor2OfCourse1.getEmail(), typicalDataInstructor.getRecipientIdentifier());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"response already exists\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        //show that this FeedbackResponse already exists"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseAttributes existingFeedbackResponse \u003d"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                logic.getFeedbackResponse(qn2InSession1InCourse1.getId(), student2InCourse1.getEmail(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                        student5InCourse1.getEmail());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(existingFeedbackResponse);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] paramsQ2S1C1 \u003d {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student2InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseCreateRequest createRequestAlreadyExists \u003d getResponseRequest(student5InCourse1.getEmail());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        CreateFeedbackResponseAction typicalActionAlreadyExists \u003d getAction(createRequestAlreadyExists, paramsQ2S1C1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(InvalidHttpRequestBodyException.class, () -\u003e getJsonResult(typicalActionAlreadyExists));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"invalid intent\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] invalidIntentParams \u003d {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure(invalidIntentParams);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"non-exist feedback question\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] nonExistFeedbackQuestionParams \u003d {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, \"randomNonExist\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(EntityNotFoundException.class,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                () -\u003e getAction(nonExistFeedbackQuestionParams).checkAccessControl());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"feedback session is closed\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] closedFeedbackSessionParams \u003d {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InClosedSessionInCourse1.getId(),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(closedFeedbackSessionParams);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"in preview request\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] previewParams \u003d {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.PREVIEWAS, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(previewParams);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"not answerable for students\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] notAnswerableForStudents \u003d {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        //verify not answerable to students"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, qn2InGracePeriodInCourse1.getGiverType());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(notAnswerableForStudents);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"not answerable to instructors\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] notAnswerableForInstructors \u003d {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(FeedbackParticipantType.STUDENTS, qn1InSession1InCourse1.getGiverType());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(notAnswerableForInstructors);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"invalid HTTP parameters\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] invalidParams \u003d {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(invalidParams).checkAccessControl());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        invalidParams[3] \u003d Intent.INSTRUCTOR_RESULT.toString();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(invalidParams).checkAccessControl());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"invalid recipient for student\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] invalidRecipientForStudent \u003d {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, () -\u003e {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "            FeedbackResponseCreateRequest createRequest \u003d getResponseRequest(student2InCourse1.getEmail());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "            getAction(createRequest, invalidRecipientForStudent).checkAccessControl();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        });"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"invalid recipient for instructor\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] invalidRecipientForInstructor \u003d {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, () -\u003e {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "            FeedbackResponseCreateRequest createRequest \u003d getResponseRequest(instructor1OfCourse2.getEmail());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "            getAction(createRequest, invalidRecipientForInstructor).checkAccessControl();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        });"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackResponseCreateRequest getResponseRequest(String recipientEmail) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseCreateRequest createRequest \u003d new FeedbackResponseCreateRequest();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        createRequest.setQuestionType(FeedbackQuestionType.TEXT);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        createRequest.setRecipientIdentifier(recipientEmail);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseDetails responseDetails \u003d new FeedbackTextResponseDetails(\"This is the text\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        createRequest.setResponseDetails(responseDetails);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        return createRequest;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 201,
      "-": 33
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/CreateFeedbackResponseCommentActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.storage.api.FeedbackResponseCommentsDb;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.CreateFeedbackResponseCommentAction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.MessageOutput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.FeedbackResponseCommentUpdateRequest;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link CreateFeedbackResponseCommentAction}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class CreateFeedbackResponseCommentActionTest extends BaseActionTest\u003cCreateFeedbackResponseCommentAction\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.RESPONSE_COMMENT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        return POST;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute() throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        int questionNumber \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), questionNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        String receiverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response \u003d logic.getFeedbackResponse(question.getId(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                giverEmail, receiverEmail);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(instructor.googleId);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Unsuccessful case: not enough parameters\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical successful case for unpublished session\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentUpdateRequest requestBody \u003d"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                new FeedbackResponseCommentUpdateRequest(\"Comment to first response\", null, \"GIVER,INSTRUCTORS\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        CreateFeedbackResponseCommentAction action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFeedbackResponseCommentAttributes\u003e frcList \u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                getInstructorComments(response.getId(), \"Comment to first response\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, frcList.size());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentAttributes frc \u003d frcList.get(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, frc.commentGiverType);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"instructor1@course1.tmt\", frc.commentGiver);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isCommentFromFeedbackParticipant);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isVisibilityFollowingFeedbackQuestion);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical successful case for unpublished session empty giver permissions\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"Empty giver permissions\", null, \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical successful case for unpublished session shown to various recipients\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"Null comment permissions\", null, null);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"Empty comment permissions\", \"\", \"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"Comment shown to giver\", \"GIVER\", null);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"Comment shown to receiver\", \"RECEIVER\", null);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                new FeedbackResponseCommentUpdateRequest(\"Comment shown to own team members\", \"OWN_TEAM_MEMBERS\", null);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Comment shown to receiver team members\", \"RECEIVER_TEAM_MEMBERS\", null);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"Comment shown to students\", \"STUDENTS\", null);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"typical successful case for published session\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionsLogic.inst().publishFeedbackSession(session.getFeedbackSessionName(), session.getCourseId());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                \"Comment to first response, published session\", \"GIVER,INSTRUCTORS\", \"GIVER,INSTRUCTORS\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        frcList \u003d getInstructorComments(response.getId(), \"Comment to first response, published session\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, frcList.size());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        frc \u003d frcList.get(0);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, frc.commentGiverType);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"instructor1@course1.tmt\", frc.commentGiver);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isCommentFromFeedbackParticipant);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isVisibilityFollowingFeedbackQuestion);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Unsuccessful case: empty comment text\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, response.getId(),"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(\"\", null, null);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        MessageOutput output \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_BAD_REQUEST, result.getStatusCode());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Const.StatusMessages.FEEDBACK_RESPONSE_COMMENT_EMPTY, output.getMessage());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        int questionNumber \u003d 1;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fs \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes question \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                fs.getFeedbackSessionName(), fs.getCourseId(), questionNumber);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        String receiverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response \u003d logic.getFeedbackResponse(question.getId(),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                giverEmail, receiverEmail);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentAttributes comment \u003d FeedbackResponseCommentAttributes"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                .builder()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(fs.getCourseId())"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(fs.getFeedbackSessionName())"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCommentGiver(giverEmail)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCommentText(\"\")"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackQuestionId(question.getId())"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackResponseId(response.getId())"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, comment.feedbackResponseId,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutSubmitSessionInSectionsPrivilege(submissionParams);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "     * Filters instructor comments according to comment text from all comments on a response."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param responseId response id of response"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param commentText comment text"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return instructor comments"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseCommentAttributes\u003e getInstructorComments(String responseId, String commentText) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentsDb frcDb \u003d new FeedbackResponseCommentsDb();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        return frcDb.getFeedbackResponseCommentsForResponse(responseId)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(comment -\u003e comment.commentText.equals(commentText))"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 1,
      "-": 232
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/DeleteFeedbackSessionActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.DeleteFeedbackSessionAction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.ui.webapi.output.MessageOutput;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link DeleteFeedbackSessionAction}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class DeleteFeedbackSessionActionTest extends BaseActionTest\u003cDeleteFeedbackSessionAction\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.SESSION;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return DELETE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        // see test cases below"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public void testDeleteFeedbackSessionAction_invalidParameters_shouldThrowHttpParameterException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"No course ID\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] noCourseIdParams \u003d new String[] {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyHttpParameterFailure(noCourseIdParams);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"No session name\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] noSessionname \u003d new String[] {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyHttpParameterFailure(noSessionname);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Empty parameters\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public void testDeleteFeedbackSessionAction_typicalCase_shouldPass() throws Exception {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Delete session that has been soft deleted\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] params \u003d new String[] {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNotNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        logic.moveFeedbackSessionToRecycleBin(session.getFeedbackSessionName(), course.getId());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNotNull(logic.getFeedbackSessionFromRecycleBin(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        DeleteFeedbackSessionAction deleteFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        JsonResult result \u003d getJsonResult(deleteFeedbackSessionAction);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        MessageOutput messageOutput \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(messageOutput.getMessage(), \"The feedback session is deleted.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSessionFromRecycleBin(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Delete session not in recycle bin\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        params \u003d new String[] {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSessionFromRecycleBin(session2.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNotNull(logic.getFeedbackSession(session2.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        deleteFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        result \u003d getJsonResult(deleteFeedbackSessionAction);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        messageOutput \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(messageOutput.getMessage(), \"The feedback session is deleted.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSessionFromRecycleBin(session2.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(session2.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public void testDeleteFeedbackSession_failureCases_shouldFailSilently() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Delete session that has already been deleted\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] params \u003d new String[] {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNotNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        DeleteFeedbackSessionAction deleteFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        // Delete once"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        getJsonResult(deleteFeedbackSessionAction);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        // Delete again"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        // Will fail silently and not throw any exception"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        getJsonResult(deleteFeedbackSessionAction);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Delete session that does not exist\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        params \u003d new String[] {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, \"randomName\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(\"randomName\", course.getId()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        deleteFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        // Will fail silently and not throw any exception"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        getJsonResult(deleteFeedbackSessionAction);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] submissionParams \u003d {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        logic.moveFeedbackSessionToRecycleBin(session.getFeedbackSessionName(), course.getId());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyOnlyInstructorsOfTheSameCourseCanAccess(submissionParams);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyInaccessibleWithoutModifyCoursePrivilege(submissionParams);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 123,
      "-": 32
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/GetFeedbackResponsesActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.GetFeedbackResponsesAction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.action.Intent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.output.FeedbackResponseData;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import teammates.ui.webapi.output.FeedbackResponsesData;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link GetFeedbackResponsesAction}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class GetFeedbackResponsesActionTest extends BaseActionTest\u003cGetFeedbackResponsesAction\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackQuestionAttributes qn1InSession1InCourse1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private StudentAttributes student1InCourse1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private InstructorAttributes instructor1OfCourse1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackQuestionAttributes qn2InGracePeriodInCourse1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private StudentAttributes student1InCourse2;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private InstructorAttributes instructor1OfCourse2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.RESPONSES;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        return GET;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackSessionAttributes gracePeriodSession \u003d typicalBundle.feedbackSessions.get(\"gracePeriodSession\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        qn1InSession1InCourse1 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                session1InCourse1.getFeedbackSessionName(), session1InCourse1.getCourseId(), 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        qn2InGracePeriodInCourse1 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                gracePeriodSession.getFeedbackSessionName(), gracePeriodSession.getCourseId(), 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        student1InCourse2 \u003d typicalBundle.students.get(\"student1InCourse2\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        instructor1OfCourse2 \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        // See independent test cases"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testExecute_notEnoughParameters_shouldFail() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testExecute_invalidIntent_shouldFail() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] paramsForInvalidIntent \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyHttpParameterFailure(paramsForInvalidIntent);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testExecute_studentSubmission_shouldGetResponseSuccessfully() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponsesData actualData \u003d getFeedbackResponse(params);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        List\u003cFeedbackResponseData\u003e actualResponses \u003d actualData.getResponses();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(1, actualResponses.size());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseData actualResponse \u003d actualResponses.get(0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseAttributes expected \u003d"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                logic.getFeedbackResponsesFromStudentOrTeamForQuestion(qn1InSession1InCourse1,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                        student1InCourse1).get(0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(actualResponse.getFeedbackResponseId());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyFeedbackResponseEquals(expected, actualResponse);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testExecute_instructorSubmission_shouldGetResponseSuccessfully() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponsesData actualData \u003d getFeedbackResponse(params);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        List\u003cFeedbackResponseData\u003e actualResponses \u003d actualData.getResponses();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(1, actualResponses.size());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseData actualResponse \u003d actualResponses.get(0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        FeedbackResponseAttributes expected \u003d"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                logic.getFeedbackResponsesFromInstructorForQuestion(qn2InGracePeriodInCourse1, instructor1OfCourse1)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                        .get(0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertNotNull(actualResponse.getFeedbackResponseId());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyFeedbackResponseEquals(expected, actualResponse);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        //see independent test cases"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_notAnswerable_cannotAccess() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"Not answerable to students\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] notAnswerableToStudents \u003d {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, qn2InGracePeriodInCourse1.getGiverType());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(notAnswerableToStudents);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"Not answerable to instructors\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] notAnswerableToInstructors \u003d {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(FeedbackParticipantType.STUDENTS, qn1InSession1InCourse1.getGiverType());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(notAnswerableToInstructors);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_invalidIntent_shouldFail() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"Unauthorized Intent Full Detail\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] unauthorizedIntentFullDetail \u003d {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                () -\u003e getAction(unauthorizedIntentFullDetail).checkAccessControl());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"Unauthorized Intent Instructor Result\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] unauthorizedIntentInstructorResult \u003d {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_RESULT.toString(),"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                () -\u003e getAction(unauthorizedIntentInstructorResult).checkAccessControl());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"Unauthorized Intent Student Result\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] unauthorizedIntentStudentResult \u003d {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_RESULT.toString(),"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                () -\u003e getAction(unauthorizedIntentStudentResult).checkAccessControl());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_typicalStudentAccess_canAccess() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] validStudentParams \u003d {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCanAccess(validStudentParams);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_typicalInstructorAccess_canAccess() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] validInstructorParams \u003d {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCanAccess(validInstructorParams);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_getNonExistingFeedbackResponse_shouldFail() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] nonExistParams \u003d {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, \"randomNonExistId\","
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(EntityNotFoundException.class,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                () -\u003e getAction(nonExistParams).checkAccessControl());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_getResponseInPreview_shouldFail() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] inPreviewRequest \u003d {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.PREVIEWAS, instructor1OfCourse1.getEmail(),"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(inPreviewRequest);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    protected void testAccessControl_accessAcrossCourses_shouldFail() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"student access other student\u0027s response from different course\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsStudent(student1InCourse2.getGoogleId());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] studentAccessOtherStudentsParams \u003d {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn1InSession1InCourse1.getId(),"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertThrows(EntityNotFoundException.class,"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                () -\u003e getAction(studentAccessOtherStudentsParams).checkAccessControl());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        ______TS(\"instructor access other instructor\u0027s response from different course\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        loginAsInstructor(instructor1OfCourse2.getGoogleId());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        String[] instructorAccessOtherInstructorsParams \u003d {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.FEEDBACK_QUESTION_ID, qn2InGracePeriodInCourse1.getId(),"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        };"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        verifyCannotAccess(instructorAccessOtherInstructorsParams);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private FeedbackResponsesData getFeedbackResponse(String[] params) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        GetFeedbackResponsesAction a \u003d getAction(params);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        JsonResult actualResult \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, actualResult.getStatusCode());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        return (FeedbackResponsesData) actualResult.getOutput();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    private void verifyFeedbackResponseEquals(FeedbackResponseAttributes expected, FeedbackResponseData actual) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(expected.getId(), actual.getFeedbackResponseId());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(expected.getGiver(), actual.getGiverIdentifier());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(expected.getRecipient(), actual.getRecipientIdentifier());"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(expected.getResponseDetails().getAnswerString(), actual.getResponseDetails().getAnswerString());"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(expected.getResponseDetails().questionType, actual.getResponseDetails().questionType);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        assertEquals(JsonUtils.toJson(expected.getResponseDetails()),"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "                JsonUtils.toJson(actual.getResponseDetails()));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 231,
      "-": 33
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/GetFeedbackSessionSubmittedGiverSetActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import com.google.common.collect.Sets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.ui.webapi.action.GetFeedbackSessionSubmittedGiverSetAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionSubmittedGiverSet;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * SUT: {@link GetFeedbackSessionSubmittedGiverSetAction}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "public class GetFeedbackSessionSubmittedGiverSetActionTest"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        extends BaseActionTest\u003cGetFeedbackSessionSubmittedGiverSetAction\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return Const.ResourceURIs.SESSION_SUBMITTED_GIVER_SET;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return GET;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical case\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        GetFeedbackSessionSubmittedGiverSetAction pageAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(pageAction);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        FeedbackSessionSubmittedGiverSet output \u003d (FeedbackSessionSubmittedGiverSet) result.getOutput();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertEquals(Sets.newHashSet(\"student1InCourse1@gmail.tmt\", \"student2InCourse1@gmail.tmt\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                \"student5InCourse1@gmail.tmt\", \"student3InCourse1@gmail.tmt\", \"instructor1@course1.tmt\"),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                output.getGiverIdentifiers());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyOnlyInstructorsOfTheSameCourseCanAccess(submissionParams);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 16,
      "-": 57
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/PublishFeedbackSessionActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.PublishFeedbackSessionAction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionData;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionPublishStatus;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import teammates.ui.webapi.output.MessageOutput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link PublishFeedbackSessionAction}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class PublishFeedbackSessionActionTest extends BaseActionTest\u003cPublishFeedbackSessionAction\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.SESSION_PUBLISH;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        return POST;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Typical case\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        PublishFeedbackSessionAction publishFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        JsonResult result \u003d getJsonResult(publishFeedbackSessionAction);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionData feedbackSessionData \u003d (FeedbackSessionData) result.getOutput();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(feedbackSessionData.getFeedbackSessionName(), session.getFeedbackSessionName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(FeedbackSessionPublishStatus.PUBLISHED, feedbackSessionData.getPublishStatus());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertTrue(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()).isPublished());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"Failure case: Session is already published\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        // Attempt to publish the same session again."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertTrue(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()).isPublished());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        result \u003d getJsonResult(getAction(params));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        MessageOutput output \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(\"Error publishing feedback session: Session has already been published.\", output.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(HttpStatus.SC_BAD_REQUEST, result.getStatusCode());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    public void testExecute_invalidRequests_shouldFail() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"non existent session name\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String randomSessionName \u003d \"randomName\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNotNull(logic.getFeedbackSession(session.getFeedbackSessionName(), course.getId()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, randomSessionName,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(randomSessionName, course.getId()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        PublishFeedbackSessionAction publishFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        JsonResult result \u003d getJsonResult(publishFeedbackSessionAction);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        MessageOutput output \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(String.format(\"Trying to update a non-existent feedback session: %s/%s\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                course.getId(), randomSessionName), output.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(HttpStatus.SC_INTERNAL_SERVER_ERROR, result.getStatusCode());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ______TS(\"non existent course id\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String randomCourseId \u003d \"randomCourseId\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        params \u003d new String[] {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, randomCourseId,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertNull(logic.getFeedbackSession(session.getFeedbackSessionName(), randomCourseId));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        publishFeedbackSessionAction \u003d getAction(params);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        result \u003d getJsonResult(publishFeedbackSessionAction);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        output \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(String.format(\"Trying to update a non-existent feedback session: %s/%s\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                randomCourseId, session.getFeedbackSessionName()), output.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        assertEquals(HttpStatus.SC_INTERNAL_SERVER_ERROR, result.getStatusCode());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        String[] submissionParams \u003d {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.COURSE_ID, course.getId(),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        };"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyOnlyInstructorsOfTheSameCourseCanAccess(submissionParams);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        verifyInaccessibleWithoutModifyCoursePrivilege(submissionParams);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 89,
      "-": 32
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/UnublishFeedbackSessionActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.UnpublishFeedbackSessionAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import teammates.ui.webapi.output.MessageOutput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link UnpublishFeedbackSessionAction}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class UnublishFeedbackSessionActionTest extends BaseActionTest\u003cUnpublishFeedbackSessionAction\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.SESSION_PUBLISH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return DELETE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        CourseAttributes typicalCourse1 \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        FeedbackSessionAttributes sessionPublishedInCourse1 \u003d typicalBundle.feedbackSessions.get(\"closedSession\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.FEEDBACK_SESSION_NAME,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                sessionPublishedInCourse1.getFeedbackSessionName());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"Typical success case\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertTrue(sessionPublishedInCourse1.isPublished());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String[] params \u003d new String[] {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, sessionPublishedInCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        };"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        UnpublishFeedbackSessionAction a \u003d getAction(params);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        JsonResult r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        // session is unpublished"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertFalse(logic.getFeedbackSession(sessionPublishedInCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                typicalCourse1.getId()).isPublished());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        // sent unpublish email task is added"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertEquals(1, a.getTaskQueuer().getTasksAdded().size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"Failed case, session is not published yet\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertFalse(session1InCourse1.isPublished());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String[] failedParams \u003d new String[] {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        a \u003d getAction(failedParams);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        MessageOutput out \u003d (MessageOutput) r.getOutput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertEquals(out.getMessage(),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                \"Error unpublishing feedback session: Session has already been unpublished.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        assertEquals(HttpStatus.SC_BAD_REQUEST, r.getStatusCode());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        FeedbackSessionAttributes session1InCourse1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"non-existent course\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String[] nonExistParams \u003d new String[] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"abcRandomCourseId\","
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyCannotAccess(nonExistParams);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"non-existent feedback session\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        nonExistParams \u003d new String[] {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.COURSE_ID, session1InCourse1.getCourseId(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, \"abcRandomSession\","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        };"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyCannotAccess(nonExistParams);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"inaccessible without ModifySessionPrivilege\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        String[] params \u003d new String[] {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.COURSE_ID, session1InCourse1.getCourseId(),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyInaccessibleWithoutModifySessionPrivilege(params);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        ______TS(\"only instructors of the same course can access\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        verifyOnlyInstructorsOfTheSameCourseCanAccess(params);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 90,
      "-": 33
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/UpdateFeedbackResponseCommentActionTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.UpdateFeedbackResponseCommentAction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.MessageOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.FeedbackResponseCommentUpdateRequest;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link UpdateFeedbackResponseCommentAction}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class UpdateFeedbackResponseCommentActionTest extends BaseActionTest\u003cUpdateFeedbackResponseCommentAction\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.RESPONSE_COMMENT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return PUT;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute() throws Exception {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        int questionNumber \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes feedbackQuestion \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                \"First feedback session\", \"idOfTypicalCourse1\", questionNumber);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        String receiverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getFeedbackResponse(feedbackQuestion.getId(), giverEmail, receiverEmail);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentAttributes feedbackResponseComment \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                typicalBundle.feedbackResponseComments.get(\"comment1FromT1C1ToR1Q1S1C1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseComment \u003d logic.getFeedbackResponseComment(feedbackResponse.getId(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentGiver, feedbackResponseComment.createdAt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(\"response comment not found\", feedbackResponseComment);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(instructor.googleId);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Unsuccessful csae: not enough parameters\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical successful case for unpublished session\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentUpdateRequest requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"GIVER,INSTRUCTORS\", \"GIVER,INSTRUCTORS\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        UpdateFeedbackResponseCommentAction action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentAttributes frc \u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getFeedbackResponseComment(feedbackResponseComment.getId());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(feedbackResponseComment.commentText + \" (Edited)\", frc.commentText);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, frc.commentGiverType);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"instructor1@course1.tmt\", frc.commentGiver);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isCommentFromFeedbackParticipant);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Null show comments and show giver permissions\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                new FeedbackResponseCommentUpdateRequest(feedbackResponseComment.commentText + \" (Edited)\", null, null);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Empty show comments and show giver permissions\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(feedbackResponseComment.commentText + \" (Edited)\", \"\", \"\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical successful case for unpublished session public to various recipients\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest(feedbackResponseComment.commentText + \" (Edited)\", \"\", null);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"GIVER\", null);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"RECEIVER\", null);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"OWN_TEAM_MEMBERS\", null);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"RECEIVER_TEAM_MEMBERS\", null);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"STUDENTS\", null);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-existent feedback response comment id\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, \"123123123123123\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"GIVER,INSTRUCTORS\", \"GIVER,INSTRUCTORS\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        UpdateFeedbackResponseCommentAction action0 \u003d action;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(EntityNotFoundException.class, () -\u003e getJsonResult(action0));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor is not feedback response comment giver\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(\"idOfInstructor2OfCourse1\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited)\", \"GIVER,INSTRUCTORS\", \"GIVER,INSTRUCTORS\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        frc \u003d logic.getFeedbackResponseComment(feedbackResponseComment.getId());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(feedbackResponseComment.commentText + \" (Edited)\", frc.commentText);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, frc.commentGiverType);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"instructor1@course1.tmt\", frc.commentGiver);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"instructor2@course1.tmt\", frc.lastEditorEmail);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isCommentFromFeedbackParticipant);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical successful case for published session\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(instructor.googleId);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        FeedbackSessionsLogic.inst().publishFeedbackSession("
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                feedbackResponseComment.feedbackSessionName, feedbackResponseComment.courseId);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentText + \" (Edited for published session)\", \"GIVER,INSTRUCTORS\", null);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        getJsonResult(action);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        frc \u003d logic.getFeedbackResponseComment(feedbackResponseComment.getId());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(feedbackResponseComment.commentText + \" (Edited for published session)\","
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                frc.commentText);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(FeedbackParticipantType.INSTRUCTORS, frc.commentGiverType);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"instructor1@course1.tmt\", frc.commentGiver);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(frc.isCommentFromFeedbackParticipant);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Unsuccessful case: empty comment text\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        requestBody \u003d new FeedbackResponseCommentUpdateRequest("
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                \"\", null, null);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        action \u003d getAction(requestBody, submissionParams);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        MessageOutput output \u003d (MessageOutput) result.getOutput();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_BAD_REQUEST, result.getStatusCode());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(Const.StatusMessages.FEEDBACK_RESPONSE_COMMENT_EMPTY, output.getMessage());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        int questionNumber \u003d 1;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes feedbackQuestion \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                \"First feedback session\", \"idOfTypicalCourse1\", questionNumber);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        String giverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        String receiverEmail \u003d \"student1InCourse1@gmail.tmt\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d logic.getFeedbackResponse(feedbackQuestion.getId(),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                giverEmail, receiverEmail);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseCommentAttributes feedbackResponseComment \u003d typicalBundle.feedbackResponseComments"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                .get(\"comment1FromT1C1ToR1Q1S1C1\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseComment \u003d logic.getFeedbackResponseComment(feedbackResponse.getId(),"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackResponseComment.commentGiver, feedbackResponseComment.createdAt);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_COMMENT_ID, feedbackResponseComment.getId().toString(),"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        // this person is not the giver. so not accessible"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutModifySessionCommentInSectionsPrivilege(submissionParams);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyOnlyInstructorsCanAccess(submissionParams);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 2,
      "-": 248
    }
  },
  {
    "path": "src/web/app/components/copy-session-modal/copy-session-modal.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { DebugElement } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { By } from \u0027@angular/platform-browser\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SessionVisibleSetting,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalComponent } from \u0027./copy-session-modal.component\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027CopySessionModalComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: CopySessionModalComponent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cCopySessionModalComponent\u003e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [CopySessionModalComponent],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbActiveModal,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        .compileComponents();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(CopySessionModalComponent);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  const feedbackSessionToCopy: FeedbackSession \u003d {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    courseId: \u0027Test01\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    timeZone: \u0027Asia/Singapore\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    feedbackSessionName: \u0027Test session\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    instructions: \u0027Answer all\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    submissionStartTimestamp: 1555232400,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    submissionEndTimestamp: 1555332400,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    gracePeriod: 0,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    isClosingEmailEnabled: true,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    isPublishedEmailEnabled: true,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    createdAtTimestamp: 1554967204,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  const courseSessionIn: Course \u003d {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    courseId: \u0027Test01\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    courseName: \u0027Sample Course 101\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    creationDate: \u002713 Mar 2019\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    deletionDate: \u0027Not Applicable\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  };"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  const courseCopyTo: Course \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    courseId: \u0027Test02\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    courseName: \u0027Sample Course 202\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    creationDate: \u002714 Mar 2019\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    deletionDate: \u0027Not Applicable\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  };"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  it(\u0027should snap with some session and courses candidates\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component.newFeedbackSessionName \u003d feedbackSessionToCopy.feedbackSessionName;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component.courseCandidates \u003d [courseSessionIn, courseCopyTo];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component.sessionToCopyCourseId \u003d courseSessionIn.courseId;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  it(\u0027should enable copy button after course to copy to is selected\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component.newFeedbackSessionName \u003d feedbackSessionToCopy.feedbackSessionName;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component.courseCandidates \u003d [courseSessionIn, courseCopyTo];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component.sessionToCopyCourseId \u003d courseSessionIn.courseId;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const options: DebugElement[] \u003d fixture.debugElement.queryAll(By.css(\u0027input[type\u003d\"radio\"]\u0027));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const secondOption: any \u003d options[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    secondOption.triggerEventHandler(\u0027change\u0027, { target: secondOption.nativeElement });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const copyButton: any \u003d fixture.debugElement.query(By.css(\u0027button.btn.btn-primary\u0027));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    expect(copyButton.nativeElement.disabled).toBeFalsy();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  });"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "crizyli": 72,
      "-": 33
    }
  },
  {
    "path": "src/web/app/components/error-report/error-report.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { of, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorReportComponent } from \u0027./error-report.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027ErrorReportComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: ErrorReportComponent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cErrorReportComponent\u003e;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  let httpRequestService: HttpRequestService;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [ErrorReportComponent],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      providers: [HttpRequestService],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(ErrorReportComponent);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    httpRequestService \u003d TestBed.get(HttpRequestService);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  it(\u0027should get user input from Subject form\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    const input: any \u003d fixture.nativeElement.querySelectorAll(\u0027input\u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.subject).toEqual(\u0027User-submitted Error Report\u0027);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    input[1].value \u003d \u0027testInput\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    input[1].dispatchEvent((new Event(\u0027input\u0027)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.subject).toEqual(\u0027testInput\u0027);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  it(\u0027should disable send report button and set errorReportSubmitted to true after successfully sending report\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.sendButtonEnabled).toBeTruthy();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.errorReportSubmitted).toBeFalsy();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    spyOn(httpRequestService, \u0027post\u0027).and.returnValue(of(\u0027\u0027));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    fixture.nativeElement.querySelector(\u0027button\u0027).click();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.sendButtonEnabled).toBeFalsy();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.errorReportSubmitted).toBeTruthy();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(fixture.nativeElement.querySelector(\u0027button\u0027)).toBeFalsy();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  it(\u0027should not disable send report button after unsuccessfully sending report\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.sendButtonEnabled).toBeTruthy();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.errorReportSubmitted).toBeFalsy();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    spyOn(httpRequestService, \u0027post\u0027).and.returnValue(throwError({"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      error: {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        message: \u0027This is the error message\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    fixture.nativeElement.querySelector(\u0027button\u0027).click();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.sendButtonEnabled).toBeTruthy();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(component.errorReportSubmitted).toBeFalsy();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(fixture.nativeElement.querySelector(\u0027button\u0027)).toBeTruthy();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  it(\u0027should snap with default view\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 49,
      "-": 30
    }
  },
  {
    "path": "src/web/app/components/question-edit-form/question-edit-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonVisibilitySetting, FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType, FeedbackTextQuestionDetails,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackVisibilityType,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditFormMode, QuestionEditFormModel } from \u0027./question-edit-form-model\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The question edit form component."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-question-edit-form\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./question-edit-form.component.html\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./question-edit-form.component.scss\u0027],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export class QuestionEditFormComponent implements OnInit {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting: typeof NumberOfEntitiesToGiveFeedbackToSetting \u003d"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      NumberOfEntitiesToGiveFeedbackToSetting;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityControl: typeof VisibilityControl \u003d VisibilityControl;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackVisibilityType: typeof FeedbackVisibilityType \u003d FeedbackVisibilityType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  set formModel(model: QuestionEditFormModel) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    this.model \u003d model;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    this.commonFeedbackPaths \u003d this.feedbackQuestionsService.getCommonFeedbackPaths(model.questionType);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this.allowedFeedbackPaths \u003d this.feedbackQuestionsService.getAllowedFeedbackPaths(model.questionType);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    this.visibilityStateMachine \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionsService.getNewVisibilityStateMachine(model.giverType, model.recipientType);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    this.commonFeedbackVisibilitySettings \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            this.visibilityStateMachine, model.questionType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    const visibilitySetting: {[TKey in VisibilityControl]: FeedbackVisibilityType[]} \u003d {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      SHOW_RESPONSE: model.showResponsesTo,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      SHOW_GIVER_NAME: model.showGiverNameTo,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      SHOW_RECIPIENT_NAME: model.showRecipientNameTo,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!model.isUsingOtherFeedbackPath) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      // find if the feedback path is in the common feedback paths"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      this.model.isUsingOtherFeedbackPath \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.commonFeedbackPaths.has(model.giverType) \u0026\u0026"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "          this.commonFeedbackPaths.get(model.giverType)!.includes(model.recipientType)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.model.isUsingOtherFeedbackPath \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!model.commonVisibilitySettingName \u0026\u0026 !model.isUsingOtherVisibilitySetting) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      // find if the visibility settings is in the common visibility settings"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      this.model.isUsingOtherVisibilitySetting \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const commonVisibilityOption of this.commonFeedbackVisibilitySettings) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSameSet(visibilitySetting.SHOW_RESPONSE, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 this.isSameSet(visibilitySetting.SHOW_GIVER_NAME,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 this.isSameSet(visibilitySetting.SHOW_RECIPIENT_NAME,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          this.model.commonVisibilitySettingName \u003d commonVisibilityOption.name;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          this.model.isUsingOtherVisibilitySetting \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns whether setting the custom feedback visibility is allowed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  get isCustomFeedbackVisibilitySettingAllowed(): boolean {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.feedbackQuestionsService.isCustomFeedbackVisibilitySettingAllowed(this.model.questionType);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfQuestions: number \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  formMode: QuestionEditFormMode \u003d QuestionEditFormMode.EDIT;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  // if true, the question edit form is used for displaying of the question edit form only"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  // no editing function will be available; the edit button will be hidden"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  isDisplayOnly: boolean \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  model: QuestionEditFormModel \u003d {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackQuestionId: \u0027\u0027,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    questionNumber: 0,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    isQuestionHasResponses: false,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    questionDetails: {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      recommendedLength: 0,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    } as FeedbackTextQuestionDetails,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    recipientType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    customNumberOfEntitiesToGiveFeedbackTo: 1,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    showResponsesTo: [],"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    showGiverNameTo: [],"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    showRecipientNameTo: [],"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    commonVisibilitySettingName: \u0027\u0027,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    isUsingOtherFeedbackPath: false,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    isUsingOtherVisibilitySetting: false,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: false,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  formModelChange: EventEmitter\u003cQuestionEditFormModel\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  saveExistingQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCurrentQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateCurrentQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  discardExistingQuestionChangesEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  discardNewQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  createNewQuestionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  commonFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  allowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d new Map();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d [];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  visibilityStateMachine: VisibilityStateMachine;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private feedbackQuestionsService: FeedbackQuestionsService, private modalService: NgbModal) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    this.visibilityStateMachine \u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionsService.getNewVisibilityStateMachine("
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            this.model.giverType, this.model.recipientType);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the change of the model for the form."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerModelChange(field: string, data: any): void {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    this.formModelChange.emit({"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.model,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      [field]: data,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the change of the model for the form."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerModelChangeBatch(obj: {[key: string]: any}): void {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    this.formModelChange.emit({"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.model,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      ...obj,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "   * Change the {@code giverType} and {@code recipientType} and reset the visibility settings."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  changeGiverRecipientType(giverType: FeedbackParticipantType, recipientType: FeedbackParticipantType): void {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    // check if current recipientType is allowed for giverType,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    // if not, set default recipientType to the first allowed type as default."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    /* tslint:disable-next-line: no-non-null-assertion */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const allowedRecipientTypes: FeedbackParticipantType[] \u003d this.allowedFeedbackPaths.get(giverType)!;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    let newRecipientType: FeedbackParticipantType \u003d recipientType;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    if (allowedRecipientTypes.indexOf(recipientType) \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      newRecipientType \u003d allowedRecipientTypes[0];"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch({"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      recipientType: newRecipientType,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      commonVisibilitySettingName: \u0027Please select a visibility option\u0027,"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      isUsingOtherVisibilitySetting: false,"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: [],"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: [],"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: [],"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "   * Applies the common visibility setting."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  applyCommonVisibilitySettings(commonSettings: CommonVisibilitySetting): void {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch({"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: commonSettings.visibilitySettings.SHOW_RESPONSE,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: commonSettings.visibilitySettings.SHOW_GIVER_NAME,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: commonSettings.visibilitySettings.SHOW_RECIPIENT_NAME,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      commonVisibilitySettingName: commonSettings.name,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      isUsingOtherVisibilitySetting: false,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "   * Modifies visibility control of visibility type based on {@code isAllowed}."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  modifyVisibilityControl("
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowed: boolean, visibilityType: FeedbackVisibilityType, visibilityControl: VisibilityControl): void {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isAllowed) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      this.visibilityStateMachine.allowToSee(visibilityType, visibilityControl);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      this.visibilityStateMachine.disallowToSee(visibilityType, visibilityControl);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch({"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "          this.visibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RESPONSE),"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "          this.visibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_GIVER_NAME),"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "          this.visibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RECIPIENT_NAME),"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "   * Helper methods to create a range."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  range(num: number): number[] {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    const ranges: number[] \u003d [];"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 0; i \u003c num; i +\u003d 1) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      ranges.push(i);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    return ranges;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handle event to discard changes users made."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  discardChangesHandler(modal: any): void {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modalService.open(modal).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        this.discardExistingQuestionChangesEvent.emit();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.ADD) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        this.discardNewQuestionEvent.emit();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the question."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "  saveQuestionHandler(modal: any): void {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      // alert user that editing question may result in deletion of responses"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.model.isQuestionHasResponses) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        this.modalService.open(modal).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "          this.saveExistingQuestionEvent.emit();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        this.saveExistingQuestionEvent.emit();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.formMode \u003d\u003d\u003d QuestionEditFormMode.ADD) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "      this.createNewQuestionEvent.emit();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles event for duplicating the current question."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateCurrentQuestionHandler(): void {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    this.duplicateCurrentQuestionEvent.emit();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles event for deleting the current question."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCurrentQuestionHandler(modal: any): void {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modalService.open(modal).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "      this.deleteCurrentQuestionEvent.emit();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 9,
      "-": 297
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/contribution-question-edit-answer-form.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-5\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cselect class\u003d\"form-control\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "            [ngClass]\u003d\"{\u0027color-positive\u0027: responseDetails.answer \u003e 100,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027color-negative\u0027: responseDetails.answer \u003c 100 \u0026\u0026 responseDetails.answer !\u003d\u003d CONTRIBUTION_POINT_NOT_SURE \u0026\u0026 responseDetails.answer !\u003d\u003d CONTRIBUTION_POINT_NOT_SUBMITTED,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027color-neutral\u0027: responseDetails.answer \u003d\u003d\u003d 100 || responseDetails.answer \u003d\u003d\u003d CONTRIBUTION_POINT_NOT_SURE}\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            [ngModel]\u003d\"responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003coption [ngValue]\u003d\"CONTRIBUTION_POINT_NOT_SUBMITTED\"\u003e\u003c/option\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003coption *ngFor\u003d\"let point of contributionQuestionPoints\" [ngValue]\u003d\"point\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              [ngClass]\u003d\"{\u0027color-positive\u0027: point \u003e 100,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                \u0027color-negative\u0027: point \u003c 100,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                \u0027color-neutral\u0027: point \u003d\u003d\u003d 100}\"\u003e{{ point | contributionPointDescription }}\u003c/option\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003coption *ngIf\u003d\"questionDetails.isNotSureAllowed\" [ngValue]\u003d\"CONTRIBUTION_POINT_NOT_SURE\" class\u003d\"color-neutral\"\u003eNot Sure\u003c/option\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/select\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-7\" *ngIf\u003d\"shouldShowHelpLink\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"openModal(helpModal)\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e More info about the \u003ccode\u003eEqual Share\u003c/code\u003e scale\u003c/button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #helpModal let-modal\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch5 class\u003d\"modal-title\"\u003eMore info about the \u003ccode\u003eEqual Share\u003c/code\u003e scale\u003c/h5\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003e\u003ccode\u003eEqual share\u003c/code\u003e is a relative measure of individual contribution to a team task.\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003eFor example, in a 3-person team, \u003ccode\u003eEqual share\u003c/code\u003e means a third of the work done.\u003c/p\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003e\u003ccode\u003eEqual share + 10%\u003c/code\u003e means the person did about 10% \u003cem\u003emore\u003c/em\u003e than an equal share, \u003ccode\u003eEqual share - 10%\u003c/code\u003e means about 10% \u003cem\u003eless\u003c/em\u003e than an equal share, and so on.\u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"modal.close()\"\u003eOK\u003c/button\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 5,
      "-": 30
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/mcq-question-edit-answer-form.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctd\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"radio\" *ngFor\u003d\"let num of questionDetails.mcqChoices; let i \u003d index;\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"radio\" class\u003d\"margin-right-15px\" name\u003d\"mcq-{{ id }}\" [checked]\u003d\"isMcqOptionSelected[i]\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        (click)\u003d\"updateSelectedMcqOption(i)\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "         \u003cstrong\u003e{{ questionDetails.mcqChoices[i] }}\u003c/strong\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"radio\" *ngIf\u003d\"questionDetails.otherEnabled\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"radio\" class\u003d\"margin-right-15px\" name\u003d\"mcq-{{ id }}\" [checked]\u003d\"responseDetails.isOther\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        (click)\u003d\"updateIsOtherOption()\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003eOther\u003c/strong\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      \u003cinput  #inputTextBoxOther class\u003d\"form-control\" style\u003d\"display: inline; width: 60%;\" type\u003d\"text\" [disabled]\u003d\"!responseDetails.isOther\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngModel]\u003d\"responseDetails.otherFieldContent\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "             (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027otherFieldContent\u0027, $event)\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/td\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tr\u003e"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 1,
      "-": 20
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/mcq-question-edit-answer-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import { Component, ElementRef, Input, OnChanges, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqQuestionDetails,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqResponseDetails,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_MCQ_QUESTION_DETAILS, DEFAULT_MCQ_RESPONSE_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * The Mcq question submission form for a recipient."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-mcq-question-edit-answer-form\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./mcq-question-edit-answer-form.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./mcq-question-edit-answer-form.component.scss\u0027],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class McqQuestionEditAnswerFormComponent"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    extends QuestionEditAnswerFormComponent\u003cFeedbackMcqQuestionDetails, FeedbackMcqResponseDetails\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   * The unique ID in the page where the component is used."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cp\u003eThis is to ensure that only one MCQ option can be selected."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  @ViewChild(\u0027inputTextBoxOther\u0027) inputTextBoxOther?: ElementRef;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  isMcqOptionSelected: boolean[] \u003d [];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    super(DEFAULT_MCQ_QUESTION_DETAILS(), DEFAULT_MCQ_RESPONSE_DETAILS());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  // sync the internal status with the input data"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(): void {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isMcqOptionSelected \u003d Array(this.questionDetails.numOfMcqChoices).fill(false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.responseDetails.answer !\u003d\u003d \u0027\u0027 \u0026\u0026 !this.responseDetails.isOther) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      const indexOfAnswerInPreviousSubmission: number \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionDetails.mcqChoices.indexOf(this.responseDetails.answer);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isMcqOptionSelected[indexOfAnswerInPreviousSubmission] \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the other option radio box when clicked."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIsOtherOption(): void {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.isOther \u003d !this.responseDetails.isOther;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    if (fieldsToUpdate.isOther) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.answer \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      setTimeout(() \u003d\u003e { // focus on the text box after the isOther field is updated to enable the text box"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        (this.inputTextBoxOther as ElementRef).nativeElement.focus();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      }, 0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.otherFieldContent \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerResponseDetailsChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the answer to the Mcq option specified by the index."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  updateSelectedMcqOption(index: number): void {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerResponseDetailsChangeBatch({"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      isOther: false,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      otherFieldContent: \u0027\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      answer: this.questionDetails.mcqChoices[index],"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 6,
      "-": 74
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/msq-question-edit-answer-form.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctr\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctd\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"check-box\" *ngFor\u003d\"let num of questionDetails.msqChoices; let i \u003d index;\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"checkbox\" class\u003d\"margin-right-15px\" [checked]\u003d\"isMsqOptionSelected[i]\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "               (click)\u003d\"updateSelectedAnswers(i)\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003e{{ questionDetails.msqChoices[i] }}\u003c/strong\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"check-box\" *ngIf\u003d\"questionDetails.otherEnabled\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"checkbox\" class\u003d\"margin-right-15px\" [checked]\u003d\"responseDetails.isOther\" (click)\u003d\"updateIsOtherOption()\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003eOther\u003c/strong\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      \u003cinput #inputTextBoxOther class\u003d\"form-control\" style\u003d\"display: inline; width: 60%;\" type\u003d\"text\" [disabled]\u003d\"!responseDetails.isOther\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngModel]\u003d\"responseDetails.otherFieldContent\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "             (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027otherFieldContent\u0027, $event)\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"check-box\" *ngIf\u003d\"questionDetails.minSelectableChoices \u003d\u003d\u003d NO_VALUE\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"margin-right-15px\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"checkbox\" class\u003d\"margin-right-15px\" [checked]\u003d\"isNoneOfTheAboveEnabled\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "               (click)\u003d\"updateNoneOfTheAbove()\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003eNone of the above\u003c/strong\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/td\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/tr\u003e"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 1,
      "-": 26
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/msq-question-edit-answer-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import { Component, ElementRef, OnChanges, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMsqQuestionDetails,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMsqResponseDetails,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_MSQ_QUESTION_DETAILS, DEFAULT_MSQ_RESPONSE_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NO_VALUE } from \u0027../../../../types/feedback-response-details\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "const NONE_OF_THE_ABOVE: string \u003d \u0027None of the above\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * The Msq question submission form for a recipient."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-msq-question-edit-answer-form\u0027,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./msq-question-edit-answer-form.component.html\u0027,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./msq-question-edit-answer-form.component.scss\u0027],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "export class MsqQuestionEditAnswerFormComponent"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    extends QuestionEditAnswerFormComponent\u003cFeedbackMsqQuestionDetails, FeedbackMsqResponseDetails\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    implements OnInit, OnChanges {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly NO_VALUE: number \u003d NO_VALUE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  isMsqOptionSelected: boolean[] \u003d [];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  @ViewChild(\u0027inputTextBoxOther\u0027) inputTextBoxOther?: ElementRef;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    super(DEFAULT_MSQ_QUESTION_DETAILS(), DEFAULT_MSQ_RESPONSE_DETAILS());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  // sync the internal status with the input data"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnChanges(): void {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.responseDetails.answers[0] !\u003d\u003d NONE_OF_THE_ABOVE) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let i: number \u003d 0; i \u003c this.questionDetails.msqChoices.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        const indexOfElementInAnswerArray: number"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003d this.responseDetails.answers.indexOf(this.questionDetails.msqChoices[i]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (indexOfElementInAnswerArray \u003e -1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isMsqOptionSelected[i] \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Removes the \"None of the above\" option in an answers list if it\u0027s present"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * then returns the altered list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  disableNoneOfTheAboveOption(answers: string[]): string[] {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.isNoneOfTheAboveEnabled) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      const newAnswers: string[] \u003d answers.slice();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      newAnswers.splice(0 , 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      return newAnswers;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    return answers;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the answers to include/exclude the Msq option specified by the index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  updateSelectedAnswers(index: number): void {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    let newAnswers: string[] \u003d this.responseDetails.answers.slice();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    newAnswers \u003d this.disableNoneOfTheAboveOption(newAnswers);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    const indexInResponseArray: number \u003d this.responseDetails.answers.indexOf(this.questionDetails.msqChoices[index]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    if (indexInResponseArray \u003e -1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      newAnswers.splice(indexInResponseArray, 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      newAnswers.push(this.questionDetails.msqChoices[index]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerResponseDetailsChange(\u0027answers\u0027, newAnswers);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the other option checkbox when clicked."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  updateIsOtherOption(): void {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.isOther \u003d !this.responseDetails.isOther;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    fieldsToUpdate.answers \u003d this.disableNoneOfTheAboveOption(this.responseDetails.answers);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!fieldsToUpdate.isOther) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.otherFieldContent \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      setTimeout(() \u003d\u003e { // focus on the text box after the isOther field is updated to enable the text box"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "        (this.inputTextBoxOther as ElementRef).nativeElement.focus();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      }, 0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerResponseDetailsChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if None of the above checkbox is enabled."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  get isNoneOfTheAboveEnabled(): boolean {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.responseDetails.answers[0] \u003d\u003d\u003d NONE_OF_THE_ABOVE;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates answers if None of the Above option is selected."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  updateNoneOfTheAbove(): void {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    let newAnswers: string[] \u003d this.responseDetails.answers.slice();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.isNoneOfTheAboveEnabled) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      newAnswers.splice(0, 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isMsqOptionSelected \u003d Array(this.questionDetails.msqChoices.length).fill(false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      newAnswers \u003d [];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.isOther \u003d false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.otherFieldContent \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      newAnswers[0] \u003d NONE_OF_THE_ABOVE;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.answers \u003d newAnswers;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerResponseDetailsChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 6,
      "erjillsison": 9,
      "-": 104
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/num-scale-question-edit-answer-form.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-5\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cinput type\u003d\"number\" class\u003d\"form-control\" min\u003d\"{{ questionDetails.minScale }}\" max\u003d\"{{ questionDetails.maxScale }}\" step\u003d\"{{ questionDetails.step }}\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "           [ngModel]\u003d\"responseDetails.answer \u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED ? \u0027\u0027 : responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    Possible Acceptable Values are: {{ possibleValues }}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cp *ngIf\u003d\"!isValidPossibleValue(responseDetails.answer) \u0026\u0026 responseDetails.answer !\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" style\u003d\"margin-left: 1em;\" class\u003d\"text-danger\"\u003eThe scale entered is not a possible value.\u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cp *ngIf\u003d\"responseDetails.answer \u003d\u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED\" style\u003d\"margin-left: 1em; color: blue;\"\u003ePlease enter a scale number.\u003c/p\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 4,
      "-": 9
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/num-scale-question-edit-answer-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackNumericalScaleQuestionDetails,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackNumericalScaleResponseDetails,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_NUMSCALE_QUESTION_DETAILS,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  DEFAULT_NUMSCALE_RESPONSE_DETAILS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED } from \u0027../../../../types/feedback-response-details\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditAnswerFormComponent } from \u0027./question-edit-answer-form\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The numerical scale question submission form for a recipient."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-num-scale-question-edit-answer-form\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./num-scale-question-edit-answer-form.component.html\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./num-scale-question-edit-answer-form.component.scss\u0027],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export class NumScaleQuestionEditAnswerFormComponent"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    extends QuestionEditAnswerFormComponent\u003cFeedbackNumericalScaleQuestionDetails,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackNumericalScaleResponseDetails\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED: number \u003d NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    super(DEFAULT_NUMSCALE_QUESTION_DETAILS(), DEFAULT_NUMSCALE_RESPONSE_DETAILS());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  get numberOfPossibleValues(): number {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    const minValue: number \u003d this.questionDetails.minScale;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    const maxValue: number \u003d this.questionDetails.maxScale;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    const increment: number \u003d this.questionDetails.step;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    const num: number \u003d (maxValue - minValue) / increment + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    return Math.floor(parseFloat(num.toFixed(3)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  get possibleValues(): string {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.numberOfPossibleValues \u003e 6) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      return `[${this.questionDetails.minScale},"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "           ${(Math.round((this.questionDetails.minScale + this.questionDetails.step) * 1000) / 1000).toString()},"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "           ${(Math.round((this.questionDetails.minScale + 2 * this.questionDetails.step) * 1000) / 1000).toString()},"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "           ...,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "           ${(Math.round((this.questionDetails.maxScale - 2 * this.questionDetails.step) * 1000) / 1000).toString()},"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "           ${(Math.round((this.questionDetails.maxScale - this.questionDetails.step) * 1000) / 1000).toString()},"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "           ${this.questionDetails.maxScale}]`;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    let possibleValuesString: string \u003d `[${this.questionDetails.minScale.toString()}`;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    let currentValue: number \u003d this.questionDetails.minScale + this.questionDetails.step;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    while (this.questionDetails.maxScale - currentValue \u003e\u003d -1e-9) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      possibleValuesString +\u003d `, ${(Math.round(currentValue * 1000) / 1000).toString()}`;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      currentValue +\u003d this.questionDetails.step;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    return `${possibleValuesString}]`;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Checks if the answer value is a valid value in question possible values."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  isValidPossibleValue(value: number): boolean {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const minValue: number \u003d this.questionDetails.minScale;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const maxValue: number \u003d this.questionDetails.maxScale;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const increment: number \u003d this.questionDetails.step;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    if (isNaN(value)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return value \u003e\u003d minValue \u0026\u0026 value \u003c\u003d maxValue \u0026\u0026 (value - minValue) % increment \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 15,
      "-": 62
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-answer-form/rank-options-question-edit-answer-form.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"form-group row\" *ngFor\u003d\"let num of questionDetails.options; let i \u003d index;\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel class\u003d\"col-sm-2 control-label margin-left-45px\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003e{{ questionDetails.options[i] }}\u003c/strong\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"responseDetails.answers[i]\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                (ngModelChange)\u003d\"triggerResponse(i, $event)\" [disabled]\u003d\"isDisabled\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003coption [ngValue]\u003d\"RANK_OPTIONS_ANSWER_NOT_SUBMITTED\"\u003e\u003c/option\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003coption *ngFor\u003d\"let rank of ranksToBeAssigned\" [ngValue]\u003d\"rank\"\u003e{{ rank }}\u003c/option\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/select\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"!questionDetails.areDuplicatesAllowed \u0026\u0026 isSameRanksAssigned\" class\u003d\"text-danger\"\u003eThe same rank should not be given multiple times.\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"isNoOptionRanked\" style\u003d\"color: blue\"\u003ePlease rank the above options.\u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"isMinOptionsEnabled \u0026\u0026 isOptionsRankedLessThanMin\" class\u003d\"text-danger\"\u003eYou need to rank at least {{ questionDetails.minOptionsToBeRanked }} options.\u003c/p\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"isMaxOptionsEnabled \u0026\u0026 isOptionsRankedMoreThanMax\" class\u003d\"text-danger\"\u003eRank no more than {{questionDetails.maxOptionsToBeRanked}} options.\u003c/p\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 1,
      "-": 20
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/mcq-question-edit-details-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CdkDragDrop, moveItemInArray } from \u0027@angular/cdk/drag-drop\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqQuestionDetails,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_MCQ_QUESTION_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditDetailsFormComponent } from \u0027./question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Question details edit form component for Mcq question."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-mcq-question-edit-details-form\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./mcq-question-edit-details-form.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./mcq-question-edit-details-form.component.scss\u0027],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class McqQuestionEditDetailsFormComponent"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    extends QuestionEditDetailsFormComponent\u003cFeedbackMcqQuestionDetails\u003e {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly PARTICIPANT_TYPES: string[] \u003d [FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackParticipantType.STUDENTS_EXCLUDING_SELF, FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackParticipantType.TEAMS_EXCLUDING_SELF, FeedbackParticipantType.INSTRUCTORS];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    super(DEFAULT_MCQ_QUESTION_DETAILS());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   * Reorders the list on dragging the Mcq options."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  onMcqOptionDropped(event: CdkDragDrop\u003cstring[]\u003e): void {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    const newWeights: number[] \u003d this.model.mcqWeights.slice();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.mcqChoices.slice();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    moveItemInArray(newOptions, event.previousIndex, event.currentIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    moveItemInArray(newWeights, event.previousIndex, event.currentIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.mcqChoices \u003d newOptions;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.mcqWeights \u003d newWeights;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * Increases number of Mcq options."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  increaseNumberOfOptions(): void {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.numOfMcqChoices \u003d this.model.numOfMcqChoices + 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.mcqChoices.slice();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    newOptions.push(\u0027\u0027);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.mcqChoices \u003d newOptions;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.model.hasAssignedWeights) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      const newWeights: number[] \u003d this.model.mcqWeights.slice();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      newWeights.push(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.mcqWeights \u003d newWeights;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes a Mcq option."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  onMcqOptionDeleted(event: number): void {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.numOfMcqChoices \u003d this.model.numOfMcqChoices - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.mcqChoices.slice();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    newOptions.splice(event, 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.mcqChoices \u003d newOptions;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.model.hasAssignedWeights) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      const newWeights: number[] \u003d this.model.mcqWeights.slice();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      newWeights.splice(event, 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.mcqWeights \u003d newWeights;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays new Mcq option at specified index."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  onMcqOptionEntered(event: string, index: number): void {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.mcqChoices.slice();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    newOptions[index] \u003d event;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027mcqChoices\u0027, newOptions);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays new Mcq weight at specified index."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  onMcqWeightEntered(event: number, index: number): void {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    const newWeights: number[] \u003d this.model.mcqWeights.slice();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    newWeights[index] \u003d event;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027mcqWeights\u0027, newWeights);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the Mcq option by index."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  trackMcqOption(index: number, item: string[]): string {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    return item[index];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the Mcq weight by index."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  trackMcqWeight(index: number, item: number[]): number {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    return item[index];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the display of the weight column for the Mcq options if weights option is checked/unchecked."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerWeightsColumn(event: any): void {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!event.target.checked) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      fieldsToUpdate.hasAssignedWeights \u003d false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.mcqWeights \u003d [];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.mcqOtherWeight \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      fieldsToUpdate.hasAssignedWeights \u003d true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.mcqWeights \u003d Array(this.model.numOfMcqChoices).fill(0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the display of the weight for the other option."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerOtherWeight(event: any): void {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!event.target.checked) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      this.triggerModelChange(\u0027mcqOtherWeight\u0027, 0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assigns a default value to generateOptionsFor when checkbox is clicked."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerGeneratedOptionsChange(event: any): void {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    const feedbackParticipantType: FeedbackParticipantType"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d event.target.checked ? FeedbackParticipantType.STUDENTS : FeedbackParticipantType.NONE;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027generateOptionsFor\u0027, feedbackParticipantType);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if the generatedOptionsFor checkbox is enabled."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  get isGeneratedOptionsEnabled(): boolean {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.generateOptionsFor !\u003d\u003d FeedbackParticipantType.NONE;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 2,
      "-": 147
    }
  },
  {
    "path": "src/web/app/components/question-types/question-edit-details-form/msq-question-edit-details-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CdkDragDrop, moveItemInArray } from \u0027@angular/cdk/drag-drop\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackMsqQuestionDetails, FeedbackParticipantType } from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_MSQ_QUESTION_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NO_VALUE } from \u0027../../../../types/feedback-response-details\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditDetailsFormComponent } from \u0027./question-edit-details-form.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Question details edit form component for Msq question."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-msq-question-edit-details-form\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./msq-question-edit-details-form.component.html\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./msq-question-edit-details-form.component.scss\u0027],"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export class MsqQuestionEditDetailsFormComponent"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    extends QuestionEditDetailsFormComponent\u003cFeedbackMsqQuestionDetails\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly PARTICIPANT_TYPES: string[] \u003d [FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackParticipantType.STUDENTS_EXCLUDING_SELF, FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    FeedbackParticipantType.TEAMS_EXCLUDING_SELF, FeedbackParticipantType.INSTRUCTORS];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    super(DEFAULT_MSQ_QUESTION_DETAILS());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   * Reorders the list on dragging the Msq options."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  onMsqOptionDropped(event: CdkDragDrop\u003cstring[]\u003e): void {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    const newWeights: number[] \u003d this.model.msqWeights.slice();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.msqChoices.slice();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    moveItemInArray(newOptions, event.previousIndex, event.currentIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    moveItemInArray(newWeights, event.previousIndex, event.currentIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.msqChoices \u003d newOptions;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.msqWeights \u003d newWeights;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays new Msq weight at specified index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  onMsqWeightEntered(event: number, index: number): void {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    const newWeights: number[] \u003d this.model.msqWeights.slice();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    newWeights[index] \u003d event;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027msqWeights\u0027, newWeights);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   * Increases number of Msq options."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  increaseNumberOfMsqOptions(): void {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.msqChoices.slice();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    newOptions.push(\u0027\u0027);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.msqChoices \u003d newOptions;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.model.hasAssignedWeights) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      const newWeights: number[] \u003d this.model.msqWeights.slice();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      newWeights.push(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.msqWeights \u003d newWeights;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes a Msq option."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  onMsqOptionDeleted(event: number): void {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.msqChoices.slice();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    newOptions.splice(event, 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    fieldsToUpdate.msqChoices \u003d newOptions;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.model.hasAssignedWeights) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      const newWeights: number[] \u003d this.model.msqWeights.slice();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      newWeights.splice(event, 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.msqWeights \u003d newWeights;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays maxSelectableOption value."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  get displayValueForMaxSelectableOption(): number {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.maxSelectableChoices \u003d\u003d\u003d NO_VALUE ? 2 : this.model.maxSelectableChoices;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays minSelectableOption value."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  get displayValueForMinSelectableOption(): number {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.minSelectableChoices \u003d\u003d\u003d NO_VALUE ? 1 : this.model.minSelectableChoices;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   * Displays new Msq option at specified index."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  onMsqOptionEntered(event: string, index: number): void {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    const newOptions: string[] \u003d this.model.msqChoices.slice();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    newOptions[index] \u003d event;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027msqChoices\u0027, newOptions);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the display of the weight for the other option."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerOtherWeight(event: any): void {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!event.target.checked) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      this.triggerModelChange(\u0027msqOtherWeight\u0027, 0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assigns a default value to generateOptionsFor when checkbox is clicked."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerGeneratedOptionsChange(event: any): void {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    const feedbackParticipantType: FeedbackParticipantType"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d event.target.checked ? FeedbackParticipantType.STUDENTS : FeedbackParticipantType.NONE;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027generateOptionsFor\u0027, feedbackParticipantType);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assigns a default value to maxSelectableOptions when checkbox is clicked."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerMaxSelectableOptionsChange(event: any): void {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    const maxSelectableChoices: number \u003d event.target.checked ? 2 : NO_VALUE;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027maxSelectableChoices\u0027, maxSelectableChoices);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   * Assigns a default value to minSelectableOptions when checkbox is clicked."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerMinSelectableOptionsChange(event: any): void {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    const minSelectableChoices: number \u003d event.target.checked ? 1 : NO_VALUE;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChange(\u0027minSelectableChoices\u0027, minSelectableChoices);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the Msq option by index."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  trackMsqOption(index: number, item: string[]): string {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    return item[index];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the Msq weight by index."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  trackMsqWeight(index: number, item: number[]): number {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    return item[index];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if the generatedOptionsFor checkbox is enabled."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  get isGeneratedOptionsEnabled(): boolean {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.generateOptionsFor !\u003d\u003d FeedbackParticipantType.NONE;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if the maxSelectedChoices checkbox is enabled."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  get isMaxSelectableChoicesEnabled(): boolean {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.maxSelectableChoices !\u003d\u003d NO_VALUE;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if the minSelectedChoices checkbox is enabled."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  get isMinSelectableChoicesEnabled(): boolean {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.minSelectableChoices !\u003d\u003d NO_VALUE;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns maximum value that minSelectable option can take."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  get maxMinSelectableValue(): number {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isMaxSelectableChoicesEnabled) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.model.msqChoices.length;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.model.maxSelectableChoices;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the display of the weight column for the Msq options if weights option is checked/unchecked."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerWeightsColumn(event: any): void {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    const fieldsToUpdate: any \u003d {};"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!event.target.checked) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      fieldsToUpdate.hasAssignedWeights \u003d false;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.msqWeights \u003d [];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.msqOtherWeight \u003d 0;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      fieldsToUpdate.hasAssignedWeights \u003d true;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      fieldsToUpdate.msqWeights \u003d Array(this.model.msqChoices.length).fill(0);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    this.triggerModelChangeBatch(fieldsToUpdate);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 2,
      "-": 197
    }
  },
  {
    "path": "src/web/app/components/session-edit-form/session-edit-form.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbDateParserFormatter, NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { TemplateSession } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionVisibleSetting,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { FEEDBACK_SESSION_NAME_MAX_LENGTH } from \u0027../../../types/field-validator\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { SessionEditFormDatePickerFormatter } from \u0027./session-edit-form-datepicker-formatter\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { DateFormat, SessionEditFormMode, SessionEditFormModel } from \u0027./session-edit-form-model\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Form to Add/Edit feedback sessions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-session-edit-form\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./session-edit-form.component.html\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./session-edit-form.component.scss\u0027],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  providers: [{ provide: NgbDateParserFormatter, useClass: SessionEditFormDatePickerFormatter }],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "export class SessionEditFormComponent implements OnInit {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionVisibleSetting: typeof SessionVisibleSetting \u003d SessionVisibleSetting;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ResponseVisibleSetting: typeof ResponseVisibleSetting \u003d ResponseVisibleSetting;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  // const"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  FEEDBACK_SESSION_NAME_MAX_LENGTH: number \u003d FEEDBACK_SESSION_NAME_MAX_LENGTH;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  model: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    instructions: \u0027\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    gracePeriod: 0,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    isClosingEmailEnabled: true,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    isPublishedEmailEnabled: true,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: true,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    hasVisibleSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    hasEmailSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  modelChange: EventEmitter\u003cSessionEditFormModel\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  formMode: SessionEditFormMode \u003d SessionEditFormMode.ADD;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  // add mode specific"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  courseCandidates: Course[] \u003d [];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  templateSessions: TemplateSession[] \u003d [];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  // event emission"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  addNewSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  editExistingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteExistingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  copyCurrentSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  copyOtherSessionsEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private modalService: NgbModal) { }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   * Triggers the change of the model for the form."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  triggerModelChange(field: string, data: any): void {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modelChange.emit({"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      ...this.model,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      [field]: data,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles course Id change event."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cp\u003eUsed in ADD mode."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  courseIdChangeHandler(newCourseId: string): void {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    const course: Course | undefined \u003d this.courseCandidates.find((c: Course) \u003d\u003e c.courseId \u003d\u003d\u003d newCourseId);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    if (course) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      this.modelChange.emit({"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        ...this.model,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        courseId: newCourseId,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        courseName: course.courseName,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        timeZone: course.timeZone,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the maximum date for a session to be visible based on the input model."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  get maxDateForSessionVisible(): DateFormat {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.model.responseVisibleSetting) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      case ResponseVisibleSetting.LATER:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      case ResponseVisibleSetting.AT_VISIBLE:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.model.submissionStartDate;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      case ResponseVisibleSetting.CUSTOM:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        const submissionStartDate: any \u003d this.getMomentInstance(this.model.submissionStartDate);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        const responseVisibleDate: any \u003d this.getMomentInstance(this.model.customResponseVisibleDate);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        if (submissionStartDate.isBefore(responseVisibleDate)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.model.submissionStartDate;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.model.customResponseVisibleDate;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          year: 0,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          month: 0,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          day: 0,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the minimum date for responses to be visible based on the input model."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  get minDateForResponseVisible(): DateFormat {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.model.sessionVisibleSetting) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      case SessionVisibleSetting.AT_OPEN:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.model.submissionStartDate;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      case SessionVisibleSetting.CUSTOM:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.model.customSessionVisibleDate;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        return {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          year: 0,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          month: 0,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "          day: 0,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a moment instance from a date."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  getMomentInstance(date: DateFormat): any {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    const inst: any \u003d moment();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027year\u0027, date.year);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027date\u0027, date.day);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    return inst;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles submit button click event."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  submitFormHandler(): void {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    // resolve local date time to timestamp"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.formMode \u003d\u003d\u003d SessionEditFormMode.ADD) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      this.addNewSessionEvent.emit();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.formMode \u003d\u003d\u003d SessionEditFormMode.EDIT) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      this.editExistingSessionEvent.emit();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles delete current feedback session button click event."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteHandler(modal: any): void {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modalService.open(modal).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      this.deleteExistingSessionEvent.emit();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles copy current feedback session button click event."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  copyHandler(): void {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copyCurrentSessionEvent.emit();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles copy from other feedback sessions button click event."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "  copyOthersHandler(): void {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copyOtherSessionsEvent.emit();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles session \u0027Help\u0027 link click event."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionHelpHandler(): void {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    window.open(`${environment.frontendUrl}/web/instructor/help#sessions`);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 1,
      "-": 229
    }
  },
  {
    "path": "src/web/app/components/sessions-table/resend-results-link-to-student-modal/resend-results-link-to-student-modal.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-header\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch4 class\u003d\"modal-title\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    Resend Published Email"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003csmall\u003e(Select the student(s) you want to resend the published email to)\u003c/small\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/h4\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"activeModal.dismiss()\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\" *ngIf\u003d\"studentListInfoTableRowModels.length \u003e 0; else noStudentsToRemind\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctm-student-list-info-table [(studentListInfoTableRowModels)]\u003d\"studentListInfoTableRowModels\" [shouldDisplayHasSubmittedSessionColumn]\u003d\"false\"\u003e\u003c/tm-student-list-info-table\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #noStudentsToRemind\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4 class\u003d\"p-2 bg-info text-white\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      There are no students enrolled to send email to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h4\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-default\" (click)\u003d\"activeModal.dismiss()\"\u003eCancel\u003c/button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"activeModal.close(collateStudentsToSendHandler())\"\u003eSend\u003c/button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 20
    }
  },
  {
    "path": "src/web/app/components/sessions-table/resend-results-link-to-student-modal/resend-results-link-to-student-modal.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableComponent } from \u0027../student-list-info-table/student-list-info-table.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { ResendResultsLinkToStudentModalComponent } from \u0027./resend-results-link-to-student-modal.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-ajax-preload\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "class AjaxPreloadComponent {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027ResendResultsLinkToStudentModalComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: ResendResultsLinkToStudentModalComponent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cResendResultsLinkToStudentModalComponent\u003e;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        ResendResultsLinkToStudentModalComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AjaxPreloadComponent,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        StudentListInfoTableComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      providers: [NgbActiveModal],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(ResendResultsLinkToStudentModalComponent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 42
    }
  },
  {
    "path": "src/web/app/components/sessions-table/resend-results-link-to-student-modal/resend-results-link-to-student-modal.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableRowModel } from \u0027../student-list-info-table/student-list-info-table-model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Re-send results link to students modal."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-resend-results-link-to-student-modal\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./resend-results-link-to-student-modal.component.html\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./resend-results-link-to-student-modal.component.scss\u0027],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export class ResendResultsLinkToStudentModalComponent implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  // values below will be injected by other component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  studentListInfoTableRowModels: StudentListInfoTableRowModel[] \u003d [];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  constructor(public activeModal: NgbActiveModal) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Collates a list of selected students with selected status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  collateStudentsToSendHandler(): StudentListInfoTableRowModel[] {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.studentListInfoTableRowModels"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .map((model: StudentListInfoTableRowModel) \u003d\u003e Object.assign({}, model))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .filter((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 11,
      "-": 23
    }
  },
  {
    "path": "src/web/app/components/sessions-table/send-reminders-to-student-modal/send-reminders-to-student-modal.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-header\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch5 class\u003d\"modal-title\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003eRemind Particular Students {{ feedbackSessionName }}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003csmall\u003e(select the student(s) you want to remind)\u003c/small\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h5\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cinput id\u003d\"remindAll\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"isAllStudentsSelected\" (ngModelChange)\u003d\"changeSelectionStatusForAllStudentsHandler($event)\"/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel for\u003d\"remindAll\" class\u003d\"remind-all form-check-label\"\u003eSelect all respondents\u003c/label\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cinput id\u003d\"remindNotSubmitted\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"isAllYetToSubmitStudentsSelected\" (ngModelChange)\u003d\"changeSelectionStatusForAllYetSubmittedStudentsHandler($event)\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003clabel for\u003d\"remindNotSubmitted\" class\u003d\"form-check-label\"\u003eSelect all respondents not yet submitted\u003c/label\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"activeModal.dismiss()\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\" *ngIf\u003d\"studentListInfoTableRowModels.length \u003e 0; else noStudentsToRemind\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctm-student-list-info-table [(studentListInfoTableRowModels)]\u003d\"studentListInfoTableRowModels\" [shouldDisplayHasSubmittedSessionColumn]\u003d\"true\"\u003e\u003c/tm-student-list-info-table\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #noStudentsToRemind\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4 class\u003d\"p-2 bg-info text-white\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      There are no students enrolled to remind."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h4\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"activeModal.dismiss()\"\u003eCancel\u003c/button\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"activeModal.close(collateStudentsToSendHandler())\"\u003eRemind\u003c/button\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 4,
      "-": 25
    }
  },
  {
    "path": "src/web/app/components/sessions-table/send-reminders-to-student-modal/send-reminders-to-student-modal.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableComponent } from \u0027../student-list-info-table/student-list-info-table.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { SendRemindersToStudentModalComponent } from \u0027./send-reminders-to-student-modal.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-ajax-preload\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "class AjaxPreloadComponent {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027SendRemindersToStudentModalComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: SendRemindersToStudentModalComponent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cSendRemindersToStudentModalComponent\u003e;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        SendRemindersToStudentModalComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        AjaxPreloadComponent,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        StudentListInfoTableComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      providers: [NgbActiveModal],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(SendRemindersToStudentModalComponent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 42
    }
  },
  {
    "path": "src/web/app/components/sessions-table/send-reminders-to-student-modal/send-reminders-to-student-modal.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableRowModel } from \u0027../student-list-info-table/student-list-info-table-model\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Send reminders to students modal."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-send-reminders-to-student-modal\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./send-reminders-to-student-modal.component.html\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./send-reminders-to-student-modal.component.scss\u0027],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export class SendRemindersToStudentModalComponent implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  // values below will be injected by other component"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  studentListInfoTableRowModels: StudentListInfoTableRowModel[] \u003d [];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  constructor(public activeModal: NgbActiveModal) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Changes selection state for all students."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  changeSelectionStatusForAllStudentsHandler(shouldSelect: boolean): void {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    for (const model of this.studentListInfoTableRowModels) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      model.isSelected \u003d shouldSelect;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Changes selection state for all yet to submit students."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  changeSelectionStatusForAllYetSubmittedStudentsHandler(shouldSelect: boolean): void {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    for (const model of this.studentListInfoTableRowModels) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      if (!model.hasSubmittedSession) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        model.isSelected \u003d shouldSelect;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Collates a list of selected students with selected status."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  collateStudentsToSendHandler(): StudentListInfoTableRowModel[] {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.studentListInfoTableRowModels"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .map((model: StudentListInfoTableRowModel) \u003d\u003e Object.assign({}, model))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .filter((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Checks whether all students are selected."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  get isAllStudentsSelected(): boolean {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.studentListInfoTableRowModels.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Checks whether all students are slected."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  get isAllYetToSubmitStudentsSelected(): boolean {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.studentListInfoTableRowModels"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .filter((model: StudentListInfoTableRowModel) \u003d\u003e !model.hasSubmittedSession)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 28,
      "-": 42
    }
  },
  {
    "path": "src/web/app/components/sessions-table/sessions-table-model.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { FeedbackSession, InstructorPrivilege } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * The model for a row of the sessions table."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "export interface SessionsTableRowModel {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSession: FeedbackSession;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  responseRate: string;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  isLoadingResponseRate: boolean;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorPrivilege: InstructorPrivilege;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * The result of copy session event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export interface CopySessionResult {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionToCopyRowIndex: number;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  newFeedbackSessionName: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  copyToCourseId: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * The column of the session table"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SessionsTableColumn {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   * Course ID column."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  COURSE_ID,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   * Start date of the feedback session column."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  START_DATE,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * End date of the feedback session column."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  END_DATE,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " * The color scheme of the header of the table"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SessionsTableHeaderColorScheme {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   * Blue background with white text."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  BLUE,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * White background with black text."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  WHITE,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " * Sort criteria for the sessions table."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SortBy {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   * Nothing."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  NONE,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "   * Course ID."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  COURSE_ID,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * Course ID."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  COURSE_NAME,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   * The creation time of the course."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  COURSE_CREATION_DATE,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * Feedback session name."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  FEEDBACK_SESSION_NAME,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   * Start time of the feedback session."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  START_DATE,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   * End time of the feedback session."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  END_DATE,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * The creation time of the feedback session."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  SESSION_CREATION_DATE,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "   * The time when the feedback session is moved to recycle bin."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  DELETION_DATE,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": " * Sort order for the sessions table."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SortOrder {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   * Descending sort order."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  DESC,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "   * Ascending sort order"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  ASC,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 1,
      "-": 121
    }
  },
  {
    "path": "src/web/app/components/sessions-table/sessions-table.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Course, FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalResult } from \u0027../copy-session-modal/copy-session-modal-model\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalComponent } from \u0027../copy-session-modal/copy-session-modal.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  ConfirmPublishingSessionModalComponent,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./confirm-publishing-session-modal/confirm-publishing-session-modal.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  ConfirmSessionMoveToRecycleBinModalComponent,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./confirm-session-move-to-recycle-bin-modal/confirm-session-move-to-recycle-bin-modal.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  ConfirmUnpublishingSessionModalComponent,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./confirm-unpublishing-session-modal/confirm-unpublishing-session-modal.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  CopySessionResult,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SortBy,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SortOrder,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./sessions-table-model\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * A table to display a list of feedback sessions."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-sessions-table\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./sessions-table.component.html\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./sessions-table.component.scss\u0027],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "export class SessionsTableComponent implements OnInit {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  courseCandidates: Course[] \u003d [];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  columnsToShow: SessionsTableColumn[] \u003d [SessionsTableColumn.COURSE_ID];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  headerColorScheme: SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme.BLUE;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModelsEvent: EventEmitter\u003cSortBy\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRateEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  editSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBinEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  copySessionEvent: EventEmitter\u003cCopySessionResult\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructorEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResultEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSessionEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  sendRemindersToStudentsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  resendResultsLinkToStudentsEvent: EventEmitter\u003cnumber\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private modalService: NgbModal) { }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session row."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModels(by: SortBy): void {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sortSessionsTableRowModelsEvent.emit(by);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves the feedback session to the recycle bin."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBin(rowIndex: number): void {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modalService.open(ConfirmSessionMoveToRecycleBinModalComponent).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      this.moveSessionToRecycleBinEvent.emit(rowIndex);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies the feedback session."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  copySession(rowIndex: number): void {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CopySessionModalComponent);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.newFeedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.sessionToCopyCourseId \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      this.copySessionEvent.emit({"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        ...result,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionToCopyRowIndex: rowIndex,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSession(rowIndex: number): void {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(ConfirmPublishingSessionModalComponent);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.feedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      this.publishSessionEvent.emit(rowIndex);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSession(rowIndex: number): void {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(ConfirmUnpublishingSessionModalComponent);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.feedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      this.unpublishSessionEvent.emit(rowIndex);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resend links to students to view results."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  remindResultsLinkToStudent(rowIndex: number): void {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.resendResultsLinkToStudentsEvent.emit(rowIndex);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sends e-mails to remind students who have not submitted their feedback."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  sendRemindersToStudents(rowIndex: number): void {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.sendRemindersToStudentsEvent.emit(rowIndex);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 7,
      "-": 165
    }
  },
  {
    "path": "src/web/app/components/sessions-table/sessions-table.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { AjaxPreloadModule } from \u0027../ajax-preload/ajax-preload.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalModule } from \u0027../copy-session-modal/copy-session-modal.module\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  ConfirmPublishingSessionModalComponent,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./confirm-publishing-session-modal/confirm-publishing-session-modal.component\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  ConfirmSessionMoveToRecycleBinModalComponent,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./confirm-session-move-to-recycle-bin-modal/confirm-session-move-to-recycle-bin-modal.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  ConfirmUnpublishingSessionModalComponent,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./confirm-unpublishing-session-modal/confirm-unpublishing-session-modal.component\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormatDateBriefPipe } from \u0027./format-date-brief.pipe\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import { PublishStatusTooltipPipe } from \u0027./publish-status-tooltip.pipe\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  ResendResultsLinkToStudentModalComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./resend-results-link-to-student-modal/resend-results-link-to-student-modal.component\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  SendRemindersToStudentModalComponent,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./send-reminders-to-student-modal/send-reminders-to-student-modal.component\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import { SessionsTableComponent } from \u0027./sessions-table.component\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableComponent } from \u0027./student-list-info-table/student-list-info-table.component\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import { SubmissionStatusTooltipPipe } from \u0027./submission-status-tooltip.pipe\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for sessions table."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    SubmissionStatusTooltipPipe,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    PublishStatusTooltipPipe,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    SessionsTableComponent,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    ConfirmUnpublishingSessionModalComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    ConfirmPublishingSessionModalComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    ResendResultsLinkToStudentModalComponent,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    SendRemindersToStudentModalComponent,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    FormatDateBriefPipe,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    ConfirmSessionMoveToRecycleBinModalComponent,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    StudentListInfoTableComponent,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    AjaxLoadingModule,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    AjaxPreloadModule,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    TeammatesCommonModule,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    NgbModule,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    FormsModule,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    CopySessionModalModule,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  entryComponents: ["
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    ConfirmSessionMoveToRecycleBinModalComponent,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    ConfirmUnpublishingSessionModalComponent,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    ConfirmPublishingSessionModalComponent,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    ResendResultsLinkToStudentModalComponent,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    SendRemindersToStudentModalComponent,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    SessionsTableComponent,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    StudentListInfoTableComponent,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "export class SessionsTableModule { }"
      }
    ],
    "authorContributionMap": {
      "crizyli": 3,
      "-": 64
    }
  },
  {
    "path": "src/web/app/components/sessions-table/student-list-info-table/student-list-info-table-model.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * The model for a row of the student list info table."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export interface StudentListInfoTableRowModel {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  teamName: string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  sectionName: string;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  hasSubmittedSession: boolean;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  isSelected: boolean;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 13
    }
  },
  {
    "path": "src/web/app/components/sessions-table/student-list-info-table/student-list-info-table.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "\u003ctable class\u003d\"table table-bordered\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003ctr class\u003d\"background-color-medium-gray\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cth\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003clabel\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        \u003cinput type\u003d\"checkbox\" [ngModel]\u003d\"isAllStudentsSelected\" (ngModelChange)\u003d\"changeSelectionStatusForAllStudentsHandler($event)\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/th\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cth (click)\u003d\"sortStudentsTableRows(SortBy.SECTION_NAME)\" class\u003d\"clickable\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      Section"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy !\u003d\u003d SortBy.SECTION_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.SECTION_NAME \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.SECTION_NAME \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/th\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cth (click)\u003d\"sortStudentsTableRows(SortBy.TEAM_NAME)\" class\u003d\"clickable\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      Team"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy !\u003d\u003d SortBy.TEAM_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.TEAM_NAME \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.TEAM_NAME \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/th\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cth (click)\u003d\"sortStudentsTableRows(SortBy.STUDENT_NAME)\" class\u003d\"clickable\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      Student Name"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy !\u003d\u003d SortBy.STUDENT_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.STUDENT_NAME \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.STUDENT_NAME \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/th\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cth (click)\u003d\"sortStudentsTableRows(SortBy.STUDENT_EMAIL)\" class\u003d\"clickable\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      Email"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy !\u003d\u003d SortBy.STUDENT_EMAIL\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.STUDENT_EMAIL \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.STUDENT_EMAIL \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/th\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cth (click)\u003d\"sortStudentsTableRows(SortBy.HAS_SUBMITTED_SESSION)\" class\u003d\"clickable\" *ngIf\u003d\"shouldDisplayHasSubmittedSessionColumn\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      Submitted?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy !\u003d\u003d SortBy.HAS_SUBMITTED_SESSION\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.HAS_SUBMITTED_SESSION \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableSortBy \u003d\u003d\u003d SortBy.HAS_SUBMITTED_SESSION \u0026\u0026 studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003ctr [ngClass]\u003d\"{\u0027bg-warning\u0027: shouldDisplayHasSubmittedSessionColumn \u0026\u0026 !studentListInfoTableRowModel.hasSubmittedSession}\" *ngFor\u003d\"let studentListInfoTableRowModel of studentListInfoTableRowModels\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctd class\u003d\"align-center\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003clabel\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        \u003cinput type\u003d\"checkbox\" [ngModel]\u003d\"studentListInfoTableRowModel.isSelected\" (ngModelChange)\u003d\"handleSelectionOfRow(studentListInfoTableRowModel)\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003c/label\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      {{ studentListInfoTableRowModel.sectionName }}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      {{ studentListInfoTableRowModel.teamName }}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      {{ studentListInfoTableRowModel.name }}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctd\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      {{ studentListInfoTableRowModel.email }}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ctd *ngIf\u003d\"shouldDisplayHasSubmittedSessionColumn\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"studentListInfoTableRowModel.hasSubmittedSession\"\u003eYes\u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003cspan *ngIf\u003d\"!studentListInfoTableRowModel.hasSubmittedSession\"\u003eNo\u003c/span\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/td\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003c/tr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "\u003c/table\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 62
    }
  },
  {
    "path": "src/web/app/components/sessions-table/student-list-info-table/student-list-info-table.component.scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": ".clickable {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  cursor: pointer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 3
    }
  },
  {
    "path": "src/web/app/components/sessions-table/student-list-info-table/student-list-info-table.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableComponent } from \u0027./student-list-info-table.component\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "describe(\u0027StudentListInfoTableComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  let component: StudentListInfoTableComponent;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  let fixture: ComponentFixture\u003cStudentListInfoTableComponent\u003e;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      declarations: [StudentListInfoTableComponent],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      imports: [FormsModule],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    })"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    fixture \u003d TestBed.createComponent(StudentListInfoTableComponent);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crizyli"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "crizyli": 26
    }
  },
  {
    "path": "src/web/app/components/sessions-table/student-list-info-table/student-list-info-table.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentListInfoTableRowModel } from \u0027./student-list-info-table-model\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * Sort criteria for the student list info table."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "enum SortBy {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Nothing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  NONE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * The name of the student\u0027s section."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SECTION_NAME,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * The name of the student\u0027s team."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  TEAM_NAME,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * The name of the student."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  STUDENT_NAME,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * The email of the student."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  STUDENT_EMAIL,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * The status of the student\u0027s feedback submission."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  HAS_SUBMITTED_SESSION,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * Sort order for the sessions table."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crizyli"
        },
        "content": "enum SortOrder {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Descending sort order."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  DESC,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Ascending sort order"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  ASC,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * Student list for users to make selection."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  selector: \u0027tm-student-list-info-table\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  templateUrl: \u0027./student-list-info-table.component.html\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  styleUrls: [\u0027./student-list-info-table.component.scss\u0027],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "})"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export class StudentListInfoTableComponent implements OnInit {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  shouldDisplayHasSubmittedSessionColumn: boolean \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  @Input()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  studentListInfoTableRowModels: StudentListInfoTableRowModel[] \u003d [];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  @Output()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  studentListInfoTableRowModelsChange: EventEmitter\u003cStudentListInfoTableRowModel[]\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  studentListInfoTableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  studentListInfoTableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Sorts the students according to selection option."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  sortStudentsTableRows(by: SortBy): void {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.studentListInfoTableSortOrder \u003d"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.studentListInfoTableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.studentListInfoTableRowModelsChange.emit("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.studentListInfoTableRowModels.map((oldModel: StudentListInfoTableRowModel) \u003d\u003e Object.assign({}, oldModel))"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            .sort(this.sortRowsBy(by, this.studentListInfoTableSortOrder)),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Handles the event when a row of the table is selected."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  handleSelectionOfRow(model: StudentListInfoTableRowModel): void {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.studentListInfoTableRowModelsChange.emit("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.studentListInfoTableRowModels.map((oldModel: StudentListInfoTableRowModel) \u003d\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          if (oldModel \u003d\u003d\u003d model) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            return Object.assign({}, oldModel, {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              isSelected: !oldModel.isSelected,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            });"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          return Object.assign({}, oldModel);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Sorts the rows of students in order."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  sortRowsBy(by: SortBy, order: SortOrder):"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      ((a: StudentListInfoTableRowModel, b: StudentListInfoTableRowModel) \u003d\u003e number) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return ((a: StudentListInfoTableRowModel, b: StudentListInfoTableRowModel): number \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        case SortBy.SECTION_NAME:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strA \u003d a.sectionName;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strB \u003d b.sectionName;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        case SortBy.TEAM_NAME:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strA \u003d a.teamName;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strB \u003d b.teamName;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        case SortBy.STUDENT_NAME:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strA \u003d a.name;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strB \u003d b.name;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        case SortBy.STUDENT_EMAIL:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strA \u003d a.email;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strB \u003d b.email;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        case SortBy.HAS_SUBMITTED_SESSION:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strA \u003d a.hasSubmittedSession.toString();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strB \u003d b.hasSubmittedSession.toString();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      if (order \u003d\u003d\u003d SortOrder.ASC) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      if (order \u003d\u003d\u003d SortOrder.DESC) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return strB.localeCompare(strA);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    });"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Checks whether all students are selected."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  get isAllStudentsSelected(): boolean {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.studentListInfoTableRowModels.every((model: StudentListInfoTableRowModel) \u003d\u003e model.isSelected);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Changes selection state for all students."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  changeSelectionStatusForAllStudentsHandler(shouldSelect: boolean): void {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.studentListInfoTableRowModelsChange.emit("
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.studentListInfoTableRowModels.map((model: StudentListInfoTableRowModel) \u003d\u003e Object.assign({}, model, {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          isSelected: shouldSelect,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        })),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    );"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 177
    }
  },
  {
    "path": "src/web/app/components/status-message/status-message.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "import { StatusMessage } from \u0027./status-message\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageComponent } from \u0027./status-message.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StatusMessageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: StatusMessageComponent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cStatusMessageComponent\u003e;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [StatusMessageComponent],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(StatusMessageComponent);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  const messages: StatusMessage[] \u003d ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    { message: \u0027a\u0027, color: \u0027black\u0027 },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    { message: \u0027b\u0027, color: \u0027red\u0027 },"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    { message: \u0027c\u0027, color: \u0027green\u0027 },"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  ];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  it(\u0027should snap with default view\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  it(\u0027should show all three messages\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    component.messages \u003d messages;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  it(\u0027should delete a message after clicking button\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    component.messages \u003d messages;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    const buttons: HTMLElement[] \u003d fixture.nativeElement.querySelectorAll(\u0027div.alert button\u0027);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    buttons[0].click();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    const statusMessagesAfterClick: HTMLElement[] \u003d fixture.nativeElement.querySelectorAll(\u0027div.alert div\u0027);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    const messageAfterDelete: StatusMessage[] \u003d ["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      { message: \u0027b\u0027, color: \u0027red\u0027 },"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "      { message: \u0027c\u0027, color: \u0027green\u0027 },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(component.messages).toEqual(messageAfterDelete);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(statusMessagesAfterClick.length).toEqual(2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(statusMessagesAfterClick[0].innerHTML).toEqual(\u0027b\u0027);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(statusMessagesAfterClick[1].innerHTML).toEqual(\u0027c\u0027);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    buttons[1].click();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    buttons[2].click();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    const deleteAll: HTMLElement[] \u003d fixture.nativeElement.querySelectorAll(\u0027div.alert div\u0027);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    const messageAfterDeleteAll: StatusMessage[] \u003d [];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(component.messages).toEqual(messageAfterDeleteAll);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    expect(deleteAll.length).toEqual(0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "  });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 51,
      "-": 25
    }
  },
  {
    "path": "src/web/app/page.component.scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "body {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  font-size: 15px;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "footer,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "nav {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  background: #3C3C3C;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "nav {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  height: 50px;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  img {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    height: 50px;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-left: 20px;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "footer a {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  color: #E46D0B;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ".main-content {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-top: 50px;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  min-height: calc(100vh - 80px);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".container {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  max-width: 1350px;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026.main-content {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 20px 30px;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026.footer {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 5px 20px;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    color: rgba(255, 255, 255, .5);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ".dropdown-item {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  color: rgba(255, 255, 255, .5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026:hover,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026:focus {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color: inherit;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    color: rgba(255, 255, 255, .75);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-nav li {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  margin: auto 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-left: 10px;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  z-index: 2000;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ".pull-right {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-right: 20px;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@media (max-width: 992px) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  .navbar-collapse {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    padding: 15px 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  .navbar-nav li {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    margin: auto 20px;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  .pull-right {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-right: 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-toggler {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-right: 20px;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  \u0026:focus {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    outline: none;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ".navbar-collapse,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ".dropdown-menu {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  background: #3C3C3C;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ".dropdown-divider {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  border: 1px solid rgba(255, 255, 255, .3);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  margin: .5rem 15px;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 1,
      "-": 94
    }
  },
  {
    "path": "src/web/app/pages-admin/admin-accounts-page/admin-accounts-page.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-top: 30px;\" *ngIf\u003d\"accountInfo.googleId\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body row\" style\u003d\"padding: 25px 40px;\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel class\u003d\"col-sm-2 control-label\"\u003eGoogle ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-sm-10\"\u003e{{ accountInfo.googleId }}\u003c/div\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel class\u003d\"col-sm-2 control-label\"\u003eName:\u003c/label\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-sm-10\"\u003e{{ accountInfo.name }}\u003c/div\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel class\u003d\"col-sm-2 control-label\"\u003eEmail:\u003c/label\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-sm-10\"\u003e{{ accountInfo.email }}\u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel class\u003d\"col-sm-2 control-label\"\u003eInstitute:\u003c/label\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-sm-10\"\u003e{{ accountInfo.institute }}\u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel class\u003d\"col-sm-2 control-label\"\u003eIs Instructor:\u003c/label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"col-sm-10\"\u003e{{ accountInfo.isInstructor }}\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"mx-auto\" style\u003d\"margin-top: 20px\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-sm btn-warning\" style\u003d\"margin-right: 10px;\" *ngIf\u003d\"accountInfo.isInstructor\" (click)\u003d\"downgradeAccountToStudent()\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Downgrade to Student"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-sm btn-danger\" (click)\u003d\"deleteAccount()\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fas fa-trash-alt\"\u003e\u003c/i\u003e Delete Account"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch3 style\u003d\"margin-top: 20px; margin-bottom: 30px;\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor For {{ instructorCourses.length }} Courses"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/h3\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light\" *ngIf\u003d\"instructorCourses.length\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable class\u003d\"table table-striped\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cthead\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cth\u003eCourse\u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cth\u003eOptions\u003c/th\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/thead\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctbody\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr *ngFor\u003d\"let course of instructorCourses\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e[{{ course.courseId }}] {{ course.courseName }}\u003c/td\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-sm btn-danger\" (click)\u003d\"removeInstructorFromCourse(course.courseId)\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-trash-alt\"\u003e\u003c/i\u003e Remove From Course"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/td\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tbody\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"!accountInfo.isInstructor\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e This account is not an instructor."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"accountInfo.isInstructor \u0026\u0026 !instructorCourses.length\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e No instructor courses found for this account."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch3 style\u003d\"margin-top: 20px; margin-bottom: 30px;\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  Student For {{ studentCourses.length }} Courses"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/h3\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light\" *ngIf\u003d\"studentCourses.length\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable class\u003d\"table table-striped\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cthead\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cth\u003eCourse\u003c/th\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cth\u003eOptions\u003c/th\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/thead\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctbody\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr *ngFor\u003d\"let course of studentCourses\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e[{{ course.courseId }}] {{ course.courseName }}\u003c/td\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-sm btn-danger\" (click)\u003d\"removeStudentFromCourse(course.courseId)\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-trash-alt\"\u003e\u003c/i\u003e Remove From Course"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/td\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tbody\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"!studentCourses.length\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e No student courses found for this account."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 84
    }
  },
  {
    "path": "src/web/app/pages-help/instructor-help-page/instructor-help-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Sections } from \u0027./sections\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor help page."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-help-page\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-help-page.component.html\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-help-page.component.scss\u0027],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export class InstructorHelpPageComponent implements OnInit, AfterViewInit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  Sections: typeof Sections \u003d Sections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly supportEmail: string \u003d environment.supportEmail;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  searchTerm: String \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  key: String \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(\u0027helpPage\u0027) bodyRef ?: ElementRef;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  constructor(private route: ActivatedRoute) { }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  ngAfterViewInit(): void {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.route.fragment.subscribe((f: string) \u003d\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      this.scroll(f);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Filters the help contents and displays only those that matches the filter."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  search(): void {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.searchTerm !\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      this.key \u003d this.searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      this.clear();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * Scrolls to the section passed in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  scroll(section: string): void {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.bodyRef) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      const el: any \u003d Array.prototype.slice"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          .call(this.bodyRef.nativeElement.childNodes).find((x: any) \u003d\u003e x.id \u003d\u003d\u003d section);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      if (el) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        el.scrollIntoView();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        window.scrollBy(0, -50);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clears the filter used for search."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  clear(): void {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    this.searchTerm \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    this.key \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 10,
      "-": 56
    }
  },
  {
    "path": "src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinState } from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Gender } from \u0027../../../../types/gender\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { SearchStudentsTable } from \u0027../../../pages-instructor/instructor-search-page/instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentAttributes } from \u0027../../../pages-instructor/student-profile/student-attributes\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfile } from \u0027../../../pages-instructor/student-profile/student-profile\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorHelpSectionComponent } from \u0027../instructor-help-section.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Students Section of the Instructor Help Page."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-help-students-section\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-help-students-section.component.html\u0027,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-help-students-section.component.scss\u0027],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorHelpStudentsSectionComponent extends InstructorHelpSectionComponent implements OnInit {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly supportEmail: string \u003d environment.supportEmail;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleStudentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027Alice\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027National University of Singapore\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027American\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.FEMALE,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027Hi I am Alice Betsy! I am from Colorado, America. I am a programming and gaming enthusiast. \u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      + \u0027Aspiring to become a Software Architect in a well reputed organization.\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    pictureKey: \u0027\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleStudentAttributes: StudentAttributes \u003d {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    course: \u0027test.exa-demo\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027Betsy\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027Alice is a transfer student.\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    section: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleSingleStudentResultTables: SearchStudentsTable[] \u003d [{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027Course name appears here\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    sections: [{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      students: [{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        status: JoinState.JOINED,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      }],"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleMultipleStudentResultTables: SearchStudentsTable[] \u003d [{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027Course name appears here\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    sections: ["
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Jean Grey\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027jean@email.com\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section B\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Oliver Gates\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027oliver@email.com\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team B\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Thora Parker\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027thora@email.com\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team B\u0027,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section C\u0027,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Jack Wayne\u0027,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027jack@email.com\u0027,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team C\u0027,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  }];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 8,
      "-": 110
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, ContentChild, ElementRef, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { HotTableRegisterer } from \u0027@handsontable/angular\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import Handsontable from \u0027handsontable\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { HasResponses, JoinState, Student, Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentEnrollRequest, StudentsEnrollRequest } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessage } from \u0027../../components/status-message/status-message\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { EnrollStatus } from \u0027./enroll-status\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentAttributes {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  course: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  lastName: string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  comments: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  team: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  section: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "interface EnrollResultPanel {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  status: EnrollStatus;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  messageForEnrollmentStatus: string;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  studentList: Student[];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentListResults {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  enrolledStudents: StudentAttributes[];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course enroll page."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-enroll-page\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-enroll-page.component.html\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-enroll-page.component.scss\u0027],"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseEnrollPageComponent implements OnInit {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  EnrollStatus: typeof EnrollStatus \u003d EnrollStatus;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  courseid: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  coursePresent?: boolean;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  showEnrollResults?: boolean \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  statusMessage: StatusMessage[] \u003d [];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(\u0027moreInfo\u0027) moreInfo?: ElementRef;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  @ContentChild(\u0027pasteModalBox\u0027) pasteModalBox?: NgbModal;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isNewStudentsPanelCollapsed: boolean \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isExistingStudentsPanelCollapsed: boolean \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  colHeaders: string[] \u003d [\u0027Section\u0027, \u0027Team\u0027, \u0027Name\u0027, \u0027Email\u0027, \u0027Comments\u0027];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  contextMenuOptions: String[] | Object[] \u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    [\u0027row_above\u0027,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027row_below\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027remove_row\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027undo\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027redo\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        key: \u0027paste\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Paste\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        callback: this.pasteClick,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027make_read_only\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027alignment\u0027];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  hotRegisterer: HotTableRegisterer \u003d new HotTableRegisterer();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  newStudentsHOT: string \u003d \u0027newStudentsHOT\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  enrollResultPanelList?: EnrollResultPanel[];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  existingStudents: Student[] \u003d [];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  existingStudentsHOT: string \u003d \u0027existingStudentsHOT\u0027;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  isExistingStudentsPresent: boolean \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  loading: boolean \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal) { }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getCourseEnrollPageData(queryParams.courseid);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits enroll data"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  submitEnrollData(): void {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    const newStudentsHOTInstance: Handsontable \u003d"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hotRegisterer.getInstance(this.newStudentsHOT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    const hotInstanceColHeaders: string[] \u003d (newStudentsHOTInstance.getColHeader() as string[]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentsEnrollRequest: StudentsEnrollRequest \u003d {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      studentEnrollRequests: [],"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    // Parse the user input to be requests."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    // Handsontable contains null value initially,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // see https://github.com/handsontable/handsontable/issues/3927"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    newStudentsHOTInstance.getData()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        .filter((row: string[]) \u003d\u003e (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null || cell \u003d\u003d\u003d \u0027\u0027)))"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        .forEach((row: string[]) \u003d\u003e (studentsEnrollRequest.studentEnrollRequests.push({"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "          section: row[hotInstanceColHeaders.indexOf(this.colHeaders[0])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[0])],"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          team: row[hotInstanceColHeaders.indexOf(this.colHeaders[1])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[1])],"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "          name: row[hotInstanceColHeaders.indexOf(this.colHeaders[2])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[2])],"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          email: row[hotInstanceColHeaders.indexOf(this.colHeaders[3])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[3])],"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          comments: row[hotInstanceColHeaders.indexOf(this.colHeaders[4])] \u003d\u003d\u003d null ?"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[4])],"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.enrollStudents(this.courseid, studentsEnrollRequest).subscribe((resp: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      const enrolledStudents: Student[] \u003d resp.students;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      this.showEnrollResults \u003d true;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessage.pop(); // removes any existing error status message"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027Enrollment successful. Summary given below.\u0027);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.enrollResultPanelList \u003d"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          this.populateEnrollResultPanelList(this.existingStudents, enrolledStudents,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "              studentsEnrollRequest.studentEnrollRequests);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessage.pop(); // removes any existing error status message"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(this.courseid).subscribe((resp: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      this.existingStudents \u003d resp.students;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Pengyuz"
        },
        "content": "    this.isExistingStudentsPresent \u003d true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  private populateEnrollResultPanelList(existingStudents: Student[], enrolledStudents: Student[],"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                                         enrollRequests: StudentEnrollRequest[]): EnrollResultPanel[] {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    const panels: EnrollResultPanel[] \u003d [];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentLists: Student[][] \u003d [];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const _ of Object.values(EnrollStatus).filter((value: EnrollStatus) \u003d\u003e typeof value \u003d\u003d\u003d \u0027string\u0027)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      studentLists.push([]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identify students not in the enroll list."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const existingStudent of existingStudents) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.email \u003d\u003d\u003d existingStudent.email;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      if (enrolledStudent \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.UNMODIFIED].push(existingStudent);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identify new students, modified students, and students that are modified without any changes."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const enrolledStudent of enrolledStudents) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      const unchangedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isSameEnrollInformation(student, enrolledStudent);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      const modifiedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.email \u003d\u003d\u003d enrolledStudent.email;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      if (unchangedStudent !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.MODIFIED_UNCHANGED].push(enrolledStudent);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.MODIFIED].push(enrolledStudent);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.NEW].push(enrolledStudent);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    // Identify students that failed to enroll."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const request of enrollRequests) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        return student.email \u003d\u003d\u003d request.email;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      if (enrolledStudent \u003d\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        studentLists[EnrollStatus.ERROR].push({"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "          email: request.email,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          courseId: this.courseid,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "          name: request.name,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionName: request.section,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "          teamName: request.team,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "          comments: request.comments,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "          joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "          lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    const statusMessage: { [key: number]: string } \u003d {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      0: `${studentLists[EnrollStatus.NEW].length} student(s) added:`,"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      1: `${studentLists[EnrollStatus.MODIFIED].length} student(s) modified:`,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      2: `${studentLists[EnrollStatus.MODIFIED_UNCHANGED].length} student(s) updated with no changes:`,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      3: `${studentLists[EnrollStatus.ERROR].length} student(s) failed to be enrolled:`,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      4: `${studentLists[EnrollStatus.UNMODIFIED].length} student(s) remain unmodified:`,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    for (const status of Object.values(EnrollStatus).filter((value: EnrollStatus) \u003d\u003e typeof value \u003d\u003d\u003d \u0027string\u0027)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "      panels.push({"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        status: EnrollStatus[status as keyof typeof EnrollStatus],"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        messageForEnrollmentStatus: statusMessage[EnrollStatus[status as keyof typeof EnrollStatus]],"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        studentList: studentLists[EnrollStatus[status as keyof typeof EnrollStatus]],"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    if (studentLists[EnrollStatus.ERROR].length \u003e 0) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      const generalEnrollErrorMessage: string \u003d \u0027You may check that: \u0027 +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Section\" and \"Comment\" are optional while \"Team\", \"Name\", and \"Email\" must be filled. \u0027 +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Section\", \"Team\", \"Name\", and \"Comment\" should start with an alphabetical character, \u0027 +"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027unless wrapped by curly brackets \"{}\", and should not contain vertical bar \"|\" and percentage sign\"%\". \u0027 +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Email\" should contain some text followed by one \\\u0027@\\\u0027 sign followed by some more text. \u0027 +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027\"Team\" should not have same format of email to avoid mis-interpretation. \u0027;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Some students failed to be enrolled, see the summary below."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "       ${generalEnrollErrorMessage}`);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    return panels;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  private isSameEnrollInformation(enrolledStudent: Student, existingStudent: Student): boolean {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    return enrolledStudent.email \u003d\u003d\u003d existingStudent.email"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.name \u003d\u003d\u003d existingStudent.name"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.teamName \u003d\u003d\u003d existingStudent.teamName"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.sectionName \u003d\u003d\u003d existingStudent.sectionName"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 enrolledStudent.comments \u003d\u003d\u003d existingStudent.comments;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "   * Adds new rows to the \u0027New students\u0027 spreadsheet interface"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "   * according to user input"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "  addRows(numOfRows: number): void {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    this.hotRegisterer.getInstance(this.newStudentsHOT).alter("
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027insert_row\u0027, [], numOfRows);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles the view of \u0027New Students\u0027 spreadsheet interface"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "   * and/or its affiliated buttons"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleNewStudentsPanel(): void {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isNewStudentsPanelCollapsed \u003d !this.isNewStudentsPanelCollapsed;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns the length of the current spreadsheet."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "   * Rows with all null values are filtered."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "  getSpreadsheetLength(dataHandsontable: string[][]): number {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    return dataHandsontable"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        .filter((row: string[]) \u003d\u003e (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null)))"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        .length;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "   * Transforms the first uppercase letter of a string into a lowercase letter."
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "  unCapitalizeFirstLetter(targetString: string): string {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    return targetString.charAt(0).toLowerCase() + targetString.slice(1);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts returned student list to a suitable format required by Handsontable."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  studentListDataToHandsontableData(studentsData: StudentAttributes[], handsontableColHeader: any[]): string[][] {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    const headers: string[] \u003d handsontableColHeader.map(this.unCapitalizeFirstLetter);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    return studentsData.map((student: StudentAttributes) \u003d\u003e (headers.map("
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        (header: string) \u003d\u003e (student as any)[header])));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads existing student data into the spreadsheet interface."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  loadExistingStudentsData(existingStudentsHOTInstance: Handsontable, studentsData: StudentAttributes[]): void {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    existingStudentsHOTInstance.loadData(this.studentListDataToHandsontableData("
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsData, (existingStudentsHOTInstance.getColHeader() as any[])));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles the view of \u0027Existing Students\u0027 spreadsheet interface"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleExistingStudentsPanel(): void {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    // Has to be done before the API call is made so that HOT is available for data population"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d true;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    const existingStudentsHOTInstance: Handsontable \u003d"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hotRegisterer.getInstance(this.existingStudentsHOT);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calling REST API only the first time when spreadsheet has no data"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.getSpreadsheetLength(existingStudentsHOTInstance.getData()) !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loading \u003d false;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseid,"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "      user: this.user,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/course/enroll/students\u0027, paramMap).subscribe("
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        (resp: StudentListResults) \u003d\u003e {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "          if (resp.enrolledStudents.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadExistingStudentsData(existingStudentsHOTInstance, resp.enrolledStudents);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            // Shows a message if there are no existing students. Panel would not be expanded."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isExistingStudentsPresent \u003d false;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d false;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "   * Trigger click button"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "  pasteClick(): void {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "    const element: HTMLElement \u003d"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        (document.getElementById(\u0027paste\u0027) as HTMLElement);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    element.click();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows modal box when user clicks on the \u0027paste\u0027 option in the"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handsontable context menu"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "  showPasteModalBox(pasteModalBox: any): void {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(pasteModalBox);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "   * Reset page to default view"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "  hideEnrollResults(): void {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    this.showEnrollResults \u003d false;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    this.statusMessage.pop();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    window.scroll(0, 0);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks whether the course is present"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseEnrollPageData(courseid: string): void {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.hasResponsesForCourse(courseid).subscribe((resp: HasResponses) \u003d\u003e {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "      this.coursePresent \u003d true;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseid \u003d courseid;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "      if (resp.hasResponses) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showWarningMessage(\u0027There are existing feedback responses for this course. \u0027"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027Modifying records of enrolled students will result in some existing responses \u0027"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027from those modified students to be deleted. You may wish to download the data \u0027"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027before you make the changes.\u0027);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "      this.coursePresent \u003d false;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseid).subscribe((resp: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "      this.existingStudents \u003d resp.students;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows user more information about the spreadsheet interfaces"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "  navigateToMoreInfo(): void {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "    (this.moreInfo as ElementRef)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        .nativeElement.scrollIntoView({ behavior: \u0027auto\u0027, block: \u0027start\u0027 });"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Pengyuz": 1,
      "-": 387
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-add-course-form (courseAdded)\u003d\"loadInstructorCourses()\"\u003e\u003c/tm-add-course-form\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch2\u003eActive Courses\u003c/h2\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctable class\u003d\"table table-striped table-bordered margin-0\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cthead\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr class\u003d\"bg-primary text-white\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_ID)\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            Course ID"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.COURSE_ID\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_NAME)\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            Course Name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.COURSE_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.CREATION_DATE)\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            Creation Date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.CREATION_DATE\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.CREATION_DATE \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.CREATION_DATE \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eSections\u003c/th\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTeams\u003c/th\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTotal Students\u003c/th\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTotal Unregistered\u003c/th\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/thead\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctbody\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr *ngFor\u003d\"let course of activeCourses\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.id}}\u003c/td\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.name}}\u003c/td\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.createdAt | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {{course.createdAt | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.id)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.id].sections }}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.id)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.id].teams }}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.id)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.id].students }}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.id)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.id]\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.id].unregistered }}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyStudent\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Enroll student into the course\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/enroll\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.id}\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "              Enroll"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyStudent\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "              Enroll"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"View, edit and send invitation emails to the students in the course\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/details\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.id}\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "              View"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Edit Course information and instructor list\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/edit\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.id}\"\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "              Edit"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.id, true)\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                access it from the \u0027Courses\u0027 tab)\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "              Archive"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.id)\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr *ngIf\u003d\"!activeCourses.length\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/table\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"!activeCourses.length\"\u003eNo records found.\u003c/p\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\" *ngIf\u003d\"archivedCourses.length\"\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"fa fa-file-archive\"\u003e\u003c/span\u003e Archived Courses"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/h2\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctable class\u003d\"table table-striped table-bordered margin-0\"\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cthead\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr class\u003d\"bg-info text-white\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCourse ID\u003c/th\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCourse Name\u003c/th\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCreation Date\u003c/th\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/thead\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctbody\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr *ngFor\u003d\"let course of archivedCourses\"\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.id}}\u003c/td\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.name}}\u003c/td\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd container\u003d\"body\" ngbTooltip\u003d\"{{course.createdAt | date:\u0027EEE, dd MMM yyyy, h:mma\u0027}}\"\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            {{course.createdAt | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.id, false)\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "              Unarchive"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.id)\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/table\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row course-section margin-top-30px\" *ngIf\u003d\"softDeletedCourses.length\"\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan class\u003d\"fa fa-trash-alt\"\u003e\u003c/span\u003e Deleted Courses"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h2\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header bg-secondary recycle-bin-header\" (click)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-white\"\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cb\u003eRecycle Bin\u003c/b\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-right bin-header-button\"\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"canRestoreAll\" (click)\u003d\"$event.stopPropagation(); onRestoreAll()\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                    ngbTooltip\u003d\"Restore all deleted courses and their corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!canRestoreAll\"\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm text-danger\" *ngIf\u003d\"canDeleteAll\" (click)\u003d\"$event.stopPropagation(); onDeleteAll()\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                    ngbTooltip\u003d\"Permanently delete all courses and their corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled text-danger\" *ngIf\u003d\"!canDeleteAll\"\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down text-white\" *ngIf\u003d\"!isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up text-white\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-body recycle-bin-body\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctable class\u003d\"table table-responsive-lg table-striped table-bordered recycle-bin-table\"\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cthead\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr class\u003d\"background-color-medium-gray text-color-gray\"\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCourse ID\u003c/th\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCourse Name\u003c/th\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCreation Date\u003c/th\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eDeletion Date\u003c/th\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/thead\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctbody\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngFor\u003d\"let course of softDeletedCourses\"\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{course.id}}\u003c/td\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{course.name}}\u003c/td\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.createdAt | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                {{course.createdAt | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.deletedAt | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                {{course.deletedAt | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click)\u003d\"onRestore(course.id)\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Restore the deleted course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                  Restore"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                  Restore"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" style\u003d\"color: red\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click)\u003d\"onDeletePermanently(course.id)\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Permanently delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                  Delete Permanently"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                        style\u003d\"color: red\"\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                  Delete Permanently"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tbody\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/table\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 18,
      "-": 233
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ".sortable-header {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  cursor: pointer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ".course-section {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-top: 2em;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ".bold-label {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  font-weight: 700 !important;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ".recycle-bin-body {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  padding: 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ".margin-left-10px {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-left: 10px;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ".background-color-medium-gray {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  background-color: #E5E5E6;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ".text-color-black {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  color: #000;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ".text-color-gray {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  color: gray;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ".text-color-red {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  color: red;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ".link-disabled {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  cursor: default;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  color: #000;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  pointer-events: none;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ".recycle-bin-table {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-bottom: 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ".margin-top-30px {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-top: 30px;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ".bin-header-button button {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  margin-right: .6em;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ".actions-cell button {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  margin: 2px;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 2,
      "-": 55
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { Course, CourseArchive, JoinState, MessageOutput, Student, Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  CoursePermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./course-permanent-deletion-confirm-modal/course-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseSoftDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./course-soft-deletion-confirm-modal/course-soft-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "interface ActiveCourse {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  createdAt: string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyCourse: boolean;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyStudent: boolean;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "interface ArchivedCourse {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  createdAt: string;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyCourse: boolean;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "interface SoftDeletedCourse {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  createdAt: string;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  deletedAt: string;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyCourse: boolean;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "interface InstructorPrivileges {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  courseLevel: { [key: string]: boolean };"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "interface Instructor {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  privileges: InstructorPrivileges;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "interface InstructorCourses {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  activeCourses: ActiveCourse[];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  archivedCourses: ArchivedCourse[];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  softDeletedCourses: SoftDeletedCourse[];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorList: Instructor[];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "/**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * Sort criteria for the courses table."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "export enum SortBy {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Nothing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  NONE,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Course ID."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  COURSE_ID,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Course Name."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  COURSE_NAME,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Creation Date."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  CREATION_DATE,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "/**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * Sort order for the courses table."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "export enum SortOrder {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Descending sort order."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  DESC,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Ascending sort order"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  ASC,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor courses list page."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-courses-page\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-courses-page.component.html\u0027,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-courses-page.component.scss\u0027],"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCoursesPageComponent implements OnInit {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  activeCourses: ActiveCourse[] \u003d [];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  archivedCourses: ArchivedCourse[] \u003d [];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  softDeletedCourses: SoftDeletedCourse[] \u003d [];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorList: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  courseStats: { [key: string]: { [key: string]: number } } \u003d {};"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  tableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  tableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  isRecycleBinExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  canDeleteAll: boolean \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  canRestoreAll: boolean \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal) { }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads instructor courses required for this page."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  loadInstructorCourses(): void {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      user: this.user,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/courses\u0027, paramMap).subscribe((resp: InstructorCourses) \u003d\u003e {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeCourses \u003d resp.activeCourses;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      this.archivedCourses \u003d resp.archivedCourses;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      this.softDeletedCourses \u003d resp.softDeletedCourses;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      this.instructorList \u003d resp.instructorList;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of this.activeCourses) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const instructor of this.instructorList) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "          if (course.id \u003d\u003d\u003d instructor.courseId) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            course.canModifyCourse \u003d instructor.privileges.courseLevel.canmodifycourse;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            course.canModifyStudent \u003d instructor.privileges.courseLevel.canmodifystudent;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of this.archivedCourses) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const instructor of this.instructorList) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "          if (course.id \u003d\u003d\u003d instructor.courseId) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            course.canModifyCourse \u003d instructor.privileges.courseLevel.canmodifycourse;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of this.softDeletedCourses) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        for (const instructor of this.instructorList) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "          if (course.id \u003d\u003d\u003d instructor.courseId) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            course.canModifyCourse \u003d instructor.privileges.courseLevel.canmodifycourse;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!course.canModifyCourse) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "              this.canDeleteAll \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "              this.canRestoreAll \u003d false;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs the url for course stats from the given course id."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseStats(courseId: string): void {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseId).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseStats[courseId] \u003d {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        sections: (new Set(students.students.map((value: Student) \u003d\u003e value.sectionName))).size,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        teams: (new Set(students.students.map((value: Student) \u003d\u003e value.teamName))).size,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        students: students.students.length,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        unregistered: students.students.filter((value: Student) \u003d\u003e value.joinState \u003d\u003d\u003d JoinState.NOT_JOINED)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "          .length,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "   * Changes the status of an archived course."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  changeArchiveStatus(courseId: string, toArchive: boolean): void {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.changeArchiveStatus(courseId, {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      archiveStatus: toArchive,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      if (courseArchive.isArchived) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(`The course ${courseId} has been archived."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          It will not appear on the home page anymore.`);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027The course has been unarchived.\u0027);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves an active/archived course to Recycle Bin."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  onDelete(courseId: string): void {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CourseSoftDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadInstructorCourses();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "   * Permanently deletes a soft-deleted course in Recycle Bin."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "  onDeletePermanently(courseId: string): void {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CoursePermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService.deleteCourse(courseId).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadInstructorCourses();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(`The course ${courseId} has been permanently deleted.`);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores a soft-deleted course from Recycle Bin."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "  onRestore(courseId: string): void {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      user: this.user,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/bin/course\u0027, paramMap).subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "   * Permanently deletes all soft-deleted courses in Recycle Bin."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "  onDeleteAll(): void {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CoursePermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.isDeleteAll \u003d true;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      const deleteRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "      this.softDeletedCourses.forEach((courseToDelete: SoftDeletedCourse) \u003d\u003e {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteRequests.push(this.courseService.deleteCourse(courseToDelete.id));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin(deleteRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadInstructorCourses();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027All courses have been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores all soft-deleted courses from Recycle Bin."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "  onRestoreAll(): void {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    const restoreRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    this.softDeletedCourses.forEach((courseToRestore: SoftDeletedCourse) \u003d\u003e {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "      restoreRequests.push(this.courseService.restoreCourse(courseToRestore.id));"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(restoreRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027All courses have been restored.\u0027);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Sorts the courses table"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  sortCoursesEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this.tableSortBy \u003d by;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this.tableSortOrder \u003d"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this.activeCourses.sort(this.sortBy(by));"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Returns a function to determine the order of sort"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  sortBy(by: SortBy):"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      ((a: ActiveCourse , b: ActiveCourse) \u003d\u003e number) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    return (a: ActiveCourse, b: ActiveCourse): number \u003d\u003e {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.id ? a.id : \u0027\u0027;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.id ? b.id : \u0027\u0027;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.COURSE_NAME:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.name;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.name;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.CREATION_DATE:"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.createdAt;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.createdAt;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.ASC) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return strB.localeCompare(strA);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    };"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 92,
      "-": 285
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1\u003eHome\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light mb-4\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"text\" class\u003d\"form-control\" [(ngModel)]\u003d\"studentSearchkey\" (keyup.enter)\u003d\"search()\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "               placeholder\u003d\"e.g. Charles Shultz, charles@gmail.com\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"input-group-append\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"search()\"\u003eSearch\u003c/button\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-template #noCourseMessage class\u003d\"bg-light-blue\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  New to TEAMMATES? You may wish to have a look at our \u003ca routerLink\u003d\"/web/front/help/instructor\"\u003eGetting Started Guide\u003c/a\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  A video tour is also available in our \u003ca routerLink\u003d\"/web\"\u003ehome page\u003c/a\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-template\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row height-60px\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-4\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ca routerLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-primary text-white\"\u003eAdd New Course\u003c/a\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"float-right\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch5 class\u003d\"d-inline\"\u003e\u003cstrong\u003e Sort By: \u003c/strong\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0; else noCourseMessage\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card margin-bottom-15px\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-header bg-primary text-white course-tab-header\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(courseTabModel);\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cb\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"float-right\" *ngIf\u003d\"courseTabModel.isAjaxSuccess; else errorLoadingFeedbackSessions\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                     ngbTooltip\u003d\"Enroll student into the course\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                     routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"View, edit and send invitation emails to the students in the course\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu \u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Edit course information and instructor list\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Add a feedback session for the course\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/sessions\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                   (click)\u003d\"openModal(courseArchiveModal); $event.stopPropagation()\"\u003e Archive"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Edit course information and instructor list\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                     (click)\u003d\"openModal(courseDeleteModal); $event.stopPropagation()\"\u003e Delete"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down\" *ngIf\u003d\"!courseTabModel.isTabExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up\" *ngIf\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #errorLoadingFeedbackSessions\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      Error loading feedback sessions. Click here to retry."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #courseDeleteModal let-modal\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Confirm moving course to Recycle Bin \u003c/h5\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        Are you sure you want to delete the course: {{courseTabModel.course.courseId}}?"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        This action can be reverted by going to the \"Courses\" tab and restoring the desired course(s)."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"deleteCourse(courseTabModel.course.courseId); modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #courseArchiveModal let-modal\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-header bg-info\"\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Confirm archiving course \u003c/h5\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        Are you sure you want to archive {{courseTabModel.course.courseId}}?"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        This action can be reverted by going to the \"Courses\" tab and unarchiving the desired course(s)."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"archiveCourse(courseTabModel.course.courseId); modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctm-sessions-table"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\" (editSessionEvent)\u003d\"editSessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToStudentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          (sendRemindersToStudentsEvent)\u003d\"sendRemindersToStudentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 4,
      "crizyli": 2,
      "-": 150
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  CopySessionResult,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseTabModel {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorPrivilege: InstructorPrivilege;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModels: SessionsTableRowModel[];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortBy: SortBy;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortOrder: SortOrder;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  hasPopulated: boolean;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  isTabExpanded: boolean;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor home page."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-home-page\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-home-page.component.html\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-home-page.component.scss\u0027],"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export class InstructorHomePageComponent extends InstructorSessionModalPageComponent implements OnInit {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  private static readonly coursesToLoad: number \u003d 3;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  studentSearchkey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorCoursesSortBy: SortBy \u003d SortBy.COURSE_CREATION_DATE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  // data"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  courseTabModels: CourseTabModel[] \u003d [];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              modalService: NgbModal,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              studentService: StudentService,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    super(router, httpRequestService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, modalService, studentService);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    // need timezone data for moment()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourses();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a list of courses belong to current user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  get courseCandidates(): Course[] {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.courseTabModels.map((m: CourseTabModel) \u003d\u003e m.course);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles click events on the course tab model."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  handleClick(event: Event, courseTabModel: CourseTabModel): boolean {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.target \u0026\u0026"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        !(event.target as HTMLElement).className.includes(\u0027dropdown-toggle\u0027)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      return !courseTabModel.isTabExpanded;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    return courseTabModel.isTabExpanded;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirect to the search page and query the search"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  search(): void {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigate([\u0027web/instructor/search\u0027], {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      queryParams: { studentSearchkey: this.studentSearchkey },"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the modal for different buttons and link."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * Archives the entire course from the instructor"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  archiveCourse(courseId: string): void {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.put(\u0027/course\u0027, { courseid: courseId, archive: \u0027true\u0027 })"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadCourses();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the entire course from the instructor"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(courseId: string): void {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourses();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses of current instructor."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourses(): void {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseTabModels \u003d [];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/courses\u0027, {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      courses.courses.forEach((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        const model: CourseTabModel \u003d {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          course,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "          instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "          sessionsTableRowModels: [],"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "          isTabExpanded: false,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "          isAjaxSuccess: true,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "          hasPopulated: false,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          sessionsTableRowModelsSortBy: SortBy.NONE,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          sessionsTableRowModelsSortOrder: SortOrder.ASC,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseTabModels.push(model);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateCourseInstructorPrivilege(model);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortCoursesBy(this.instructorCoursesSortBy);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the instructor privilege in {@code CourseTabModel}."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  updateCourseInstructorPrivilege(model: CourseTabModel): void {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: model.course.courseId,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      model.instructorPrivilege \u003d instructorPrivilege;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback session in the course."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSessions(model: CourseTabModel): void {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!model.hasPopulated) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionsService.getFeedbackSessionsForInstructor(model.course.courseId)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "              const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSession,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "              };"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "              model.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "              this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            model.hasPopulated \u003d true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!model.isAjaxSuccess) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "              model.isAjaxSuccess \u003d true;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            model.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks the option selected to sort courses."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  isSelectedForSorting(by: SortBy): boolean {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.instructorCoursesSortBy \u003d\u003d\u003d by;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the courses according to selected option."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  sortCoursesBy(by: SortBy): void {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    this.instructorCoursesSortBy \u003d by;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.courseTabModels.length \u003e 1) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseTabModels.sort(this.sortPanelsBy(by));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadLatestCourses();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads and expand the latest number of courses."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  loadLatestCourses(): void {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 0; i \u003c this.courseTabModels.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      if (i \u003e\u003d InstructorHomePageComponent.coursesToLoad) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseTabModels[i].isTabExpanded \u003d true;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSessions(this.courseTabModels[i]);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the panels of courses in order."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "  sortPanelsBy(by: SortBy):"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      ((a: { course: Course }, b: { course: Course }) \u003d\u003e number) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    return ((a: { course: Course }, b: { course: Course }): number \u003d\u003e {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_NAME:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseName;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseName;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseId;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseId;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_CREATION_DATE:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.creationDate;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.creationDate;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session row."
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModelsEvent(tabIndex: number, by: SortBy): void {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    const tab: CourseTabModel \u003d this.courseTabModels[tabIndex];"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        tab.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModels.sort(this.sortModelsBy(by, tab.sessionsTableRowModelsSortOrder));"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads response rate of a feedback session."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRateEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadResponseRate(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "  editSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves the feedback session to the recycle bin."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBinEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.put(\u0027/bin/session\u0027, paramMap)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseTabModels[tabIndex].sessionsTableRowModels.splice("
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "              this.courseTabModels[tabIndex].sessionsTableRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "              \"The feedback session has been deleted. You can restore it from the \u0027Sessions\u0027 tab.\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "  copySessionEventHandler(tabIndex: number, result: CopySessionResult): void {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copySession(this.courseTabModels[tabIndex].sessionsTableRowModels[result.sessionToCopyRowIndex], result);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the feedback session as instructor."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructorEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitSessionAsInstructor(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "   * Views the result of a feedback session."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResultEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    this.viewSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    this.publishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    this.unpublishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 6,
      "-": 356
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinState } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSearchPageComponent, SearchStudentsTable } from \u0027./instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-instructor-search-bar\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "class InstructorSearchBarStubComponent {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() searchKey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-result-table\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentResultTableStubComponent {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentTables: SearchStudentsTable[] \u003d [];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorSearchPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorSearchPageComponent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorSearchPageComponent\u003e;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorSearchPageComponent,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorSearchBarStubComponent,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentResultTableStubComponent,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorSearchPageComponent);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with a search key\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    component.searchKey \u003d \u0027TEST\u0027;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with a student table\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    component.studentTables \u003d ["
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        courseId: \u0027test.tes-demo\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        sections: ["
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            sectionName: \u0027Tutorial Group 1\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            students: ["
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                email: \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                status: JoinState.JOINED,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                name: \u0027Benny Charles\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                email: \u0027benny.c.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                status: JoinState.JOINED,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "              {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                name: \u0027Danny Engrid\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                email: \u0027danny.e.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                status: JoinState.JOINED,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "              {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                name: \u0027Emma Farrell\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                email: \u0027emma.f.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                status: JoinState.JOINED,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            ],"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 5,
      "-": 96
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-search-page/instructor-search-page.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterModule } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListModule } from \u0027../student-list/student-list.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSearchBarComponent } from \u0027./instructor-search-bar/instructor-search-bar.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSearchPageComponent } from \u0027./instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentResultTableComponent } from \u0027./student-result-table/student-result-table.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for instructor search page."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorSearchPageComponent,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorSearchBarComponent,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    StudentResultTableComponent,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorSearchPageComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    InstructorSearchBarComponent,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    StudentResultTableComponent,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    StudentListModule,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    FormsModule,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    RouterModule,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    NgbModule,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorSearchPageModule { }"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 31
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.EDIT\" [(model)]\u003d\"sessionEditFormModel\" (editExistingSessionEvent)\u003d\"editExistingSessionHandler()\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "                      (deleteExistingSessionEvent)\u003d\"deleteExistingSessionHandler()\" (copyCurrentSessionEvent)\u003d\"copyCurrentSession()\"\u003e\u003c/tm-session-edit-form\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngFor\u003d\"let questionEditFormModel of questionEditFormModels; let i \u003d index; trackBy: trackQuestionEditFormByFn\" class\u003d\"margin-top-30px\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-question-edit-form [formMode]\u003d\"QuestionEditFormMode.EDIT\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                         [numOfQuestions]\u003d\"questionEditFormModels.length\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                         (saveExistingQuestionEvent)\u003d\"saveExistingQuestionHandler(i)\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                         (discardExistingQuestionChangesEvent)\u003d\"discardExistingQuestionHandler(i)\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                         (duplicateCurrentQuestionEvent)\u003d\"duplicateCurrentQuestionHandler(i)\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                         (deleteCurrentQuestionEvent)\u003d\"deleteExistingQuestionHandler(i)\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                         [(formModel)]\u003d\"questionEditFormModels[i]\"\u003e\u003c/tm-question-edit-form\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card\" *ngIf\u003d\"!isAddingQuestionPanelExpanded\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body background-color-light-blue text-center\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv ngbDropdown class\u003d\"d-inline-block\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-primary\" ngbDropdownToggle\u003eAdd New Question\u003c/button\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"dropdown-item\" (click)\u003d\"templateQuestionModalHandler()\"\u003eChoose from template questions\u003c/button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"dropdown-item\" *ngFor\u003d\"let questionType of FeedbackQuestionType | enumToArray\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                (click)\u003d\"populateAndShowNewQuestionForm(questionType)\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          {{ questionType | questionTypeName }}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"questionsHelpHandler()\"\u003e\u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"copyQuestionsFromOtherSessionsHandler()\"\u003eCopy Question\u003c/button\u003e\u0026nbsp;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"doneEditingHandler(pageNotSavedModal)\"\u003eDone Editing\u003c/button\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-question-edit-form *ngIf\u003d\"isAddingQuestionPanelExpanded\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                       [formMode]\u003d\"QuestionEditFormMode.ADD\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                       [numOfQuestions]\u003d\"questionEditFormModels.length + 1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                       (discardNewQuestionEvent)\u003d\"isAddingQuestionPanelExpanded \u003d false\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                       (createNewQuestionEvent)\u003d\"createNewQuestionHandler()\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                       [(formModel)]\u003d\"newQuestionEditFormModel\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e\u003c/tm-question-edit-form\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body background-color-light-blue text-center\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cb\u003ePreview Session:\u003c/b\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\" ngbTooltip\u003d\"View how this session would look like to a student who is submitting feedback. Preview is unavailable if the course has yet to have any student enrolled.\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cselect class\u003d\"form-control preview-select\" [(ngModel)]\u003d\"emailOfStudentToPreview\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003coption *ngFor\u003d\"let student of studentsOfCourse\" [ngValue]\u003d\"student.email\"\u003e[{{ student.teamName }}] {{ student.name }}\u003c/option\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/select\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"emailOfStudentToPreview.length \u003d\u003d\u003d 0\" (click)\u003d\"previewAsStudent()\"\u003ePreview as Student\u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\" ngbTooltip\u003d\"View how this session would look like to an instructor who is submitting feedback. Only instructors with submit privileges are included in the list.\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cselect class\u003d\"form-control preview-select\" [(ngModel)]\u003d\"emailOfInstructorToPreview\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003coption *ngFor\u003d\"let instructor of instructorsCanBePreviewedAs\" [ngValue]\u003d\"instructor.email\"\u003e{{ instructor.name }}\u003c/option\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/select\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"emailOfInstructorToPreview.length \u003d\u003d\u003d 0\" (click)\u003d\"previewAsInstructor()\"\u003ePreview as Instructor\u003c/button\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "\u003cng-template #pageNotSavedModal let-modal\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003ch5 class\u003d\"modal-title text-white\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Unsaved field(s).\u003c/h5\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cp\u003eThere exists unsaved field(s), this operation will cause all the changes to be lost.\u003c/p\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cp\u003eAre you sure you want to continue?\u003c/p\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crizyli"
        },
        "content": "\u003c/ng-template\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 17,
      "-": 60
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatMap, finalize, flatMap, map, switchMap, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService, NewQuestionModel } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { LOCAL_DATE_TIME_FORMAT, TimeResolvingResult, TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestions,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus, FeedbackSessions,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus, FeedbackTextQuestionDetails, HasResponses, Instructor, Instructors,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionVisibleSetting, Student, Students,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormMode,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormModel,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  DateFormat,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormModel,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  TimeFormat,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../Intent\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionToCopyCandidate,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  CopyQuestionsFromOtherSessionsModalComponent,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor feedback session edit page."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-session-edit-page\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  // url param"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  courseName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  // models"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionEditFormModel: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    instructions: \u0027\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    gracePeriod: 0,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    isClosingEmailEnabled: true,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    isPublishedEmailEnabled: true,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: false,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    hasVisibleSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    hasEmailSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  // to get the original question model"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  questionEditFormModels: QuestionEditFormModel[] \u003d [];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  newQuestionEditFormModel: QuestionEditFormModel \u003d {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackQuestionId: \u0027\u0027,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    questionNumber: 0,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    questionBrief: \u0027\u0027,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    questionDescription: \u0027\u0027,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    isQuestionHasResponses: false,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    questionDetails: {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      recommendedLength: 0,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    } as FeedbackTextQuestionDetails,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    giverType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    recipientType: FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    customNumberOfEntitiesToGiveFeedbackTo: 1,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    showResponsesTo: [],"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    showGiverNameTo: [],"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    showRecipientNameTo: [],"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: true,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  isAddingQuestionPanelExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  // all students of the course"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  studentsOfCourse: Student[] \u003d [];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  emailOfStudentToPreview: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  // instructors which can be previewed as"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorsCanBePreviewedAs: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  emailOfInstructorToPreview: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "              httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    super(router, httpRequestService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionName \u003d queryParams.fsname;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSession();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackQuestions();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getAllStudentsOfCourse();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getAllInstructorsCanBePreviewedAs();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads a feedback session."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSession(): void {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    // load the course of the feedback session first"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsInstructor(this.courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseName \u003d course.courseName;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      // load feedback session"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: this.courseId,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      this.httpRequestService.get(\u0027/session\u0027, paramMap)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies the feedback session."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "  copyCurrentSession(): void {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    // load course candidates first"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/courses\u0027, {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      const modalRef: NgbModalRef \u003d this.modalService.open(CopySessionModalComponent);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.courseCandidates \u003d courses.courses;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: this.courseId,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "          fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "          intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/session\u0027, paramMap).pipe("
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            switchMap((feedbackSession: FeedbackSession) \u003d\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                this.copyFeedbackSession(feedbackSession, result.newFeedbackSessionName, result.copyToCourseId)),"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        ).subscribe((createdSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions/edit\u0027"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "              + `?courseid\u003d${createdSession.courseId}\u0026fsname\u003d${createdSession.feedbackSessionName}`,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  getSessionEditFormModel(feedbackSession: FeedbackSession): SessionEditFormModel {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    const submissionStart: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    const submissionEnd: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: feedbackSession.courseId,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: feedbackSession.timeZone,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: this.courseName,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackSessionName: feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      instructions: feedbackSession.instructions,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStartTime: submissionStart.time,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStartDate: submissionStart.date,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionEndTime: submissionEnd.time,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionEndDate: submissionEnd.date,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      gracePeriod: feedbackSession.gracePeriod,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "      customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "      customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      responseVisibleSetting: feedbackSession.responseVisibleSetting,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "      customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      submissionStatus: feedbackSession.submissionStatus,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      publishStatus: feedbackSession.publishStatus,"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      isSaving: false,"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditable: false,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    if (feedbackSession.customSessionVisibleTimestamp) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      const customSessionVisible: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "          this.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customSessionVisibleTime \u003d customSessionVisible.time;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customSessionVisibleDate \u003d customSessionVisible.date;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    if (feedbackSession.customResponseVisibleTimestamp) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "      const customResponseVisible: {date: DateFormat; time: TimeFormat} \u003d"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "          this.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp, feedbackSession.timeZone);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customResponseVisibleTime \u003d customResponseVisible.time;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "      model.customResponseVisibleDate \u003d customResponseVisible.date;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    return model;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get the local date and time of timezone from timestamp."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "  private getDateTimeAtTimezone(timestamp: number, timeZone: string): {date: DateFormat; time: TimeFormat} {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    const momentInstance: any \u003d moment(timestamp).tz(timeZone);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    const date: DateFormat \u003d {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "      year: momentInstance.year(),"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      month: momentInstance.month() + 1, // moment return 0-11 for month"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      day: momentInstance.date(),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    const time: TimeFormat \u003d {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      minute: momentInstance.minute(),"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "      hour: momentInstance.hour(),"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      date,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      time,"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles editing existing session event."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "  editExistingSessionHandler(): void {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin("
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission opening time\u0027),"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission closing time\u0027),"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Session visible time\u0027)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Response visible time\u0027)"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((vals: number[]) \u003d\u003e {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            instructions: this.sessionEditFormModel.instructions,"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionStartTimestamp: vals[0],"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionEndTimestamp: vals[1],"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            gracePeriod: this.sessionEditFormModel.gracePeriod,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            customSessionVisibleTimestamp: vals[2],"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            customResponseVisibleTimestamp: vals[3],"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027The feedback session has been updated.\u0027);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resolves the local date time to an UNIX timestamp."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "  private resolveLocalDateTime("
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "      date: DateFormat, time: TimeFormat, timeZone: string, fieldName: string): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "    const inst: any \u003d moment();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027year\u0027, date.year);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027date\u0027, date.day);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027hour\u0027, time.hour);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027minute\u0027, time.minute);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        tap((result: TimeResolvingResult) \u003d\u003e {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          if (result.message.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showWarningMessage(result.message);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles deleting current feedback session."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteExistingSessionHandler(): void {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid: this.courseId, fsname: this.feedbackSessionName };"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.put(\u0027/bin/session\u0027, paramMap).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "      this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions\u0027,"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads feedback questions."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackQuestions(): void {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/questions\u0027, paramMap)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackQuestions) \u003d\u003e {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            this.questionEditFormModels.push(addedQuestionEditFormModel);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the question edit form by feedback question id."
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see https://angular.io/api/common/NgForOf#properties"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.feedbackQuestionId;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts feedback question to the question edit form model."
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: feedbackQuestion.questionNumber,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: feedbackQuestion.questionBrief,"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: feedbackQuestion.questionDescription,"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "      isQuestionHasResponses: false, // TODO use API to determine"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: feedbackQuestion.questionType,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: feedbackQuestion.giverType,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: feedbackQuestion.recipientType,"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: feedbackQuestion.showResponsesTo,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: feedbackQuestion.showGiverNameTo,"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditable: false,"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "      isSaving: false,"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the isQuestionHasResponses value for a question edit for model."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: HasResponses) \u003d\u003e {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        model.isQuestionHasResponses \u003d resp.hasResponses;"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the existing question."
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "  saveExistingQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "    const originalQuestionNumber: number \u003d"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    questionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: questionEditFormModel.questionNumber,"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: questionEditFormModel.questionBrief,"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: questionEditFormModel.questionDescription,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: questionEditFormModel.questionDetails,"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: questionEditFormModel.questionType,"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: questionEditFormModel.giverType,"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: questionEditFormModel.recipientType,"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: questionEditFormModel.showResponsesTo,"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: questionEditFormModel.showGiverNameTo,"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "              questionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((updatedQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "          // shift question if needed"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "          if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "            // move question form"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "            this.moveQuestionForm("
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "            this.normalizeQuestionNumberInQuestionForms();"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The changes to the question have been updated.\u0027);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves question edit form from the original position to the new position."
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "  private moveQuestionForm(originalPosition: number, newPosition: number): void {"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    this.questionEditFormModels.splice(newPosition, 0,"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionEditFormModels.splice(originalPosition, 1)[0]);"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "  private normalizeQuestionNumberInQuestionForms(): void {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "      questionEditFormModel.questionNumber \u003d i;"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "      // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "   * Discards the changes made to the existing question."
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "  discardExistingQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "    const feedbackQuestion: FeedbackQuestion \u003d"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        // tslint:disable-next-line:no-non-null-assertion"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "   * Duplicates the question."
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "  duplicateCurrentQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "    questionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: questionEditFormModel.questionBrief,"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: questionEditFormModel.questionDescription,"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: questionEditFormModel.questionDetails,"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: questionEditFormModel.questionType,"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: questionEditFormModel.giverType,"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: questionEditFormModel.recipientType,"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: questionEditFormModel.showResponsesTo,"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: questionEditFormModel.showGiverNameTo,"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "              questionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been duplicated below.\u0027);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the existing question."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteExistingQuestionHandler(index: number): void {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { questionid: questionEditFormModel.feedbackQuestionId };"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/question\u0027, paramMap).subscribe("
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        () \u003d\u003e {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "          // remove form model"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.splice(index, 1);"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "          this.normalizeQuestionNumberInQuestionForms();"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been deleted.\u0027);"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles display of template question modal."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "  templateQuestionModalHandler(): void {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "    this.modalService.open(TemplateQuestionModalComponent).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "      of(...questions).pipe("
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "          concatMap((question: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            questionNumber +\u003d 1;"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "              questionNumber,"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "              questionBrief: question.questionBrief,"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDescription: question.questionDescription,"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDetails: question.questionDetails,"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "              questionType: question.questionType,"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "              giverType: question.giverType,"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientType: question.recipientType,"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "              showResponsesTo: question.showResponsesTo,"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "              showGiverNameTo: question.showGiverNameTo,"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "              showRecipientNameTo: question.showRecipientNameTo,"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "          }),"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); }, () \u003d\u003e {"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        if (questions.length \u003d\u003d\u003d 1) {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The questions have been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "   * Populates and shows new question edit form."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isAddingQuestionPanelExpanded \u003d true;"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    const newQuestionModel: NewQuestionModel \u003d"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackQuestionsService.getNewQuestionModel(type);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newQuestionEditFormModel \u003d {"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "      feedbackQuestionId: \u0027\u0027,"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: this.questionEditFormModels.length + 1,"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: newQuestionModel.questionBrief,"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: newQuestionModel.questionDescription,"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "      isQuestionHasResponses: false,"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: newQuestionModel.questionType,"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: newQuestionModel.questionDetails,"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: newQuestionModel.giverType,"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: newQuestionModel.recipientType,"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: newQuestionModel.showResponsesTo,"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: newQuestionModel.showGiverNameTo,"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditable: true,"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "      isSaving: false,"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a new question."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "  createNewQuestionHandler(): void {"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "    this.newQuestionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "      questionNumber: this.newQuestionEditFormModel.questionNumber,"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "      questionBrief: this.newQuestionEditFormModel.questionBrief,"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDescription: this.newQuestionEditFormModel.questionDescription,"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "      questionDetails: this.newQuestionEditFormModel.questionDetails,"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "      questionType: this.newQuestionEditFormModel.questionType,"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "      giverType: this.newQuestionEditFormModel.giverType,"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "      recipientType: this.newQuestionEditFormModel.recipientType,"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "              this.newQuestionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        )"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "          this.moveQuestionForm("
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "              this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "          this.normalizeQuestionNumberInQuestionForms();"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isAddingQuestionPanelExpanded \u003d false;"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles \u0027Copy Question\u0027 click event."
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "  copyQuestionsFromOtherSessionsHandler(): void {"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "    const questionToCopyCandidates: QuestionToCopyCandidate[] \u003d [];"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((sessions: FeedbackSessions) \u003d\u003e of(...sessions.feedbackSessions)),"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        flatMap((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "          const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            courseid: session.courseId,"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "            fsname: session.feedbackSessionName,"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "            intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.httpRequestService.get(\u0027/questions\u0027, paramMap)"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "              .pipe("
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                  map((questions: FeedbackQuestions) \u003d\u003e {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                    return questions.questions.map((q: FeedbackQuestion) \u003d\u003e ({"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                      courseId: session.courseId,"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                      feedbackSessionName: session.feedbackSessionName,"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                      question: q,"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "                      isSelected: false,"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                    } as QuestionToCopyCandidate));"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                  }),"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "              );"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) \u003d\u003e {"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "      questionToCopyCandidates.push(...questionToCopyCandidate);"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); }, () \u003d\u003e {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "      const ref: NgbModalRef \u003d this.modalService.open(CopyQuestionsFromOtherSessionsModalComponent);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "      ref.componentInstance.questionToCopyCandidates \u003d questionToCopyCandidates;"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "      ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        of(...questionsToCopy).pipe("
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "              return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                questionBrief: questionToCopy.questionBrief,"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                questionDescription: questionToCopy.questionDescription,"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                questionDetails: questionToCopy.questionDetails,"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                questionType: questionToCopy.questionType,"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                giverType: questionToCopy.giverType,"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                recipientType: questionToCopy.recipientType,"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                showResponsesTo: questionToCopy.showResponsesTo,"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "                showGiverNameTo: questionToCopy.showGiverNameTo,"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "                showRecipientNameTo: questionToCopy.showRecipientNameTo,"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The question has been added to this feedback session.\u0027);"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles \u0027Done Editing\u0027 click event."
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  doneEditingHandler(modal: any): void {"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    if (this.questionEditFormModels.some((q: QuestionEditFormModel) \u003d\u003e q.isEditable)"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        || this.sessionEditFormModel.isEditable) {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      this.modalService.open(modal).result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        this.router.navigateByUrl(\u0027/web/instructor/sessions\u0027);"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      this.router.navigateByUrl(\u0027/web/instructor/sessions\u0027);"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "    // TODO focus on the row of current feedback session in the sessions page"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles question \u0027Help\u0027 link click event."
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "  questionsHelpHandler(): void {"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    window.open(`${environment.frontendUrl}/web/instructor/help#questions`);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all students of a course."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllStudentsOfCourse(): void {"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/students\u0027, paramMap)"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "          this.studentsOfCourse \u003d students.students;"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "          // sort the student list based on team name and student name"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "          this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "            const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            if (teamNameCompare \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "              return a.name.localeCompare(b.name);"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "            return teamNameCompare;"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "          // select the first student"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.studentsOfCourse.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "            this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all instructors of a course which can be previewed as."
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllInstructorsCanBePreviewedAs(): void {"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructors\u0027, paramMap)"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorsCanBePreviewedAs \u003d instructors.instructors;"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "          // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "          // in the feedback session"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "          // sort the instructor list based on name"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorsCanBePreviewedAs.sort((a: Instructor, b: Instructor): number \u003d\u003e {"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "            return a.name.localeCompare(b.name);"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "          // select the first instructor"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.instructorsCanBePreviewedAs.length \u003e\u003d 1) {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "            this.emailOfInstructorToPreview \u003d this.instructorsCanBePreviewedAs[0].email;"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "   * Previews the submission of the feedback session as a student."
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "  previewAsStudent(): void {"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "    window.open(`${environment.frontendUrl}/web/sessions/submission`"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        + `?courseid\u003d${this.courseId}\u0026fsname\u003d${this.feedbackSessionName}\u0026previewas\u003d${this.emailOfStudentToPreview}`);"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "   * Previews the submission of the feedback session as an instructor."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "  previewAsInstructor(): void {"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "    window.open(`${environment.frontendUrl}/web/instructor/sessions/submission`"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        + `?courseid\u003d${this.courseId}\u0026fsname\u003d${this.feedbackSessionName}\u0026previewas\u003d${this.emailOfInstructorToPreview}`);"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "  private deepCopy\u003cT\u003e(obj: T): T {"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "    return JSON.parse(JSON.stringify(obj));"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 9,
      "-": 882
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-session-modal-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { forkJoin } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { HttpRequestService } from \u0027../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { NavigationService } from \u0027../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentService } from \u0027../../services/student.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionSubmittedGiverSet,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  Student, Students,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../../types/api-output\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  ResendResultsLinkToStudentModalComponent,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \"../components/sessions-table/resend-results-link-to-student-modal/resend-results-link-to-student-modal.component\"; // tslint:disable-line"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SendRemindersToStudentModalComponent,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../components/sessions-table/send-reminders-to-student-modal/send-reminders-to-student-modal.component\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  StudentListInfoTableRowModel,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../components/sessions-table/student-list-info-table/student-list-info-table-model\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  InstructorSessionBasePageComponent,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027./instructor-session-base-page.component\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "crizyli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "crizyli"
        },
        "content": " * The base page for session related page."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "crizyli"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export abstract class InstructorSessionModalPageComponent extends InstructorSessionBasePageComponent {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  protected constructor(router: Router,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        navigationService: NavigationService,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        protected modalService: NgbModal,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                        protected studentService: StudentService) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    super(router, httpRequestService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Sends e-mails to remind students on the published results link."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  resendResultsLinkToStudentsEventHandler(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const courseId: string \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseId).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      const modalRef: NgbModalRef \u003d this.modalService.open(ResendResultsLinkToStudentModalComponent);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      modalRef.componentInstance.studentListInfoTableRowModels \u003d students.students.map((student: Student) \u003d\u003e ({"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        email: student.email,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        name: student.name,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        teamName: student.teamName,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        sectionName: student.sectionName,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        hasSubmittedSession: false,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        isSelected: false,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      } as StudentListInfoTableRowModel));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      modalRef.result.then((studentsToRemind: StudentListInfoTableRowModel[]) \u003d\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.feedbackSessionsService.remindResultsLinkToStudents(courseId, feedbackSessionName, {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          usersToRemind: studentsToRemind.map((m: StudentListInfoTableRowModel) \u003d\u003e m.email),"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        }).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "crizyli"
        },
        "content": "          this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              \u0027Session published notification emails have been resent to those students and instructors. \u0027"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Sends e-mails to remind students who have not submitted their feedback."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  sendRemindersToStudentsEventHandler(model: SessionsTableRowModel): void {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const courseId: string \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    forkJoin("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.studentService.getStudentsFromCourse(courseId),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet(courseId, feedbackSessionName))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        .subscribe("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            (result: any[]) \u003d\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              const students: Student[] \u003d (result[0] as Students).students;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              const giverSet: Set\u003cstring\u003e \u003d new Set((result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              const modalRef: NgbModalRef \u003d this.modalService.open(SendRemindersToStudentModalComponent);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                email: student.email,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                name: student.name,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                teamName: student.teamName,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                sectionName: student.sectionName,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                hasSubmittedSession: giverSet.has(student.email),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                isSelected: false,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              } as StudentListInfoTableRowModel));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              modalRef.result.then((studentsToRemind: StudentListInfoTableRowModel[]) \u003d\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                this.feedbackSessionsService.remindFeedbackSessionSubmissionForStudent(courseId, feedbackSessionName, {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                  usersToRemind: studentsToRemind.map((m: StudentListInfoTableRowModel) \u003d\u003e m.email),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                }).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                  this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                      \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                      + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "crizyli"
        },
        "content": "            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "crizyli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 125
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  You have not created any courses yet, or you have no active courses. Go \u003ca href\u003d\"#\" (click)\u003d\"createOrUnarchiveCourse(); $event.preventDefault()\"\u003ehere\u003c/a\u003e to create or unarchive a course."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\" [(model)]\u003d\"sessionEditFormModel\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                      [courseCandidates]\u003d\"courseCandidates\" [templateSessions]\u003d\"templateSessions\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                      (addNewSessionEvent)\u003d\"addNewSessionHandler()\" (copyOtherSessionsEvent)\u003d\"copyFromOtherSessionsHandler()\"\u003e\u003c/tm-session-edit-form\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"sessionsTableRowModels.length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  You have not created any sessions yet. Use the form above to create a session."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"margin-top-30px\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-sessions-table [sessionsTableRowModels]\u003d\"sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"sessionsTableRowModelsSortBy\" [sessionsTableRowModelsSortOrder]\u003d\"sessionsTableRowModelsSortOrder\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                     [courseCandidates]\u003d\"courseCandidates\" [columnsToShow]\u003d\"[ SessionsTableColumn.COURSE_ID ]\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                     [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.BLUE\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                     (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent($event)\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                    (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler($event)\" (editSessionEvent)\u003d\"editSessionEventHandler($event)\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                    (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler($event)\" (copySessionEvent)\u003d\"copySessionEventHandler($event)\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                    (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler($event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler($event)\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                    (publishSessionEvent)\u003d\"publishSessionEventHandler($event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler($event)\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                     (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToStudentsEventHandler(sessionsTableRowModels[$event])\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "                     (sendRemindersToStudentsEvent)\u003d\"sendRemindersToStudentsEventHandler(sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-muted\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      Note: The table above doesn\u0027t contain sessions from archived courses and soft-deleted courses."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      To view sessions from an archived course, unarchive the course first; to view sessions from a course in recycle bin, restore the course first."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/p\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row margin-top-30px\" *ngIf\u003d\"recycleBinFeedbackSessionRowModels.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-trash-alt\"\u003e\u003c/i\u003e Feedback Sessions Recycle Bin"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h2\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header bg-secondary recycle-bin-header\" (click)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-white\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cb\u003eRecycle Bin\u003c/b\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-right bin-header-button\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Restore all feedback sessions\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    (click)\u003d\"$event.stopPropagation(); restoreAllRecycleBinFeedbackSession()\"\u003e\u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All\u003c/button\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm text-danger\" ngbTooltip\u003d\"Permanently delete all feedback sessions\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    (click)\u003d\"$event.stopPropagation(); permanentDeleteAllSessions()\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All\u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down text-white\" *ngIf\u003d\"!isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up text-white\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-body recycle-bin-body\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctable class\u003d\"table table-responsive-lg table-striped table-bordered recycle-bin-table\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cthead class\u003d\"recycle-bin-table-header\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth (click)\u003d\"sortRecycleBinFeedbackSessionRows(SortBy.COURSE_ID)\" class\u003d\"sortable-header\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                Course ID"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy !\u003d\u003d SortBy.COURSE_ID\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/th\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth (click)\u003d\"sortRecycleBinFeedbackSessionRows(SortBy.FEEDBACK_SESSION_NAME)\" class\u003d\"sortable-header\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                Session Name"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy !\u003d\u003d SortBy.FEEDBACK_SESSION_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.FEEDBACK_SESSION_NAME \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.FEEDBACK_SESSION_NAME \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/th\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth (click)\u003d\"sortRecycleBinFeedbackSessionRows(SortBy.SESSION_CREATION_DATE)\" class\u003d\"sortable-header\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                Creation Date"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy !\u003d\u003d SortBy.SESSION_CREATION_DATE\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_CREATION_DATE \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.SESSION_CREATION_DATE \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/th\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth (click)\u003d\"sortRecycleBinFeedbackSessionRows(SortBy.DELETION_DATE)\" class\u003d\"sortable-header\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                Deletion Date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy !\u003d\u003d SortBy.DELETION_DATE\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.DELETION_DATE \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan *ngIf\u003d\"recycleBinFeedbackSessionRowModelsSortBy \u003d\u003d\u003d SortBy.DELETION_DATE \u0026\u0026 recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/th\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/thead\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctbody\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngFor\u003d\"let recycleBinFeedbackSessionRowModel of recycleBinFeedbackSessionRowModels\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{ recycleBinFeedbackSessionRowModel.feedbackSession.courseId }}\u003c/td\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{ recycleBinFeedbackSessionRowModel.feedbackSession.feedbackSessionName }}\u003c/td\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd [ngbTooltip]\u003d\"recycleBinFeedbackSessionRowModel.feedbackSession.createdAtTimestamp | formatDateDetail:recycleBinFeedbackSessionRowModel.feedbackSession.timeZone\" container\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                {{ recycleBinFeedbackSessionRowModel.feedbackSession.createdAtTimestamp | recycleBinTableFormatDate:recycleBinFeedbackSessionRowModel.feedbackSession.timeZone }}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd [ngbTooltip]\u003d\"recycleBinFeedbackSessionRowModel.feedbackSession.deletedAtTimestamp | formatDateDetail:recycleBinFeedbackSessionRowModel.feedbackSession.timeZone\" container\u003d\"body\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                {{ recycleBinFeedbackSessionRowModel.feedbackSession.deletedAtTimestamp | recycleBinTableFormatDate:recycleBinFeedbackSessionRowModel.feedbackSession.timeZone }}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm\" ngbTooltip\u003d\"Restore the feedback session\" (click)\u003d\"restoreRecycleBinFeedbackSession(recycleBinFeedbackSessionRowModel)\"\u003eRestore\u003c/button\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light btn-sm text-danger\" ngbTooltip\u003d\"Permanently delete the feedback session\" (click)\u003d\"permanentDeleteSession(recycleBinFeedbackSessionRowModel)\"\u003eDelete Permanently\u003c/button\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tbody\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/table\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 106
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatMap, map, switchMap, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService, TemplateSession } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  LOCAL_DATE_TIME_FORMAT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  TimeResolvingResult,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  TimezoneService,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  ResponseVisibleSetting,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionVisibleSetting,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  DateFormat,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormModel,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  TimeFormat,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  CopySessionResult,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SessionsTableColumn,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SessionsTableHeaderColorScheme,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SortBy,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  SortOrder,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import { CopyFromOtherSessionsResult } from \u0027./copy-from-other-sessions-modal/copy-from-other-sessions-modal-model\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  CopyFromOtherSessionsModalComponent,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./copy-from-other-sessions-modal/copy-from-other-sessions-modal.component\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionPermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./session-permanent-deletion-confirm-modal/session-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsPermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./sessions-permanent-deletion-confirm-modal/sessions-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "interface RecycleBinFeedbackSessionRowModel {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSession: FeedbackSession;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor feedback sessions list page."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-sessions-page\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-sessions-page.component.html\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-sessions-page.component.scss\u0027],"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "crizyli"
        },
        "content": "export class InstructorSessionsPageComponent extends InstructorSessionModalPageComponent implements OnInit {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  // url params"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  // data"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  courseCandidates: Course[] \u003d [];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  templateSessions: TemplateSession[] \u003d [];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  // models"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionEditFormModel: SessionEditFormModel \u003d {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    feedbackSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    instructions: \u0027Please answer all the given questions.\u0027,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStartDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionEndDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    gracePeriod: 0,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    responseVisibleSetting: ResponseVisibleSetting.LATER,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleTime: { hour: 0, minute: 0 },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    isClosingEmailEnabled: true,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    isPublishedEmailEnabled: true,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    templateSessionName: \u0027\u0027,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    isSaving: false,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditable: true,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    hasVisibleSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    hasEmailSettingsPanelExpanded: false,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  isRecycleBinExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  recycleBinFeedbackSessionRowModels: RecycleBinFeedbackSessionRowModel[] \u003d [];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  recycleBinFeedbackSessionRowModelsSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  recycleBinFeedbackSessionRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              modalService: NgbModal,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              studentService: StudentService,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              private route: ActivatedRoute,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "crizyli"
        },
        "content": "              private timezoneService: TimezoneService) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    super(router, httpRequestService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, modalService, studentService);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    this.templateSessions \u003d this.feedbackSessionsService.getTemplateSessions();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCandidatesCourse();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadFeedbackSessions();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadRecycleBinFeedbackSessions();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   * Copies from other sessions."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  copyFromOtherSessionsHandler(): void {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CopyFromOtherSessionsModalComponent);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    // select the current course Id."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.copyToCourseId \u003d this.sessionEditFormModel.courseId;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.existingFeedbackSession \u003d"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionsTableRowModels.map((model: SessionsTableRowModel) \u003d\u003e model.feedbackSession);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then((result: CopyFromOtherSessionsResult) \u003d\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      this.copyFeedbackSession(result.fromFeedbackSession, result.newFeedbackSessionName, result.copyToCourseId)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((createdFeedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions/edit\u0027"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                + `?courseid\u003d${createdFeedbackSession.courseId}\u0026fsname\u003d${createdFeedbackSession.feedbackSessionName}`,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses owned by the current user."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCandidatesCourse(): void {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/courses\u0027, {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseCandidates \u003d courses.courses;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      this.initDefaultValuesForSessionEditForm();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets default values for the session edit form."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  initDefaultValuesForSessionEditForm(): void {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    // if specified in the query and is valid, select that course"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    // otherwise, select the first course by default"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    const course: Course | undefined \u003d this.courseCandidates.find((c: Course) \u003d\u003e c.courseId \u003d\u003d\u003d this.courseId);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    if (course) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      this.sessionEditFormModel.courseId \u003d course.courseId;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      this.sessionEditFormModel.courseName \u003d course.courseName;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      this.sessionEditFormModel.timeZone \u003d course.timeZone;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    } else if (this.courseCandidates.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.courseId \u003d this.courseCandidates[0].courseId;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.courseName \u003d this.courseCandidates[0].courseName;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.timeZone \u003d this.courseCandidates[0].timeZone;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    // select the first template session"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.templateSessions.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.templateSessionName \u003d this.templateSessions[0].name;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    // set opening time to near future"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    const nearFuture: any \u003d moment().add(1, \u0027hours\u0027);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionStartDate \u003d {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      year: nearFuture.year(),"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      month: nearFuture.month() + 1, // moment return 0-11 for month"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      day: nearFuture.date(),"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionStartTime \u003d {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      minute: nearFuture.hour() \u003d\u003d\u003d 0 ? 59 : 0, // for 00:00 midnight, we use 23:59"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      hour: nearFuture.hour() \u003d\u003d\u003d 0 ? 23 : nearFuture.hour(),"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    // set the closing time to tomorrow"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    const tomorrow: any \u003d moment().add(1, \u0027days\u0027);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionEndDate \u003d {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "      year: tomorrow.year(),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      month: tomorrow.month() + 1, // moment return 0-11 for month"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      day: tomorrow.date(),"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.submissionEndTime \u003d {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      minute: 59,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      hour: 23,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirects to page to create or unarchive courses."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  createOrUnarchiveCourse(): void {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigateByUrl(\u0027/web/instructor/courses\u0027);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "   * Adds a new feedback session."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  addNewSessionHandler(): void {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionEditFormModel.isSaving \u003d true;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    const resolvingResultMessages: string[] \u003d [];"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin("
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission opening time\u0027, resolvingResultMessages),"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027Submission closing time\u0027, resolvingResultMessages),"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Session visible time\u0027, resolvingResultMessages)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0027Response visible time\u0027, resolvingResultMessages)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            : of(0),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap((vals: number[]) \u003d\u003e {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.feedbackSessionsService.createFeedbackSession(this.sessionEditFormModel.courseId, {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSessionName: this.sessionEditFormModel.feedbackSessionName,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            instructions: this.sessionEditFormModel.instructions,"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionStartTimestamp: vals[0],"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            submissionEndTimestamp: vals[1],"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            gracePeriod: this.sessionEditFormModel.gracePeriod,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            customSessionVisibleTimestamp: vals[2],"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            customResponseVisibleTimestamp: vals[3],"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "      // begin to populate session with template"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "      const templateSession: TemplateSession | undefined \u003d"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionsService.getTemplateSessions().find("
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "              (t: TemplateSession) \u003d\u003e t.name \u003d\u003d\u003d this.sessionEditFormModel.templateSessionName);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!templateSession) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      of(...templateSession.questions).pipe("
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "          concatMap((question: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.feedbackQuestionsService.createFeedbackQuestion("
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSession.courseId, feedbackSession.feedbackSessionName, {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionNumber: question.questionNumber,"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionBrief: question.questionBrief,"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionDescription: question.questionDescription,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionDetails: question.questionDetails,"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                  questionType: question.questionType,"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                  giverType: question.giverType,"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                  recipientType: question.recipientType,"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                  numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                  customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                  showResponsesTo: question.showResponsesTo,"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                  showGiverNameTo: question.showGiverNameTo,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                  showRecipientNameTo: question.showRecipientNameTo,"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "          }),"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe(() \u003d\u003e {}, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage("
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            `The session is created but the template questions cannot be created: ${resp.error.message}`);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      }, () \u003d\u003e {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        this.router.navigateByUrl("
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027/web/instructor/sessions/edit\u0027"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            + `?courseid\u003d${feedbackSession.courseId}\u0026fsname\u003d${feedbackSession.feedbackSessionName}`)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            .then(() \u003d\u003e {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "              resolvingResultMessages.forEach((msg: string) \u003d\u003e {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                this.statusMessageService.showWarningMessage(msg);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "              this.statusMessageService.showSuccessMessage(\u0027The feedback session has been added.\u0027"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                  + \u0027Click the \"Add New Question\" button below to begin adding questions for the feedback session.\u0027);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sessionEditFormModel.isSaving \u003d false;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "   * Resolves the local date time to an UNIX timestamp."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "  private resolveLocalDateTime(date: DateFormat, time: TimeFormat, timeZone: string,"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                               fieldName: string, resolvingResultMessages: string[]): Observable\u003cnumber\u003e {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    const inst: any \u003d moment();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027year\u0027, date.year);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027date\u0027, date.day);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027hour\u0027, time.hour);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    inst.set(\u0027minute\u0027, time.minute);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        tap((result: TimeResolvingResult) \u003d\u003e {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "          if (result.message.length !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            resolvingResultMessages.push(result.message);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all feedback sessions that can be accessed by current user."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSessions(): void {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsForInstructor()"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "          response.feedbackSessions.forEach((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            const model: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSession: session,"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "              responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "              isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "              instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            this.sessionsTableRowModels.push(model);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            this.updateInstructorPrivilege(model);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session row."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModelsEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionsTableRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionsTableRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    this.sessionsTableRowModels.sort(this.sortModelsBy(by, this.sessionsTableRowModelsSortOrder));"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads response rate of a feedback session."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRateEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadResponseRate(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "  editSessionEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editSession(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves the feedback session to the recycle bin."
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBinEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.put(\u0027/bin/session\u0027, paramMap)"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionsTableRowModels.splice(this.sessionsTableRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "          this.recycleBinFeedbackSessionRowModels.push({"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSession,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The feedback session has been deleted. \u0027"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "              + \u0027You can restore it from the deleted sessions table below.\u0027);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "  copySessionEventHandler(result: CopySessionResult): void {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copySession(this.sessionsTableRowModels[result.sessionToCopyRowIndex], result);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the feedback session as instructor."
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructorEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitSessionAsInstructor(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "   * Views the result of a feedback session."
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResultEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    this.viewSessionResult(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSessionEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    this.publishSession(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSessionEventHandler(rowIndex: number): void {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "    this.unpublishSession(this.sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all feedback sessions in recycle bin that can be accessed by current user."
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "  loadRecycleBinFeedbackSessions(): void {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    this.feedbackSessionsService.getFeedbackSessionsInRecycleBinForInstructor()"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "          response.feedbackSessions.forEach((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            this.recycleBinFeedbackSessionRowModels.push({"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSession: session,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session rows in recycle bin table."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "  sortRecycleBinFeedbackSessionRows(by: SortBy): void {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModels.sort("
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortModelsBy(by, this.recycleBinFeedbackSessionRowModelsSortOrder));"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores a recycle bin feedback session."
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "  restoreRecycleBinFeedbackSession(model: RecycleBinFeedbackSessionRowModel): void {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/bin/session\u0027, paramMap)"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "          this.recycleBinFeedbackSessionRowModels.splice("
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "              this.recycleBinFeedbackSessionRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "          const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSession,"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "            responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "          this.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027The feedback session has been restored.\u0027);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores all feedback sessions in recycle bin."
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "  restoreAllRecycleBinFeedbackSession(): void {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "    const restoreRequests: Observable\u003cFeedbackSession\u003e[] \u003d [];"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "    this.recycleBinFeedbackSessionRowModels.forEach((model: RecycleBinFeedbackSessionRowModel) \u003d\u003e {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "      restoreRequests.push(this.httpRequestService.delete(\u0027/bin/session\u0027, paramMap));"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(restoreRequests).subscribe((restoredSessions: FeedbackSession[]) \u003d\u003e {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "      restoredSessions.forEach((session: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels \u003d [];"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "          feedbackSession: session,"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "          responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "          isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "          instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027All sessions have been restored.\u0027);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the feedback session permanently."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "  permanentDeleteSession(model: RecycleBinFeedbackSessionRowModel): void {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(SessionPermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseId \u003d model.feedbackSession.courseId;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.feedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "      this.httpRequestService.delete(\u0027/session\u0027, paramMap).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels.splice("
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            this.recycleBinFeedbackSessionRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027The feedback session has been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes all feedback sessions in the recycle bin permanently."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "  permanentDeleteAllSessions(): void {"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(SessionsPermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.sessionsToDelete \u003d"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels.map("
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            (model: RecycleBinFeedbackSessionRowModel) \u003d\u003e model.feedbackSession);"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "      const deleteRequests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "      this.recycleBinFeedbackSessionRowModels.forEach((model: RecycleBinFeedbackSessionRowModel) \u003d\u003e {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "          fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteRequests.push(this.httpRequestService.delete(\u0027/session\u0027, paramMap));"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin(deleteRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        this.recycleBinFeedbackSessionRowModels \u003d [];"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027All sessions have been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 10,
      "crizyli": 21,
      "-": 574
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { Course, Courses, InstructorPrivilege, Student, Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListSectionData, StudentListStudentData } from \u0027../student-list/student-list-section-data\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "interface Statistic {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfStudents: number;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfSections: number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfTeams: number;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentIndexedData {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  [key: string]: Student[];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseTab {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  studentListSectionDataList: StudentListSectionData[];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  hasTabExpanded: boolean;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  hasStudentLoaded: boolean;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  stats?: Statistic;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor student list page."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-student-list-page\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-student-list-page.component.html\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-student-list-page.component.scss\u0027],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorStudentListPageComponent implements OnInit {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  courseTabList: CourseTab[] \u003d [];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              private route: ActivatedRoute) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourses();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses of current instructor."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourses(): void {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          courses.courses.forEach((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            const courseTab: CourseTab \u003d {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              course,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              studentListSectionDataList: [],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              hasTabExpanded: false,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "              hasStudentLoaded: false,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            this.courseTabList.push(courseTab);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles specific card and loads students if needed"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleCard(courseTab: CourseTab): void {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    courseTab.hasTabExpanded \u003d !courseTab.hasTabExpanded;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseTab.hasStudentLoaded) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudents(courseTab);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      courseTab.hasStudentLoaded \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads students of a specified course."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudents(courseTab: CourseTab): void {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseTab.course.courseId)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "          const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            const term: string \u003d x.sectionName;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            return acc;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "          }, {});"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          const teams: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            const term: string \u003d x.teamName;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            return acc;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          }, {});"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "          courseTab.stats \u003d {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfStudents: students.students.length,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfSections: Object.keys(sections).length,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfTeams: Object.keys(teams).length,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "          Object.keys(sections).forEach((key: string) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            const studentsInSection: Student[] \u003d sections[key];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            const data: StudentListStudentData[] \u003d [];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            studentsInSection.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "              const studentData: StudentListStudentData \u003d {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                name : student.name,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "                status : student.joinState,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                email : student.email,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                team : student.teamName,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "              };"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "              data.push(studentData);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadPrivilege(courseTab, key, data);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads privilege of an instructor for a specified course and section."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListStudentData[]): void {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseTab.course.courseId,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionname: sectionName,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      const sectionData: StudentListSectionData \u003d {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        students,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      courseTab.studentListSectionDataList.push(sectionData);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 2,
      "-": 148
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/join-state.pipe.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinStatePipe } from \u0027./join-state.pipe\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "describe(\u0027JoinStatePipe\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  it(\u0027create an instance\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    const pipe: JoinStatePipe \u003d new JoinStatePipe();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    expect(pipe).toBeTruthy();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  });"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 8
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/join-state.pipe.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinState } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * Pipe to handle the display of join state in the student list component."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "@Pipe({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  name: \u0027joinState\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "export class JoinStatePipe implements PipeTransform {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Transforms {@code JoinState} to a join state display for the student list component."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  transform(joinState: JoinState): any {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    switch (joinState) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      case (JoinState.JOINED):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return \u0027Joined\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      case (JoinState.NOT_JOINED):"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return \u0027Yet to Join\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return \u0027Unknown\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 26
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list-section-data.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinState } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains a list of students in a section."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "export interface StudentListSectionData {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionName: string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  isAllowedToViewStudentInSection: boolean;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  isAllowedToModifyStudent: boolean;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  students: StudentListStudentData[];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains details about a student to be displayed in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export interface StudentListStudentData {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  status: JoinState;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  team: string;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl?: string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 3,
      "-": 19
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctable class\u003d\"table table-bordered table-striped m-0\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cthead"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "        [ngClass]\u003d\"{\u0027thead-gray\u0027: useGrayHeading, \u0027text-white bg-primary font-weight-bold\u0027: !useGrayHeading}\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        [hidden]\u003d\"isHideTableHead\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth\u003ePhoto\u003c/th\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003cth class\u003d\"sortable-header\" *ngIf\u003d\"hasSection()\" (click)\u003d\"sortStudentListEvent(SortBy.SECTION_NAME)\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Section"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.SECTION_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.SECTION_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.SECTION_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortStudentListEvent(SortBy.TEAM_NAME)\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Team"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.TEAM_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.TEAM_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.TEAM_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortStudentListEvent(SortBy.STUDENT_NAME)\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Student Name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.STUDENT_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.STUDENT_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.STUDENT_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortStudentListEvent(SortBy.STATUS)\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Status"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.STATUS\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.STATUS \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.STATUS \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortStudentListEvent(SortBy.EMAIL)\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        Email"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.EMAIL\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.EMAIL \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.EMAIL \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/th\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cth\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/thead\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctbody\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    \u003ctr *ngFor\u003d\"let student of students; trackBy: trackByFn\" [hidden]\u003d\"isStudentToHide(student.email)\"s\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd class\u003d\"align-center\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-template #popContent\u003e\u003cimg class\u003d\"profile-pic\" src\u003d\"{{student.photoUrl}}\"\u003e\u003c/ng-template\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cimg *ngIf\u003d\"student.photoUrl; else viewPhotoBtn\" class\u003d\"profile-pic-icon\" src\u003d\"{{student.photoUrl}}\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngbPopover]\u003d\"popContent\" triggers\u003d\"mouseenter:mouseleave\" (error)\u003d\"setDefaultPic(student)\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-template #viewPhotoBtn\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca [routerLink]\u003d\"\" role\u003d\"button\" (click)\u003d\"loadPhoto(student); $event.preventDefault();\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "             queryParamsHandling\u003d\"preserve\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            View Photo"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/a\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003ctd *ngIf\u003d\"hasSection()\"\u003e{{student.sectionName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e{{student.team}}\u003c/td\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e{{student.name}}\u003c/td\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      \u003ctd class\u003d\"align-center\"\u003e{{student.status | joinState}}\u003c/td\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd\u003e{{student.email}}\u003c/td\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctd class\u003d\"no-print align-center\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-template #actionButton let-isEnabled\u003d\"isEnabled\" let-tooltip\u003d\"tooltip\" let-name\u003d\"name\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                     let-routerLink\u003d\"routerLink\" let-queryParams\u003d\"queryParams\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"btn btn-light btn-sm mr-2\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngClass]\u003d\"{\u0027disabled mouse-hover-only\u0027: !isEnabled}\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "             [ngbTooltip]\u003d\"isEnabled ? tooltip : \u0027You do not have the permissions to access this feature\u0027\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "             [routerLink]\u003d\"routerLink\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "             [queryParams]\u003d\"queryParams\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            {{name}}\u003c/a\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-container *ngTemplateOutlet\u003d\"actionButton; context: {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        isEnabled: student.isAllowedToViewStudentInSection,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        tooltip: \u0027View the details of the student\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027View\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        routerLink: \u0027/web/instructor/courses/student/details\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        queryParams: {courseid: courseId, studentemail: student.email}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      }\"\u003e\u003c/ng-container\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-container *ngTemplateOutlet\u003d\"actionButton; context: {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        isEnabled: student.isAllowedToModifyStudent,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        tooltip: \u0027Use this to edit the details of this student. To edit multiple students\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          + \u0027 in one go, you can use the enroll page: \u0027"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          + \u0027Simply enroll students using the updated data and existing data will be updated accordingly\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Edit\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        routerLink: \u0027/web/instructor/courses/student/edit\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        queryParams: {courseid: courseId, studentemail: student.email}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      }\"\u003e\u003c/ng-container\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-container *ngIf\u003d\"enableRemindButton\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        \u003cng-container *ngIf\u003d\"student.status \u003d\u003d \u0027Yet to join\u0027\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-light btn-sm mr-2\" *ngIf\u003d\"student.isAllowedToModifyStudent\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            ngbTooltip\u003d\"\u0027Email an invitation to the student requesting him/her to join the course using his/her\u0027"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027 Google Account. Note: Students can use TEAMMATES without \\\u0027joining\\\u0027,\u0027"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            + \u0027 but a joined student can access extra features e.g. set up a user profile\u0027\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "             (click)\u003d\"openModal(remindModal)\"\u003eSend Invite\u003c/button\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-light btn-sm mr-2 disabled mouse-hover-only\" *ngIf\u003d\"!student.isAllowedToModifyStudent\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            ngbTooltip\u003d\"\u0027You do not have the permissions to access this feature\u0027\"\u003eSend Invite\u003c/button\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-template #remindModal let-modal\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"modal-header alert-info\"\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ch4 class\u003d\"modal-title\"\u003e\u003cspan class\u003d\"fa fa-info-circle\"\u003e\u003c/span\u003e Confirm sending join requests\u003c/h4\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss()\"\u003e\u0026times;\u003c/button\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          Usually, there is no need to use this feature because TEAMMATES sends an automatic invite to students"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          at the opening time of each session. Send a join request to {{student.email}} anyway?"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn modal-btn-cancel btn-default\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn modal-btn-ok btn-danger\" (click)\u003d\"remindStudentFromCourse(student.email); modal.dismiss()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-light btn-sm mr-2\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        [ngClass]\u003d\"{\u0027disabled mouse-hover-only\u0027: !student.isAllowedToModifyStudent}\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        [ngbTooltip]\u003d\"student.isAllowedToModifyStudent"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          ? \u0027Delete the student and the corresponding submissions from the course\u0027"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "          : \u0027You do not have the permissions to access this feature\u0027\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        (click)\u003d\"openModal(deleteModal)\"\u003eDelete\u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-template #deleteModal let-modal\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"modal-header text-danger\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ch4 class\u003d\"modal-title\"\u003e\u003cspan class\u003d\"fas fa-times-circle\"\u003e\u003c/span\u003e Confirm deletion\u003c/h4\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-hidden\u003d\"true\" (click)\u003d\"modal.dismiss()\"\u003e\u0026times;\u003c/button\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp class\u003d\"font-weight-bold\"\u003eAre you sure you want to remove"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan class\u003d\"text-primary\"\u003e\"{{student.name}}\"\u003c/span\u003e from the course"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan class\u003d\"text-primary\"\u003e\"{{courseId}}\"\u003c/span\u003e?"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/p\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-outline-secondary\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" ngbAutofocus class\u003d\"btn btn-danger\" (click)\u003d\"removeStudentFromCourse(student.email); modal.dismiss()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-container *ngTemplateOutlet\u003d\"actionButton; context: {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        isEnabled: true,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        tooltip: \u0027View all data about this student\u0027,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027All Records\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        routerLink: \u0027/web/instructor/students/records\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        queryParams: {courseid: courseId, studentemail: student.email}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      }\"\u003e\u003c/ng-container\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/td\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tr\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/tbody\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/table\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 35,
      "-": 109
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.component.scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".align-center {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  text-align: center;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ".table .thead-gray th {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  color: #495057;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  background-color: #DADADA;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "Allow only mouse hover events for the element."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "!important is required to override Bootstrap .disabled class matches"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "which usually match 2 classes (eg .btn.disabled)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "*/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ".mouse-hover-only {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  pointer-events: auto !important;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ".mouse-hover-only:active {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  pointer-events: none !important;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "img.profile-pic-icon {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  height: 40px;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  width: 40px;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ".profile-pic {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  height: 130px;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  width: 130px;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ".sortable-header {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  cursor: pointer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 4,
      "-": 31
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.component.spec.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinState } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinStatePipe } from \u0027./join-state.pipe\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListComponent } from \u0027./student-list.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentListComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: StudentListComponent;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cStudentListComponent\u003e;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      declarations: [StudentListComponent, JoinStatePipe],"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(StudentListComponent);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with table head set to hidden\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    component.isHideTableHead \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with some student list data\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    component.sections \u003d ["
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027tester\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u00271\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u00271\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Benny Charles\u0027,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027benny.c.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Danny Engrid\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027danny.e.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Emma Farrell\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027emma.f.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Tutorial Group 1\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with some student list data when not allowed to modify student for a specific section\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    component.sections \u003d ["
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027tester\u0027,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u00271\u0027,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u00271\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Benny Charles\u0027,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027benny.c.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Danny Engrid\u0027,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027danny.e.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Emma Farrell\u0027,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027emma.f.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Tutorial Group 1\u0027,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: false,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with enable remind button set to true and two students yet to join\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    component.sections \u003d ["
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027tester\u0027,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u00271\u0027,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u00271\u0027,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Benny Charles\u0027,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027benny.c.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Danny Engrid\u0027,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027danny.e.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Emma Farrell\u0027,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027emma.f.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Tutorial Group 1\u0027,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    component.enableRemindButton \u003d true;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with enable remind button set to true, one student yet to join when not allowed to modify\u0027 +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027 student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    component.sections \u003d ["
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027tester\u0027,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u00271\u0027,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u00271\u0027,"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Benny Charles\u0027,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027benny.c.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Danny Engrid\u0027,"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027danny.e.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Emma Farrell\u0027,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027emma.f.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Tutorial Group 1\u0027,"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: false,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    component.enableRemindButton \u003d true;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with some student list data and some students to hide\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    component.sections \u003d ["
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027tester\u0027,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u00271\u0027,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u00271\u0027,"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Benny Charles\u0027,"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027benny.c.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Danny Engrid\u0027,"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027danny.e.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Emma Farrell\u0027,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team 1\u0027,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027emma.f.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Tutorial Group 1\u0027,"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    component.listOfStudentsToHide \u003d ["
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027alice.b.tmms@gmail.tmt\u0027,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with some student list data with no sections\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    component.sections \u003d ["
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027tester\u0027,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u00271\u0027,"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027tester@tester.com\u0027,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            status: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027None\u0027,"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 29,
      "-": 308
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { Component, DoCheck, Input, IterableDiffer, IterableDiffers, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinState, MessageOutput } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinStatePipe } from \u0027./join-state.pipe\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  StudentListSectionData,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  StudentListStudentData,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "} from \u0027./student-list-section-data\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * Flattened data which contains details about a student and their section."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * The data is flattened to allow sorting of the table."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "interface FlatStudentListData {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  status: JoinState;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  team: string;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  photoUrl?: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  sectionName: string;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  isAllowedToViewStudentInSection: boolean;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  isAllowedToModifyStudent: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * Sort criteria for the students table."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "enum SortBy {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Nothing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  NONE,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Section Name."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  SECTION_NAME,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Team name."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  TEAM_NAME,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Student Name."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  STUDENT_NAME,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Status."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  STATUS,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Email."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  EMAIL,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "/**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " * Sort order for the students table."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erjillsison"
        },
        "content": " */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "enum SortOrder {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Descending sort order."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  DESC,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Ascending sort order"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  ASC,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": " * A table displaying a list of students from a course, with buttons to view/edit/delete students etc."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-list\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-list.component.html\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-list.component.scss\u0027],"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "export class StudentListComponent implements OnInit, DoCheck {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() useGrayHeading: boolean \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() listOfStudentsToHide: string[] \u003d [];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isHideTableHead: boolean \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() enableRemindButton: boolean \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  // The input sections data from parent."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  @Input() sections: StudentListSectionData[] \u003d [];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  // The flattened students list derived from the sections list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  // The sections data is flattened to allow sorting of the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  students: FlatStudentListData[] \u003d [];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  tableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  tableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  JoinState: typeof JoinState \u003d  JoinState;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  private readonly _differ: IterableDiffer\u003cany\u003e;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private router: Router,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "              private navigationService: NavigationService,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              private differs: IterableDiffers) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this._differ \u003d this.differs.find(this.sections).create();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  ngDoCheck(): void {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    if (this._differ) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      const changes: any \u003d this._differ.diff(this.sections);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      if (changes) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        this.students \u003d this.mapStudentsFromSectionData(this.sections);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Flatten section data."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  mapStudentsFromSectionData(sections: StudentListSectionData[]): FlatStudentListData[] {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    const students: FlatStudentListData[] \u003d [];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    sections.forEach((section: StudentListSectionData) \u003d\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        section.students.forEach((student: StudentListStudentData) \u003d\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            students.push({"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              name: student.name,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              email: student.email,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              status: student.status,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              team: student.team,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              photoUrl: student.photoUrl,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              sectionName: section.sectionName,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              isAllowedToModifyStudent: section.isAllowedToModifyStudent,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "              isAllowedToViewStudentInSection: section.isAllowedToViewStudentInSection,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        ),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    );"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns whether this course are divided into sections"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  hasSection(): boolean {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    return (this.students.some((student: FlatStudentListData) \u003d\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        student.sectionName !\u003d\u003d \u0027None\u0027));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "   * Function to be passed to ngFor, so that students in the list is tracked by email"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  trackByFn(_index: number, item: FlatStudentListData): any {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.email;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "   * Load the profile picture of a student"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  loadPhoto(student: FlatStudentListData): void {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    student.photoUrl \u003d"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        `${environment.backendUrl}/webapi/student/profilePic?courseid\u003d${this.courseId}\u0026studentemail\u003d${student.email}`;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  setDefaultPic(student: FlatStudentListData): void {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    student.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the student delete confirmation modal."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   * Remind the student from course."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  remindStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.remindStudentForJoin(this.courseId, studentEmail)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        this.navigationService.navigateWithSuccessMessagePreservingParams(this.router,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0027/web/instructor/courses/details\u0027, resp.message);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  removeStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      studentemail: studentEmail,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/student\u0027, paramMap).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(`Student is successfully deleted from course \"${this.courseId}\"`);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sections.forEach("
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        (section: StudentListSectionData) \u003d\u003e {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          section.students \u003d section.students.filter("
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            (student: StudentListStudentData) \u003d\u003e student.email !\u003d\u003d studentEmail);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "   * Determines which row in the studentTable should be hidden."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  isStudentToHide(studentEmail: string): boolean {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.listOfStudentsToHide.indexOf(studentEmail) \u003e -1;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Sorts the student list"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  sortStudentListEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this.tableSortBy \u003d by;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this.tableSortOrder \u003d"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    this.students.sort(this.sortBy(by));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   * Returns a function to determine the order of sort"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "   */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  sortBy(by: SortBy):"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      ((a: FlatStudentListData , b: FlatStudentListData) \u003d\u003e number) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    return (a: FlatStudentListData, b: FlatStudentListData): number \u003d\u003e {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.SECTION_NAME:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.sectionName;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.sectionName;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.STUDENT_NAME:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.name;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.name;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.TEAM_NAME:"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.team;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.team;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.EMAIL:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d a.email;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d b.email;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        case SortBy.STATUS:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d joinStatePipe.transform(a.status);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d joinStatePipe.transform(b.status);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.ASC) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "        return strB.localeCompare(strA);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "erjillsison"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    };"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "  }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 186,
      "-": 104
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.module.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { CommonModule } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgModule } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterModule } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "import { JoinStatePipe } from \u0027./join-state.pipe\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListComponent } from \u0027./student-list.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Module for student list table component."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@NgModule({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  declarations: ["
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    JoinStatePipe,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    StudentListComponent,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  exports: ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    StudentListComponent,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  imports: ["
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    CommonModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    NgbModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    RouterModule,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentListModule { }"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 2,
      "-": 23
    }
  },
  {
    "path": "src/web/app/pages-session/session-submission-page/saving-complete-modal/saving-complete-modal.component.html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-header text-white\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "     [ngClass]\u003d\"{\u0027bg-danger\u0027: failToSaveQuestions.length !\u003d\u003d 0, \u0027bg-success\u0027: failToSaveQuestions.length \u003d\u003d\u003d 0}\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch5 class\u003d\"modal-title\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan *ngIf\u003d\"failToSaveQuestions.length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-check-circle\"\u003e\u003c/i\u003e All responses submitted successfully!"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan *ngIf\u003d\"failToSaveQuestions.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "          \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Some questions were not saved!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/span\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/h5\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"activeModal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cp *ngIf\u003d\"notYetAnsweredQuestions.length !\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erjillsison"
        },
        "content": "    \u003ci class\u003d\"fas fa-exclamation\"\u003e\u003c/i\u003e Note that some questions are yet to be answered."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    They are: {{ notYetAnsweredQuestions }}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/p\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cp *ngIf\u003d\"failToSaveQuestions.length !\u003d\u003d 0\" class\u003d\"text-danger\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ci class\u003d\"fas fa-exclamation\"\u003e\u003c/i\u003e Some answers to questions are not saved due to errors."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    Those questions are: {{ failToSaveQuestions }}. Refreshing the page and submit again might solve the problem."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/p\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cp *ngIf\u003d\"failToSaveQuestions.length \u003d\u003d\u003d 0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    All your responses have been successfully recorded! You may now leave this page."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/p\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cp\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    Note that you can change your responses and submit them again any time before the session closes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\" *ngIf\u003d\"hasSubmissionConfirmationError\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    Your responses might be saved but we cannot confirm your submission. Please try again."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton type\u003d\"button\" class\u003d\"btn\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          [ngClass]\u003d\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                {\u0027btn-danger\u0027: failToSaveQuestions.length !\u003d\u003d 0, \u0027btn-success\u0027: failToSaveQuestions.length \u003d\u003d\u003d 0}\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          (click)\u003d\"activeModal.close()\"\u003eOK\u003c/button\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "erjillsison": 2,
      "-": 37
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-page.component.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService } from \u0027../../../services/auth.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthInfo, MessageOutput, Nationalities, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormControl, FormGroup } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { Gender } from \u0027../../../types/gender\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  UploadEditProfilePictureModalComponent,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " * Student profile page."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-profile-page\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-profile-page.component.html\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-profile-page.component.scss\u0027],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfilePageComponent implements OnInit {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  user: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  student!: StudentProfile;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  name?: string;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  editForm!: FormGroup;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  nationalities?: string[];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  profilePicLink!: string;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  currentTime?: number;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  defaultPictureLink: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  private backendUrl: string \u003d environment.backendUrl;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // populate drop-down menu for nationality list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initNationalities();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      this.user \u003d queryParams.user;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      this.profilePicLink \u003d `${this.backendUrl}/webapi/student/profilePic`;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudentProfile();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fetches the list of nationalities needed for the drop down box."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  initNationalities(): void {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/nationalities\u0027).subscribe((response: Nationalities) \u003d\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      this.nationalities \u003d response.nationalities;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the student profile details for this page."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentProfile(): void {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authService.getAuthUser().subscribe((auth: AuthInfo) \u003d\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      if (auth.user) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        this.id \u003d auth.user.id;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        // retrieve profile once we have the student\u0027s googleId"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        this.studentProfileService.getStudentProfile().subscribe((response: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            this.student \u003d response;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            this.name \u003d response.name;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            this.initStudentProfileForm(this.student);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(\u0027Error retrieving student profile\u0027);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(response.error.message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * Initializes the edit form with the student profile fields fetched from the backend."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  initStudentProfileForm(profile: StudentProfile): void {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(profile.shortName),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(profile.email),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(profile.institute),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(profile.nationality),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(profile.nationality),"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(profile.gender),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(profile.moreInfo),"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "   * Prompts the user with a modal box to confirm changes made to the form."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  onSubmit(confirmEditProfile: any): void {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(confirmEditProfile);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   * Opens a modal box to upload/edit profile picture."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  onUploadEdit(): void {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.ngbModal.open(UploadEditProfilePictureModalComponent);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.profilePicLink \u003d this.profilePicLink;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then((formData: FormData) \u003d\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      if (!formData) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        this.statusMessageService.showWarningMessage(\u0027No photo uploaded\u0027);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        user: this.user,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      this.httpRequestService.post(\u0027/student/profilePic\u0027, paramsMap, formData)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(\u0027Your profile picture has been saved successfully\u0027);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            // force reload"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            const timestamp: number \u003d (new Date()).getTime();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            this.profilePicLink \u003d `${this.backendUrl}/webapi/student/profilePic?${timestamp}`;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(response.error.message);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the form data to edit the student profile details."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  submitEditForm(): void {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentProfileService.updateStudentProfile(this.user, this.id, {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      shortName: this.editForm.controls.studentshortname.value,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      email: this.editForm.controls.studentprofileemail.value,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      institute: this.editForm.controls.studentprofileinstitute.value,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      nationality: this.editForm.controls.studentnationality.value,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      gender: this.editForm.controls.studentgender.value,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      moreInfo: this.editForm.controls.studentprofilemoreinfo.value,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: this.editForm.controls.existingNationality.value,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((response: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      if (response) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(response.message);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Could not save your profile! ${response.error.message}`);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "   * Prompts the user with a modal box to confirm deleting the profile picture."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  onDelete(confirmDeleteProfilePicture: any): void {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(confirmDeleteProfilePicture);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the profile picture and the profile picture key"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteProfilePicture(): void {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      user: this.user,"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      googleid: this.id,"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/student/profilePic\u0027, paramMap)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(response.message);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            this.profilePicLink \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            showErrorMessage(`Could not delete your profile picture! ${response.error.message}`);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(): void {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profilePicLink \u003d this.defaultPictureLink;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 5,
      "-": 197
    }
  },
  {
    "path": "src/web/services/feedback-sessions.service.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { default as templateSessions } from \u0027../data/template-sessions.json\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessions, FeedbackSessionSubmittedGiverSet,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  HasResponses,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  OngoingSessions,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionCreateRequest,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionStudentRemindRequest,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  FeedbackSessionUpdateRequest,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "crizyli"
        },
        "content": "} from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * A template session."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export interface TemplateSession {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  questions: FeedbackQuestion[];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles sessions related logic provision."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "export class FeedbackSessionsService {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets template sessions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  getTemplateSessions(): TemplateSession[] {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    return templateSessions;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a feedback session by calling API."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  createFeedbackSession(courseId: string, request: FeedbackSessionCreateRequest): Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid: courseId };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.post(\u0027/session\u0027, paramMap, request);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a feedback session by calling API."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  updateFeedbackSession(courseId: string, feedbackSessionName: string, request: FeedbackSessionUpdateRequest):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      Observable\u003cFeedbackSession\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid: courseId, fsname: feedbackSessionName };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.put(\u0027/session\u0027, paramMap, request);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all ongoing session by calling API."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  getOngoingSessions(startTime: number, endTime: number): Observable\u003cOngoingSessions\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      starttime: String(startTime),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      endtime: String(endTime),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.get(\u0027/sessions/ongoing\u0027, paramMap);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all sessions for the instructor by calling API."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  getFeedbackSessionsForInstructor(courseId?: string): Observable\u003cFeedbackSessions\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    let paramMap: { [key: string]: string };"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    if (courseId !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        isinrecyclebin: \u0027false\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.get(\u0027/sessions\u0027, paramMap);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all sessions in the recycle bin for the instructor by calling API."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  getFeedbackSessionsInRecycleBinForInstructor(): Observable\u003cFeedbackSessions\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      isinrecyclebin: \u0027true\u0027,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.get(\u0027/sessions\u0027, paramMap);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all sessions for the student by calling API."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  getFeedbackSessionsForStudent(courseId?: string): Observable\u003cFeedbackSessions\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    let paramMap: { [key: string]: string };"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    if (courseId !\u003d null) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      paramMap \u003d {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.get(\u0027/sessions\u0027, paramMap);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if there are responses for a specific question in a feedback session."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  hasResponsesForQuestion(questionId: string): Observable\u003cHasResponses\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: questionId,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.httpRequestService.get(\u0027/hasResponses\u0027, paramMap);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Sends e-mails to remind students who have not submitted their feedback."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  remindFeedbackSessionSubmissionForStudent("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      courseId: string, feedbackSessionName: string, request: FeedbackSessionStudentRemindRequest)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      : Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    };"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.httpRequestService.post(\u0027/session/remind/submission\u0027, paramMap, request);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Sends e-mails to remind students on the published results link."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  remindResultsLinkToStudents("
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      courseId: string, feedbackSessionName: string, request: FeedbackSessionStudentRemindRequest)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      : Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    };"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.httpRequestService.post(\u0027/session/remind/result\u0027, paramMap, request);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   * Gets a set of givers that has given at least one response in the feedback session."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "crizyli"
        },
        "content": "   */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  getFeedbackSessionSubmittedGiverSet("
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      courseId: string, feedbackSessionName: string): Observable\u003cFeedbackSessionSubmittedGiverSet\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "crizyli"
        },
        "content": "      fsname: feedbackSessionName,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    };"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "crizyli"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "crizyli"
        },
        "content": "    return this.httpRequestService.get(\u0027/session/submitted/giverset\u0027, paramMap);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "crizyli"
        },
        "content": "  }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "crizyli": 55,
      "-": 122
    }
  },
  {
    "path": "src/web/types/default-question-structs.ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackConstantSumDistributePointsType,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackConstantSumQuestionDetails,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackConstantSumResponseDetails,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackContributionQuestionDetails,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackContributionResponseDetails,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqQuestionDetails,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMcqResponseDetails,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMsqQuestionDetails,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackMsqResponseDetails,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackNumericalScaleQuestionDetails,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackNumericalScaleResponseDetails,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionType,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankOptionsQuestionDetails,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankOptionsResponseDetails,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankRecipientsQuestionDetails,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRankRecipientsResponseDetails,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRubricQuestionDetails,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackRubricResponseDetails,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackTextQuestionDetails,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackTextResponseDetails,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./api-output\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "crizyli"
        },
        "content": "import { CONTRIBUTION_POINT_NOT_SUBMITTED, NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED } from \u0027./feedback-response-details\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default text question details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_TEXT_QUESTION_DETAILS: () \u003d\u003e FeedbackTextQuestionDetails \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackTextQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        recommendedLength: 0,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default text question response details."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_TEXT_RESPONSE_DETAILS: () \u003d\u003e FeedbackTextResponseDetails \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackTextResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        answer: \u0027\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.TEXT,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default contribution question details."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_CONTRIBUTION_QUESTION_DETAILS: () \u003d\u003e FeedbackContributionQuestionDetails \u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackContributionQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        isNotSureAllowed: true,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.CONTRIB,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default contribution question response details."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_CONTRIBUTION_RESPONSE_DETAILS: () \u003d\u003e FeedbackContributionResponseDetails \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackContributionResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        answer: CONTRIBUTION_POINT_NOT_SUBMITTED,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.CONTRIB,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default constant sum question details."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_CONSTSUM_QUESTION_DETAILS: () \u003d\u003e FeedbackConstantSumQuestionDetails \u003d"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackConstantSumQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        numOfConstSumOptions: 0,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        constSumOptions: [\u0027\u0027, \u0027\u0027],"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        distributeToRecipients: false,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        pointsPerOption: false,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        forceUnevenDistribution: false,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        distributePointsFor: FeedbackConstantSumDistributePointsType.NONE,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        points: 100,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.CONSTSUM,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default constant sum question response details."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_CONSTSUM_RESPONSE_DETAILS: () \u003d\u003e FeedbackConstantSumResponseDetails \u003d"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackConstantSumResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        answers: [],"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.CONSTSUM,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default numerical scale question details."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_NUMSCALE_QUESTION_DETAILS: () \u003d\u003e FeedbackNumericalScaleQuestionDetails \u003d"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackNumericalScaleQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        minScale: 1,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        maxScale: 5,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        step: 0.5,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.NUMSCALE,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default numerical scale question response details."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_NUMSCALE_RESPONSE_DETAILS: () \u003d\u003e FeedbackNumericalScaleResponseDetails \u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackNumericalScaleResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "crizyli"
        },
        "content": "        answer: NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.NUMSCALE,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default MCQ question details."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_MCQ_QUESTION_DETAILS: () \u003d\u003e FeedbackMcqQuestionDetails \u003d"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackMcqQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        hasAssignedWeights: false,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        mcqWeights: [],"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        mcqOtherWeight: 0,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        numOfMcqChoices: 0,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        mcqChoices: [],"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        otherEnabled: false,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        generateOptionsFor: FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.MCQ,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default MCQ question response details."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_MCQ_RESPONSE_DETAILS: () \u003d\u003e FeedbackMcqResponseDetails \u003d"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackMcqResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        answer: \u0027\u0027,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        isOther: false,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        otherFieldContent: \u0027\u0027,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.MCQ,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default MSQ question details."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_MSQ_QUESTION_DETAILS: () \u003d\u003e FeedbackMsqQuestionDetails \u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackMsqQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        msqChoices: [],"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        otherEnabled: false,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        generateOptionsFor: FeedbackParticipantType.NONE,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        maxSelectableChoices: Number.MIN_VALUE,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        minSelectableChoices: Number.MIN_VALUE,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        hasAssignedWeights: false,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        msqWeights: [],"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        msqOtherWeight: 0,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.MSQ,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default MSQ question response details."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_MSQ_RESPONSE_DETAILS: () \u003d\u003e FeedbackMsqResponseDetails \u003d"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackMsqResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        answers: [],"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        isOther: false,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        otherFieldContent: \u0027\u0027,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.MSQ,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default rubric question details."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_RUBRIC_QUESTION_DETAILS: () \u003d\u003e FeedbackRubricQuestionDetails \u003d"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackRubricQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        hasAssignedWeights: false,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        numOfRubricChoices: 0,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricChoices: [],"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        numOfRubricSubQuestions: 0,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricSubQuestions: [],"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricWeightsForEachCell: [],"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        rubricDescriptions: [],"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.RUBRIC,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default rubric question response details."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_RUBRIC_RESPONSE_DETAILS: () \u003d\u003e FeedbackRubricResponseDetails \u003d"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackRubricResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        answer: [],"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.RUBRIC,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default rank options question details."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_RANK_OPTIONS_QUESTION_DETAILS: () \u003d\u003e FeedbackRankOptionsQuestionDetails \u003d"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackRankOptionsQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        minOptionsToBeRanked: Number.MIN_VALUE,"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        maxOptionsToBeRanked: Number.MIN_VALUE,"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        areDuplicatesAllowed: false,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        options: [],"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.RANK_OPTIONS,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default rank options question response details."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_RANK_OPTIONS_RESPONSE_DETAILS: () \u003d\u003e FeedbackRankOptionsResponseDetails \u003d"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackRankOptionsResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        answers: [],"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.RANK_OPTIONS,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default rank recipients question details."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS: () \u003d\u003e FeedbackRankRecipientsQuestionDetails \u003d"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackRankRecipientsQuestionDetails \u003d\u003e {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        minOptionsToBeRanked: Number.MIN_VALUE,"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        maxOptionsToBeRanked: Number.MIN_VALUE,"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        areDuplicatesAllowed: false,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        questionText: \u0027\u0027,"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": " * Structure for default rank recipients question response details."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "export const DEFAULT_RANK_RECIPIENTS_RESPONSE_DETAILS: () \u003d\u003e FeedbackRankRecipientsResponseDetails \u003d"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    (): FeedbackRankRecipientsResponseDetails \u003d\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        answer: 0,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      }
    ],
    "authorContributionMap": {
      "crizyli": 2,
      "-": 265
    }
  }
]
