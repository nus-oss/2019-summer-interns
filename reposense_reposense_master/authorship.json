[
  {
    "path": "docs/UserGuide.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# RepoSense - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "* [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "* [Interpreting the Report](#interpreting-the-report)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Chart Panel](#chart-panel)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Code Panel](#code-panel)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Commits Panel](#commits-panel)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Tool Bar](#tool-bar)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuring a Repo to Provide Additional Data to RepoSense](#configuring-a-repo-to-provide-additional-data-to-reposense)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Provide Data Using a json Config File](#provide-data-using-a-json-config-file)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Provide Data Using `@@author` Tags](#provide-data-using-author-tags)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Customizing the Analysis](#customizing-the-analysis)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Customize Using Command Line Parameters](#customize-using-command-line-parameters)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Customize Using csv Config Files](#customize-using-csv-config-files)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`repo-config.csv`](#repo-configcsv)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`author-config.csv`](#author-configcsv)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [Analyzing Multiple Repos](#analyzing-multiple-repos)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* [Using Travis-CI to automate publishing of the report to GitHub Pages](#using-travis-ci-to-automate-publishing-of-the-report-to-github-pages)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "First, ensure that you have the necessary prerequisites:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* **JDK `1.8.0_60`** or later"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* **git `2.14`** or later on the command line (run `git --version` in your OS terminal to confirm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Next, download the latest executable Jar from our [releases](https://github.com/reposense/RepoSense/releases/latest)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The simplest use case for RepoSense is to generate a report for the entire history of a repo. Here are the steps:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "1. Generate the report for the repo by executing the following command in a terminal:\u003cbr/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   Format : `java -jar RepoSense.jar --repo FULL_REPO_URL` (note the `.git` at the end)\u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   Example: `java -jar RepoSense.jar --repo https://github.com/reposense/RepoSense.git`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "1. The previous step analyzes the default branch of the repo and creates the report in a directory named `reposense-report`. Run the following command to view the report (it will open up in your default Browser):\u003cbr/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   `java -jar RepoSense.jar --view reposense-report`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can combine the 2 steps by running the following command to generate the report and automatically open it afterwards:\u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    `java -jar RepoSense.jar --repo FULL_REPO_URL --view`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "## Interpreting the Report"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "As the report consist of static pages, it can be viewed using a Web Browser, and can be deployed on most Web hosting platforms (such as [GitHub Pages](https://pages.github.com/)). Assuming the report has been generated already, here are the two options to load the report onto a Browser:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* Run RepoSense with the `--view` option:\u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  Format: `java -jar RepoSense.jar --view REPORT_FOLDER`\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  Example: `java -jar RepoSense.jar --view ./myReport/reposense-report`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Open the `index.html` (in the report directory) using a Browser and if the report was not loaded automatically, upload the `archive.zip` (in the same directory) manually."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example of how the report looks like:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "![report](images/report-features.png)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "It consists of three main parts: the [_Chart Panel_](#chart-panel), the [_Code Panel_](#code-panel), and the [_Tool Bar_](#tool-bar), each of which is explained in the sections below."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "### Chart Panel"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "![Ramp Charts](images/rampchart.png)\u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "The `Chart Panel` (an example is shown above) contains _Ramp Charts_ and _Contribution Bars_."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "**Ramp Chart**: This is a visualization of frequency and quantity of contributions of an author for a specific repository."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "* **Title**: Each title consists of the **index**, the **name** of the author, a button to view author\u0027s **code** and a button to view author\u0027s **repo**."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "* **Rows**: Each _row_ (i.e., light blue rectangle) represents the contribution timeline of an author for a specific repository."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "* **Ramp**: Each row contains **ramps** -- the pointy saw-tooth shapes you see in the screenshot above. A ramp represents the contributions of an author possibly aggregated over a period (e.g., a day or a week)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  * The area of the ramp is proportional to the amount of contribution the author did at that time period."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  * The position of the right edge of the ramp (perpendicular to the blue bar) represents the period (the day or the week) in which the contribution was made."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  * Hover the pointer over a ramp to see the total number of lines represented by that ramp."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  * Click on the ramp to see on GitHub the list of commits represented by that ramp."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* To make comparison between two authors easier, the color of the ramps that represent different authors\u0027 contributions at the same time period are the same."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "* Ramps representing big contributions can overlap with earlier time periods. This represents the possibility that if the work committed during a specific period is big, it could have started in an earlier time period."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "**Contribution Bar**: The total amount of code contributed by an author during the _total analysis period_ is represented by the length of the **red bars** (called _contribution bars_) that appear at the bottom of the row."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "* Hover over a contribution bar to see the exact amount of the contribution."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "* If an author contributed significantly higher than other authors, the contribution bar can span multiple lines (see the 4th author in the screenshot for an example)."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "### Code Panel"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "The `Code Panel` allows users to see the code attributed to a specific author. Click on the name of the author in the `Chart Panel` to display the `Code Panel` on the right."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "* The Code Panel shows the files that contain author\u0027s contributions, sorted by the number of lines written."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "* Select the radio button to enable one of the following 2 filters. Note that only 1 of the 2 filters is active at any time."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    * Type file path glob in glob filter to include files matching the glob expression."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    * Select the checkboxes to include files of preferred file extensions."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the file title toggles the file content."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the first icon beside the file title opens the history view of the file on github."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the second icon beside the file title opens the blame view of the file on github."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "* Code attributed to the author is highlighted in green."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "* Non-trivial code segments that are not written by the selected author are hidden by default, but you can toggle them by clicking on the `...` icon."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "### Commits Panel"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "The `Commits Panel` allows users to see the commits attributed to a specific author. Hold `Command`\u0026#8984; (MacOS) or `Ctrl` (Others) and click on the ramp chart in the `Chart Panel` to select the time range where you want to display the `Commit Panel` for on the right."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "* The `Commits Panel` shows the commits that contain author\u0027s contributions, sorted by the date it was commited."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "* The date range for the `Chart Panel` can be updated by clicking on the \"Show ramp chart for this period\" below the name of the author."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "* The ramp slices displayed in the ramp chart for the `Commits Panel` represents individual commits."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "### Tool Bar"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "The `Tool Bar` at the top provides a set of configuration options that control the Chart Panel."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "* `Search` : filters the author and repository by keywords."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  * Multiple keywords/terms can be used, separated by spaces."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  * Entries that contain _any_ (not necessarily _all_) of the search terms will be displayed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  * The keywords used to filter author and repository are case-insensitive."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "* `Group by` : grouping criteria for the rows of results"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `None` : results will not be grouped in any particular way."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Repo/Branch` : results will be grouped by repositories and its\u0027 associating branches."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Author` : results will be grouped by the name of the author. Contributions made to multiple repositories by a particular author will be grouped under the author."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "* `Sort groups by`: sorting criteria for the main group"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Name` : groups will be sorted by GitHub ID in alphabetical order."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Repo/branch` : groups will be sorted in alphabetical order by the name of the repo, followed by name of the branch. See note [1] below."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Contribution` : groups will be sorted by the combined contributions within a group, in the order of number of lines added"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Variance` : groups will be sorted by the average of the squared differences from the average number of lines of code contributed per day among all authors involved. Detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "* `Sort within groups by`: sorting criteria within each group"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Name` : each sub-group will be sorted by GitHub ID in alphabetical order."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Repo/branch` : each sub-group will be sorted in alphabetical order by the name of the repo, followed by name of the branch. See note [1] below."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Contribution` : each sub-group will be sorted by individual contributions in the order of number of lines added"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "  * `Variance` : each sub-group will be sorted by the average of the squared differences from the average number of lines of code contributed per day by each author into a particular repo. Detailed definition of variance is located [here](https://en.wikipedia.org/wiki/Variance)."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "* `Granularity` : the period of time for which commits are aggregated in the Ramp Chart."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    * `Commit`: each commit made is shown as one ramp"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    * `Day`: commits within a day (commits made within 00:00 to 23:59) are shown as one ramp"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    * `Week`: commits within a week are shown as one ramp"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "* `Since`, `Until` : the date range for the Ramp Chart (not applied to the Contribution Bars)."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "Notes:\u003cbr\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "[1] **`Repo/Branch`**: the repo/branch name is constructed as `ORGANIZATION_REPOSITORY_BRANCH` e.g., `resposense_reposense_master`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "**Bookmarking a specific toolbar setting and the opened code panel**: The URL changes according to the toolbar configuration and opened code panel viewed. You can save a specific configuration of the report by bookmarking the url (using browser functionality)."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "## Configuring a Repo to Provide Additional Data to RepoSense"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "When a repo is being analyzed by RepoSense, there are **two ways repo owners can provide additional details to RepoSense**: using a config file, or annotating code using `@@author` tags. The two approaches are explained in the sections below."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "### Provide Data Using a json Config File"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "* which files/authors/commits to analyze/omit"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "* which git and GitHub usernames belong to which authors"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "* the display of an author"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "To use this feature, add a `_reposense/config.json` to the root of your repo using the format in the example below ([another example](../_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```json"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "  \"formats\": [\"html\", \"css\"],"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\"],"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authors\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "  ["
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      \"githubId\": \"alice\","
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"Alice T.\","
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      \"authorNames\": [\"AT\", \"A\"],"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      \"ignoreGlobList\": [\"**.css\"]"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      \"githubId\": \"bob\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Note: all fields are optional unless specified otherwise."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Fields to provide _repository-level_ info**:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob)."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "* `formats`: File formats to analyze. Default: `adoc cs css fxml gradle html java js json jsp md py tag txt xml`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "**Fields to provide _author-level_ info**:\u003cbr\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "Note: `authors` field should contain _all_ authors that should be captured in the analysis."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "* `githubId`: GitHub username of the author. :exclamation: Mandatory field."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "* `emails`: Associated GitHub emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "* `displayName`: Name to display on the report for this author."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default RepoSense assumes an author would use her GitHub username as the Git username too. The meaning of _Git Author Name_ is explained in [_A Note About Git Author Name_](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author . In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "* Format : `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "##### **A Note About Git Author Name**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "commit cd7f610e0becbdf331d5231887d8010a689f87c7"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ConfiguredAuthorName \u003cauthor@example.com\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "Date:   Fri Feb 9 19:14:41 2018 +0800"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    Make some changes to show my new author\u0027s name"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ActualGitHubId \u003cauthor@example.com\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "Date:   Fri Feb 9 19:13:13 2018 +0800"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    Initial commit"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": " ..."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "`ActualGitHubId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "To find the author name that you are currently using for your current git repository, run the following command within your git repository:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "git config user.name"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "git config user.name \"YOUR_AUTHOR_NAME”"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "To set the author name to use a default value you want for future git repositories, you can use the following command:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "git config --global user.name \"YOUR_AUTHOR_NAME”"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "RepoSense expects the Git Author Name to be the same as author\u0027s GitHub username. If an author\u0027s `Git Author Name` is different from her `GitHub ID`, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "### Provide Data Using `@@author` Tags"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "If you want to override the code authorships deduced by RepoSense (which is based on Git blame/log data), you can use `@@author` tags to specify certain code segments should be credited to a certain author irrespective of git history. An example scenario where this is useful is when a method was originally written by one author but a second author did some minor refactoring to it; in this case RepoSense might attribute the code to the second author while you may want to attribute the code to the first author."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "There are 2 types of `@@author` tags:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "- Start Tags (format: `@@author AUTHOR_GITHUB_ID`): A start tag indicates the start of a code segment written by the author identified by the `AUTHOR_GITHUB_ID`."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "- End Tags (format: `@@author`): Optional. If not provided, the code till the next start tag (or the end of the file) will be attributed to the author specified in the start tag above. Use only when necessary to minimize polluting your code with these extra tags."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "The `@@author` tags should be enclosed within a comment, using the comment syntax of the file in concern. Below are some examples:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "![author tags](images/add-author-tags.png)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "Special thanks to [Collate](https://github.com/se-edu/collate) for providing the inspiration for this functionality."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "Note: Remember to **commit** the files after the changes. (reason: RepoSense can see committed code only)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "## Customizing the Analysis"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "The analysis can be customized using additional command line parameters or using config files. The two approaches are explained in the sections below."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "### Customize Using Command Line Parameters"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "As you know, `java -jar RepoSense.jar` takes the following parameter:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--repo, -r REPO_LOCATION`**: The URL or the disk location of the git repositories to analyze (`-r` as alias).\u003cbr\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using URL: `--repo https://github.com/reposense/RepoSense.git`\u003cbr\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using disk location: `--repo C:\\Users\\user\\Desktop\\GitHub\\RepoSense`\u003cbr\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using alias: `-r https://github.com/reposense/RepoSense.git`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "In addition, there are some _optional_ extra parameters you can use to customize the analysis further:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--output, -o OUTPUT_DIRECTORY`**: Indicates where to save the report generated (`-o` as alias). Default: current directory.\u003cbr\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  Example: `--output ./foo` or `-o ./foo` (in this case, the report will be in the `./foo/reposense-report` folder)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--since, -s START_DATE`**: The start date of analysis (`-s` as alias). Format: `DD/MM/YYYY`\u003cbr\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--since 21/10/2017` or `-s 21/10/2017`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--until, -u END_DATE`**: The end date of analysis (`-u` as alias). The analysis excludes the end date. Format: `DD/MM/YYYY`\u003cbr\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--until 21/10/2017` or `-u 21/10/2017`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--formats, -f LIST_OF_FORMATS`**: A space-separated list of file extensions that should be included in the analysis (`-f` as alias). Default: `adoc cs css fxml gradle html java js json jsp md py tag txt xml`\u003cbr\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--formats css fxml gradle` or `-f css fxml gradle`"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--ignore-standalone-config, -i`**: A flag to ignore the standalone config file in the repo (`-i` as alias). This flag will not overwrite the `Ignore standalone config` field in the csv config file. Default: the standalone config file is not ignored.\u003cbr\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--ignore-standalone-config` or `-i`"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--view, -v [REPORT_FOLDER]`**: A flag to launch the report automatically after processing (`-v` as alias). Note that if the `REPORT_FOLDER` argument is given, no analysis will be performed and the report specified by the argument will be opened.\u003cbr\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "Example:`--view` or `-v`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--timezone, -t ZONE_ID`**: Indicates the timezone which will be used for the generated report. One kind of valid timezones is relative to UTC. E.g. `UTC`, `UTC+08`, `UTC-1030`. Format: `ZONE_ID[±hh[mm]]`. Default: system\u0027s default timezone.\u003cbr\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--timezone UTC+08` or `-t UTC-1030`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s an example of a command using all parameters:\u003cbr\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "`java -jar RepoSense.jar --repo https://github.com/reposense/RepoSense.git --output ./report_folder --since 31/1/2017 --until 31/12/2018 --formats java adoc xml --view --ignore-standalone-config --timezone UTC+08`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s an example of a command using all alias of parameters:\u003cbr\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "`java -jar RepoSense.jar -r https://github.com/reposense/RepoSense.git -o ./report_folder -s 31/1/2017 -u 31/12/2018 -f java adoc xml -v -i`"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "Also, there are two _information_ parameters you can use to know more about RepoSense:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--help, -h`**: Show help message."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--version, -V`**: Show the version of RepoSense."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "### Customize Using csv Config Files"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "Another, more powerful, way to customize the analysis is by using dedicated config files. In this case you need to use the `--config` parameter instead of the `--repo` parameter when running RepoSense, as follows:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--config, -c CONFIG_DIRECTORY`**: The directory in which you have the config files (`-c` as alias).\u003cbr\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`java -jar RepoSense.jar --config  ./my_configs` or `java -jar RepoSense.jar -c  ./my_configs`"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "The directory used with the `--config` parameter should contain a `repo-config.csv` file and, optionally, an `author-config.csv` file, both of which are described in the sections below."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "#### `repo-config.csv`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "`repo-config.csv` file contains repo-level config data as follows:"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* First row: column headings, ignored by RepoSense"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "* Second row onwards: each row represents a repository\u0027s configuration"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "Repository\u0027s Location|Branch|File formats|Ignore Glob List|Ignore standalone config|Ignore Commits List"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "---------------------|------|------------|----------------|------------------------|-------------------"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "`https://github.com/foo/bar.git`|`master`|`override:java;css`|`test/**`|`yes`|`2fb6b9b2dd9fa40bf0f9815da2cb0ae8731436c7;c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "When using standalone config (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "Repository\u0027s Location | The `GitHub URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar`"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Default: `adoc;cs;css;fxml;gradle;html;java;js;json;jsp;md;py;tag;txt;xml`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author. e.g., `test/**;temp/**`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Commit List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e  "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "#### `author-config.csv`"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can use a `author-config.csv` (which should be in the same directory as `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Branch | The branch to analyze for this author e.g., `master`. Default: the default branch of the repo"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "Author\u0027s GitHub ID | GitHub username of the target author e.g., `JohnDoe`"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e | Associated Github emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Display Name | The name to display for the author. Default: author\u0027s GitHub username."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e | The meaning of _Git Author Name_ is explained in [_A Note About Git Author Name_](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Glob List\u003csup\u003e*\u003c/sup\u003e | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "\u003e Note: the first row consists of config headings, which is ignored by RepoSense."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "If `author-config.csv` is not given and the repo has not provide author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "## Analyzing Multiple Repos"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "This section assumes that you have read the earlier sections of the user guide."
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "The simplest way to analyze multiple repos in one go is to use the `--repos` parameter in place of the `--repo` parameter when running RepoSense."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "* Format : `java -jar RepoSense.jar --repos REPO_LIST` \u003cbr\u003e"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "* Example: `java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git c:/myRepose/foo/bar` analyzes the two specified repos (one remote, one local) and generates one report containing details of both."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can use csv config files to customize the analysis as before while specifying multiple repos to analyze."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "* `repo-config.csv`: Add additional rows for the extra repos ([example](repo-config.csv))"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "* `author-config.csv`: Add one row for each author in each repo you want to analyze"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Travis-CI to automate publishing of the report to GitHub Pages"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "Follow this [guide](PublishingGuide.md) to automate publishing of your report to GitHub Pages."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: Does RepoSense work on private repositories?"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** *RepoSense* will first clone the git repository to be analyzed, thus if you do not have access to the repository, we are unable to run the analysis.\u003cbr\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "To enable *RepoSense* to work on private repositories, ensure that you have enabled access to your private repository in your git terminal first, before running the analysis."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: How does formats work?"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** **Formats** are the [file extensions](https://techterms.com/definition/fileextension), which is the **suffix** at the end of a filename that indicates what type of file it is.\u003cbr\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "The formats/file extensions to be analyzed by *RepoSense* can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv) and [command line](#customize-using-command-line-parameters)."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: How does ignore glob list work?"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** [Glob](https://en.wikipedia.org/wiki/Glob_(programming)) is the pattern to specify a set of filenames with [wildcard characters](https://www.computerhope.com/jargon/w/wildcard.htm). **Ignore glob list** is the list of patterns to specify all the files in the repository which should be ignored from analysis.\u003cbr\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "The ignore glob list can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv) and [author-config file](#author-configcsv)."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: My commit contributions does not appear in the ramp chart (despite appearing in the contribution bar and code panel)?"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** This is probably a case of giving an incorrect author name alias (or github ID) in your [author-config file](#author-configcsv).\u003cbr\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "Please refer to [A Note About Git Author Name](#a-note-about-git-author-name) above on how to find out the correct author name you are using, and how to change it.\u003cbr\u003e"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "Also ensure that you have added all author name aliases that you may be using (if you are using multiple computers or have previously changed your author name).\u003cbr\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you may choose to configure RepoSense to track using your GitHub email instead in your [standalone config file](#provide-data-using-a-json-config-file) or [author-config file](#author-configcsv), which is more accurate compared to author name aliases. The associated GitHub email you are using can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: My contribution bar and code panel is empty (despite having lots of commit contributions in the ramp chart)?"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** The contribution bar and code panel records the lines you have authored to the **latest** commit of the repository and branch you are analyzing. As such, it is possible that while you have lots of commit contributions, your final authorship contribution is low if you have only deleted lines, someone else have overwritten your code and taken authorship for it (currently, *RepoSense* does not have functionality to track overwritten lines).\u003cbr\u003e"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "It is also possible that another user has overriden the authorship of your lines using the [@@author tags](#provide-data-using-author-tags)."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: I have added/edited the standalone config file in my local repository, but RepoSense is not using it when running the analysis?"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** Ensure that you have committed the changes to your standalone config file first before running the analysis, as *RepoSense* is unable to detect uncommitted changes to your local repository."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: I am able to run RepoSense on my repository on a Linux/Mac OS, but it fails on a Windows OS?"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** It is possible you may have some file names with [special characters](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#naming-conventions) in them, which is disallowed in Windows OS. As such, *RepoSense* is unable to fully clone your repository, thus failing the analysis."
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "#### Q: Why are some files not captured by RepoSense?"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "**A:** The files may be [binary files](https://en.wikipedia.org/wiki/Binary_file). RepoSense does not analyze binary files. Common binary files include images (`.jpg`, `.png`), applications (`.exe`), zip files (`.zip`, `.rar`) and certain document types (`.docx`, `.pptx`)."
      }
    ],
    "authorContributionMap": {
      "jylee-git": 24,
      "jamessspanggg": 1,
      "-": 364
    }
  },
  {
    "path": "frontend/src/index.pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "html"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  head"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    title RepoSense Report"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://fonts.googleapis.com/css?family\u003dTitillium+Web\")"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/normalize.css@8.0/normalize.min.css\")"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/muicss@0.9/dist/css/mui.min.css\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/highlight.js@9.14/styles/color-brewer.min.css\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"https://cdn.jsdelivr.net/npm/vue-loading-spinner@1.0/dist/vue-loading-spinner.css\")"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    link(rel\u003d\"stylesheet\", href\u003d\"static/css/style.css\")"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\", defer\u003dTrue)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/npm/vue@2.5/dist/vue.js\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/npm/jszip@3.1/dist/jszip.min.js\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/highlight.min.js\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/asciidoc.min.js\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/gradle.min.js\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/plaintext.min.js\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/scss.min.js\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.14/build/languages/yaml.min.js\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"https://cdn.jsdelivr.net/npm/vue-loading-spinner@1.0/dist/vue-loading-spinner.js\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  body"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    div#app"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      #app-wrapper(v-if\u003d\"userUpdated\", onmousemove\u003d\"mouseMove(event)\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        onmouseup\u003d\"deregisterMouseMove()\", onmouseleave\u003d\"deregisterMouseMove()\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        #tab-resize-guide"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        #summary-wrapper"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-status(v-if\u003d\"loadedRepo\u003crepoLength\") Loading repos ... {{ loadedRepo }} / {{ repoLength }}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          v_summary("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            ref\u003d\"summary\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:repos\u003d\"getUsers()\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:view-zoom\u003d\"updateTabZoom\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:view-authorship\u003d\"updateTabAuthorship\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            v-on:get-dates\u003d\"receiveDates\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          )"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          .timestamp-footer"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            span Generated by \u0026nbsp;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            a("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              v-bind:href\u003d\"getRepoSenseLink()\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            )"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              strong RepoSense {{ repoSenseVersion }}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            span \u0026nbsp; on {{ creationDate }}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        #tabs-wrapper(v-if\u003d\"isTabActive\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          #tab-resize(onmousedown\u003d\"registerMouseMove()\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          .tab-close(v-on:click\u003d\"isTabActive\u003dfalse\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            i.fas.fa-caret-right"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          .tab-content"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            .tab-panes"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              v_authorship#tab-authorship.tab-pane("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                v-if\u003d\"tabType \u003d\u003d\u003d \u0027authorship\u0027\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:key\u003d\"generateKey(tabInfo.tabAuthorship)\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:info\u003d\"tabInfo.tabAuthorship\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "              v_zoom#tab-zoom.tab-pane("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                v-else-if\u003d\"tabType \u003d\u003d\u003d \u0027zoom\u0027\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:key\u003d\"generateKey(tabInfo.tabZoom)\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:info\u003d\"tabInfo.tabZoom\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                v-on:view-summary\u003d\"updateSummaryDates\")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              #tab-empty.tab-pane(v-else)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                .title"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                  span To view the code attributed to a specific author, click the \u0026nbsp;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.fas.fa-code"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                  span \u0026nbsp; icon next to that author\u0027s name."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                  br"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                  span To hide the code view, click the \u0026nbsp;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.fas.fa-caret-right"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                  span \u0026nbsp; icon on the left."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      template(v-else)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        .empty Please upload a .zip file generated by RepoSense."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        form#file-upload(onsubmit\u003d\"return false;\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "          input(type\u003d\"file\", accept\u003d\".zip\", v-on:change\u003d\"updateReportZip\")"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          .loader(v-if\u003d\"isLoading\")"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            circle-spinner"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            .loading Loading resources..."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_summary"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      #summary.wrapper"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        form.summary-picker.mui-form--inline(v-on:submit.prevent\u003d\"getFiltered();\")"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-picker__section"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-textfield"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "              input.summary-picker__search(type\u003d\"text\", v-on:change\u003d\"updateFilterSearch\", v-model\u003d\"filterSearch\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              label search"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-select.grouping"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "              select(v-model\u003d\"filterGroupSelection\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"groupByNone\") None"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"groupByRepos\") Repo/Branch"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"groupByAuthors\") Author"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "              label group by"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-select.sort-group"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              select(v-model\u003d\"sortGroupSelection\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"groupTitle\") \u0026uarr; group title"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"groupTitle dsc\") \u0026darr; group title"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"totalCommits\") \u0026uarr; contribution"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"variance\") \u0026uarr; variance"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"variance dsc\") \u0026darr; variance"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "              label sort groups by"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-select.sort-within-group"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              select(v-model\u003d\"sortWithinGroupSelection\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"title\") \u0026uarr; title"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"title dsc\") \u0026darr; title"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"totalCommits\") \u0026uarr; contribution"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"totalCommits dsc\") \u0026darr; contribution"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"variance\") \u0026uarr; variance"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                option(value\u003d\"variance dsc\") \u0026darr; variance"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "              label sort within groups by"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-select"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "              select(v-model\u003d\"filterTimeFrame\")"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"commit\") Commit"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"day\") Day"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                option(value\u003d\"week\") Week"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "              label granularity"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-picker__section"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-textfield.summary-picker__date"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "              input(type\u003d\"date\", v-model\u003d\"tmpFilterSinceDate\", onkeydown\u003d\"return false\","
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:min\u003d\"minDate\", v-bind:max\u003d\"filterUntilDate\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "              label since"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-textfield.summary-picker__date"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "              input(type\u003d\"date\", v-model\u003d\"tmpFilterUntilDate\", onkeydown\u003d\"return false\","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                v-bind:min\u003d\"filterSinceDate\", v-bind:max\u003d\"maxDate\")"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "              label until"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-textfield.summary-picker__date"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "              a(v-on:click\u003d\"resetDateRange\") Reset date range"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-picker__checkboxes.summary-picker__section"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            label"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "              input(type\u003d\"checkbox\", v-model\u003d\"filterBreakdown\").mui-checkbox.summary-picker__checkbox"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "              span breakdown by file format"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        #summary-charts"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          .summary-charts(v-for\u003d\"repo of filteredRepos\")"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .summary-charts__title(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\") {{ repo[0].repoName }}\u0026nbsp;\u0026nbsp;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              .summary-charts__title--contribution(title\u003d\"Total contribution of group\") [{{ getGroupTotalContribution(repo) }} lines]"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .summary-charts__title(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ repo[0].displayName }} ({{ repo[0].name }})\u0026nbsp;\u0026nbsp;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              .summary-charts__title--contribution(title\u003d\"Total contribution of group\") [{{ getGroupTotalContribution(repo) }} lines]"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            .summary-charts__fileformat--breakdown(v-if\u003d\"filterBreakdown\")"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "              template(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByRepos\u0027\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                .summary-charts__fileformat--breakdown__legend("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-for\u003d\"fileFormat in Object.keys(repo[0].fileFormatContribution)\")"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.fas.fa-circle("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                      v-bind:style\u003d\"{ \u0027color\u0027 : contributionBarColors[fileFormat] }\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                  )"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                  span \u0026nbsp; {{ fileFormat }} \u0026nbsp;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "              template(v-else)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                .summary-charts__fileformat--breakdown__legend("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-for\u003d\"fileFormat in Object.keys(contributionBarColors)\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.fas.fa-circle("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                      v-bind:style\u003d\"{ \u0027color\u0027 : contributionBarColors[fileFormat] }\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                  )"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                  span \u0026nbsp; {{ fileFormat }} \u0026nbsp;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            .summary-chart(v-for\u003d\"(user, i) in repo\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "              .summary-chart__title"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                .summary-chart__title--index {{ i+1 }}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                .summary-chart__title--repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027\") {{ user.repoName }}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                .summary-chart__title--author-repo(v-if\u003d\"filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027\") {{ user.repoName }}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                .summary-chart__title--name(v-if\u003d\"filterGroupSelection !\u003d\u003d \u0027groupByAuthors\u0027\") {{ user.displayName }} ({{ user.name }})"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                a("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                  title\u003d\"click to view author\u0027s code\","
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  v-on:click\u003d\"openTabAuthorship(user, repo, i)\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                )"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.summary-chart__title--button.fas.fa-code"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                a("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  v-bind:href\u003d\"getRepoLink(repo[i])\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                  title\u003d\"click to view author\u0027s repo\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                )"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.summary-chart__title--button.fab.fa-github"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "              .summary-chart__ramp("
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                onclick\u003d\"viewClick(event)\","
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                v-on:click\u003d\"openTabZoom(user)\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "              )"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                v_ramp("
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-bind:user\u003d\"user\","
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-bind:tframe\u003d\"filterTimeFrame\","
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-bind:sdate\u003d\"filterSinceDate\","
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-bind:udate\u003d\"filterUntilDate\","
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-bind:avgsize\u003d\"avgCommitSize\")"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                .overlay"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "              .summary-chart__contribution"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                template(v-if\u003d\"filterBreakdown\")"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                  .summary-chart__contrib("
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                      v-for\u003d\"(widths, fileFormat) in getFileFormatContributionBars(user.fileFormatContribution)\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                  )"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                    .summary-chart__contrib--bar--fileformat("
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                        v-for\u003d\"width in widths\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                        v-bind:style\u003d\"{ width: width + \u0027%\u0027,\\"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                            \u0027background-color\u0027: contributionBarColors[fileFormat] }\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                        v-bind:title\u003d\"fileFormat + \u0027: \u0027 + user.fileFormatContribution[fileFormat] + \u0027 lines, \u0027\\"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                            + \u0027total: \u0027 + user.totalCommits + \u0027 lines \u0027 + \u0027(contribution from \u0027 + minDate + \u0027 to \u0027\\"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                            + maxDate + \u0027)\u0027\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                template(v-else)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                  .summary-chart__contrib("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                      v-bind:title\u003d\"\u0027Total contribution from \u0027 + minDate + \u0027 to \u0027 + maxDate + \u0027: \u0027\\"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                          + user.totalCommits + \u0027 lines\u0027\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                  )"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                    .summary-chart__contrib--bar("
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                        v-for\u003d\"width in getContributionBars(user.totalCommits)\","
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                        v-bind:style\u003d\"{ width: width+\u0027%\u0027 }\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_ramp"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      include ramp.pug"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_zoom"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      include tabs/zoom.pug"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    vuetemplate#v_segment"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      include tabs/segment.pug"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    vuetemplate#v_authorship"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      #authorship"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        .toolbar(v-if\u003d\"hasCommits(info)\")"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            a(v-if\u003d\"activeFilesCount \u003d\u003d\u003d 0\", v-on:click\u003d\"expandAll(true)\") Expand all"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            a(v-else, v-on:click\u003d\"expandAll(false)\") Collapse all"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        .title"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "          a.repoName("
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:href\u003d\"info.location\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            v-bind:title\u003d\"\u0027Click to open the repo\u0027\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "          ) {{ info.repo }}"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          .author {{ info.name }} ({{ info.author }}) contribution from {{ info.minDate }} to {{ info.maxDate }}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          .contribution(v-if\u003d\"isLoaded \u0026\u0026 files.length!\u003d0\")"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .sorting.mui-form--inline"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              .mui-select"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                select.control-font(v-model\u003d\"filesSortType\")"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  option(value\u003d\"lineOfCode\") LoC"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  option(value\u003d\"path\") Path"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  option(value\u003d\"fileName\") File Name"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  option(value\u003d\"fileType\") File Format"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                label.control-font sort by"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "              label"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                input(type\u003d\"checkbox\", v-model\u003d\"toReverseSortFiles\").mui-checkbox"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                span.control-font.reverse reverse"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            .searchbox"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "              input.radio-button--search(type\u003d\"radio\", name\u003d\"filter\", value\u003d\"search\", v-bind:checked\u003d\"isSearchBar\","
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                  v-on:click\u003d\"indicateSearchBar\")"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "              form.file-picker.mui-form--inline(onsubmit\u003d\"return false\")"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                input#search.control-font(type\u003d\"search\", placeholder\u003d\"Filter by glob\", v-on:change\u003d\"updateFilterSearch\","
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                    v-on:click\u003d\"indicateSearchBar\")"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                button#submit-button.control-font(type\u003d\"submit\", v-on:click\u003d\"indicateSearchBar\") Filter"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            .fileformat"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "              input.radio-button--checkbox(type\u003d\"radio\", name\u003d\"filter\", value\u003d\"checkboxes\", v-bind:checked\u003d\"isCheckBoxes\","
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                  v-on:click\u003d\"indicateCheckBoxes\")"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "              div.checkboxes.mui-form--inline(v-if\u003d\"files.length \u003e 0\")"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                label"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                  input.mui-checkbox--fileformat(type\u003d\"checkbox\" v-on:click\u003d\"selectAll\" v-model\u003d\"isSelectAllChecked\")"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                  span(v-bind:title\u003d\"getTotalFileBlankLineInfo()\")"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    span.select.control-font All:\u0026nbsp;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    span.loc.control-font {{ totalLineCount }}\u0026nbsp;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    span.bloc.control-font ({{ totalBlankLineCount }})"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                template(v-for\u003d\"format in Object.keys(getExistingLinesObj)\")"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  label(v-bind:key\u003d\"format\")"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                    input.mui-checkbox--fileformat(type\u003d\"checkbox\" v-bind:checked\u003d\"selectedFileFormats.includes(format)\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                        v-on:change\u003d\"selectFileFormat(format)\")"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                    span(v-bind:title\u003d\"getFileBlankLineInfo(format)\")"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                      span {{ format }}: {{ getExistingLinesObj[format] }}\u0026nbsp;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                      span.bloc ({{ filesBlankLinesObj[format] }})"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        .files(v-if\u003d\"isLoaded\")"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "          .empty(v-if\u003d\"files.length \u003d\u003d\u003d 0\") nothing to see here :("
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "          template(v-for\u003d\"file in selectedFiles\")"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            .file.active(v-bind:key\u003d\"file.path\")"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "              .title"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                span.path(onclick\u003d\"toggleNext(this.parentNode)\", v-on:click\u003d\"updateCount\") {{ file.path }}\u0026nbsp;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                span.loc ({{ file.lineCount }} lines)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                a("
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                  v-bind:href\u003d\"getFileLink(file, \u0027commits\u0027)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                  title\u003d\"click to view the history view of file\""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                )"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.button.fas.fa-history"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                a("
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                  v-bind:href\u003d\"getFileLink(file, \u0027blame\u0027)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                  title\u003d\"click to view the blame view of file\""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                )"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                  i.button.fas.fa-user-edit"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "              pre.hljs"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                div(v-for\u003d\"segment in file.segments\")"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                  v_segment(v-bind:segment\u003d\"segment\", v-bind:path\u003d\"file.path\")"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        .empty(v-else) loading..."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/api.js\")"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_ramp.js\")"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_zoom.js\")"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    script(src\u003d\"static/js/v_segment.js\")"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_summary.js\")"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/v_authorship.js\")"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    script(src\u003d\"static/js/main.js\")"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 3,
      "jamessspanggg": 42,
      "-": 244
    }
  },
  {
    "path": "frontend/src/ramp.pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ".ramp"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  template(v-if\u003d\"tframe \u003d\u003d\u003d \u0027commit\u0027\")"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    template(v-for\u003d\"(slice, j) in user.commits\")"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      a.ramp__slice("
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "          draggable\u003d\"false\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "          onclick\u003d\"rampClick(event);\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "          v-for\u003d\"(commit, k) in slice.commitResults\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "          v-if\u003d\"commit.insertions\u003e0\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:href\u003d\"getLink(user, commit)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:title\u003d\"`[${slice.date}] ${commit.message}: ${commit.insertions} lines`\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:class\u003d\"\u0027ramp__slice--color\u0027 + getSliceColor(slice.date)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "          v-bind:style\u003d\"{\\"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "              zIndex: user.commits.length - j,\\"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "              borderLeftWidth: getWidth(commit) + \u0027em\u0027,\\"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "              right: ((getSlicePos(slice.date)\\"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                  + (getCommitPos(k, slice.commitResults.length))) * 100) + \u0027%\u0027\\"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "          }\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  template(v-else)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    a.ramp__slice("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      draggable\u003d\"false\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      onclick\u003d\"rampClick(event);\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      v-for\u003d\"(slice, j) in user.commits\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      v-if\u003d\"slice.insertions \u003e 0\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      v-bind:title\u003d\"`${tframe \u003d\u003d\u003d \u0027day\u0027 ? \u0027[\u0027 + slice.date + \u0027] Daily\u0027 : \u0027[\u0027 + slice.date + \u0027 till \u0027 + slice.endDate + \u0027] Weekly\u0027} contribution: ${slice.insertions} lines`\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "      v-bind:href\u003d\"getLink(user, slice)\", target\u003d\"_blank\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      v-bind:class\u003d\"\u0027ramp__slice--color\u0027 + getSliceColor(slice.date)\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      v-bind:style\u003d\"{\\"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          zIndex: user.commits.length - j,\\"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          borderLeftWidth: getWidth(slice) + \u0027em\u0027,\\"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          right: (getSlicePos(tframe \u003d\u003d\u003d \u0027day\u0027 ? slice.date : slice.endDate) * 100) + \u0027%\u0027\\"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      }\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    )"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 2,
      "-": 32
    }
  },
  {
    "path": "frontend/src/static/css/style.scss",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@import \"colors\";"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/** global **/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "body{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    font-family:\"Titillium Web\", sans-serif;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "vuetemplate{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    display:none;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "a{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    cursor:pointer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ".wrapper{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align:center;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ".content{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    max-width:40rem;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align:left;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ".empty{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    margin:3rem 5rem;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align:center;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ".loader{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    background:#FFF;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    opacity:1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    position:fixed;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    z-index:10;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    top:0px;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    width:100%;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    height:100%;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    display:flex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-direction:column;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items:center;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content:center;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    .loading{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        margin-top:12px;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "/** navigation bar **/"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "header{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    z-index:100;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    position:relative;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    display:flex;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content:center;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    .content{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        display:flex;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        justify-content:space-between;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        align-items:center;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        flex-grow:1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    .repo, .logo{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        margin:0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "#file-upload{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align:center;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "#app-wrapper{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    display:flex;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    position:absolute;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    left:0; top:0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    z-index:50;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    width:100%;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    height:100vh;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    #tab-resize-guide{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        $tabs-width:50%;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        display:none;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        position:fixed;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        z-index:100;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        right:$tabs-width;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        width:2px;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        height:100%;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        background-color:mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        cursor:col-resize;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    #summary-wrapper{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        height:100%;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        overflow-y:scroll;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        flex-grow:1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        text-align:center;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        .timestamp-footer {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            margin-left:1em;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            margin-bottom:1em;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            color:mui-color(\u0027grey\u0027, \u0027700\u0027);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    #tabs-wrapper{"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        $tabs-width:50%;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        flex:0 0 $tabs-width;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        position:relative;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        overflow-y:scroll;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        background:mui-color(\u0027grey\u0027, \u0027200\u0027);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        .tab-close{"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            cursor:pointer;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            position:fixed;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            top:calc(50vh - 3rem);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            svg{"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                color:mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                background-color:mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                padding:3rem 0.25rem;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        .tab-content{"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            display:flex;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            padding:1rem 1.5rem;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            padding-top:4rem;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            .tab-panes{"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                width:100%;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                text-align:left;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        #tab-resize{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            position:fixed;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            width:13.250px;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            height:100%;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            background-color:mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            cursor:col-resize;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "/* summary chart */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "#summary, .summary-status{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    padding:2rem 1rem;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ".summary-picker{"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    display:flex;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    flex-flow:row wrap;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    justify-content:center;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    align-items:center;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-bottom:2rem;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__section{"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        display:flex;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        flex:0 0 auto;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__checkboxes{"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        label{ margin-left:0.5rem; }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        span{ margin-left:0.25rem; }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    .mui-textfield, .mui-select{"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        margin:0.5rem;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        padding-right:10px;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    label{"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        text-align:left;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        overflow-y:hidden;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        width:fit-content;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        font-size:0.75rem;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    input, select{"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        font-size:0.75rem;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ".summary-charts{"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-bottom:3rem;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__title{"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        display:block;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        text-align:left;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        font-weight:bold;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        \u0026--contribution{"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            font-weight:normal;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            display:inline;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            font-size: 0.65rem;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__fileformat--breakdown{"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        overflow-y:hidden;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026__legend{"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            float:left;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            display:inline;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ".summary-chart{"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    position:relative;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    margin-bottom:1rem;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    text-align:left;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    overflow:auto;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__title{"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        clear:left;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026 \u003e * {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            display:inline;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            padding-right:0.5rem;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--index, \u0026--repo{"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            font-weight:bold;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--index::after{"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            content:\".\";"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            display:inline-block;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--repo{"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            padding-right:0.25rem;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--button{"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            cursor:pointer;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            color:mui-color(\"grey\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            text-decoration:none;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__ramp{"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        position:relative;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        .overlay{"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            height:100%;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            position:absolute;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            top:0;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026.show{"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                background-color:rgba(mui-color(\"white\"), 0.5);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                border:1px dashed mui-color(\"black\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026.edge{"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                border-right:1px dashed mui-color(\"black\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__contrib{"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        text-align:left;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--bar{"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            height:0.3rem;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            margin-top:0.1rem;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            background-color:mui-color(\"red\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--bar--fileformat{"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            text-align:left;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            height:0.3rem;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            margin-top:0.1rem;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            float:left;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            display: inline-block;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "/* Ramp */"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ".ramp{"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    font-size:100%;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    position:relative;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    $height:3rem;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    height:$height;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    background-color:mui-color(\"blue\", \"50\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    \u0026__slice{"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        display:block;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        position:absolute;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        width:0;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        height:0;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        border-left-color: rgba(0,0,0,0);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        border-left-style: solid;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--color0{ border-bottom:$height rgba(mui-color(\"orange\"), 0.5) solid;  }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--color1{ border-bottom:$height rgba(mui-color(\"light-blue\"), 0.5) solid;  }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--color2{ border-bottom:$height rgba(mui-color(\"green\"), 0.5) solid;  }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--color3{ border-bottom:$height rgba(mui-color(\"indigo\"), 0.5) solid;  }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026--color4{ border-bottom:$height rgba(mui-color(\"pink\"), 0.5) solid;  }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "/* Authorship */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "#tab-authorship{"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    .toolbar{"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        float:right;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        cursor:pointer;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    .title{"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        .repoName{"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            font-size:1.5rem;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            font-weight:bold;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            cursor:pointer;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        .contribution{"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            color:mui-color(\"red\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            .fileformat {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                margin-left:3rem;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                margin-top:1.0rem;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                align-items:center;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                display:flex;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            .radio-button--search{"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                float:left;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                margin:1.75rem 2.0rem 0rem 0rem;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            .radio-button--checkbox{"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                float:left;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                margin:0rem 2.0rem 0rem -3rem;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                vertical-align:middle;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            #search{"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                padding:0.5rem 1.0rem 0.25rem 1.0rem;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                margin-top:1.25rem;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                width:30%;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            #submit-button{"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                background-color:mui-color(\"blue\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                color:mui-color(\"white\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                margin:1.0rem 0rem 0rem 0.25rem;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                padding:0.5rem 1.0rem 0.25rem 1.0rem;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            .select {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                font-weight:bold;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            .loc {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                font-weight:bolder;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            .bloc {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                color:mui-color(\"grey\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            span.fileFormat {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                span.bloc::after {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                    content:\u0027, \u0027;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                span.bloc:last-child::after {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                    content:\u0027\u0027;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            .mui-checkbox--fileformat {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                vertical-align:middle;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            .checkboxes {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                label{"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                    display:inline-flex;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                    align-items:center;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "                    padding-right:10px;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                span{"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                    margin-left:0.25rem;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            .sorting {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                display:flex;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                align-items:center;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                margin-top:1.0rem;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                .mui-select {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                    cursor:pointer;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                label {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                    overflow-y:hidden;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026 \u003e label {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                    margin-left:10px;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                span {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                    margin-left:0.25rem;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .control-font {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                font-size:0.875rem;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                \u0026.reverse {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                    color:mui-color(\"black\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "    .files{"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        clear:left;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        .file{"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "            pre{"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                display:none;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026.active{"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                pre{"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                    display:grid;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                    .hljs{"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                        // overwrite hljs library"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                        display:inherit;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                        padding:0;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        .title{"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            margin-top:1rem;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            font-size:1.25rem;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            font-weight:bold;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            .path{"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                cursor:pointer;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            .loc{"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                color:mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            .button{"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                font-size:1.15rem;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                color:mui-color(\"grey\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                text-decoration:none;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                margin-left:0.5rem;"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        .code{"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            padding-left:1rem;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            border-left:0.25rem solid mui-color(\u0027green\u0027);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            background-color:mui-color(\u0027green\u0027, \u002750\u0027);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        .line-number{"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            color:mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            float:left;"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            width:2rem;"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            // Not allowing user to select text"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            -webkit-touch-callout:none; /* iOS Safari */"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            -webkit-user-select:none; /* Safari */"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            -khtml-user-select:none; /* Konqueror HTML */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            -moz-user-select:none; /* Firefox */"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            -ms-user-select:none; /* Internet Explorer/Edge */"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            user-select:none; /* Non-prefixed version, currently supported by Chrome and Opera */"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .hljs-number{"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                color:mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            .hljs-comment{"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "                color:mui-color(\u0027grey\u0027);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        .line-content{"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            padding-left:2rem;"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        .untouched{"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            $grey:mui-color(\u0027grey\u0027, \u0027400\u0027);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026.active{"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                .code{"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                    display:inherit;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                    background-color:mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                .closer{"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                    .icon{"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                        background-color:mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                    .tooltiptext{"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026--open{ display:inline-block; }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026--close{ display:none; }"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "            .code{"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                display:none;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                border-left:0.25rem solid $grey;"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                background-color:mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            .closer{"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                cursor:pointer;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                padding:0.5rem 1rem;"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                .icon{"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                    background-color:$grey;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                    color:mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                    width:2.2rem;"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                    border-radius:0.25rem;"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026:hover{"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "                        background:black;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026:hover ~ .tooltiptext{"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                        visibility:visible;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                .tooltiptext{"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                    padding:0.5rem;"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                    margin-left:0.5rem;"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "                    border-radius:0.25rem;"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                    color:mui-color(\u0027white\u0027);"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                    background-color:mui-color(\u0027black\u0027);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                    text-align:center;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                    visibility:hidden;"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026--open{ display:none; }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026--close{ display:inline-block; }"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "    .empty{"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        text-align:center;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 48,
      "-": 517
    }
  },
  {
    "path": "frontend/src/static/js/main.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "window.REPORT_ZIP \u003d null;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "window.REPOS \u003d {};"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "window.isMacintosh \u003d navigator.platform.includes(\u0027Mac\u0027);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "window.hashParams \u003d {};"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "window.addHash \u003d function addHash(newKey, newVal) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  window.hashParams[newKey] \u003d newVal;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "window.removeHash \u003d function removeHash(key) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  delete window.hashParams[key];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "window.encodeHash \u003d function encodeHash() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  const { hashParams } \u003d window;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  window.location.hash \u003d Object.keys(hashParams)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      .map((key) \u003d\u003e `${key}\u003d${encodeURIComponent(hashParams[key])}`)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      .join(\u0027\u0026\u0027);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "window.decodeHash \u003d function decodeHash() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  const hashParams \u003d {};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  window.location.hash.slice(1).split(\u0027\u0026\u0027)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      .forEach((param) \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        const [key, val] \u003d param.split(\u0027\u003d\u0027);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        if (key) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            hashParams[key] \u003d decodeURIComponent(val);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          } catch (error) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isLoading \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  window.hashParams \u003d hashParams;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "const DRAG_BAR_WIDTH \u003d 13.25;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "const SCROLL_BAR_WIDTH \u003d 17;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "const GUIDE_BAR_WIDTH \u003d 2;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "const throttledEvent \u003d (delay, handler) \u003d\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  let lastCalled \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  return (...args) \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    if (Date.now() - lastCalled \u003e delay) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      lastCalled \u003d Date.now();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      handler(...args);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "let guideWidth \u003d (0.5 * window.innerWidth - (GUIDE_BAR_WIDTH / 2))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    / window.innerWidth;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "let flexWidth \u003d 0.5;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "window.mouseMove \u003d () \u003d\u003e {};"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "window.registerMouseMove \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  const innerMouseMove \u003d (event) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    guideWidth \u003d ("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      Math.min("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          Math.max("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              window.innerWidth - event.clientX,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              SCROLL_BAR_WIDTH + DRAG_BAR_WIDTH,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          ),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          window.innerWidth - SCROLL_BAR_WIDTH,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        - (GUIDE_BAR_WIDTH / 2)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    ) / window.innerWidth;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    window.$(\u0027tab-resize-guide\u0027).style.right \u003d `${guideWidth * 100}%`;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027tab-resize-guide\u0027).style.display \u003d \u0027block\u0027;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027app-wrapper\u0027).style[\u0027user-select\u0027] \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  window.mouseMove \u003d throttledEvent(30, innerMouseMove);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "window.deregisterMouseMove \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  flexWidth \u003d (guideWidth * window.innerWidth + (GUIDE_BAR_WIDTH / 2))"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        / window.innerWidth;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  window.mouseMove \u003d () \u003d\u003e {};"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  if (window.$(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    window.$(\u0027tabs-wrapper\u0027).style.flex \u003d `0 0 ${flexWidth * 100}%`;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027tab-resize-guide\u0027).style.display \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027app-wrapper\u0027).style[\u0027user-select\u0027] \u003d \u0027auto\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "/* global Vue hljs */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Vue.directive(\u0027hljs\u0027, {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  inserted(ele, binding) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    const element \u003d ele;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    element.className \u003d binding.value.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    hljs.highlightBlock(element);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "window.app \u003d new window.Vue({"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  el: \u0027#app\u0027,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  data: {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    repos: {},"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    repoLength: 0,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    loadedRepo: 0,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    userUpdated: false,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    isLoading: false,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    isCollapsed: false,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    isTabActive: true, // to force tab wrapper to load"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    tabType: \u0027empty\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    tabInfo: {},"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    creationDate: \u0027\u0027,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    // model functions //"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportZip(evt) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      this.users \u003d [];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      window.JSZip.loadAsync(evt.target.files[0])"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "          .then((zip) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            window.REPORT_ZIP \u003d zip;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "          }, () \u003d\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            window.alert(\u0027Either the .zip file is corrupted, or you uploaded a .zip file that is not generated \u0027"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                + \u0027by RepoSense.\u0027);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          })"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          .then(() \u003d\u003e this.updateReportView());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportDir() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "      window.REPORT_ZIP \u003d null;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      this.users \u003d [];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateReportView();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportView() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      window.api.loadSummary().then((names) \u003d\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repos \u003d window.REPOS;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repoLength \u003d Object.keys(window.REPOS).length;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadedRepo \u003d 0;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d true;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadedRepo \u003d 0;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        return Promise.all(names.map((name) \u003d\u003e ("
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          window.api.loadCommits(name)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "              .then(() \u003d\u003e { this.loadedRepo +\u003d 1; })"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        )));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      }).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      }).catch((error) \u003d\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        window.alert(error);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    getUsers() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      const full \u003d [];"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(this.repos).forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.repos[repo].users) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "          full.push(this.repos[repo]);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      return full;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    // handle opening of sidebar //"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    activateTab(tabName) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      // changing isTabActive to trigger redrawing of component"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isTabActive \u003d false;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      if (document.getElementById(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        document.getElementById(\u0027tabs-wrapper\u0027).scrollTop \u003d 0;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isTabActive \u003d true;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isCollapsed \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabType \u003d tabName;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    updateTabAuthorship(obj) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabInfo.tabAuthorship \u003d Object.assign({}, obj);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activateTab(\u0027authorship\u0027);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    updateTabZoom(obj) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabInfo.tabZoom \u003d Object.assign({}, obj);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activateTab(\u0027zoom\u0027);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    // updating summary view"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    updateSummaryDates() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$refs.summary.updateDateRange();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    renderAuthorShipTabHash(minDate, maxDate) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      const info \u003d {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        author: hash.tabAuthor,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        repo: hash.tabRepo,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        minDate,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        maxDate,"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      const tabInfoLength \u003d Object.values(info).filter((x) \u003d\u003e x).length;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      if (Object.keys(info).length \u003d\u003d\u003d tabInfoLength) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateTabAuthorship(info);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        window.app.isTabActive \u003d false;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    generateKey(dataObj) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      return JSON.stringify(dataObj);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    getRepoSenseLink() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      const version \u003d window.app.repoSenseVersion;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!version) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027https://github.com/reposense/RepoSense\u0027;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "      if (version.startsWith(\u0027v\u0027)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        return `https://github.com/reposense/RepoSense/releases/tag/${version}`;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "      return `https://github.com/reposense/RepoSense/commits/${version}`;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "    receiveDates(dates) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      const [minDate, maxDate] \u003d dates;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      this.renderAuthorShipTabHash(minDate, maxDate);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    v_zoom: window.vZoom,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    v_summary: window.vSummary,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    v_authorship: window.vAuthorship,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    CircleSpinner: window.VueLoadingSpinner.Circle,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateReportDir();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    window.decodeHash();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  updated() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    this.$nextTick(() \u003d\u003e {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      if (window.$(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        window.$(\u0027tabs-wrapper\u0027).style.flex \u003d `0 0 ${flexWidth * 100}%`;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isTabActive) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      window.removeHash(\u0027tabAuthor\u0027);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      window.removeHash(\u0027tabRepo\u0027);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      window.addHash(\u0027tabOpen\u0027, this.isTabActive);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      window.encodeHash();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 3,
      "jamessspanggg": 1,
      "-": 249
    }
  },
  {
    "path": "frontend/src/static/js/v_authorship.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "const filesSortDict \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  lineOfCode: (file) \u003d\u003e file.lineCount,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  path: (file) \u003d\u003e file.path,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  fileName: (file) \u003d\u003e file.path.split(/[/]+/).pop(),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  fileType: (file) \u003d\u003e file.path.split(/[/]+/).pop().split(/[.]+/).pop(),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "window.toggleNext \u003d function toggleNext(ele) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  // function for toggling unopened code"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  const targetClass \u003d \u0027active\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  const parent \u003d ele.parentNode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  const classes \u003d parent.className.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  const idx \u003d classes.indexOf(targetClass);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  if (idx \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    classes.push(targetClass);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    classes.splice(idx, 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  parent.className \u003d classes.join(\u0027 \u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "const repoCache \u003d [];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "const minimatch \u003d require(\u0027minimatch\u0027);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "window.vAuthorship \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  props: [\u0027info\u0027],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_authorship\u0027).innerHTML,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      isLoaded: false,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      files: [],"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      isSelectAllChecked: true,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      selectedFileFormats: [],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      fileFormats: [],"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      filesBlankLinesObj: {},"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      totalLineCount: \u0027\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      totalBlankLineCount: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      filesSortType: \u0027lineOfCode\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      toReverseSortFiles: false,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      activeFilesCount: 0,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSearch: \u0027*\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingFunction: window.comparator(filesSortDict.lineOfCode),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      isSearchBar: false,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      isCheckBoxes: true,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    filesSortType() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiles();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toReverseSortFiles() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiles();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    initiate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[this.info.repo];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getRepoProps(repo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!repo || !this.info.name) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        window.app.isTabActive \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repoCache.length \u003d\u003d\u003d 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        const toRemove \u003d repoCache.shift();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        if (toRemove !\u003d\u003d this.info.repo) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          delete window.REPOS[toRemove].files;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      repoCache.push(this.info.repo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repo.files) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.processFiles(repo.files);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        window.api.loadAuthorship(this.info.repo)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            .then((files) \u003d\u003e this.processFiles(files));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    getRepoProps(repo) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repo) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        const author \u003d repo.users.filter((user) \u003d\u003e user.name \u003d\u003d\u003d this.info.author);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        if (author.length \u003e 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          this.filesLinesObj \u003d author[0].fileFormatContribution;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    setInfoHash() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      const { addHash, removeHash } \u003d window;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027tabAuthor\u0027, this.info.author);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027tabRepo\u0027, this.info.repo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      removeHash(\u0027tabOpen\u0027);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    expandAll(isActive) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      const renameValue \u003d isActive ? \u0027file active\u0027 : \u0027file\u0027;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      const files \u003d document.getElementsByClassName(\u0027file\u0027);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      Array.from(files).forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        file.className \u003d renameValue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeFilesCount \u003d isActive ? this.selectedFiles.length : 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    updateCount() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeFilesCount \u003d document.getElementsByClassName(\u0027file active\u0027).length;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    hasCommits(info) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      if (window.REPOS[info.repo]) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return window.REPOS[info.repo].commits.authorFinalContributionMap[info.author] \u003e 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    splitSegments(lines) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      // split into segments separated by authored"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      let lastState;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      let lastId \u003d -1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      const segments \u003d [];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      let blankLineCount \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      lines.forEach((line, lineCount) \u003d\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        const authored \u003d (line.author \u0026\u0026 line.author.gitId \u003d\u003d\u003d this.info.author);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        if (authored !\u003d\u003d lastState || lastId \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "          segments.push({"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            authored,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            lines: [],"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "            lineNumbers: [],"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "          lastId +\u003d 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          lastState \u003d authored;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        const content \u003d line.content || \u0027 \u0027;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        segments[lastId].lines.push(content);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        segments[lastId].lineNumbers.push(lineCount + 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        if (line.content \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 authored) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          blankLineCount +\u003d 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        segments,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        blankLineCount,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    processFiles(files) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      const filesBlanksInfoObj \u003d {};"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalLineCount \u003d 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalBlankLineCount \u003d 0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      files.forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        const lineCnt \u003d file.authorContributionMap[this.info.author];"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        if (lineCnt) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          totalLineCount +\u003d lineCnt;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          const out \u003d {};"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "          out.path \u003d file.path;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "          out.lineCount \u003d lineCnt;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          const segmentInfo \u003d this.splitSegments(file.lines);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          out.segments \u003d segmentInfo.segments;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "          totalBlankLineCount +\u003d segmentInfo.blankLineCount;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "          this.addBlankLineCountToFileFormat(file.path, segmentInfo.blankLineCount,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "              filesBlanksInfoObj);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(out);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      this.totalLineCount \u003d totalLineCount;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      this.totalBlankLineCount \u003d totalBlankLineCount;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      res.sort((a, b) \u003d\u003e b.lineCount - a.lineCount);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(this.filesLinesObj).forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filesLinesObj[file] !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedFileFormats.push(file);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "          this.fileFormats.push(file);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filesBlankLinesObj \u003d filesBlanksInfoObj;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      this.files \u003d res;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isLoaded \u003d true;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeFilesCount \u003d this.selectedFiles.length;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    addBlankLineCountToFileFormat(path, lineCount, filesInfoObj) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      let fileFormat \u003d path.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      fileFormat \u003d (fileFormat.length \u003d\u003d\u003d 0) ? \u0027others\u0027 : fileFormat;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!filesInfoObj[fileFormat]) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        filesInfoObj[fileFormat] \u003d 0;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      filesInfoObj[fileFormat] +\u003d lineCount;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    sortFiles() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortingFunction \u003d (a, b) \u003d\u003e (this.toReverseSortFiles ? -1 : 1)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          * window.comparator(filesSortDict[this.filesSortType])(a, b);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    selectAll() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSearchBar) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateCheckBoxes();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.isSelectAllChecked) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats \u003d this.fileFormats.slice();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        this.activeFilesCount \u003d this.files.length;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats \u003d [];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        this.activeFilesCount \u003d 0;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    selectFileFormat(format) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSearchBar) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateCheckBoxes();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.selectedFileFormats.includes(format)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        const index \u003d this.selectedFileFormats.indexOf(format);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats.splice(index, 1);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats.push(format);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.fileFormats.length \u003d\u003d\u003d this.selectedFileFormats.length) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isSelectAllChecked \u003d true;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isSelectAllChecked \u003d false;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      setTimeout(this.updateCount, 0);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilterSearch(evt) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isCheckBoxes) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateSearchBar();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d (evt.target.value.length !\u003d\u003d 0) ? evt.target.value : \u0027*\u0027;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    tickAllCheckboxes() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      this.selectedFileFormats \u003d this.fileFormats.slice();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSelectAllChecked \u003d true;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    indicateSearchBar() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSearchBar \u003d true;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isCheckBoxes \u003d false;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tickAllCheckboxes();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    indicateCheckBoxes() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      const searchBar \u003d document.getElementById(\u0027search\u0027);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      searchBar.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSearchBar \u003d false;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isCheckBoxes \u003d true;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    isSelected(filePath) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      const fileExt \u003d filePath.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.selectedFileFormats.includes(fileExt);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileLink(file, path) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[this.info.repo];"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      return `http://github.com/${"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.location.organization}/${repo.location.repoName}/${path}/${repo.branch}/${file.path}`;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileBlankLineInfo(fileFormat) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${fileFormat}: Blank: ${"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filesBlankLinesObj[fileFormat]}, Non-Blank: ${"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filesLinesObj[fileFormat] - this.filesBlankLinesObj[fileFormat]}`;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    getTotalFileBlankLineInfo() {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      return `Total: Blank: ${this.totalBlankLineCount}, Non-Blank: ${"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        this.totalLineCount - this.totalBlankLineCount}`;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    selectedFiles() {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.files"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter((file) \u003d\u003e this.isSelected(file.path)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0026\u0026 minimatch(file.path, this.filterSearch, { matchBase: true }))"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          .sort(this.sortingFunction);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    getExistingLinesObj() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      const numLinesModified \u003d {};"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      Object.entries(this.filesLinesObj)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "          .filter(([, value]) \u003d\u003e value \u003e 0)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "          .forEach(([langType, value]) \u003d\u003e {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            numLinesModified[langType] \u003d value;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "          });"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      return numLinesModified;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initiate();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setInfoHash();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    v_segment: window.vSegment,"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 7,
      "jamessspanggg": 7,
      "-": 310
    }
  },
  {
    "path": "frontend/src/static/js/v_ramp.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "function getBaseLink(repoId) {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  return `http://github.com/${"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    window.REPOS[repoId].location.organization}/${"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    window.REPOS[repoId].location.repoName}`;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "window.rampClick \u003d function rampClick(evt) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const isKeyPressed \u003d this.isMacintosh ? evt.metaKey : evt.ctrlKey;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (isKeyPressed) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    evt.preventDefault();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "window.vRamp \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  props: [\u0027user\u0027, \u0027tframe\u0027, \u0027avgsize\u0027, \u0027sdate\u0027, \u0027udate\u0027],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_ramp\u0027).innerHTML,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "      rampSize: 0.01,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    getLink(user, slice) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const untilDate \u003d this.tframe \u003d\u003d\u003d \u0027week\u0027 ? slice.endDate : slice.date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tframe \u003d\u003d\u003d \u0027commit\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        return `${getBaseLink(user.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${getBaseLink(user.repoId)}/commits/${REPOS[user.repoId].branch}?`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                  + `author\u003d${user.name}\u0026`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                  + `since\u003d${slice.date}\u0027T\u002700:00:00+08:00\u0026`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                  + `until\u003d${untilDate}\u0027T\u002723:59:59+08:00`;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    getWidth(slice) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      if (slice.insertions \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      const newSize \u003d 100 * (slice.insertions / this.avgsize);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      return Math.max(newSize * this.rampSize, 0.5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // position for commit granularity"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    getCommitPos(i, total) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      return (total - i - 1) * window.DAY_IN_MS / total"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          / (this.getTotalForPos(this.sdate, this.udate) + window.DAY_IN_MS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    // position for day granularity"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    getSlicePos(date) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      const total \u003d this.getTotalForPos(this.sdate, this.udate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      return (new Date(this.udate) - new Date(date)) / (total + window.DAY_IN_MS);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    // get duration in miliseconds between 2 date"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    getTotalForPos(sinceDate, untilDate) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      return new Date(untilDate) - new Date(sinceDate);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    getSliceColor(date) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      const timeMs \u003d (new Date(date)).getTime();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      return (timeMs / window.DAY_IN_MS) % 5;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 5,
      "-": 60
    }
  },
  {
    "path": "frontend/src/static/js/v_segment.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "window.vSegment \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  props: [\u0027segment\u0027, \u0027path\u0027],"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  template: window.$(\u0027v_segment\u0027).innerHTML,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      loaded: this.segment.authored || this.segment.lines.length \u003c 5,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    };"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    loadCode() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.loaded \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      window.toggleNext(this.$el.childNodes[0]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  },"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 15
    }
  },
  {
    "path": "frontend/src/static/js/v_summary.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "window.comparator \u003d (fn) \u003d\u003e function compare(a, b) {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  const a1 \u003d fn(a).toLowerCase ? fn(a).toLowerCase() : fn(a);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  const b1 \u003d fn(b).toLowerCase ? fn(b).toLowerCase() : fn(b);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  if (a1 \u003d\u003d\u003d b1) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    return 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  } if (a1 \u003c b1) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    return -1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  return 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "// ui funcs, only allow one ramp to be highlighted //"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "let drags \u003d [];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "function getBaseTarget(target) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  return (target.className \u003d\u003d\u003d \u0027summary-chart__ramp\u0027)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      ? target"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      : getBaseTarget(target.parentElement);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "function deactivateAllOverlays() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  document.querySelectorAll(\u0027.summary-chart__ramp .overlay\u0027)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      .forEach((x) \u003d\u003e { x.className \u003d \u0027overlay\u0027; });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "function dragViewDown(evt) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  deactivateAllOverlays();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  const pos \u003d evt.clientX;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  const ramp \u003d getBaseTarget(evt.target);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  drags \u003d [pos];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  const base \u003d ramp.offsetWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  const offset \u003d ramp.parentElement.offsetLeft;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.marginLeft \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.width \u003d `${(pos - offset) * 100 / base}%`;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.className +\u003d \u0027 edge\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "function dragViewUp(evt) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  deactivateAllOverlays();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  const ramp \u003d getBaseTarget(evt.target);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  const base \u003d ramp.offsetWidth;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  drags.push(evt.clientX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  drags.sort((a, b) \u003d\u003e a - b);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  const offset \u003d ramp.parentElement.offsetLeft;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  drags \u003d drags.map((x) \u003d\u003e (x - offset) * 100 / base);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.marginLeft \u003d `${drags[0]}%`;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.style.width \u003d `${drags[1] - drags[0]}%`;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  overlay.className +\u003d \u0027 show\u0027;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "window.viewClick \u003d function viewClick(evt) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  const isKeyPressed \u003d this.isMacintosh ? evt.metaKey : evt.ctrlKey;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  if (drags.length \u003d\u003d\u003d 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    drags \u003d [];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  if (isKeyPressed) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    return drags.length \u003d\u003d\u003d 0"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        ? dragViewDown(evt)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        : dragViewUp(evt);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  return null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "// date functions //"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "const DAY_IN_MS \u003d (1000 * 60 * 60 * 24);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "window.DAY_IN_MS \u003d DAY_IN_MS;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "const WEEK_IN_MS \u003d DAY_IN_MS * 7;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "function getDateStr(date) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  return (new Date(date)).toISOString().split(\u0027T\u0027)[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "function dateRounding(datestr, roundDown) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  // rounding up to nearest monday"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  const date \u003d new Date(datestr);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  const day \u003d date.getUTCDay();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  let datems \u003d date.getTime();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  if (roundDown) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    datems -\u003d ((day + 6) % 7) * DAY_IN_MS;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    datems +\u003d ((8 - day) % 7) * DAY_IN_MS;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  return getDateStr(datems);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "window.vSummary \u003d {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  props: [\u0027repos\u0027],"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_summary\u0027).innerHTML,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      filtered: [],"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSearch: \u0027\u0027,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      filterGroupSelection: \u0027groupByRepos\u0027,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      sortGroupSelection: \u0027groupTitle\u0027, // UI for sorting groups"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      sortWithinGroupSelection: \u0027title\u0027, // UI for sorting within groups"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingOption: \u0027\u0027,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      isSortingDsc: \u0027\u0027,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingWithinOption: \u0027\u0027,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      isSortingWithinDsc: \u0027\u0027,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      filterTimeFrame: \u0027commit\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      filterBreakdown: false,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      tmpFilterSinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      tmpFilterUntilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      filterUntilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      filterHash: \u0027\u0027,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      minDate: \u0027\u0027,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      maxDate: \u0027\u0027,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      contributionBarColors: {},"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    repos() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    sortGroupSelection() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    sortWithinGroupSelection() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    filterTimeFrame() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    filterGroupSelection() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.updateSortWithinGroup();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    filterBreakdown() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    tmpFilterSinceDate() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tmpFilterSinceDate \u0026\u0026 this.tmpFilterSinceDate \u003e\u003d this.minDate) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d this.tmpFilterSinceDate;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      } else if (!this.tmpFilterSinceDate) { // If user clears the since date field"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        this.filterSinceDate \u003d this.minDate;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        this.tmpFilterSinceDate \u003d this.filterSinceDate;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    tmpFilterUntilDate() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tmpFilterUntilDate \u0026\u0026 this.tmpFilterUntilDate \u003c\u003d this.maxDate) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d this.tmpFilterUntilDate;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      } else if (!this.tmpFilterUntilDate) { // If user clears the until date field"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        this.filterUntilDate \u003d this.maxDate;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        this.tmpFilterUntilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    avgCommitSize() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCommits \u003d 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCount \u003d 0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "          user.commits.forEach((slice) \u003d\u003e {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slice.insertions \u003e 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "              totalCount +\u003d 1;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "              totalCommits +\u003d slice.insertions;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalCommits / totalCount;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    avgContributionSize() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalLines \u003d 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCount \u003d 0;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "          if (user.totalCommits \u003e 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            totalCount +\u003d 1;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            totalLines +\u003d user.totalCommits;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalLines / totalCount;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    filteredRepos() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.filtered.filter((repo) \u003d\u003e repo.length \u003e 0);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    // view functions //"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileFormatContributionBars(fileFormatContribution) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalWidth \u003d 0;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      const contributionLimit \u003d (this.avgContributionSize * 2);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      const totalBars \u003d {};"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      const maxLength \u003d 100;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(fileFormatContribution).forEach((fileFormat) \u003d\u003e {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        const contribution \u003d fileFormatContribution[fileFormat];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        const res \u003d [];"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        let fileFormatWidth \u003d 0;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        // compute 100% width bars"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        const cnt \u003d parseInt(contribution / contributionLimit, 10);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(maxLength);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "          fileFormatWidth +\u003d maxLength;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "          totalWidth +\u003d maxLength;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        // compute \u003c 100% width bars"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        const last \u003d (contribution % contributionLimit) / contributionLimit;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        if (last !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(last * maxLength);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "          fileFormatWidth +\u003d last * maxLength;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "          totalWidth +\u003d last * maxLength;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        // split \u003e 100% width bars into smaller bars"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((totalWidth \u003e maxLength) \u0026\u0026 (totalWidth !\u003d\u003d fileFormatWidth)) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          res.unshift(maxLength - (totalWidth - fileFormatWidth));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "          res[res.length - 1] \u003d res[res.length - 1] - (maxLength - (totalWidth - fileFormatWidth));"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          if (res[res.length - 1] \u003c 0) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            const negativeWidth \u003d res.pop();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            res[res.length - 1] +\u003d negativeWidth;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "          totalWidth \u003d res[res.length - 1];"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        totalBars[fileFormat] \u003d res;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalBars;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    getContributionBars(totalContribution) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      const contributionLimit \u003d (this.avgContributionSize * 2);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      const cnt \u003d parseInt(totalContribution / contributionLimit, 10);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(100);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      const last \u003d (totalContribution % contributionLimit) / contributionLimit;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      if (last !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(last * 100);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      return res;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    getRepoLink(repo) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const { location, branch } \u003d REPOS[repo.repoId];"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return `https://github.com/${location.organization}/${location.repoName}/tree/${branch}`;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      return repo.location;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    // model functions //"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilterSearch(evt) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d evt.target.value;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    setSummaryHash() {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      const { addHash, encodeHash } \u003d window;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027search\u0027, this.filterSearch);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027sort\u0027, this.sortGroupSelection);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027sortWithin\u0027, this.sortWithinGroupSelection);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027since\u0027, this.filterSinceDate);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027until\u0027, this.filterUntilDate);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027timeframe\u0027, this.filterTimeFrame);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027groupSelect\u0027, this.filterGroupSelection);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027breakdown\u0027, this.filterBreakdown);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      encodeHash();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    renderFilterHash() {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "      const convertBool \u003d (txt) \u003d\u003e (txt \u003d\u003d\u003d \u0027true\u0027);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.search) { this.filterSearch \u003d hash.search; }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.sort) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortGroupSelection \u003d hash.sort;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.sortWithin) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortWithinGroupSelection \u003d hash.sortWithin;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.timeframe) { this.filterTimeFrame \u003d hash.timeframe; }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.since) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterSinceDate \u003d hash.since;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.until) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterUntilDate \u003d hash.until;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.groupSelect) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterGroupSelection \u003d hash.groupSelect;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.breakdown) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterBreakdown \u003d convertBool(hash.breakdown);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    getDates() {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.minDate \u0026\u0026 this.maxDate) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "      const minDate \u003d window.app.sinceDate;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      const maxDate \u003d window.app.untilDate;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.filterSinceDate) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.tmpFilterSinceDate || this.tmpFilterSinceDate \u003c minDate) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "          this.tmpFilterSinceDate \u003d minDate;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d minDate;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minDate \u003d minDate;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.filterUntilDate) {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.tmpFilterUntilDate || this.tmpFilterUntilDate \u003e maxDate) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "          this.tmpFilterUntilDate \u003d maxDate;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d maxDate;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        this.maxDate \u003d maxDate;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027get-dates\u0027, [this.minDate, this.maxDate]);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    getFiltered() {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "      this.setSummaryHash();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.getDates();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "      // array of array, sorted by repo"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "      const full \u003d [];"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        const res \u003d [];"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        // filtering"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "          const toDisplay \u003d this.filterSearch.toLowerCase()"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "              .split(\u0027 \u0027).filter((param) \u003d\u003e param)"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "              .map((param) \u003d\u003e user.searchPath.search(param) \u003e -1)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "              .reduce((curr, bool) \u003d\u003e curr || bool, false);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!this.filterSearch || toDisplay) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            this.getUserCommits(user);"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "              this.splitCommitsWeek(user);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            res.push(user);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        if (res.length) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "          full.push(res);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered \u003d full;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiltered();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    processFileFormats() {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "      const selectedColors \u003d [\u0027#ffe119\u0027, \u0027#4363d8\u0027, \u0027#3cb44b\u0027, \u0027#f58231\u0027, \u0027#911eb4\u0027, \u0027#46f0f0\u0027, \u0027#f032e6\u0027,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027#bcf60c\u0027, \u0027#fabebe\u0027, \u0027#008080\u0027, \u0027#e6beff\u0027, \u0027#9a6324\u0027, \u0027#fffac8\u0027, \u0027#800000\u0027, \u0027#aaffc3\u0027, \u0027#808000\u0027, \u0027#ffd8b1\u0027,"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027#000075\u0027, \u0027#808080\u0027];"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "      const colors \u003d {};"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "      let i \u003d 0;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        const user \u003d repo.users[0];"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        Object.keys(user.fileFormatContribution).forEach((fileFormat) \u003d\u003e {"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!Object.prototype.hasOwnProperty.call(colors, fileFormat)) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            colors[fileFormat] \u003d selectedColors[i];"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            i \u003d (i + 1) % selectedColors.length;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contributionBarColors \u003d colors;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    splitCommitsWeek(user) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "      const { commits } \u003d user;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sinceDate \u003d dateRounding(this.filterSinceDate, 0); // round up for the next monday"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "      const untilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "      const sinceMs \u003d (new Date(sinceDate)).getTime();"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "      const untilMs \u003d (new Date(untilDate)).getTime();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      // add first week commits starting from filterSinceDate to end of the week"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      // if filterSinceDate is not the start of the week"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.filterSinceDate !\u003d\u003d sinceDate) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const firstWeekDateMs \u003d new Date(this.filterSinceDate).getTime();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.pushCommitsWeek(firstWeekDateMs, sinceMs - 1, res, commits);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      this.pushCommitsWeek(sinceMs, untilMs, res, commits);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      user.commits \u003d res;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    pushCommitsWeek(sinceMs, untilMs, res, commits) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "      const diff \u003d Math.round(Math.abs((untilMs - sinceMs) / DAY_IN_MS));"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let weekId \u003d 0; weekId \u003c diff / 7; weekId +\u003d 1) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        const startOfWeekMs \u003d sinceMs + (weekId * WEEK_IN_MS);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const endOfWeekMs \u003d startOfWeekMs + WEEK_IN_MS - DAY_IN_MS;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        const endOfWeekMsWithinUntilMs \u003d endOfWeekMs \u003c\u003d untilMs ? endOfWeekMs : untilMs;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        const week \u003d {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "          insertions: 0,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "          deletions: 0,"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "          date: getDateStr(startOfWeekMs),"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          endDate: getDateStr(endOfWeekMsWithinUntilMs),"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        this.addLineContributionWeek(endOfWeekMsWithinUntilMs, week, commits);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(week);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    addLineContributionWeek(endOfWeekMs, week, commits) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "      // commits are not contiguous, meaning there are gaps of days without"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "      // commits, so we are going to check each commit\u0027s date and make sure"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "      // it is within the duration of a week"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "      while (commits.length \u003e 0"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          \u0026\u0026 (new Date(commits[0].date)).getTime() \u003c\u003d endOfWeekMs) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        const commit \u003d commits.shift();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        week.insertions +\u003d commit.insertions;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        week.deletions +\u003d commit.deletions;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    getUserCommits(user) {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "      user.commits \u003d [];"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "      const userFirst \u003d user.dailyCommits[0];"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "      const userLast \u003d user.dailyCommits[user.dailyCommits.length - 1];"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!userFirst) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "      let sinceDate \u003d this.filterSinceDate;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!sinceDate || sinceDate \u003d\u003d\u003d \u0027undefined\u0027) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        sinceDate \u003d userFirst.date;"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "      let untilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!untilDate) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        untilDate \u003d userLast.date;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "      user.dailyCommits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        const { date } \u003d commit;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        if (date \u003e\u003d sinceDate \u0026\u0026 date \u003c\u003d untilDate) {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "          user.commits.push(commit);"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    updateSortWithinGroup() {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const ele \u003d document.getElementsByClassName(\u0027mui-select sort-within-group\u0027);"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        ele[0].style.pointerEvents \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        ele[0].style.opacity \u003d 0.5;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        ele[0].style.pointerEvents \u003d \u0027auto\u0027;"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        ele[0].style.opacity \u003d 1;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    getOptionWithOrder() {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.sortingOption, this.isSortingDsc] \u003d this.sortGroupSelection.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.sortingWithinOption, this.isSortingWithinDsc] \u003d this.sortWithinGroupSelection.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "    sortFiltered() {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getOptionWithOrder();"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "      let full \u003d [];"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        // push all repos into the same group"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        full[0] \u003d this.groupByNone(this.filtered);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        full \u003d this.groupByAuthors(this.filtered);"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        full \u003d this.groupByRepos(this.filtered);"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered \u003d full;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    // updating filters programically //"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    resetDateRange() {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tmpFilterSinceDate \u003d this.minDate;"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tmpFilterUntilDate \u003d this.maxDate;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    updateDateRange() {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "      if (drags.length \u003e 0) {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        const since \u003d new Date(this.filterSinceDate).getTime();"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        const until \u003d new Date(this.filterUntilDate).getTime();"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        const range \u003d until - since;"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        const getStr \u003d (time) \u003d\u003e getDateStr(new Date(time));"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterSinceDate \u003d getStr(since + range * drags[0] / 100);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterUntilDate \u003d getStr(since + range * drags[1] / 100);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        drags \u003d [];"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        deactivateAllOverlays();"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    // triggering opening of tabs //"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    openTabAuthorship(user, repo, index) {"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "      const { minDate, maxDate } \u003d this;"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027view-authorship\u0027, {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        minDate,"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        maxDate,"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        author: user.name,"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "        repo: user.repoName,"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        name: user.displayName,"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        location: this.getRepoLink(repo[index]),"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "        totalCommits: user.totalCommits,"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    openTabZoom(userOrig) {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "      // skip if accidentally clicked on ramp chart"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "      if (drags.length \u003d\u003d\u003d 2 \u0026\u0026 drags[1] - drags[0]) {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        const tdiff \u003d new Date(this.filterUntilDate) - new Date(this.filterSinceDate);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        const idxs \u003d drags.map((x) \u003d\u003e x * tdiff / 100);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        const tsince \u003d getDateStr(new Date(this.filterSinceDate).getTime() + idxs[0]);"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        const tuntil \u003d getDateStr(new Date(this.filterSinceDate).getTime() + idxs[1]);"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        const rawCommits \u003d userOrig.commits.filter("
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            (commit) \u003d\u003e commit.date \u003e\u003d tsince \u0026\u0026 commit.date \u003c\u003d tuntil,"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        const commits \u003d [];"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        rawCommits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            commit.dayCommits.forEach((dayCommit) \u003d\u003e commits.push(dayCommit));"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            commits.push(commit);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        const { avgCommitSize } \u003d this;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        const user \u003d Object.assign({}, userOrig, { commits });"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "        this.$emit(\u0027view-zoom\u0027, {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "          avgCommitSize,"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "          user,"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "          sinceDate: tsince,"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "          untilDate: tuntil,"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByRepos(repos) {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "      const sortedRepos \u003d [];"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingWithinOption \u003d this.sortingWithinOption \u003d\u003d\u003d \u0027title\u0027 ? \u0027name\u0027 : this.sortingWithinOption;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingOption \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027 ? \u0027searchPath\u0027 : this.sortingOption;"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        users.sort(window.comparator((ele) \u003d\u003e ele[sortingWithinOption]));"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSortingWithinDsc) {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "          users.reverse();"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.push(users);"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "      sortedRepos.sort(window.comparator((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027 || sortingOption \u003d\u003d\u003d \u0027variance\u0027) {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "          return repo.reduce(this.getGroupCommitsVariance, 0);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return repo[0][sortingOption];"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.reverse();"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "      return sortedRepos;"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByNone(repos) {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "      const sortedRepos \u003d [];"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const isSortingGroupTitle \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027;"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "          sortedRepos.push(user);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      sortedRepos.sort(window.comparator((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (isSortingGroupTitle) {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "          return repo.searchPath + repo.name;"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return repo[this.sortingOption];"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.reverse();"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "      return sortedRepos;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByAuthors(repos) {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "      const authorMap \u003d {};"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "      const filtered \u003d [];"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingWithinOption \u003d this.sortingWithinOption \u003d\u003d\u003d \u0027title\u0027 ? \u0027searchPath\u0027 : this.sortingWithinOption;"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      const sortingOption \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027 ? \u0027name\u0027 : this.sortingOption;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "          if (Object.keys(authorMap).includes(user.name)) {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            authorMap[user.name].push(user);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            authorMap[user.name] \u003d [user];"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(authorMap).forEach((author) \u003d\u003e {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        authorMap[author].sort(window.comparator((repo) \u003d\u003e repo[sortingWithinOption]));"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSortingWithinDsc) {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "          authorMap[author].reverse();"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "        filtered.push(authorMap[author]);"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "      filtered.sort(window.comparator((author) \u003d\u003e {"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        if (sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027 || sortingOption \u003d\u003d\u003d \u0027variance\u0027) {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "          return author.reduce(this.getGroupCommitsVariance, 0);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "        return author[0][sortingOption];"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        filtered.reverse();"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "      return filtered;"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "    getGroupCommitsVariance(total, group) {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "      return total + group[this.sortingOption];"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ""
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    getGroupTotalContribution(group) {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      return group.reduce((accContribution, user) \u003d\u003e accContribution + user.totalCommits, 0);"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    },"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "    this.renderFilterHash();"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getFiltered();"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "    this.processFileFormats();"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    v_ramp: window.vRamp,"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 10,
      "jamessspanggg": 72,
      "-": 587
    }
  },
  {
    "path": "frontend/src/tabs/segment.pug",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": ".segment(v-bind:class\u003d\"{ untouched: !segment.authored, active: segment.lines.length \u003c 5 }\")"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  .closer(v-if\u003d\"!segment.authored \u0026\u0026 segment.lines.length \u003e 4\", v-on:click\u003d\"loadCode()\")"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    i.fas.fa-ellipsis-h.icon"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    span.tooltiptext.tooltiptext--close Show untouched code"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    span.tooltiptext.tooltiptext--open Hide untouched code"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "  div(v-if\u003d\"loaded\", v-hljs\u003d\"path\")"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "    .code(v-for\u003d\"(line, index) in segment.lines\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      .line-number {{ segment.lineNumbers[index] + \"\\n\" }}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jamessspanggg"
        },
        "content": "      .line-content {{ line + \"\\n\" }}"
      }
    ],
    "authorContributionMap": {
      "jamessspanggg": 9
    }
  },
  {
    "path": "src/main/java/reposense/authorship/FileInfoExtractor.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.authorship;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileInfo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.LineInfo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitCheckout;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitDiff;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitRevList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.CommitNotFoundException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Format;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Extracts out all the relevant {@code FileInfo} from the repository."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileInfoExtractor {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(FileInfoExtractor.class);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_START_EXTRACTING_FILE_INFO \u003d \"Extracting relevant file info from %s (%s)...\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DIFF_FILE_CHUNK_SEPARATOR \u003d \"\\ndiff --git a/.*\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LINE_CHUNKS_SEPARATOR \u003d \"\\n@@ \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String LINE_INSERTED_SYMBOL \u003d \"+\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String STARTING_LINE_NUMBER_GROUP_NAME \u003d \"startingLineNumber\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FILE_CHANGED_GROUP_NAME \u003d \"filePath\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FILE_DELETED_SYMBOL \u003d \"/dev/null\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MATCH_GROUP_FAIL_MESSAGE_FORMAT \u003d \"Failed to match the %s group for:\\n%s\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static final String BINARY_FILE_LINE_DIFF_RESULT \u003d \"-\\t-\\t\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int LINE_CHANGED_HEADER_INDEX \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern STARTING_LINE_NUMBER_PATTERN \u003d Pattern.compile("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \"-(\\\\d)+(,)?(\\\\d)* \\\\+(?\u003cstartingLineNumber\u003e\\\\d+)(,)?(\\\\d)* @@\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Pattern FILE_CHANGED_PATTERN \u003d Pattern.compile(\"\\n(\\\\+){3} b?/(?\u003cfilePath\u003e.*)\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Extracts a list of relevant files given in {@code config}."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cFileInfo\u003e extractFileInfos(RepoConfiguration config) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        logger.info(String.format(MESSAGE_START_EXTRACTING_FILE_INFO, config.getLocation(), config.getBranch()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        // checks out to the latest commit of the date range to ensure the FileInfo generated correspond to the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // git blame file analyze output"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            GitCheckout.checkoutDate(config.getRepoRoot(), config.getBranch(), config.getUntilDate());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (CommitNotFoundException cnfe) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return fileInfos;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String lastCommitHash \u003d GitRevList.getCommitHashBeforeDate("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                config.getRepoRoot(), config.getBranch(), config.getSinceDate());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!lastCommitHash.isEmpty()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            fileInfos \u003d getEditedFileInfos(config, lastCommitHash);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            getAllFileInfo(config, fileInfos);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        fileInfos.sort(Comparator.comparing(FileInfo::getPath));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileInfos;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates a list of relevant {@code FileInfo} for all files that were edited in between the current"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     * commit and the {@code lastCommitHash} commit, marks each {@code LineInfo} for each {@code FileInfo} on"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * whether they have been inserted within the commit range or not, and returns it."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    public static List\u003cFileInfo\u003e getEditedFileInfos(RepoConfiguration config, String lastCommitHash) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e fileInfos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        String fullDiffResult \u003d GitDiff.diffCommit(config.getRepoRoot(), lastCommitHash);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        // no diff between the 2 commits, return an empty list"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        if (fullDiffResult.isEmpty()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return fileInfos;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] fileDiffResultList \u003d fullDiffResult.split(DIFF_FILE_CHUNK_SEPARATOR);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        Set\u003cPath\u003e nonBinaryFilesSet \u003d getNonBinaryFilesList(config);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String fileDiffResult : fileDiffResultList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            Matcher filePathMatcher \u003d FILE_CHANGED_PATTERN.matcher(fileDiffResult);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            // diff result does not have the markers to indicate that file has any line changes, skip it"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!filePathMatcher.find()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            String filePath \u003d filePathMatcher.group(FILE_CHANGED_GROUP_NAME);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            // file is deleted, skip it as well"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (filePath.equals(FILE_DELETED_SYMBOL)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            if (!isValidAndNonBinaryFile(filePath, nonBinaryFilesSet)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Format.isInsideWhiteList(filePath, config.getFormats())) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                FileInfo currentFileInfo \u003d generateFileInfo(config.getRepoRoot(), filePath);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                setLinesToTrack(currentFileInfo, fileDiffResult);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                fileInfos.add(currentFileInfo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileInfos;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Returns a {@code Set} of non-binary files for the repo {@code repoConfig}."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    public static Set\u003cPath\u003e getNonBinaryFilesList(RepoConfiguration repoConfig) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        List\u003cString\u003e modifiedFileList \u003d GitDiff.getModifiedFilesList(Paths.get(repoConfig.getRepoRoot()));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        // Gets rid of binary files and files with invalid directory name."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        return modifiedFileList.stream()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                .filter(file -\u003e !file.startsWith(BINARY_FILE_LINE_DIFF_RESULT))"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                .map(rawNonBinaryFile -\u003e rawNonBinaryFile.split(\"\\t\")[2])"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                .filter(FileUtil::isValidPath)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                .map(filteredFile -\u003e Paths.get(filteredFile))"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                .collect(Collectors.toCollection(HashSet::new));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "     * Analyzes the {@code fileDiffResult} and marks each {@code LineInfo} in {@code FileInfo} on whether they were"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "     * inserted in between the commit range."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void setLinesToTrack(FileInfo fileInfo, String fileDiffResult) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] linesChangedChunk \u003d fileDiffResult.split(LINE_CHUNKS_SEPARATOR);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cLineInfo\u003e lineInfos \u003d fileInfo.getLines();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        int fileLinePointer \u003d 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // skips the header, index starts from 1"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int sectionIndex \u003d 1; sectionIndex \u003c linesChangedChunk.length; sectionIndex++) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            String linesChangedInSection \u003d linesChangedChunk[sectionIndex];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] linesChanged \u003d linesChangedInSection.split(\"\\n\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            int startingLineNumber \u003d getStartingLineNumber(linesChanged[LINE_CHANGED_HEADER_INDEX]);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            // mark all untouched lines between sections as untracked"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            while (fileLinePointer \u003c startingLineNumber - 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                lineInfos.get(fileLinePointer++).setTracked(false);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            // skips the header, index starts from 1"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int lineIndex \u003d 1; lineIndex \u003c linesChanged.length; lineIndex++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                String lineChanged \u003d linesChanged[lineIndex];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                // set line added to be tracked"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                if (lineChanged.startsWith(LINE_INSERTED_SYMBOL)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineInfos.get(fileLinePointer++).setTracked(true);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        // set all remaining lines in file that were untouched to be untracked"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        while (fileLinePointer \u003c lineInfos.size()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            lineInfos.get(fileLinePointer++).setTracked(false);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * Traverses each file from the repo root directory, generates the {@code FileInfo} for each relevant file found"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     * based on {@code config} and inserts it into {@code fileInfos}."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static void getAllFileInfo(RepoConfiguration config, List\u003cFileInfo\u003e fileInfos) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        Set\u003cPath\u003e nonBinaryFilesList \u003d getNonBinaryFilesList(config);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        for (Path relativePath : nonBinaryFilesList) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            if (Format.isInsideWhiteList(relativePath.toString(), config.getFormats())) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                fileInfos.add(generateFileInfo(config.getRepoRoot(), relativePath.toString()));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates and returns a {@code FileInfo} with a list of {@code LineInfo} for each line content in the"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code relativePath} file."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    public static FileInfo generateFileInfo(String repoRoot, String relativePath) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d new FileInfo(relativePath);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        Path path \u003d Paths.get(repoRoot, fileInfo.getPath());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(path.toFile()))) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            int lineNum \u003d 1;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                fileInfo.addLine(new LineInfo(lineNum++, line));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.SEVERE, ioe.getMessage(), ioe);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        return fileInfo;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the starting line changed number, within the file diff result, by matching the pattern inside"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code linesChanged}."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int getStartingLineNumber(String linesChanged) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher chunkHeaderMatcher \u003d STARTING_LINE_NUMBER_PATTERN.matcher(linesChanged);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!chunkHeaderMatcher.find()) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.severe(String.format(MATCH_GROUP_FAIL_MESSAGE_FORMAT, \"line changed\", linesChanged));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new AssertionError(\"Should not have error matching line number pattern inside chunk header!\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        return Integer.parseInt(chunkHeaderMatcher.group(STARTING_LINE_NUMBER_GROUP_NAME));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Returns true if {@code filePath} is valid and the file is not in binary."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static boolean isValidAndNonBinaryFile(String filePath, Set\u003cPath\u003e nonBinaryFilesSet) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        return FileUtil.isValidPath(filePath) \u0026\u0026 nonBinaryFilesSet.contains(Paths.get(filePath));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 37,
      "-": 194
    }
  },
  {
    "path": "src/main/java/reposense/git/GitDiff.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.system.CommandRunner.runCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains git diff related functionalities."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Git diff is responsible for obtaining the changes between commits, commit and working tree, etc."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitDiff {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static final String EMPTY_TREE_HASH \u003d \"4b825dc642cb6eb9a060e54bf8d69288fbee4904\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static final String CHECKED_OUT_COMMIT_REFERENCE \u003d \"HEAD\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the git diff result of the current commit compared to {@code lastCommitHash}, without any context."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String diffCommit(String root, String lastCommitHash) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Path rootPath \u003d Paths.get(root);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return runCommand(rootPath, \"git diff -U0 \" + lastCommitHash);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Returns a list of committed files with the corresponding number of lines added and deleted in the repo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * {@code repoRoot}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    public static List\u003cString\u003e getModifiedFilesList(Path repoRoot) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        String diffCommand \u003d String.format(\"git diff --numstat %s %s\", EMPTY_TREE_HASH, CHECKED_OUT_COMMIT_REFERENCE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        String diffResult \u003d runCommand(repoRoot.toAbsolutePath(), diffCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        return Arrays.asList(diffResult.split(\"\\n\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 14,
      "-": 21
    }
  },
  {
    "path": "src/main/java/reposense/git/GitUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.util.StringsUtil.addQuote;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.FileSystem;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.FileSystems;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.PathMatcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Format;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.StringsUtil;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains Git related utilities."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "class GitUtil {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    static final DateFormat GIT_LOG_SINCE_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u002700:00:00+08:00\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    static final DateFormat GIT_LOG_UNTIL_DATE_FORMAT \u003d new SimpleDateFormat(\"yyyy-MM-dd\u0027T\u002723:59:59+08:00\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(GitUtil.class);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // ignore check against email"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String AUTHOR_NAME_PATTERN \u003d \"^%s \u003c.*\u003e$\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // ignore check against author name"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String AUTHOR_EMAIL_PATTERN \u003d \"^.* \u003c\\\\(.*+\\\\)\\\\?%s\u003e$\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String OR_OPERATOR_PATTERN \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the date range of commits to analyze for `git` commands."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    static String convertToGitDateRangeArgs(Date sinceDate, Date untilDate) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        String gitDateRangeArgs \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sinceDate !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            gitDateRangeArgs +\u003d \" --since\u003d\" + addQuote(GIT_LOG_SINCE_DATE_FORMAT.format(sinceDate));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        if (untilDate !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            gitDateRangeArgs +\u003d \" --until\u003d\" + addQuote(GIT_LOG_UNTIL_DATE_FORMAT.format(untilDate));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitDateRangeArgs;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the authors to analyze for `git log` command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    static String convertToFilterAuthorArgs(Author author) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder filterAuthorArgsBuilder \u003d new StringBuilder(\" --author\u003d\\\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // git author names and emails may contain regex meta-characters, so we need to escape those"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        author.getAuthorAliases().stream()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(authorAlias -\u003e String.format(AUTHOR_NAME_PATTERN,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                        StringsUtil.replaceSpecialSymbols(authorAlias, \".\")) + OR_OPERATOR_PATTERN)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(filterAuthorArgsBuilder::append);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        author.getEmails().stream()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(email -\u003e String.format(AUTHOR_EMAIL_PATTERN,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        StringsUtil.replaceSpecialSymbols(email, \".\")) + OR_OPERATOR_PATTERN)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(filterAuthorArgsBuilder::append);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        filterAuthorArgsBuilder.append("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(AUTHOR_NAME_PATTERN,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        StringsUtil.replaceSpecialSymbols(author.getGitId(), \".\"))).append(\"\\\"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return filterAuthorArgsBuilder.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the file formats to analyze for `git` commands."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    static String convertToGitFormatsArgs(List\u003cFormat\u003e formats) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder gitFormatsArgsBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        final String cmdFormat \u003d \" -- \" + addQuote(\"*.%s\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        formats.stream()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(format -\u003e String.format(cmdFormat, format.toString()))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(gitFormatsArgsBuilder::append);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitFormatsArgsBuilder.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the {@code String} command to specify the globs to exclude for `git log` command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Also checks that every glob in {@code ignoreGlobList} only targets files within the given repository"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code root}."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String convertToGitExcludeGlobArgs(File root, List\u003cString\u003e ignoreGlobList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        StringBuilder gitExcludeGlobArgsBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        final String cmdFormat \u003d \" \" + addQuote(\":(exclude)%s\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ignoreGlobList.stream()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                .filter(item -\u003e isValidIgnoreGlob(root, item))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                .map(ignoreGlob -\u003e String.format(cmdFormat, ignoreGlob))"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                .forEach(gitExcludeGlobArgsBuilder::append);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        return gitExcludeGlobArgsBuilder.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Returns true if the {@code ignoreGlob} is inside the current repository."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Produces log messages when the invalid {@code ignoreGlob} is skipped."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static boolean isValidIgnoreGlob(File repoRoot, String ignoreGlob) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        String validPath \u003d ignoreGlob;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        FileSystem fileSystem \u003d FileSystems.getDefault();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        if (ignoreGlob.isEmpty()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        } else if (ignoreGlob.startsWith(\"/\") || ignoreGlob.startsWith(\"\\\\\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            // Ignore globs cannot start with a slash"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            logger.log(Level.WARNING, ignoreGlob + \" cannot start with / or \\\\.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        } else if (ignoreGlob.contains(\"/*\") || ignoreGlob.contains(\"\\\\*\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            // contains directories"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            validPath \u003d ignoreGlob.substring(0, ignoreGlob.indexOf(\"/*\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        } else if (ignoreGlob.contains(\"*\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            // no directories"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            String fileGlobPath \u003d \"glob:\" + repoRoot.getCanonicalPath().replaceAll(\"\\\\\\\\+\", \"\\\\/\") + \"/**\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            PathMatcher pathMatcher \u003d fileSystem.getPathMatcher(fileGlobPath);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            validPath \u003d new File(repoRoot, validPath).getCanonicalPath();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pathMatcher.matches(Paths.get(validPath))) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, ioe.getMessage(), ioe);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        logger.log(Level.WARNING, ignoreGlob + \" will be skipped as this glob points to the outside of \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                + \"the repository.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 13,
      "-": 130
    }
  },
  {
    "path": "src/main/java/reposense/util/FileUtil.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.ByteBuffer;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.nio.file.InvalidPathException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.zip.ZipEntry;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.zip.ZipInputStream;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.zip.ZipOutputStream;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains file processing related functionalities."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileUtil {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String REPOS_ADDRESS \u003d \"repos\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // zip file which contains all the specified file types"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String ZIP_FILE \u003d \"archive.zip\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(FileUtil.class);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String GITHUB_API_DATE_FORMAT \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final ByteBuffer buffer \u003d ByteBuffer.allocate(1 \u003c\u003c 11); // 2KB"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static final String MESSAGE_INVALID_FILE_PATH \u003d \"\\\"%s\\\" is an invalid file path. Skipping this directory.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Writes the JSON file representing the {@code object} at the given {@code path}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void writeJsonFile(Object object, String path) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Gson gson \u003d new GsonBuilder()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                .setDateFormat(GITHUB_API_DATE_FORMAT)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                .setPrettyPrinting()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                .create();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        String result \u003d gson.toJson(object);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        try (PrintWriter out \u003d new PrintWriter(path)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            out.print(result);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            out.print(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.SEVERE, e.getMessage(), e);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes the {@code root} directory."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if the root path does not exist."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void deleteDirectory(String root) throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        File rootDirectory \u003d Paths.get(root).toFile();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (rootDirectory.exists()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            for (File file : rootDirectory.listFiles()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                if (file.isDirectory()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    deleteDirectory(file.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    file.delete();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            rootDirectory.delete();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rootDirectory.exists()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new IOException(String.format(\"Fail to delete directory %s\", rootDirectory));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * Zips all the files of {@code fileTypes} contained in {@code sourceAndOutputPath} directory into the same folder."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void zip(Path sourceAndOutputPath, String... fileTypes) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.zip(sourceAndOutputPath, sourceAndOutputPath, fileTypes);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "     * Zips all the {@code fileTypes} files contained in the {@code sourcePath} and its subdirectories."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the zipped {@code ZIP_FILE} file in the {@code outputPath}."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void zip(Path sourcePath, Path outputPath, String... fileTypes) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        try ("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                FileOutputStream fos \u003d new FileOutputStream(outputPath + File.separator + ZIP_FILE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                ZipOutputStream zos \u003d new ZipOutputStream(fos)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            Set\u003cPath\u003e allFiles \u003d getFilePaths(sourcePath, fileTypes);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Path path : allFiles) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                String filePath \u003d sourcePath.relativize(path.toAbsolutePath()).toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                String zipEntry \u003d Files.isDirectory(path) ? filePath + File.separator : filePath;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                zos.putNextEntry(new ZipEntry(zipEntry.replace(\"\\\\\", \"/\")));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Files.isRegularFile(path)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    try (InputStream is \u003d Files.newInputStream(path)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                        int length;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                        while ((length \u003d is.read(buffer.array())) \u003e 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                            zos.write(buffer.array(), 0, length);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                zos.closeEntry();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.SEVERE, ioe.getMessage(), ioe);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "     * Unzips the contents of the {@code zipSourcePath} into {@code outputPath}."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if {@code zipSourcePath} is an invalid path."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void unzip(Path zipSourcePath, Path outputPath) throws IOException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        try (InputStream is \u003d Files.newInputStream(zipSourcePath)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            unzip(is, outputPath);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     * Unzips the contents of the {@code is} into {@code outputPath}."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if {@code is} refers to an invalid path."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void unzip(InputStream is, Path outputPath) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        try (ZipInputStream zis \u003d new ZipInputStream(is)) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            ZipEntry entry;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(outputPath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            while ((entry \u003d zis.getNextEntry()) !\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                Path path \u003d Paths.get(outputPath.toString(), entry.getName());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                // create the directories of the zip directory"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                if (entry.isDirectory()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                    Files.createDirectories(path.toAbsolutePath());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                    zis.closeEntry();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!Files.exists(path.getParent())) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                    Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                try (OutputStream output \u003d Files.newOutputStream(path)) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                    int length;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                    while ((length \u003d zis.read(buffer.array())) \u003e 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                        output.write(buffer.array(), 0, length);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                zis.closeEntry();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * Copies the template files from {@code sourcePath} to the {@code outputPath}."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if {@code is} refers to an invalid path."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void copyTemplate(InputStream is, String outputPath) throws IOException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.unzip(is, Paths.get(outputPath));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates the {@code dest} directory if it does not exist."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void createDirectory(Path dest) throws IOException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createDirectories(dest);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Returns true if {@code path} is a valid path."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     * Produces log messages when the invalid file path is skipped."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    public static boolean isValidPath(String path) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            Paths.get(path);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        } catch (InvalidPathException ipe) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            logger.log(Level.WARNING, String.format(MESSAGE_INVALID_FILE_PATH, path));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@code Path} of {@code fileTypes} contained in the given {@code directoryPath} directory."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Set\u003cPath\u003e getFilePaths(Path directoryPath, String... fileTypes) throws IOException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        return Files.walk(directoryPath)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                .filter(p -\u003e FileUtil.isFileTypeInPath(p, fileTypes) || Files.isDirectory(p))"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                .collect(Collectors.toSet());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the {@code path} contains one of the {@code fileTypes} extension."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    private static boolean isFileTypeInPath(Path path, String... fileTypes) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        return Arrays.stream(fileTypes).anyMatch(path.toString()::endsWith);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String attachJsPrefix(String original, String prefix) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"var \" + prefix + \" \u003d \" + original;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 17,
      "-": 190
    }
  },
  {
    "path": "src/test/java/reposense/authorship/FileInfoExtractorTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.authorship;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.authorship.model.FileInfo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitCheckout;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Author;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "import reposense.model.Format;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.SystemUtil;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.TestUtil;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileInfoExtractorTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"resources\", \"FileInfoExtractorTest\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path FILE_WITH_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER.resolve(\"fileWithSpecialCharacters.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Path FILE_WITHOUT_SPECIAL_CHARACTER \u003d TEST_DATA_FOLDER"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            .resolve(\"fileWithoutSpecialCharacters.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String WINDOWS_ILLEGAL_FILE_NAME_BRANCH \u003d \"windows-illegal-filename\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String EDITED_FILE_INFO_BRANCH \u003d \"getEditedFileInfos-test\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH \u003d \"directory-with-valid-whitelisted-name\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \"535-FileInfoExtractorTest-branchWithValidWhitelistedFileName.txt\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    private static final String BRANCH_WITH_BINARY_FILES \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "            \"728-FileInfoExtractorTest-getNonBinaryFilesList_directoryWithBinaryFiles_success\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String FEBRUARY_EIGHT_COMMIT_HASH \u003d \"768015345e70f06add2a8b7d1f901dc07bf70582\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String OCTOBER_SEVENTH_COMMIT_HASH \u003d \"b28dfac5bd449825c1a372e58485833b35fdbd50\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfosTest() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(MAIN_AUTHOR_NAME, new Author(MAIN_AUTHOR_NAME));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        config.getAuthorEmailsAndAliasesMap().put(FAKE_AUTHOR_NAME, new Author(FAKE_AUTHOR_NAME));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), TEST_COMMIT_HASH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(6, files.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"blameTest.java\"), files));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newFile.java\"), files));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_sinceDateFebrauaryNineToLatestCommit_success() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date \u003d TestUtil.getDate(2018, Calendar.FEBRUARY, 9);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(4, files.size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // files edited within commit range"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // files not edited within commit range"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"blameTest.java\"), files));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"newFile.java\"), files));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_windowsIllegalFileNameBranch_success() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), WINDOWS_ILLEGAL_FILE_NAME_BRANCH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        if (SystemUtil.isWindows()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.assertEquals(6, files.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.assertEquals(7, files.size());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.assertTrue(isFileExistence(Paths.get(\"windows:Illegal?Characters!File(Name).java\"), files));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_directoryWithValidWhitelistedName_success() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), DIRECTORY_WITH_VALID_WHITELISTED_NAME_BRANCH);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(7, files.size());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\".gradle/anything.txt\"), files));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_branchWithValidWhitelistedFileName_success() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), BRANCH_WITH_VALID_WHITELISTED_FILE_NAME_BRANCH);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"whitelisted-format.txt\"), files));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_sinceDateAfterLatestCommit_emptyResult() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date \u003d TestUtil.getDate(2050, 12, 31);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setSinceDate(date);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(files.isEmpty());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    public void extractFileInfos_untilDateBeforeFirstCommit_emptyResult() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        Date date \u003d TestUtil.getDate(2015, 12, 31);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        config.setUntilDate(date);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.extractFileInfos(config);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(files.isEmpty());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getEditedFileInfos_editFileInfoBranchSinceFebrauryEight_success() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, FEBRUARY_EIGHT_COMMIT_HASH);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(3, files.size());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"README.md\"), files));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"annotationTest.java\"), files));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertTrue(isFileExistence(Paths.get(\"newPos/movedFile.java\"), files));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        // file renamed without changing content, not included"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"renamedFile.java\"), files));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getEditedFileInfos_editFileInfoBranchSinceFirstCommit_success() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), EDITED_FILE_INFO_BRANCH);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, FIRST_COMMIT_HASH);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(5, files.size());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        // empty file created, not included"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertFalse(isFileExistence(Paths.get(\"inMasterBranch.java\"), files));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getEditedFileInfos_windowsIllegalFileNameBranchSinceOctoberFifteen_success() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        GitCheckout.checkout(config.getRepoRoot(), WINDOWS_ILLEGAL_FILE_NAME_BRANCH);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cFileInfo\u003e files \u003d FileInfoExtractor.getEditedFileInfos(config, OCTOBER_SEVENTH_COMMIT_HASH);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        if (SystemUtil.isWindows()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.assertTrue(files.isEmpty());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.assertEquals(1, files.size());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.assertTrue(isFileExistence(Paths.get(\"windows:Illegal?Characters!File(Name).java\"), files));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    public void generateFileInfo_fileWithSpecialCharacters_correctFileInfoGenerated() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(\".\", FILE_WITH_SPECIAL_CHARACTER.toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(5, fileInfo.getLines().size());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    public void generateFileInfo_fileWithoutSpecialCharacters_correctFileInfoGenerated() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo fileInfo \u003d FileInfoExtractor.generateFileInfo(\".\", FILE_WITHOUT_SPECIAL_CHARACTER.toString());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(5, fileInfo.getLines().size());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    public void getNonBinaryFilesList_directoryWithBinaryFiles_success() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        List\u003cString\u003e nonBinaryFilesList \u003d Arrays.asList("
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                \"binaryFileTest/nonBinaryFile.txt\", \"My Documents/wordToHtml.htm\", \"My Pictures/notPngPicture.png\","
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                \"My Documents/wordToHtml_files/colorschememapping.xml\", \"My Documents/wordToHtml_files/filelist.xml\","
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                \"My Documents/notPdfDocument.pdf\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        List\u003cString\u003e binaryFilesList \u003d Arrays.asList("
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                \"binaryFileTest/binaryFile.txt\", \"My Documents/word.docx\", \"My Documents/pdfDocument.pdf\","
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                \"My Documents/wordToHtml_files/themedata.thmx\", \"My Pictures/pngPicture.png\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        List\u003cFormat\u003e testfileFormats \u003d Format.convertStringsToFormats("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "                Arrays.asList(\"txt\", \"htm\", \"xml\", \"pdf\", \"thmx\"));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        config.setFormats(testfileFormats);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        GitCheckout.checkoutBranch(config.getRepoRoot(), BRANCH_WITH_BINARY_FILES);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        Set\u003cPath\u003e files \u003d FileInfoExtractor.getNonBinaryFilesList(config);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        Assert.assertEquals(6, files.size());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        // Non binary files should be captured"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        nonBinaryFilesList.forEach(nonBinFile -\u003e Assert.assertTrue(files.contains(Paths.get(nonBinFile))));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        // Binary files should be ignored"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "        binaryFilesList.forEach(binFile -\u003e Assert.assertFalse(files.contains(Paths.get(binFile))));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jylee-git"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jylee-git"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isFileExistence(Path filePath, List\u003cFileInfo\u003e files) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        return files.stream().anyMatch(file -\u003e Paths.get(file.getPath()).equals(filePath));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jylee-git": 28,
      "-": 169
    }
  }
]
