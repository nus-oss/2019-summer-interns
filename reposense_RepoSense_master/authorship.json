[
  {
    "path": ".eslintrc.json",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    \"env\": {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "        \"browser\": true"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    \"extends\": \"airbnb-base\","
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \"rules\": {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        \"no-param-reassign\": \"warn\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \"arrow-parens\": [\"error\", \"always\"],"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        \"indent\": [\"error\", 2, {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            \"MemberExpression\": 2,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            \"CallExpression\": { \"arguments\": 2 },"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "            \"ArrayExpression\": 2,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "            \"ignoredNodes\": ["
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "                \"ConditionalExpression\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "            ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Metta Ong": 4,
      "-": 14
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# RepoSense - Developer Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "Thank you for your interest in contributing to RepoSense!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "- [Setting up](#setting-up)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Prerequisites](#prerequisites)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Setting up the project in your computer using IntelliJ](#setting-up-the-project-in-your-computer-using-intellij)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Verifying the setup](#verifying-the-setup)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Configuring the Java coding style](#configuring-the-java-coding-style)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Configuring the JavaScript coding style](#configuring-the-javascript-coding-style)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Configuring Cypress for automated front-end testing](#configuring-cypress-for-automated-front-end-testing)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "  - [(Optional) Using Vue.js devtools for frontend debugging on Chrome](#optional-using-vuejs-devtools-for-frontend-debugging-on-chrome)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "- [Architecture](#architecture)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Parser](#parserconfigparser)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Git](#git)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  - [CommitsReporter](#commitsreporter)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  - [AuthorshipReporter](#authorshipreporter)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  - [ReportGenerator](#reportgeneratormain)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  - [System](#system)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Model](#model)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "- [HTML Report](#html-report)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Report Architecture](#report-architecture)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Javascript Files](#javascript-files)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  - [JSON Report Files](#json-report-files)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Main](#main-mainjs)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Data loader](#data-loader-apijs)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Summary View](#summary-view-v_summaryjs)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  - [Authorship View](#authorship-view-v_authorshipjs)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "### Prerequisites"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "1. **JDK `1.8.0_60`** or later."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "1. **git `2.14`** or later on the command line."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": " \u003e Type `git --version` on your OS terminal and ensure that you have the correct version of **git**."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "### Setting up the project in your computer using IntelliJ"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "1. Fork this repo, and clone the fork to your computer."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open *IntelliJ* (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct *JDK* version for *Gradle*."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Click `Configure` \u003e `Project Defaults` \u003e `Project Structure`."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    1. Click `New…​` and find the directory of the *JDK*."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the `build.gradle` file and select it. Click `OK`."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that the selected version of `Gradle JVM` matches our prerequisite."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `OK` to accept the all the other default settings."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "### Verifying the setup"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that *Gradle* builds without error by running the command `gradlew clean build`, and ensure that it finishs with a `BUILD SUCCESSFUL` message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the tests to ensure that they all pass by running the command `gradlew test systemtest`, and ensure that it finishs with a `BUILD SUCCESSFUL` message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e Ensure that you are on the project root directory when using the `gradlew` commands."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "### Configuring the Java coding style"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "This project follows [oss-generic coding standards](https://oss-generic.github.io/process/docs/CodingStandards.html). *IntelliJ’s* default style is mostly compliant with our *Java* coding convention but it uses a different import order from ours. To rectify,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to `File` \u003e `Settings…`​ (*Windows/Linux*), or `IntelliJ IDEA` \u003e `Preferences…`​ (*macOS*)."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Editor` \u003e `Code Style` \u003e `Java`."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click on the `Imports` tab to set the order"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   * For `Class count to use import with \u0027*\u0027` and `Names count to use static import with \u0027*\u0027`: Set to `999` to prevent IntelliJ from contracting the import statements"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   * For `Import Layout`, follow this image below:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   ![import-order](images/import-order.png)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can follow the [Using Checkstyle](UsingCheckstyle.md) document to configure *Intellij* to check style-compliance as you write code."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "### Configuring the JavaScript coding style"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Our project follows the [Airbnb Javascript Style Guide](https://github.com/airbnb/javascript), the eslint configuration file is available at the root of the project. Please run a `npm run lint -- --fix frontend/src/**/*js` from the project root directory and fix all of the eslint errors before committing your code for final review."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "Eslint and its accompaning modules can be installed through NPM, so do ensure that you got it [installed](https://www.npmjs.com/get-npm) if you are working on the report."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "### Configuring Cypress for automated front-end testing"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "We use [Cypress](https://www.cypress.io/) for automated end-to-end front-end testing. \u003cbr/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "#### To write tests"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "1. Create a new test file in `frontend/cypress/tests`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "1. At project root start *Cypress Test Runner* by running `gradlew cypress`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the top right hand corner, set `Chrome` as the default browser"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "1. Under **Integration Tests**, click on the newly created test file to run it"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "![Cypress Test Runner](images/cypress-test-runner.jpg \"Cypress Test Runner\")"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Read [Cypress\u0027s Documentation](https://docs.cypress.io/api/commands/document.html#Syntax) to familiarize yourself with its syntax and [Cypress\u0027s debugging guide](https://docs.cypress.io/guides/guides/debugging.html#Log-Cypress-events) to tackle problems with your tests."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "#### To run all tests locally"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "1.  At project root, run `gradlew frontendTest`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e If you encountered an invalid browser error, please ensure that you have `Chrome` installed in the default installation directory. Otherwise, follow the instructions [here](https://docs.cypress.io/guides/guides/debugging.html#Launching-browsers) to create symbolic links so Cypress can locate `Chrome` in your system."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "### (Optional) Using Vue.js devtools for frontend debugging on Chrome"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "1. On your Chrome, visit the website of [Vue.js devtools](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd) and add the extension. "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "1. Go the detail page of this extension in Chrome\u0027s extension management panel and select `Allow access to file URLs`. If you are unable to locate it, copy the link: `chrome://extensions/?id\u003dnhdogjmejiglipccpnnnanhbledajbpd` and visit it on your Chrome."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "1. Open any report generated by RepoSense."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "1. Press `F12` or right click and choose `inspect` at the report page."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "1. Choose `Vue` at the navigation bar."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "![Choose Vue](images/choose-vue.png)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "1. Debug using the tool."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "![Use Vue](images/use-vue.png)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "\u003e See its [Github](https://github.com/vuejs/vue-devtools) page for more details."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "### Before writing code"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "1. Do check out our [process guide](../docs/Process.md) before submitting any PR with your changes."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "### Building and running RepoSense from code"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "1. Execute the following command on the OS terminal inside the project directory. \u003cbr/\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "Usage: `gradlew run -Dargs\u003d\"([--config CONFIG_FOLDER] | [--repos REPO_PATH_OR_URL...]) [--view [REPORT_FOLDER]] [--output OUTPUT_DIRECTORY] [--since DD/MM/YYYY] [--until DD/MM/YYYY] [--formats FORMAT...] [--ignore-standalone-config] [--timezone ZONE_ID[±hh[mm]]]\"` \u003cbr/\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Named Arguments: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "--help, -h           Show help message."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "--version, -V        Show the version of RepoSense."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "--view [PATH], -v [PATH]"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                     Starts a server to display the report in the"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                     provided directory. If used as a flag (with no"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                     argument), generates a report and automatically"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                     displays the report."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "--output PATH, -o PATH"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                     The directory to output the report folder,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                     reposense-report. If not provided, the report"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                     folder will be created in the current working"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                     directory."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "--since dd/MM/yyyy, -s dd/MM/yyyy"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                     The date to start filtering."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "--until dd/MM/yyyy, -u dd/MM/yyyy"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                     The date to stop filtering."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "--formats [FORMAT [FORMAT ...]], -f [FORMAT [FORMAT ...]]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                     The alphanumeric file formats to process."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                     If not provided, default file formats will be"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                     used."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                     Please refer to userguide for more information."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "--ignore-standalone-config, -i"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                     A flag to ignore the standalone config file in"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                     the repo."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "--timezone ZONE_ID[±hh[mm]], -t ZONE_ID[±hh[mm]]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                     The timezone to use for the generated report. "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                     One kind of valid timezones is relative to UTC. "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                     E.g. UTC, UTC+08, UTC-1030."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                     If not provided, system default timezone will be used."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "--config PATH, -c PATH"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                     The directory containing the config files. If not"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                     provided, the config files will be obtained from"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                     the current working directory."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "--repo LOCATION [LOCATION ...], --repos LOCATION [LOCATION ...], -r LOCATION [LOCATION ...]"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                     The GitHub URL or disk locations to clone repository."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with no specify arguments: (find and use config files in current working directory)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with config files and automatically open the report:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--config ./configs/ --output output_path/ --since 21/10/2017 --until 21/11/2017 --formats java adoc js --view\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with config files and choose the timezone used to be UTC+8:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--config ./configs/ --output output_path/ --timezone UTC+08\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with repository locations and automatically open the report:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--repos https://github.com/reposense/RepoSense.git https://github.com/se-edu/collate.git --output output_path/ --since 21/10/2017 --until 21/11/2017 --formats java adoc js --view\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with repository locations but ignore the standalone config file:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--repos https://github.com/reposense/RepoSense.git https://github.com/se-edu/collate.git --ignore-standalone-config\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to view the report:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"--view output_path/reposense-report\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Sample usage to generate the report with config files using the alias of argument:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "gradlew run -Dargs\u003d\"-c ./configs/ -o output_path/ -s 21/10/2017 -u 21/11/2017 -f java adoc js\""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "`-Dargs\u003d\"...\"` uses the same argument format as mentioned above."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "## Architecture"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": " ![architecture](images/architecture.png)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "*Figure 1. Overall architecture of RepoSense*"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "### Parser(ConfigParser)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "`Parser` contains two classes:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": " * [`ArgsParser`](/src/main/java/reposense/parser/ArgsParser.java): Parses the user-supplied command line arguments into a `CliArguments` object."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " * [`CsvParser`](/src/main/java/reposense/parser/CsvParser.java): Parses the the user-supplied CSV config file into a list of `RepoConfiguration` for each repository to analyze."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "### Git"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "`Git` package contains the wrapper classes for respective *git* commands."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitBlame`](/src/main/java/reposense/git/GitBlame.java): Wrapper class for `git blame` functionality. Traces the revision and author last modified each line of a file."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitBranch`](/src/main/java/reposense/git/GitBranch.java): Wrapper class for `git branch` functionality. Gets the name of the working branch of the target repo."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitCheckout`](/src/main/java/reposense/git/GitCheckout.java): Wrapper class for `git checkout` functionality. Checks out the repository by branch name or commit hash."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitClone`](/src/main/java/reposense/git/GitClone.java): Wrapper class for `git clone` functionality. Clones the repository from *GitHub* into a temporary folder in order to run the analysis."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitDiff`](/src/main/java/reposense/git/GitDiff.java): Wrapper class for `git diff` functionality. Obtains the changes between commits."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitLog`](/src/main/java/reposense/git/GitLog.java): Wrapper class for `git log` functionality. Obtains the commit logs and the authors\u0027 info."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitRevList`](/src/main/java/reposense/git/GitRevList.java): Wrapper class for `git rev-list` functionality. Retrieves the commit objects in reverse chronological order."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": " * [`GitShortlog`](/src/main/java/reposense/git/GitShortlog.java): Wrapper class for `git shortlog` functionality. Obtains the list of authors who have contributed to the target repo."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "### CommitsReporter"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "[`CommitsReporter`](/src/main/java/reposense/commits/CommitsReporter.java) is responsible for analyzing the **commit** history and generating a [`CommitContributionSummary`](/src/main/java/reposense/commits/model/CommitContributionSummary.java) for each repository. `CommitContributionSummary` contains information such as each author\u0027s daily and weekly contribution and the variance of their contribution. `CommitsReporter`,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`CommitInfoExtractor`](/src/main/java/reposense/commits/CommitInfoExtractor.java) to run the `git log` command, which generates the statistics of each commit made within date range."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates a [`CommitInfo`](/src/main/java/reposense/commits/model/CommitInfo.java) for each commit, which contains the `infoLine` and `statLine`."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`CommitInfoAnalyzer`](/src/main/java/reposense/commits/CommitInfoAnalyzer.java) to extract the relevant data from `CommitInfo` into a [`CommitResult`](/src/main/java/reposense/commits/model/CommitResult.java), such as the number of line insertions and deletions in the commit and the author of the commit."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`CommitResultAggregator`](/src/main/java/reposense/commits/CommitResultAggregator.java) to aggregate all `CommitResult` into a [`CommitContributionSummary`](/src/main/java/reposense/commits/model/CommitContributionSummary.java)."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "### AuthorshipReporter"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "[`AuthorshipReporter`](/src/main/java/reposense/authorship/AuthorshipReporter.java) is responsible for analyzing the white listed **files**, traces the original author for each line of text/code, and generating an [`AuthorshipSummary`](/src/main/java/reposense/authorship/model/AuthorshipSummary.java) for each repository. `AuthorshipSummary` contains the analysis results of the white listed files and the amount of line contributions each author made. `AuthorshipReporter`,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`FileInfoExtractor`](/src/main/java/reposense/authorship/FileInfoExtractor.java) to traverse the repository to find all relevant files."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates a [`FileInfo`](/src/main/java/reposense/authorship/model/FileInfo.java) for each relevant file, which contains the path to the file and a list of [`LineInfo`](/src/main/java/reposense/authorship/model/LineInfo.java) representing each line of the file."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`FileInfoAnalyzer`](/src/main/java/reposense/authorship/FileInfoAnalyzer.java) to analyze each file, using `git blame` or annotations, and finds the `Author` for each `LineInfo`."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates a [`FileResult`](/src/main/java/reposense/authorship/model/FileResult.java) for each file, which consolidates the authorship results into a *Map* of each author\u0027s line contribution to the file."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses [`FileResultAggregator`](/src/main/java/reposense/authorship/FileResultAggregator.java) to aggregate all `FileResult` into an `AuthorshipSummary`."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "### ReportGenerator(Main)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "[`ReportGenerator`](/src/main/java/reposense/report/ReportGenerator.java),"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses `GitDownloader` API to download the repository from *GitHub*."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": " 1. copies the template files into the designated output directory."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": " 1. uses `CommitReporter` and `AuthorshipReporter` to produce the commit and authorship summary respectively."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": " 1. generates the `JSON` files needed to generate the `HTML` report."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "### System"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "`System` contains the classes that interact with the Operating System and external processes."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * [`CommandRunner`](/src/main/java/reposense/system/CommandRunner.java) creates processes that executes commands on the terminal. It consists of many *git* commands."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * [`LogsManager`](/src/main/java/reposense/system/LogsManager.java) uses the `java.util.logging` package for logging. The `LogsManager` class is used to manage the logging levels and logging destinations. Log messages are output through: `Console` and to a `.log` file."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * [`ReportServer`](/src/main/java/reposense/system/ReportServer.java) starts a server to display the report on the browser. It depends on the `net.freeutils.httpserver` package."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "### Model"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "`Model` holds the data structures that are commonly used by the different aspects of *RepoSense*."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": " * [`Author`](/src/main/java/reposense/model/Author.java) stores the `GitHub ID` of an author. Any contributions or commits made by the author, using his/her `GitHub ID` or aliases, will be attributed to the same `Author` object. It is used by `AuthorshipReporter` and `CommitsReporter` to attribute the commit and file contributions to the respective authors."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": " * [`CliArguments`](/src/main/java/reposense/model/CliArguments.java) stores the parsed command line arguments supplied by the user. It contains the configuration settings such as the CSV config file to read from, the directory to output the report to, and date range of commits to analyze. These configuration settings are passed into `RepoConfiguration`."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": " * [`RepoConfiguration`](/src/main/java/reposense/model/RepoConfiguration.java) stores the configuration information from the CSV config file for a single repository, which are the repository\u0027s orgarization, name, branch, list of authors to analyse, date range to analyze commits and files from `CliArguments`."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": " These configuration information are used by:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    - `GitDownloader` to determine which repository to download from and which branch to check out to."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    - `AuthorshipReporter` and `CommitsReporter` to determine the range of commits and files to analyze."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    - `ReportGenerator` to determine the directory to output the report."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "## HTML Report"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "The source files for the report is located in [`frontend/src`](../frontend/src) and is built by [spuild](https://github.com/ongspxm/spuild2) before being packaged into the JAR file to be extracted as part of the report."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "The main HTML file is generated from [`frontend/src/index.jade`](../frontend/src/index.jade)."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "WANG CHAO"
        },
        "content": "[Vue](https://vuejs.org/v2/api/) (pronounced /vjuː/, like view) is a progressive framework for building user interfaces. It is heavily utilized in the report to dynamically update the information in the various views. (Style guide available [here](https://vuejs.org/v2/style-guide/), Developer tool available [here](https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd))."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "![report screenshot](images/report-summary.png)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "### Report Architecture"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "![report architecture](images/report-architecture.png)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "The main Vue object (`window.app`) is responsible for the loading of the report (through `summary.json`). Its `repos` attribute is tied to the global `window.REPOS`, and is passed into the various other modules when the information is needed."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "`window.app` is broken down into two main parts"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "- the summary view"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "- and the tabbed interface"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "Summary view act as the main report which shows the various calculations. \u003c/br\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Tabbed interface is responsible for loading various modules such as authorship to display additional information."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "### Javascript Files"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "- [**main.js**](../frontend/src/static/js/main.js) - main controller that pushes content into different modules"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "- [**api.js**](../frontend/src/static/js/api.js)- loading and parsing of the report content"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "- [**v_summary.js**](../frontend/src/static/js/v_summary.js) - module that supports the ramp chart view"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "- [**v_authorship.js**](../frontend/src/static/js/v_authorship.js) - module that supports the authorship view"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "### JSON Report Files"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "- **summary.json** - a list of all the repositories and their respective details"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "- **projName/commits.json** - contains information of the users\u0027 commits information (e.g. line deletion, insertion, etc), grouped by date"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "- **projName/authorship.json** - contains information from git blame, detailing the author of each line for all the processed files"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "### Main (main.js)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "This contains the logic for main VueJS object, `window.app`, which is responsible for passing the necessary data into the relevant modules to be loaded."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "`v_summary` and `v_authorship` are components which will be embedded into report and will render the corresponding content based on the data passed into it from the main `window.app`."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "#### Loading of report information"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "The main Vue object depends on the `summary.json` data to determine the right `commits.json` files to load into memory. This is handled by `api.js` which loads the relevant file information from the network files if it is available, otherwise a report archive, `archive.zip`, have to be used."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "Once the relevant `commit.json` files are loaded, all the repo information will be passed into `v_summary` to be loaded in the summary view as the relevant ramp charts."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "#### Activating additional view modules"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "Most activity or actions should happen within the module itself, but in the case where there is a need to spawn or alter the view of another module, an event is emitted from the first module to the main Vue object (`window.app`), which then handles the data received and passes it along to the relevant modules."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "#### Hash link"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "Other than the global main Vue object, another global variable we have is the `window.hashParams`. This object is reponsible for generating the relevant permalink for a specific view of the summary module for the report."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "### Data loader (api.js)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "This is the module that is in charged of loading and parsing the data files generated as part of the report."
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "#### Loading from ZIP file"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "Due to security design, most modern browsers (e.g. Chrome) do not allow web pages to obtain local files using the directory alone. As such, a ZIP archive of the report information will be produced alongside the report generation."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "This archive will be used in place of the network files to load information into the report, in the case when the network files are unavailable."
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "The API module will be handling all request for all the JSON data files. If the network file is not available, the files will be obtained from the zip archive provided."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "#### Retrieving and parsing information"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "After the JSON files are loaded from their respective sources, the data will be parsed as objects and included inside the global storage object, `window.REPOS`,  in the right format."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "For the basic skeleton of `window.REPOS`, refer to the generated `summary.json` file in the report for more details."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "### Summary View (v_summary.js)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "The `v_summary` module is in charge of loading the ramp charts from the corresponding `commits.json`."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "![summary architecture](images/report-architecture-summary.png)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "#### Initializing the data for the ramp charts"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "The summary module is activated after the information is loaded from the main Vue.JS object. At creation, the `repo` attribute is populated with the `window.REPOS` object, which contains information loaded from `summary.json`."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "#### Filtering users and repositories"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "The commits information is retrieved from the corresponding project folders for each repository. These information will be filtered and sorted before passed into the template to be displayed as ramp charts."
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "#### Padding for dates"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "For ramps between the date ranges, the slices will be selected and it will be pre and post padded with empty slices to align the ramp slice between the `sinceDate` and `untilDate`. The ramps will then be rendered with the slices in the right position."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "### Authorship View (v_authorship.js)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "The authorship module retrieves the relevant information from the corresponding `authorship.json` file if it is not yet loaded. If it has been loaded, the data will be written into `window.REPOS` and be read from there instead."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "![authorship architecture](images/report-architecture-authorship.png)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "#### Showing relevant information by authors"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "The files will be filtered, picking only files the selected author has written in. The lines are then split into chunks of \"touched\" and \"untouched\" code to be displayed in the tab view which will be popped up on the right side of the screen."
      }
    ],
    "authorContributionMap": {
      "WANG CHAO": 13,
      "-": 314
    }
  },
  {
    "path": "docs/PublishingGuide.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Travis to automate publishing of your report to GitHub Pages"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "[Travis-CI](https://travis-ci.org/) enables you to automate RepoSense report generation and publish the report online to [GitHub Pages](https://pages.github.com/) for free."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. Fork publish-RepoSense repository using this [link](https://github.com/RepoSense/publish-RepoSense/fork)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. Follow this [section](#granting-write-access-to-reposense-for-publishing) to generate a `personal access token` or `deploy key` on GitHub for report publishing "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "1. Sign up and login to [Travis-CI](https://travis-ci.org/)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to [your account](https://travis-ci.org/account/repositories), click on **Sync account** to fetch all your repositories into Travis-CI"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to [your publish-RepoSense fork in Travis-CI](https://travis-ci.org/search/publish-RepoSense/), under **Current** tab click on **Activate repository**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. In the same page, click on **More options** on the right then access **Settings**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "![Travis-CI Dashboard](images/publishingguide-travissetting.jpg \"Travis-CI Dashboard\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. Under **Environment Variables**, name a variable as `GITHUB_TOKEN` or `GITHUB_DEPLOY_KEY` depending on your earlier choice and paste the content that was copied earlier to its value field; then click **Add** \u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*Ensure that the `Display value in build log` is* **switched off** for security reasons"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "![Travis-CI Environment Variable](images/publishingguide-githubtoken.jpg \"Travis-CI Environment Variable\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Edit [run.sh](../../../../publish-RepoSense/edit/master/run.sh), [repo-config.csv](../../../../publish-RepoSense/edit/master/configs/repo-config.csv) and [author-config.csv](../../../../publish-RepoSense/edit/master/configs/author-config.csv) to customize the command line parameters or repositories to be analyzed \u003cbr/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "*Read our [User Guide](UserGuide.md#customizing-the-analysis) for more information*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. To access your site, go to the settings of your fork in GitHub, under **GitHub Pages** section, look for `Your site is published at [LINK]` \u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "*It should look something like `https://[YOUR_GITHUB_ID].github.io/publish-RepoSense`* \u003cbr/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "![GitHub Setting](images/publishingguide-githubsetting.jpg \"GitHub Setting\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e The changes made to the configuration files should trigger Travis-CI to generate your report. Otherwise, follow the [next section](#keeping-your-site-up-to-date-with-your-code-contribution) to manually trigger a build. \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "It takes a few minutes for report generation. Meanwhile, you can monitor the progress live at [Travis-CI\u0027s Builds](https://travis-ci.org/dashboard/builds). \u003cbr/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Try accessing your site again when a green tick appears beside your fork."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "### Granting write-access to RepoSense for publishing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "We recommmend use of [personal access token](https://github.blog/2013-05-16-personal-api-tokens/) for ease of setup and [deploy key](https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys) for enhanced security."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "##### If you wish to use `personal access token`:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. Follow this [guide](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) and give only `public_repo` permission \u003cbr/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. **Copy** the token for later use \u003cbr/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "##### If you wish to use `deploy key`:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "\u003e For Windows users, `ssh-keygen` and `base64` are accessible using [`Git Bash`](https://gitforwindows.org/)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. Use `ssh-keygen` to create a public/private key pair without a passphrase \u003cbr/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "i.e. `ssh-keygen -t ecdsa -b 521 -f id_reposense -q -N \"\"`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. Go to the [deploy key settings](../../../../publish-RepoSense/settings/keys) of your publish-RepoSense fork and create a new deploy key with the contents of `id_reposense.pub`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "1. **Copy** the base64 encoded content of the private key for later use \u003cbr/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": "i.e. `cat id_reposense | base64 -w 0`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yong Hao TENG"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "### Keeping your site up-to-date with your code contribution"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "[Travis-CI](https://travis-ci.org/) offers `Cron Jobs` in intervals of daily, weekly or monthly."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "1. Login to [Travis-CI](https://travis-ci.org/)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to [your fork in Travis-CI](https://travis-ci.org/search/publish-RepoSense/), click on **More options** on the right then access **Settings**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "1. Under **Cron Jobs**, choose **master** for `Branch`, **Always run** for `Options` and pick an `Interval` of your choice; \u003cbr/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "then click **Add**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "![Travis-CI Cron](images/publishingguide-cronsetting.jpg \"Travis-CI Cron\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can manually trigger an update."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "1. Go to [your fork in Travis-CI](https://travis-ci.org/search/publish-RepoSense/), click on **More options** on the right then **Trigger build**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. In the pop up, click **Trigger custom build**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "### Specifying which version of RepoSense to use"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "As RepoSense is being actively developed, its master branch is frequently updated with new features and fixes. \u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "For stablility or familiarity, you may want to use the release. \u003cbr/\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "#### Use our latest release (Stable)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "You can find the changelog of latest release [here](https://github.com/reposense/RepoSense/releases/latest)."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Edit line 10 of [run.sh](../../../../publish-RepoSense/edit/master/run.sh) to use `--release`. \u003cbr /\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "10   ./get-reposense.py --release"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "#### Use our master branch (Beta)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "You can find the list of commits to master branch [here](https://github.com/reposense/RepoSense/commits/master) and planned features/fixes [here](https://github.com/reposense/RepoSense/milestones)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "Edit line 10 of [run.sh](../../../../publish-RepoSense/edit/master/run.sh) to use `--master`. \u003cbr /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "10   ./get-reposense.py --master"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "#### Use a specific version of release"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Be sure to read and understand [all breaking changes and bugs](https://github.com/reposense/RepoSense/releases) before proceeding."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "Edit line 10 of [run.sh](../../../../publish-RepoSense/edit/master/run.sh) to use `--tag TAG`, where `TAG` is the [target version of release](https://github.com/reposense/RepoSense/tags). \u003cbr /\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "10   ./get-reposense.py --tag v1.6.1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "### Managing your configuration files with the help of collaborators"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "If you use RepoSense to monitor a large number of collaborators, it may be more systematic to have them update their git configurations into your fork using pull-requests."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "To ensure that their pull-requests are correct, we can use [Netlify](https://www.netlify.com/) to preview how the changes would look like in production, before deploying them into GitHub Pages."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. Sign up and login to [Netlify](https://www.netlify.com/)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "1. Use this [link](https://app.netlify.com/start) to create a new site"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select **GitHub** as your Git provider and authorize Netlify in the pop up if prompted"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "1. If this is your first time using Netlify, pick `publish-RepoSense` when prompted to install Netlify; \u003cbr/\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "Otherwise, choose `publish-RepoSense` when prompted to link a repository \u003cbr/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "*If you can\u0027t find your fork, then Netlify may only have access to selective repositories \u003cbr/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "Click on the link in `Can\u0027t see your repo here? Configure the Netlify app on GitHub` to give Netlify access to your fork*"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "1. In the next page, leave `master` as the **Branch to deploy**, enter `pip install requests \u0026\u0026 ./run.sh` for **Build command** and `reposense-report` for **Publish directory**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "1. To save, click on **Deploy site**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "1. To test, go to an open pull-request, scroll down and in `All checks have passed`, click on **Details** beside `deploy/netlify — Deploy preview ready!`, and the report should open in a new tab"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "![Netlify Preview](images/publishingguide-netlifypreview.png \"Netlify Preview\")"
      }
    ],
    "authorContributionMap": {
      "Yong Hao TENG": 18,
      "-": 84
    }
  },
  {
    "path": "docs/UserGuide.md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# RepoSense - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "* [Getting Started](#getting-started)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "* [Interpreting the Report](#interpreting-the-report)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Chart Panel](#chart-panel)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Code Panel](#code-panel)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  * [Commits Panel](#commits-panel)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Tool Bar](#tool-bar)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* [Configuring a Repo to Provide Additional Data to RepoSense](#configuring-a-repo-to-provide-additional-data-to-reposense)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Provide Data Using a json Config File](#provide-data-using-a-json-config-file)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Provide Data Using `@@author` Tags](#provide-data-using-author-tags)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Customizing the Analysis](#customizing-the-analysis)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Customize Using Command Line Parameters](#customize-using-command-line-parameters)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Customize Using csv Config Files](#customize-using-csv-config-files)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`repo-config.csv`](#repo-configcsv)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    * [`author-config.csv`](#author-configcsv)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "* [Analyzing Multiple Repos](#analyzing-multiple-repos)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* [Using Travis-CI to automate publishing of the report to GitHub Pages](#using-travis-ci-to-automate-publishing-of-the-report-to-github-pages)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "First, ensure that you have the necessary prerequisites:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "* **JDK `1.8.0_60`** or later"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "* **git `2.14`** or later on the command line (run `git --version` in your OS terminal to confirm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Next, download the latest executable Jar from our [releases](https://github.com/reposense/RepoSense/releases/latest)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The simplest use case for RepoSense is to generate a report for the entire history of a repo. Here are the steps:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "1. Generate the report for the repo by executing the following command in a terminal:\u003cbr/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   Format : `java -jar RepoSense.jar --repo FULL_REPO_URL` (note the `.git` at the end)\u003cbr\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   Example: `java -jar RepoSense.jar --repo https://github.com/reposense/RepoSense.git`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "1. The previous step analyzes the default branch of the repo and creates the report in a directory named `reposense-report`. Run the following command to view the report (it will open up in your default Browser):\u003cbr/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   `java -jar RepoSense.jar --view reposense-report`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can combine the 2 steps by running the following command to generate the report and automatically open it afterwards:\u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    `java -jar RepoSense.jar --repo FULL_REPO_URL --view`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "## Interpreting the Report"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "As the report consist of static pages, it can be viewed using a Web Browser, and can be deployed on most Web hosting platforms (such as [GitHub Pages](https://pages.github.com/)). Assuming the report has been generated already, here are the two options to load the report onto a Browser:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "* Run RepoSense with the `--view` option:\u003cbr\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  Format: `java -jar RepoSense.jar --view REPORT_FOLDER`\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  Example: `java -jar RepoSense.jar --view ./myReport/reposense-report`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "* Open the `index.html` (in the report directory) using a Browser and if the report was not loaded automatically, upload the `archive.zip` (in the same directory) manually."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example of how the report looks like:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "![report](images/report-features.png)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "It consists of three main parts: the [_Chart Panel_](#chart-panel), the [_Code Panel_](#code-panel), and the [_Tool Bar_](#tool-bar),  each of which is explained in the sections below."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "### Chart Panel"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "![Ramp Charts](images/rampchart.png)\u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "The `Chart Panel` (an example is shown above) contains _Ramp Charts_ and _Contribution Bars_."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "**Ramp Chart**: This is a visualization of frequency and quantity of contributions of an author for a specific repository."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "* **Title**: Each title consists of the **index**, the **name** of the author, a button to view author\u0027s **code** and a button to view author\u0027s **repo**."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "* **Rows**: Each _row_ (i.e., light blue rectangle) represents the contribution timeline of an author for a specific repository."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "* **Ramp**: Each row contains **ramps** -- the pointy saw-tooth shapes you see in the screenshot above. A ramp represents the contributions of an author possibly aggregated over a period (e.g., a day or a week)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  * The area of the ramp is proportional to the amount of contribution the author did at that time period."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  * The position of the right edge of the ramp (perpendicular to the blue bar) represents the period (the day or the week) in which the contribution was made."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  * Hover the pointer over a ramp to see the total number of lines represented by that ramp."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  * Click on the ramp to see on GitHub the list of commits represented by that ramp."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* To make comparison between two authors easier, the color of the ramps that represent different authors\u0027 contributions at the same time period are the same."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "* Ramps representing big contributions can overlap with earlier time periods. This represents the possibility that if the work committed during a specific period is big, it could have started in an earlier time period."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "**Contribution Bar**: The total amount of code contributed by an author during the _total analysis period_ is represented by the length of the **red bars** (called _contribution bars_) that appear at the bottom of the row."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "* Hover over a contribution bar to see the exact amount of the contribution."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "* If an author contributed significantly higher than other authors, the contribution bar can span multiple lines (see the 4th author in the screenshot for an example)."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "### Code Panel"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "The `Code Panel` allows users to see the code attributed to a specific author. Click on the name of the author in the `Chart Panel` to display the `Code Panel` on the right."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "* The Code Panel shows the files that contain author\u0027s contributions, sorted by the number of lines written."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "* Select the radio button to enable one of the following 2 filters. Note that only 1 of the 2 filters is active at any time."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    * Type file path glob in glob filter to include files matching the glob expression."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    * Select the checkboxes to include files of preferred file extensions."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the file title toggles the file content."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the first icon beside the file title opens the history view of the file on github."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* Clicking the second icon beside the file title opens the blame view of the file on github."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "* Code attributed to the author is highlighted in green."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "* Non-trivial code segments that are not written by the selected author are hidden by default, but you can toggle them by clicking on the `...` icon."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "### Commits Panel"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "The `Commits Panel` allows users to see the commits attributed to a specific author. Hold `Ctrl` and click on the ramp chart in the `Chart Panel` to select the time range where you want to display the `Commit Panel` for on the right."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "* The `Commits Panel` shows the commits that contain author\u0027s contributions, sorted by the date it was commited."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "* The date range for the `Chart Panel` can be updated by clicking on the \"Show ramp chart for this period\" below the name of the author."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "* The ramp slices displayed in the ramp chart for the `Commits Panel` represents individual commits."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "### Tool Bar"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "The `Tool Bar` at the top provides a set of configuration options that control the Chart Panel."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "* `Search` : filters the author and repository by keywords."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  * Multiple keywords/terms can be used, separated by spaces."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  * Entries that contain _any_ (not necessarily _all_) of the search terms will be displayed."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  * The keywords used to filter author and repository are case-insensitive."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "* `Sort by` : sorting criteria for the Chart Panel"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Total Contribution` : the amount of lines, written by the author, in the repository."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Variance` : the [variance](https://en.wikipedia.org/wiki/Variance) of the number of lines that the author has contributed to the repository daily, sorted from low to high."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Author Name` : the author\u0027s display name."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  * `Repo/Branch Name` : see note [1] below."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "* `Granularity` : the period of time for which commits are aggregated in the Ramp Chart."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    * `Day`: commits within a day (commits made within 00:00 to 23:59 in **GMT+8**) are shown as one ramp"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    * `Week`:  commits within a week are shown as one ramp"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "* `Since`, `Until` : the date range for the Ramp Chart (not applied to the Contribution Bars)."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "* `Reverse` : if checked, the sorting will be done in the reverse order of the default sorting order"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "* `Group` : if checked, authors from the same repo/branch\u003csup\u003e[1]\u003c/sup\u003e will be grouped together. This has precedence over the `sort by` feature; the `sort by` feature will only change display order of the authors under the same repo/branch\u003csup\u003e[1]\u003c/sup\u003e."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Notes:\u003cbr\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "[1] **`Repo/Branch`**: the repo/branch name is constructed as `ORGANIZATION_REPOSITORY_BRANCH` e.g., `resposense_reposense_master`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "**Bookmarking a specific toolbar setting and the opened code panel**: The URL changes according to the toolbar configuration and opened code panel viewed. You can save a specific configuration of the report by bookmarking the url (using browser functionality)."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "## Configuring a Repo to Provide Additional Data to RepoSense"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "When a repo is being analyzed by RepoSense, there are **two ways repo owners can provide additional details to RepoSense**: using a config file, or annotating code using `@@author` tags. The two approaches are explained in the sections below."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "### Provide Data Using a json Config File"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "Repo owners can provide the following additional information to RepoSense using a config file that we call the **_standalone config file_**:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "* which files/authors/commits to analyze/omit"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "* which git and GitHub usernames belong to which authors"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "* the display of an author"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "To use this feature, add a `_reposense/config.json`  to the root of your repo using the format in the example below ([another example](../_reposense/config.json)) and **commit it** (reason: RepoSense can see committed code only):"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```json"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreGlobList\": [\"about-us/**\", \"**index.html\"],"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  \"formats\": [\"html\", \"css\"],"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  \"ignoreCommitList\": [\"90018e49f129ce7e0abdc8b18e91c9813588c601\", \"67890def\"],"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  \"authors\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  ["
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      \"githubId\": \"alice\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      \"emails\": [\"alice@example.com\", \"alicet@example.com\"],"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "      \"displayName\": \"Alice T.\","
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      \"authorNames\": [\"AT\", \"A\"],"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      \"ignoreGlobList\": [\"**.css\"]"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      \"githubId\": \"bob\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  ]"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "Note: all fields are optional unless specified otherwise."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "**Fields to provide _repository-level_ info**:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreGlobList`: Folders/files to ignore, specified using the [_glob format_](https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob)."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "* `formats`: File formats to analyze. Default: `adoc cs css fxml gradle html java js json jsp md py tag txt xml`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreCommitList`: The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "**Fields to provide _author-level_ info**:\u003cbr\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "Note: `authors` field should contain _all_ authors that should be captured in the analysis."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "* `githubId`: GitHub username of the author. :exclamation: Mandatory field."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* `emails`: Associated GitHub emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "* `displayName`: Name to display on the report for this author."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "* `authorNames`: Git Author Name(s) used in the author\u0027s commits. By default RepoSense assumes an author would use her GitHub username as the Git username too. The meaning of _Git Author Name_ is explained in [_A Note About Git Author Name_](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "* `ignoreGlobList`: _Additional_ (i.e. on top of the repo-level `ignoreGlobList`) folders/files to ignore for a specific author . In the example above, the actual `ignoreGlobList` for `alice` would be `[\"about-us/**\", \"**index.html\", \"**.css\"]`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "To verify your standalone configuration is as intended, add the `_reposense/config.json` to your local copy of repo and run RepoSense against it as follows:\u003cbr\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "* Format : `java -jar RepoSense.jar --repo LOCAL_REPO_LOCATION` \u003cbr\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "* Example: `java -jar RepoSense.jar --repo c:/myRepose/foo/bar`\u003cbr\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "After that, view the report to see if the configuration you specified in the config file is being reflected correctly in the report."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "##### **A Note About Git Author Name**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "`Git Author Name` refers to the customizable author\u0027s display name set in the local `.gitconfig` file. For example, in the Git Log\u0027s display:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "..."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "commit cd7f610e0becbdf331d5231887d8010a689f87c7"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ConfiguredAuthorName \u003cauthor@example.com\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Date:   Fri Feb 9 19:14:41 2018 +0800"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    Make some changes to show my new author\u0027s name"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "commit e3f699fd4ef128eebce98d5b4e5b3bb06a512f49"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "Author: ActualGitHubId \u003cauthor@example.com\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "Date:   Fri Feb 9 19:13:13 2018 +0800"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    Initial commit"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": " ..."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "`ActualGitHubId` and `ConfiguredAuthorName` are both `Git Author Name` of the same author.\u003cbr\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "To find the author name that you are currently using for your current git repository, run the following command within your git repository:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "git config user.name"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "To set the author name to the value you want (e.g., to set it to your GitHub username) for your current git repository, you can use the following command ([more info](https://www.git-tower.com/learn/git/faq/change-author-name-email)):"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "git config user.name \"YOUR_AUTHOR_NAME”"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "To set the author name to use a default value you want for future git repositories, you can use the following command:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "git config --global user.name \"YOUR_AUTHOR_NAME”"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "RepoSense expects the Git Author Name to be the same as author\u0027s GitHub username. If an author\u0027s `Git Author Name` is different from her `GitHub ID`, the `Git Author Name` needs to be specified in the standalone config file. If the author has more than one `Git Author Name`, multiple values can be entered too."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e Note: Symbols such as `\"`, `!`, `/` etc. in your author name will be omitted, which may reduce the accuracy of the analysis if 2 names in the repository are approximately similar."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "### Provide Data Using `@@author` Tags"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "If you want to override the code authorships deduced by RepoSense (which is based on Git blame/log data), you can use `@@author` tags to specify certain code segments should be credited to a certain author irrespective of git history. An example scenario where this is useful is when a method was originally written by one author but a second author did some minor refactoring to it; in this case RepoSense might attribute the code to the second author while you may want to attribute the code to the first author."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "There are 2 types of `@@author` tags:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "- Start Tags (format: `@@author AUTHOR_GITHUB_ID`): A start tag indicates the start of a code segment written by the author identified by the `AUTHOR_GITHUB_ID`."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "- End Tags (format: `@@author`): Optional. If not provided, the code till the next start tag (or the end of the file) will be attributed to the author specified in the start tag above. Use only when necessary to minimize polluting your code with these extra tags."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "The `@@author` tags should be enclosed within a comment, using the comment syntax of the file in concern. Below are some examples:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "![author tags](images/add-author-tags.png)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "Special thanks to [Collate](https://github.com/se-edu/collate) for providing the inspiration for this functionality."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "Note: Remember to **commit** the files after the changes. (reason: RepoSense can see committed code only)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "## Customizing the Analysis"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "The analysis can be customized using additional command line parameters or using config files. The two approaches are explained in the sections below."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "### Customize Using Command Line Parameters"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "As you know, `java -jar RepoSense.jar` takes the following parameter:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--repo, -r REPO_LOCATION`**: The URL or the disk location of the git repositories to analyze (`-r` as alias).\u003cbr\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using URL: `--repo https://github.com/reposense/RepoSense.git`\u003cbr\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using disk location: `--repo C:\\Users\\user\\Desktop\\GitHub\\RepoSense`\u003cbr\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "  Example using alias: `-r https://github.com/reposense/RepoSense.git`"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "In addition, there are some _optional_ extra parameters you can use to customize the analysis further:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--output, -o OUTPUT_DIRECTORY`**: Indicates where to save the report generated (`-o` as alias). Default: current directory.\u003cbr\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  Example: `--output ./foo` or `-o ./foo` (in this case, the report will be in the `./foo/reposense-report` folder)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--since, -s START_DATE`**: The start date of analysis (`-s` as alias). Format: `DD/MM/YYYY`\u003cbr\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--since 21/10/2017` or `-s 21/10/2017`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--until, -u END_DATE`**: The end date of analysis (`-u` as alias). The analysis excludes the end date. Format: `DD/MM/YYYY`\u003cbr\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--until 21/10/2017` or `-u 21/10/2017`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--formats, -f LIST_OF_FORMATS`**: A space-separated list of file extensions that should be included in the analysis (`-f` as alias). Default: `adoc cs css fxml gradle html java js json jsp md py tag txt xml`\u003cbr\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--formats css fxml gradle` or `-f css fxml gradle`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--ignore-standalone-config, -i`**: A flag to ignore the standalone config file in the repo (`-i` as alias). This flag will not overwrite the `Ignore standalone config` field in the csv config file. Default: the standalone config file is not ignored.\u003cbr\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--ignore-standalone-config` or `-i`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--view, -v [REPORT_FOLDER]`**: A flag to launch the report automatically after processing (`-v` as alias). Note that if the `REPORT_FOLDER` argument is given, no analysis will be performed and the report specified by the argument will be opened.\u003cbr\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "Example:`--view` or `-v`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--timezone, -t ZONE_ID`**: Indicates the timezone which will be used for the generated report. One kind of valid timezones is relative to UTC. E.g. `UTC`, `UTC+08`, `UTC-1030`. Format: `ZONE_ID[±hh[mm]]`. Default: system\u0027s default timezone.\u003cbr\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`--timezone UTC+08` or `-t UTC-1030`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s an example of a command using all parameters:\u003cbr\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "`java -jar RepoSense.jar --repo https://github.com/reposense/RepoSense.git --output ./report_folder --since 21/10/2017 --until 21/11/2017 --formats java adoc js --view --ignore-standalone-config --timezone UTC+08`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "Here\u0027s an example of a command using all alias of parameters:\u003cbr\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "`java -jar RepoSense.jar -r https://github.com/reposense/RepoSense.git -o ./report_folder -s 21/10/2017 -u 21/11/2017 -f java adoc js -v -i`"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "Also, there are two _information_ parameters you can use to know more about RepoSense:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--help, -h`**: Show help message."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--version, -V`**: Show the version of RepoSense."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "### Customize Using csv Config Files"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "Another, more powerful, way to customize the analysis is by using dedicated config files. In this case you need to use the `--config` parameter instead of the `--repo` parameter when running RepoSense, as follows:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "* **`--config, -c CONFIG_DIRECTORY`**: The directory in which you have the config files (`-c` as alias).\u003cbr\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  Example:`java -jar RepoSense.jar --config  ./my_configs` or `java -jar RepoSense.jar -c  ./my_configs`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "The directory used with the `--config` parameter should contain a `repo-config.csv` file and, optionally, an `author-config.csv` file, both of which are described in the sections below."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "#### `repo-config.csv`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "`repo-config.csv` file contains repo-level config data as follows:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "* First row: column headings, ignored by RepoSense"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "* Second row: repo data"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "Here is an example:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "Repository\u0027s Location|Branch|File formats|Ignore Glob List|Ignore standalone config|Ignore Commits List"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "---------------------|------|------------|----------------|------------------------|-------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "`https://github.com/foo/bar.git`|`master`|`override:java;css`|`test/**`|`yes`|`2fb6b9b2dd9fa40bf0f9815da2cb0ae8731436c7;c5a6dc774e22099cd9ddeb0faff1e75f9cf4f151`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "When using standalone config (if it is not ignored), it is possible to override specific values from the standalone config by prepending the entered value with `override:`."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "Repository\u0027s Location | The `GitHub URL` or `Disk Path` to the git repository e.g., `https://github.com/foo/bar.git` or `C:\\Users\\user\\Desktop\\GitHub\\foo\\bar`"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Branch | The branch to analyze in the target repository e.g., `master`. Default: the default branch of the repo"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] File formats\u003csup\u003e*+\u003c/sup\u003e | The file extensions to analyze. Default: `adoc;cs;css;fxml;gradle;html;java;js;json;jsp;md;py;tag;txt;xml`"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Glob List\u003csup\u003e*+\u003c/sup\u003e | The list of file path globs to ignore during analysis for each author. e.g., `test/**;temp/**`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore standalone config | To ignore the standalone config file (if any) in target repository, enter **`yes`**. If the cell is empty, the standalone config file in the repo (if any) will take precedence over configurations provided in the csv files."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Commit List\u003csup\u003e*+\u003c/sup\u003e | The list of commits to ignore during analysis. For accurate results, the commits should be provided with their full hash."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e  "
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e+ **Overrideable column**: prepend with `override:` to use entered value(s) instead of value(s) from standalone config.\u003c/sup\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "#### `author-config.csv`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "Optionally, you can use a `author-config.csv` (which should be in the same directory as `repo-config.csv` file) to provide more details about the authors to analyze ([example](author-config.csv)). It should contain the following columns:"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "Column Name | Explanation"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "----------- | -----------"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Repository\u0027s Location | Same as `repo-config.csv`. Default: all the repos in `repo-config.csv`"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Branch | The branch to analyze for this author e.g., `master`. Default: the default branch of the repo"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "Author\u0027s GitHub ID | GitHub username of the target author e.g., `JohnDoe`"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Emails\u003csup\u003e*\u003c/sup\u003e | Associated Github emails of the author. This can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Display Name | The name to display for the author. Default: author\u0027s GitHub username."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Author\u0027s Git Author Name\u003csup\u003e*\u003c/sup\u003e | The meaning of _Git Author Name_ is explained in [_A Note About Git Author Name_](#a-note-about-git-author-name)."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "[Optional] Ignore Glob List\u003csup\u003e*\u003c/sup\u003e | Files to ignore for this author, in addition to files ignored by the patterns specified in `repo-config.csv`"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "\u003csup\u003e* **Multi-value column**: multiple values can be entered in this column using a semicolon `;` as the separator.\u003c/sup\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "If `author-config.csv` is not given and the repo has not provide author details in a standalone config file, all the authors of the repositories within the date range specified (if any) will be analyzed."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr\u003e"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "## Analyzing Multiple Repos"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "This section assumes that you have read the earlier sections of the user guide."
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "The simplest way to analyze multiple repos in one go is to use the `--repos` parameter in place of the `--repo` parameter when running RepoSense."
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "* Format : `java -jar RepoSense.jar --repos REPO_LIST` \u003cbr\u003e"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "* Example: `java -jar RepoSense.jar --repos https://github.com/reposense/RepoSense.git c:/myRepose/foo/bar` analyzes the two specified repos (one remote, one local) and generates one report containing details of both."
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you can use csv config files to customize the analysis as before while specifying multiple repos to analyze."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "* `repo-config.csv`: Add additional rows for the extra repos ([example](repo-config.csv))"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "* `author-config.csv`: Add one row for each author in each repo you want to analyze"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Travis-CI to automate publishing of the report to GitHub Pages"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "Follow this [guide](PublishingGuide.md) to automate publishing of your report to GitHub Pages."
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: Does RepoSense work on private repositories?"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** *RepoSense* will first clone the git repository to be analyzed, thus if you do not have access to the repository, we are unable to run the analysis.\u003cbr\u003e"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "To enable *RepoSense* to work on private repositories, ensure that you have enabled access to your private repository in your git terminal first, before running the analysis."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: How does formats work?"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** **Formats** are the [file extensions](https://techterms.com/definition/fileextension), which is the **suffix** at the end of a filename that indicates what type of file it is.\u003cbr\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "The formats/file extensions to be analyzed by *RepoSense* can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv) and [command line](#customize-using-command-line-parameters)."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: How does ignore glob list work?"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** [Glob](https://en.wikipedia.org/wiki/Glob_(programming)) is the pattern to specify a set of filenames with [wildcard characters](https://www.computerhope.com/jargon/w/wildcard.htm). **Ignore glob list** is the list of patterns to specify all the files in the repository which should be ignored from analysis.\u003cbr\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "The ignore glob list can be specified through the [standalone config file](#provide-data-using-a-json-config-file), [repo-config file](#repo-configcsv) and [author-config file](#author-configcsv)."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: My commit contributions does not appear in the ramp chart (despite appearing in the contribution bar and code panel)?"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** This is probably a case of giving an incorrect author name alias (or github ID) in your [author-config file](#author-configcsv).\u003cbr\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "Please refer to [A Note About Git Author Name](#a-note-about-git-author-name) above on how to find out the correct author name you are using, and how to change it.\u003cbr\u003e"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "Also ensure that you have added all author name aliases that you may be using (if you are using multiple computers or have previously changed your author name).\u003cbr\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "Alternatively, you may choose to configure RepoSense to track using your GitHub email instead in your [standalone config file](#provide-data-using-a-json-config-file) or [author-config file](#author-configcsv), which is more accurate compared to author name aliases. The associated GitHub email you are using can be found in your [GitHub settings](https://github.com/settings/emails)."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: My contribution bar and code panel is empty (despite having lots of commit contributions in the ramp chart)?"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** The contribution bar and code panel records the lines you have authored to the **latest** commit of the repository and branch you are analyzing. As such, it is possible that while you have lots of commit contributions, your final authorship contribution is low if you have only deleted lines, someone else have overwritten your code and taken authorship for it (currently, *RepoSense* does not have functionality to track overwritten lines).\u003cbr\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "It is also possible that another user has overriden the authorship of your lines using the [@@author tags](#provide-data-using-author-tags)."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: I have added/edited the standalone config file in my local repository, but RepoSense is not using it when running the analysis?"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** Ensure that you have committed the changes to your standalone config file first before running the analysis, as *RepoSense* is unable to detect uncommitted changes to your local repository."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "#### Q: I am able to run RepoSense on my repository on a Linux/Mac OS, but it fails on a Windows OS?"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "**A:** It is possible you may have some file names with [special characters](https://docs.microsoft.com/en-us/windows/desktop/FileIO/naming-a-file#naming-conventions) in them, which is disallowed in Windows OS. As such, *RepoSense* is unable to fully clone your repository, thus failing the analysis."
      }
    ],
    "authorContributionMap": {
      "Metta Ong": 7,
      "-": 369
    }
  },
  {
    "path": "frontend/src/static/js/main.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "window.REPORT_ZIP \u003d null;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "window.REPOS \u003d {};"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "window.hashParams \u003d {};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "window.addHash \u003d function addHash(newKey, newVal) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  window.hashParams[newKey] \u003d newVal;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "window.removeHash \u003d function removeHash(key) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  delete window.hashParams[key];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "window.encodeHash \u003d function encodeHash() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  const { hashParams } \u003d window;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  window.location.hash \u003d Object.keys(hashParams)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      .map((key) \u003d\u003e `${key}\u003d${encodeURIComponent(hashParams[key])}`)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      .join(\u0027\u0026\u0027);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "window.decodeHash \u003d function decodeHash() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  const hashParams \u003d {};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  window.location.hash.slice(1).split(\u0027\u0026\u0027)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      .forEach((param) \u003d\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        const [key, val] \u003d param.split(\u0027\u003d\u0027);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        if (key) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            hashParams[key] \u003d decodeURIComponent(val);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          } catch (error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            this.isLoading \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  window.hashParams \u003d hashParams;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "const DRAG_BAR_WIDTH \u003d 13.25;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "const SCROLL_BAR_WIDTH \u003d 17;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "const GUIDE_BAR_WIDTH \u003d 2;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "const throttledEvent \u003d (delay, handler) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  let lastCalled \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  return (...args) \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    if (Date.now() - lastCalled \u003e delay) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      lastCalled \u003d Date.now();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      handler(...args);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "let guideWidth \u003d (0.5 * window.innerWidth - (GUIDE_BAR_WIDTH / 2))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    / window.innerWidth;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "let flexWidth \u003d 0.5;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "window.mouseMove \u003d () \u003d\u003e {};"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "window.registerMouseMove \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  const innerMouseMove \u003d (event) \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    guideWidth \u003d ("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      Math.min("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          Math.max("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "              window.innerWidth - event.clientX,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              SCROLL_BAR_WIDTH + DRAG_BAR_WIDTH,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          ),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          window.innerWidth - SCROLL_BAR_WIDTH,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      )"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        - (GUIDE_BAR_WIDTH / 2)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    ) / window.innerWidth;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    window.$(\u0027tab-resize-guide\u0027).style.right \u003d `${guideWidth * 100}%`;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027tab-resize-guide\u0027).style.display \u003d \u0027block\u0027;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027app-wrapper\u0027).style[\u0027user-select\u0027] \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  window.mouseMove \u003d throttledEvent(30, innerMouseMove);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "window.deregisterMouseMove \u003d () \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  flexWidth \u003d (guideWidth * window.innerWidth + (GUIDE_BAR_WIDTH / 2))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        / window.innerWidth;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  window.mouseMove \u003d () \u003d\u003e {};"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  if (window.$(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    window.$(\u0027tabs-wrapper\u0027).style.flex \u003d `0 0 ${flexWidth * 100}%`;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027tab-resize-guide\u0027).style.display \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  window.$(\u0027app-wrapper\u0027).style[\u0027user-select\u0027] \u003d \u0027auto\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "/* global Vue hljs */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "Vue.directive(\u0027hljs\u0027, {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  inserted(ele, binding) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    const element \u003d ele;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    element.className \u003d binding.value.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    hljs.highlightBlock(element);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "window.app \u003d new window.Vue({"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  el: \u0027#app\u0027,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  data: {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    repos: {},"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    repoLength: 0,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    loadedRepo: 0,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    userUpdated: false,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    isLoading: false,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    isCollapsed: false,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    isTabActive: true, // to force tab wrapper to load"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    tabType: \u0027empty\u0027,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    tabInfo: {},"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    creationDate: \u0027\u0027,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    // model functions //"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportZip(evt) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      this.users \u003d [];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      window.JSZip.loadAsync(evt.target.files[0])"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "          .then((zip) \u003d\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            window.REPORT_ZIP \u003d zip;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "          }, () \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "            window.alert(\u0027Either the .zip file is corrupted, or you uploaded a .zip file that is not generated \u0027"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "                + \u0027by RepoSense.\u0027);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "          })"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          .then(() \u003d\u003e this.updateReportView());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportDir() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      window.REPORT_ZIP \u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      this.users \u003d [];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      this.updateReportView();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    updateReportView() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      window.api.loadSummary().then((names) \u003d\u003e {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repos \u003d window.REPOS;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        this.repoLength \u003d Object.keys(window.REPOS).length;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadedRepo \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d true;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadedRepo \u003d 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        return Promise.all(names.map((name) \u003d\u003e ("
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          window.api.loadCommits(name)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "              .then(() \u003d\u003e { this.loadedRepo +\u003d 1; })"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        )));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      }).then(() \u003d\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d true;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      }).catch((error) \u003d\u003e {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userUpdated \u003d false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        window.alert(error);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    getUsers() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      const full \u003d [];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(this.repos).forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.repos[repo].users) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          full.push(this.repos[repo]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      return full;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // handle opening of sidebar //"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    activateTab(tabName) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      // changing isTabActive to trigger redrawing of component"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isTabActive \u003d false;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      if (document.getElementById(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        document.getElementById(\u0027tabs-wrapper\u0027).scrollTop \u003d 0;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.isTabActive \u003d true;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.isCollapsed \u003d false;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.tabType \u003d tabName;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    updateTabAuthorship(obj) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tabInfo.tabAuthorship \u003d Object.assign({}, obj);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.activateTab(\u0027authorship\u0027);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    updateTabZoom(obj) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.tabInfo.tabZoom \u003d Object.assign({}, obj);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.activateTab(\u0027zoom\u0027);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // updating summary view"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    updateSummaryDates() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.$refs.summary.updateDateRange();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    renderAuthorShipTabHash(minDate, maxDate) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      const info \u003d {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        author: hash.tabAuthor,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        repo: hash.tabRepo,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        minDate,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        maxDate,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      const tabInfoLength \u003d Object.values(info).filter((x) \u003d\u003e x).length;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      if (Object.keys(info).length \u003d\u003d\u003d tabInfoLength) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateTabAuthorship(info);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (hash.tabOpen \u003d\u003d\u003d \u0027false\u0027 || tabInfoLength \u003e 2) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        window.app.isTabActive \u003d false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    generateKey(dataObj) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      return JSON.stringify(dataObj);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    getRepoSenseLink() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "      const version \u003d window.app.repoSenseVersion;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!version) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027https://github.com/reposense/RepoSense\u0027;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      if (version.startsWith(\u0027v\u0027)) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        return `https://github.com/reposense/RepoSense/releases/tag/${version}`;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      return `https://github.com/reposense/RepoSense/commits/${version}`;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "    receiveDates(dates) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "      const [minDate, maxDate] \u003d dates;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      this.renderAuthorShipTabHash(minDate, maxDate);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    v_zoom: window.vZoom,"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    v_summary: window.vSummary,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    v_authorship: window.vAuthorship,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    CircleSpinner: window.VueLoadingSpinner.Circle,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    this.updateReportDir();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "    window.decodeHash();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  updated() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    this.$nextTick(() \u003d\u003e {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      if (window.$(\u0027tabs-wrapper\u0027)) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        window.$(\u0027tabs-wrapper\u0027).style.flex \u003d `0 0 ${flexWidth * 100}%`;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!this.isTabActive) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      window.removeHash(\u0027tabAuthor\u0027);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      window.removeHash(\u0027tabRepo\u0027);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      window.addHash(\u0027tabOpen\u0027, this.isTabActive);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      window.encodeHash();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "Metta Ong": 18,
      "Lee Jin Yao": 3,
      "-": 231
    }
  },
  {
    "path": "frontend/src/static/js/v_authorship.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "const filesSortDict \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  lineOfCode: (file) \u003d\u003e file.lineCount,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  path: (file) \u003d\u003e file.path,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  fileName: (file) \u003d\u003e file.path.split(/[/]+/).pop(),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  fileType: (file) \u003d\u003e file.path.split(/[/]+/).pop().split(/[.]+/).pop(),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "window.toggleNext \u003d function toggleNext(ele) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  // function for toggling unopened code"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  const targetClass \u003d \u0027active\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  const parent \u003d ele.parentNode;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  const classes \u003d parent.className.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  const idx \u003d classes.indexOf(targetClass);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  if (idx \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    classes.push(targetClass);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    classes.splice(idx, 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  parent.className \u003d classes.join(\u0027 \u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "const repoCache \u003d [];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "const minimatch \u003d require(\u0027minimatch\u0027);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "window.vAuthorship \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  props: [\u0027info\u0027],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_authorship\u0027).innerHTML,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      isLoaded: false,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      files: [],"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      isSelectAllChecked: true,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      selectedFileFormats: [],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      fileFormats: [],"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      filesBlankLinesObj: {},"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      totalLineCount: \u0027\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      totalBlankLineCount: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      filesSortType: \u0027lineOfCode\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      toReverseSortFiles: false,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      activeFilesCount: 0,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSearch: \u0027*\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingFunction: window.comparator(filesSortDict.lineOfCode),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      isSearchBar: false,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      isCheckBoxes: true,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    filesSortType() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiles();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toReverseSortFiles() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiles();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    initiate() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[this.info.repo];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getRepoProps(repo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!repo || !this.info.name) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        window.app.isTabActive \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repoCache.length \u003d\u003d\u003d 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        const toRemove \u003d repoCache.shift();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        if (toRemove !\u003d\u003d this.info.repo) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "          delete window.REPOS[toRemove].files;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      repoCache.push(this.info.repo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repo.files) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.processFiles(repo.files);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        window.api.loadAuthorship(this.info.repo)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            .then((files) \u003d\u003e this.processFiles(files));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    getRepoProps(repo) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      if (repo) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        const author \u003d repo.users.filter((user) \u003d\u003e user.name \u003d\u003d\u003d this.info.author);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        if (author.length \u003e 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          this.filesLinesObj \u003d author[0].fileFormatContribution;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    setInfoHash() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      const { addHash, removeHash } \u003d window;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027tabAuthor\u0027, this.info.author);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027tabRepo\u0027, this.info.repo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      removeHash(\u0027tabOpen\u0027);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    expandAll(isActive) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      const renameValue \u003d isActive ? \u0027file active\u0027 : \u0027file\u0027;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      const files \u003d document.getElementsByClassName(\u0027file\u0027);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      Array.from(files).forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        file.className \u003d renameValue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeFilesCount \u003d isActive ? this.selectedFiles.length : 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    updateCount() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeFilesCount \u003d document.getElementsByClassName(\u0027file active\u0027).length;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    hasCommits(info) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      if (window.REPOS[info.repo]) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        return window.REPOS[info.repo].commits.authorFinalContributionMap[info.author] \u003e 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    splitSegments(lines) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      // split into segments separated by authored"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      let lastState;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      let lastId \u003d -1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      const segments \u003d [];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      let blankLineCount \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      lines.forEach((line, lineCount) \u003d\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        const authored \u003d (line.author \u0026\u0026 line.author.gitId \u003d\u003d\u003d this.info.author);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        if (authored !\u003d\u003d lastState || lastId \u003d\u003d\u003d -1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "          segments.push({"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            authored,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            lines: [],"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "James Pang"
        },
        "content": "            lineNumbers: [],"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "          lastId +\u003d 1;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          lastState \u003d authored;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        const content \u003d line.content || \u0027 \u0027;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        segments[lastId].lines.push(content);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        segments[lastId].lineNumbers.push(lineCount + 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        if (line.content \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 authored) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          blankLineCount +\u003d 1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      return {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        segments,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        blankLineCount,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    processFiles(files) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      const filesBlanksInfoObj \u003d {};"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalLineCount \u003d 0;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalBlankLineCount \u003d 0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      files.forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        const lineCnt \u003d file.authorContributionMap[this.info.author];"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        if (lineCnt) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          totalLineCount +\u003d lineCnt;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          const out \u003d {};"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "          out.path \u003d file.path;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "          out.lineCount \u003d lineCnt;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          const segmentInfo \u003d this.splitSegments(file.lines);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          out.segments \u003d segmentInfo.segments;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "          totalBlankLineCount +\u003d segmentInfo.blankLineCount;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "          this.addBlankLineCountToFileFormat(file.path, segmentInfo.blankLineCount,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "              filesBlanksInfoObj);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(out);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      this.totalLineCount \u003d totalLineCount;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      this.totalBlankLineCount \u003d totalBlankLineCount;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      res.sort((a, b) \u003d\u003e b.lineCount - a.lineCount);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(this.filesLinesObj).forEach((file) \u003d\u003e {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.filesLinesObj[file] !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          this.selectedFileFormats.push(file);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "          this.fileFormats.push(file);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filesBlankLinesObj \u003d filesBlanksInfoObj;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      this.files \u003d res;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isLoaded \u003d true;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      this.activeFilesCount \u003d this.selectedFiles.length;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    addBlankLineCountToFileFormat(path, lineCount, filesInfoObj) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      let fileFormat \u003d path.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      fileFormat \u003d (fileFormat.length \u003d\u003d\u003d 0) ? \u0027others\u0027 : fileFormat;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!filesInfoObj[fileFormat]) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        filesInfoObj[fileFormat] \u003d 0;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      filesInfoObj[fileFormat] +\u003d lineCount;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    sortFiles() {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortingFunction \u003d (a, b) \u003d\u003e (this.toReverseSortFiles ? -1 : 1)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          * window.comparator(filesSortDict[this.filesSortType])(a, b);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    selectAll() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSearchBar) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateCheckBoxes();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.isSelectAllChecked) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats \u003d this.fileFormats.slice();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        this.activeFilesCount \u003d this.files.length;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats \u003d [];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        this.activeFilesCount \u003d 0;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    selectFileFormat(format) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSearchBar) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateCheckBoxes();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.selectedFileFormats.includes(format)) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        const index \u003d this.selectedFileFormats.indexOf(format);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats.splice(index, 1);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        this.selectedFileFormats.push(format);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.fileFormats.length \u003d\u003d\u003d this.selectedFileFormats.length) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isSelectAllChecked \u003d true;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isSelectAllChecked \u003d false;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      setTimeout(this.updateCount, 0);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilterSearch(evt) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isCheckBoxes) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        this.indicateSearchBar();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d (evt.target.value.length !\u003d\u003d 0) ? evt.target.value : \u0027*\u0027;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    tickAllCheckboxes() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      this.selectedFileFormats \u003d this.fileFormats.slice();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSelectAllChecked \u003d true;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    indicateSearchBar() {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSearchBar \u003d true;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isCheckBoxes \u003d false;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "      this.tickAllCheckboxes();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    indicateCheckBoxes() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      const searchBar \u003d document.getElementById(\u0027search\u0027);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      searchBar.value \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isSearchBar \u003d false;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isCheckBoxes \u003d true;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    isSelected(filePath) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      const fileExt \u003d filePath.split(\u0027.\u0027).pop();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.selectedFileFormats.includes(fileExt);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileLink(file, path) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      const repo \u003d window.REPOS[this.info.repo];"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      return `http://github.com/${"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.location.organization}/${repo.location.repoName}/${path}/${repo.branch}/${file.path}`;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileBlankLineInfo(fileFormat) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      return `${fileFormat}: Blank: ${"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filesBlankLinesObj[fileFormat]}, Non-Blank: ${"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filesLinesObj[fileFormat] - this.filesBlankLinesObj[fileFormat]}`;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    getTotalFileBlankLineInfo() {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "      return `Total: Blank: ${this.totalBlankLineCount}, Non-Blank: ${"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        this.totalLineCount - this.totalBlankLineCount}`;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    selectedFiles() {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.files"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter((file) \u003d\u003e this.isSelected(file.path)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "              \u0026\u0026 minimatch(file.path, this.filterSearch, { matchBase: true }))"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "          .sort(this.sortingFunction);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    getExistingLinesObj() {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      return Object.keys(this.filesLinesObj)"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter((type) \u003d\u003e this.filesLinesObj[type] \u003e 0)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "          .reduce((acc, key) \u003d\u003e ({"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            ...acc, [key]: this.filesLinesObj[key],"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "          }), {});"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initiate();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setInfoHash();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "James Pang": 4,
      "-": 315
    }
  },
  {
    "path": "frontend/src/static/js/v_ramp.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "function getBaseLink(repoId) {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  return `http://github.com/${"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    window.REPOS[repoId].location.organization}/${"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    window.REPOS[repoId].location.repoName}`;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "window.rampClick \u003d function rampClick(evt) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  if (evt.ctrlKey) { evt.preventDefault(); }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "};"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "window.vRamp \u003d {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  props: [\u0027user\u0027, \u0027tframe\u0027, \u0027avgsize\u0027, \u0027sdate\u0027, \u0027udate\u0027],"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  template: window.$(\u0027v_ramp\u0027).innerHTML,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      rampSize: 0.01,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  },"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getLink(user, slice) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const untilDate \u003d this.tframe \u003d\u003d\u003d \u0027week\u0027 ? slice.endDate : slice.date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      if (this.tframe \u003d\u003d\u003d \u0027commit\u0027) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        return `${getBaseLink(user.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return `${getBaseLink(user.repoId)}/commits/${REPOS[user.repoId].branch}?`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "                  + `author\u003d${user.name}\u0026`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "                  + `since\u003d${slice.date}\u0027T\u002700:00:00+08:00\u0026`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "                  + `until\u003d${untilDate}\u0027T\u002723:59:59+08:00`;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getWidth(slice) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      if (slice.insertions \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      const newSize \u003d 100 * (slice.insertions / this.avgsize);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return Math.max(newSize * this.rampSize, 0.5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // position for commit granularity"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getCommitPos(i, total) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return (total - i - 1) * window.DAY_IN_MS / total"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          / (this.getTotalForPos(this.sdate, this.udate) + window.DAY_IN_MS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // position for day granularity"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getSlicePos(date) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      const total \u003d this.getTotalForPos(this.sdate, this.udate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return (new Date(this.udate) - new Date(date)) / (total + window.DAY_IN_MS);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // get duration in miliseconds between 2 date"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getTotalForPos(sinceDate, untilDate) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return new Date(untilDate) - new Date(sinceDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getSliceColor(date) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      const timeMs \u003d (new Date(date)).getTime();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return (timeMs / window.DAY_IN_MS) % 5;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "Metta Ong": 61,
      "James Pang": 1
    }
  },
  {
    "path": "frontend/src/static/js/v_summary.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "window.comparator \u003d (fn) \u003d\u003e function compare(a, b) {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  const a1 \u003d fn(a).toLowerCase ? fn(a).toLowerCase() : fn(a);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  const b1 \u003d fn(b).toLowerCase ? fn(b).toLowerCase() : fn(b);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  if (a1 \u003d\u003d\u003d b1) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    return 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "  } if (a1 \u003c b1) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    return -1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  return 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "// ui funcs, only allow one ramp to be highlighted //"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "let drags \u003d [];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "function getBaseTarget(target) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  return (target.className \u003d\u003d\u003d \u0027summary-chart__ramp\u0027)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      ? target"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      : getBaseTarget(target.parentElement);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "function deactivateAllOverlays() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  document.querySelectorAll(\u0027.summary-chart__ramp .overlay\u0027)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      .forEach((x) \u003d\u003e { x.className \u003d \u0027overlay\u0027; });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "function dragViewDown(evt) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  deactivateAllOverlays();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const pos \u003d evt.clientX;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const ramp \u003d getBaseTarget(evt.target);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  drags \u003d [pos];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const base \u003d ramp.offsetWidth;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const offset \u003d ramp.parentElement.offsetLeft;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  overlay.style.marginLeft \u003d \u00270\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  overlay.style.width \u003d `${(pos - offset) * 100 / base}%`;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  overlay.className +\u003d \u0027 edge\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "function dragViewUp(evt) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  deactivateAllOverlays();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const ramp \u003d getBaseTarget(evt.target);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const base \u003d ramp.offsetWidth;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  drags.push(evt.clientX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  drags.sort((a, b) \u003d\u003e a - b);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const offset \u003d ramp.parentElement.offsetLeft;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  drags \u003d drags.map((x) \u003d\u003e (x - offset) * 100 / base);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  const overlay \u003d ramp.getElementsByClassName(\u0027overlay\u0027)[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  overlay.style.marginLeft \u003d `${drags[0]}%`;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  overlay.style.width \u003d `${drags[1] - drags[0]}%`;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  overlay.className +\u003d \u0027 show\u0027;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "window.viewClick \u003d function viewClick(evt) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  if (drags.length \u003d\u003d\u003d 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    drags \u003d [];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  if (evt.ctrlKey) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    return drags.length \u003d\u003d\u003d 0"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        ? dragViewDown(evt)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        : dragViewUp(evt);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  return null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "};"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "// date functions //"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "const DAY_IN_MS \u003d (1000 * 60 * 60 * 24);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "window.DAY_IN_MS \u003d DAY_IN_MS;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "const WEEK_IN_MS \u003d DAY_IN_MS * 7;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "function getDateStr(date) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  return (new Date(date)).toISOString().split(\u0027T\u0027)[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "function dateRounding(datestr, roundDown) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "James Pang"
        },
        "content": "  // rounding up to nearest monday"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  const date \u003d new Date(datestr);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  const day \u003d date.getUTCDay();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  let datems \u003d date.getTime();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  if (roundDown) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    datems -\u003d ((day + 6) % 7) * DAY_IN_MS;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    datems +\u003d ((8 - day) % 7) * DAY_IN_MS;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  return getDateStr(datems);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "window.vSummary \u003d {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  props: [\u0027repos\u0027],"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  template: window.$(\u0027v_summary\u0027).innerHTML,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  data() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      filtered: [],"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSearch: \u0027\u0027,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSortReverse: false,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      filterGroupSelection: \u0027groupByRepos\u0027,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      sortGroupSelection: \u0027groupTitle\u0027, // UI for sorting groups"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      sortWithinGroupSelection: \u0027title\u0027, // UI for sorting within groups"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingOption: \u0027\u0027,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      isSortingDsc: \u0027\u0027,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      sortingWithinOption: \u0027\u0027,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      isSortingWithinDsc: \u0027\u0027,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      filterTimeFrame: \u0027commit\u0027,"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      filterBreakdown: false,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      tmpFilterSinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      tmpFilterUntilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      filterSinceDate: \u0027\u0027,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      filterUntilDate: \u0027\u0027,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      filterHash: \u0027\u0027,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      minDate: \u0027\u0027,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      maxDate: \u0027\u0027,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      contributionBarColors: {},"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  watch: {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    repos() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    sortGroupSelection() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    sortWithinGroupSelection() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    filterSortReverse() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    filterTimeFrame() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    filterGroupSelection() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      this.updateSortWithinGroup();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    filterBreakdown() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    tmpFilterSinceDate() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tmpFilterSinceDate \u0026\u0026 this.tmpFilterSinceDate \u003e\u003d this.minDate) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d this.tmpFilterSinceDate;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "      } else if (!this.tmpFilterSinceDate) { // If user clears the since date field"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "        this.filterSinceDate \u003d this.minDate;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "        this.tmpFilterSinceDate \u003d this.filterSinceDate;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    tmpFilterUntilDate() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tmpFilterUntilDate \u0026\u0026 this.tmpFilterUntilDate \u003c\u003d this.maxDate) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d this.tmpFilterUntilDate;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "      } else if (!this.tmpFilterUntilDate) { // If user clears the until date field"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "        this.filterUntilDate \u003d this.maxDate;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "        this.tmpFilterUntilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lee Jin Yao"
        },
        "content": "      this.getFiltered();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  computed: {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    avgCommitSize() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCommits \u003d 0;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCount \u003d 0;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "          user.commits.forEach((slice) \u003d\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slice.insertions \u003e 0) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "              totalCount +\u003d 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "              totalCommits +\u003d slice.insertions;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalCommits / totalCount;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    avgContributionSize() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalLines \u003d 0;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalCount \u003d 0;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "          if (user.totalCommits \u003e 0) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            totalCount +\u003d 1;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            totalLines +\u003d user.totalCommits;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalLines / totalCount;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    filteredRepos() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.filtered.filter((repo) \u003d\u003e repo.length \u003e 0);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    // view functions //"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    getFileFormatContributionBars(fileFormatContribution) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      let totalWidth \u003d 0;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "      const contributionLimit \u003d (this.avgContributionSize * 2);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      const totalBars \u003d {};"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      const maxLength \u003d 100;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(fileFormatContribution).forEach((fileFormat) \u003d\u003e {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        const contribution \u003d fileFormatContribution[fileFormat];"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        const res \u003d [];"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        let fileFormatWidth \u003d 0;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        // compute 100% width bars"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        const cnt \u003d parseInt(contribution / contributionLimit, 10);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(maxLength);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          fileFormatWidth +\u003d maxLength;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          totalWidth +\u003d maxLength;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        // compute \u003c 100% width bars"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        const last \u003d (contribution % contributionLimit) / contributionLimit;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        if (last !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          res.push(last * maxLength);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          fileFormatWidth +\u003d last * maxLength;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "          totalWidth +\u003d last * maxLength;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        // split \u003e 100% width bars into smaller bars"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        if ((totalWidth \u003e maxLength) \u0026\u0026 (totalWidth !\u003d\u003d fileFormatWidth)) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "          res.unshift(maxLength - (totalWidth - fileFormatWidth));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "          res[res.length - 1] \u003d res[res.length - 1] - (maxLength - (totalWidth - fileFormatWidth));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "          if (res[res.length - 1] \u003c 0) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            const negativeWidth \u003d res.pop();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            res[res.length - 1] +\u003d negativeWidth;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "          totalWidth \u003d res[res.length - 1];"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        totalBars[fileFormat] \u003d res;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "      return totalBars;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    getContributionBars(totalContribution) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      const contributionLimit \u003d (this.avgContributionSize * 2);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      const cnt \u003d parseInt(totalContribution / contributionLimit, 10);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let cntId \u003d 0; cntId \u003c cnt; cntId +\u003d 1) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(100);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      const last \u003d (totalContribution % contributionLimit) / contributionLimit;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      if (last !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(last * 100);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      return res;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    getRepoLink(repo) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const { REPOS } \u003d window;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const { location, branch } \u003d REPOS[repo.repoId];"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      if (Object.prototype.hasOwnProperty.call(location, \u0027organization\u0027)) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        return `https://github.com/${location.organization}/${location.repoName}/tree/${branch}`;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      return repo.location;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    },"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    // model functions //"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    updateFilterSearch(evt) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filterSearch \u003d evt.target.value;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    setSummaryHash() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      const { addHash, encodeHash } \u003d window;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027search\u0027, this.filterSearch);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027sort\u0027, this.sortGroupSelection);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027sortWithin\u0027, this.sortWithinGroupSelection);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027since\u0027, this.filterSinceDate);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027until\u0027, this.filterUntilDate);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027timeframe\u0027, this.filterTimeFrame);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027reverse\u0027, this.filterSortReverse);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027groupSelect\u0027, this.filterGroupSelection);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "      addHash(\u0027breakdown\u0027, this.filterBreakdown);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "      encodeHash();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    renderFilterHash() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      const convertBool \u003d (txt) \u003d\u003e (txt \u003d\u003d\u003d \u0027true\u0027);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      const hash \u003d window.hashParams;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.search) { this.filterSearch \u003d hash.search; }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.sort) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortGroupSelection \u003d hash.sort;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.sortWithin) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sortWithinGroupSelection \u003d hash.sortWithin;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.timeframe) { this.filterTimeFrame \u003d hash.timeframe; }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.since) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterSinceDate \u003d hash.since;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.until) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tmpFilterUntilDate \u003d hash.until;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.reverse) { this.filterSortReverse \u003d convertBool(hash.reverse); }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.groupSelect) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterGroupSelection \u003d hash.groupSelect;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      if (hash.breakdown) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterBreakdown \u003d convertBool(hash.breakdown);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "      window.decodeHash();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    getDates() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.minDate \u0026\u0026 this.maxDate) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "      const minDate \u003d window.app.sinceDate;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "      const maxDate \u003d window.app.untilDate;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.filterSinceDate) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.tmpFilterSinceDate || this.tmpFilterSinceDate \u003c minDate) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "          this.tmpFilterSinceDate \u003d minDate;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterSinceDate \u003d minDate;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        this.minDate \u003d minDate;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!this.filterUntilDate) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!this.tmpFilterUntilDate || this.tmpFilterUntilDate \u003e maxDate) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "          this.tmpFilterUntilDate \u003d maxDate;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        this.filterUntilDate \u003d maxDate;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        this.maxDate \u003d maxDate;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "      this.$emit(\u0027get-dates\u0027, [this.minDate, this.maxDate]);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    getFiltered() {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "      this.setSummaryHash();"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "      // array of array, sorted by repo"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "      const full \u003d [];"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        const res \u003d [];"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        // filtering"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        repo.users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "          const toDisplay \u003d this.filterSearch.toLowerCase()"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "              .split(\u0027 \u0027).filter((param) \u003d\u003e param)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "              .map((param) \u003d\u003e user.searchPath.search(param) \u003e -1)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "              .reduce((curr, bool) \u003d\u003e curr || bool, false);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!this.filterSearch || toDisplay) {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            this.getUserCommits(user);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "              this.splitCommitsWeek(user);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            res.push(user);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        if (res.length) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "          full.push(res);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered \u003d full;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getDates();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortFiltered();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "    processFileFormats() {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "      const selectedColors \u003d [\u0027#ffe119\u0027, \u0027#4363d8\u0027, \u0027#3cb44b\u0027, \u0027#f58231\u0027, \u0027#911eb4\u0027, \u0027#46f0f0\u0027, \u0027#f032e6\u0027,"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027#bcf60c\u0027, \u0027#fabebe\u0027, \u0027#008080\u0027, \u0027#e6beff\u0027, \u0027#9a6324\u0027, \u0027#fffac8\u0027, \u0027#800000\u0027, \u0027#aaffc3\u0027, \u0027#808000\u0027, \u0027#ffd8b1\u0027,"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "          \u0027#000075\u0027, \u0027#808080\u0027];"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "      const colors \u003d {};"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "      let i \u003d 0;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "      this.repos.forEach((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        const user \u003d repo.users[0];"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        Object.keys(user.fileFormatContribution).forEach((fileFormat) \u003d\u003e {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!Object.prototype.hasOwnProperty.call(colors, fileFormat)) {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            colors[fileFormat] \u003d selectedColors[i];"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            i \u003d (i + 1) % selectedColors.length;"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        this.contributionBarColors \u003d colors;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "    splitCommitsWeek(user) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "      const { commits } \u003d user;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "      const res \u003d [];"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const sinceDate \u003d dateRounding(this.filterSinceDate, 0); // round up for the next monday"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "      const untilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "      const sinceMs \u003d (new Date(sinceDate)).getTime();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "      const untilMs \u003d (new Date(untilDate)).getTime();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      // add first week commits starting from filterSinceDate to end of the week"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      // if filterSinceDate is not the start of the week"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      if (this.filterSinceDate !\u003d\u003d sinceDate) {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        const firstWeekDateMs \u003d new Date(this.filterSinceDate).getTime();"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        this.pushCommitsWeek(firstWeekDateMs, sinceMs - 1, res, commits);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      this.pushCommitsWeek(sinceMs, untilMs, res, commits);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      user.commits \u003d res;"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    },"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    pushCommitsWeek(sinceMs, untilMs, res, commits) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "      const diff \u003d Math.round(Math.abs((untilMs - sinceMs) / DAY_IN_MS));"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "      for (let weekId \u003d 0; weekId \u003c diff / 7; weekId +\u003d 1) {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        const startOfWeekMs \u003d sinceMs + (weekId * WEEK_IN_MS);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        const endOfWeekMs \u003d startOfWeekMs + WEEK_IN_MS - DAY_IN_MS;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        const endOfWeekMsWithinUntilMs \u003d endOfWeekMs \u003c\u003d untilMs ? endOfWeekMs : untilMs;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        const week \u003d {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "          insertions: 0,"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "          deletions: 0,"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "          date: getDateStr(startOfWeekMs),"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "James Pang"
        },
        "content": "          endDate: getDateStr(endOfWeekMsWithinUntilMs),"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        this.addLineContributionWeek(endOfWeekMsWithinUntilMs, week, commits);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        res.push(week);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    },"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    addLineContributionWeek(endOfWeekMs, week, commits) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "      // commits are not contiguous, meaning there are gaps of days without"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "      // commits, so we are going to check each commit\u0027s date and make sure"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "      // it is within the duration of a week"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "      while (commits.length \u003e 0"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "James Pang"
        },
        "content": "          \u0026\u0026 (new Date(commits[0].date)).getTime() \u003c\u003d endOfWeekMs) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        const commit \u003d commits.shift();"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        week.insertions +\u003d commit.insertions;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        week.deletions +\u003d commit.deletions;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "    getUserCommits(user) {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "      user.commits \u003d [];"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "      const userFirst \u003d user.dailyCommits[0];"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "      const userLast \u003d user.dailyCommits[user.dailyCommits.length - 1];"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!userFirst) {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "      let sinceDate \u003d this.filterSinceDate;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!sinceDate || sinceDate \u003d\u003d\u003d \u0027undefined\u0027) {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        sinceDate \u003d userFirst.date;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "      let untilDate \u003d this.filterUntilDate;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!untilDate) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        untilDate \u003d userLast.date;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "      user.dailyCommits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        const { date } \u003d commit;"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        if (date \u003e\u003d sinceDate \u0026\u0026 date \u003c\u003d untilDate) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "          user.commits.push(commit);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "      return null;"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    updateSortWithinGroup() {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const ele \u003d document.getElementsByClassName(\u0027mui-select sort-within-group\u0027);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        ele[0].style.pointerEvents \u003d \u0027none\u0027;"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        ele[0].style.opacity \u003d 0.5;"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        ele[0].style.pointerEvents \u003d \u0027auto\u0027;"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        ele[0].style.opacity \u003d 1;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "    getOptionWithOrder() {"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.sortingOption, this.isSortingDsc] \u003d this.sortGroupSelection.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "      [this.sortingWithinOption, this.isSortingWithinDsc] \u003d this.sortWithinGroupSelection.split(\u0027 \u0027);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "    sortFiltered() {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getOptionWithOrder();"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "      let full \u003d [];"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByNone\u0027) {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        // push all repos into the same group"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        full[0] \u003d this.groupByNone(this.filtered);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "      } else if (this.filterGroupSelection \u003d\u003d\u003d \u0027groupByAuthors\u0027) {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        full \u003d this.groupByAuthors(this.filtered);"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        full \u003d this.groupByRepos(this.filtered);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.filterSortReverse) {"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        full.forEach((repo) \u003d\u003e repo.reverse());"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "      this.filtered \u003d full;"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // updating filters programically //"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    resetDateRange() {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.tmpFilterSinceDate \u003d this.minDate;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.tmpFilterUntilDate \u003d this.maxDate;"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    updateDateRange() {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      if (drags.length \u003e 0) {"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const since \u003d new Date(this.filterSinceDate).getTime();"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const until \u003d new Date(this.filterUntilDate).getTime();"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const range \u003d until - since;"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const getStr \u003d (time) \u003d\u003e getDateStr(new Date(time));"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        this.tmpFilterSinceDate \u003d getStr(since + range * drags[0] / 100);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        this.tmpFilterUntilDate \u003d getStr(since + range * drags[1] / 100);"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        drags \u003d [];"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        deactivateAllOverlays();"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    // triggering opening of tabs //"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    openTabAuthorship(user, repo, index) {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      const { minDate, maxDate } \u003d this;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.$emit(\u0027view-authorship\u0027, {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        minDate,"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        maxDate,"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        author: user.name,"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        repo: user.repoName,"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        name: user.displayName,"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        location: this.getRepoLink(repo[index]),"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        totalCommits: user.totalCommits,"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      });"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    openTabZoom(userOrig) {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      // skip if accidentally clicked on ramp chart"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      if (drags.length \u003d\u003d\u003d 2 \u0026\u0026 drags[1] - drags[0]) {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const tdiff \u003d new Date(this.filterUntilDate) - new Date(this.filterSinceDate);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const idxs \u003d drags.map((x) \u003d\u003e x * tdiff / 100);"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const tsince \u003d getDateStr(new Date(this.filterSinceDate).getTime() + idxs[0]);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const tuntil \u003d getDateStr(new Date(this.filterSinceDate).getTime() + idxs[1]);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const rawCommits \u003d userOrig.commits.filter("
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "            (commit) \u003d\u003e commit.date \u003e\u003d tsince \u0026\u0026 commit.date \u003c\u003d tuntil,"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const commits \u003d [];"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        rawCommits.forEach((commit) \u003d\u003e {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          if (this.filterTimeFrame \u003d\u003d\u003d \u0027week\u0027) {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "            commit.dayCommits.forEach((dayCommit) \u003d\u003e commits.push(dayCommit));"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "            commits.push(commit);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          }"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const { avgCommitSize } \u003d this;"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        const user \u003d { ...userOrig, commits };"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        this.$emit(\u0027view-zoom\u0027, {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          avgCommitSize,"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          user,"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          sinceDate: tsince,"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "          untilDate: tuntil,"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "        });"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      }"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByRepos(repos) {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "      const sortedRepos \u003d [];"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const sortingWithinOption \u003d this.sortingWithinOption \u003d\u003d\u003d \u0027title\u0027 ? \u0027name\u0027 : this.sortingWithinOption;"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const sortingOption \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027 ? \u0027searchPath\u0027 : this.sortingOption;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        users.sort(window.comparator((ele) \u003d\u003e ele[sortingWithinOption]));"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSortingWithinDsc) {"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "          users.reverse();"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.push(users);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "      sortedRepos.sort(window.comparator((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        if (sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027 || sortingOption \u003d\u003d\u003d \u0027variance\u0027) {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "          return repo.reduce(this.getGroupCommitsVariance, 0);"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        return repo[0][sortingOption];"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.reverse();"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "      return sortedRepos;"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByNone(repos) {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "      const sortedRepos \u003d [];"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const isSortingGroupTitle \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027;"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "          sortedRepos.push(user);"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      sortedRepos.sort(window.comparator((repo) \u003d\u003e {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        if (isSortingGroupTitle) {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "James Pang"
        },
        "content": "          return repo.searchPath + repo.name;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        return repo[this.sortingOption];"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        sortedRepos.reverse();"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "      return sortedRepos;"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "    groupByAuthors(repos) {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "      const authorMap \u003d {};"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "      const filtered \u003d [];"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const sortingWithinOption \u003d this.sortingWithinOption \u003d\u003d\u003d \u0027title\u0027 ? \u0027searchPath\u0027 : this.sortingWithinOption;"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      const sortingOption \u003d this.sortingOption \u003d\u003d\u003d \u0027groupTitle\u0027 ? \u0027name\u0027 : this.sortingOption;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "      repos.forEach((users) \u003d\u003e {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        users.forEach((user) \u003d\u003e {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "          if (Object.keys(authorMap).includes(user.name)) {"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            authorMap[user.name].push(user);"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            authorMap[user.name] \u003d [user];"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(authorMap).forEach((author) \u003d\u003e {"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        authorMap[author].sort(window.comparator((repo) \u003d\u003e repo[sortingWithinOption]));"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.isSortingWithinDsc) {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "          authorMap[author].reverse();"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        filtered.push(authorMap[author]);"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "      filtered.sort(window.comparator((author) \u003d\u003e {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        if (sortingOption \u003d\u003d\u003d \u0027totalCommits\u0027 || sortingOption \u003d\u003d\u003d \u0027variance\u0027) {"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "          return author.reduce(this.getGroupCommitsVariance, 0);"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "James Pang"
        },
        "content": "        return author[0][sortingOption];"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "      }));"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.isSortingDsc) {"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        filtered.reverse();"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "      return filtered;"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    getGroupCommitsVariance(total, group) {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "      return total + group[this.sortingOption];"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "James Pang"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    getGroupTotalContribution(group) {"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "James Pang"
        },
        "content": "      return group.reduce((accContribution, user) \u003d\u003e accContribution + user.totalCommits, 0);"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "James Pang"
        },
        "content": "    },"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "  created() {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "    this.renderFilterHash();"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getFiltered();"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "    this.processFileFormats();"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "  },"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    v_ramp: window.vRamp,"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  },"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "Metta Ong": 132,
      "James Pang": 69,
      "Lee Jin Yao": 8,
      "-": 468
    }
  },
  {
    "path": "frontend/src/static/js/v_zoom.js",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "window.vZoom \u003d {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  props: [\u0027info\u0027],"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  template: window.$(\u0027v_zoom\u0027).innerHTML,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  data: () \u003d\u003e ({}),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  methods: {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    openSummary() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      this.$emit(\u0027view-summary\u0027, {});"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    getSliceLink(slice) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "      return `${window.getBaseLink(this.info.user.repoId)}/commit/${slice.hash}`;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    },"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  components: {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "    v_ramp: window.vRamp,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "  },"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Metta Ong"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "Metta Ong": 17
    }
  },
  {
    "path": "src/main/java/reposense/git/GitBranch.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.system.CommandRunner.runCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.git.exception.GitBranchException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.StringsUtil;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains git branch related functionalities."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * Git branch is responsible for list, create, or delete branches."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitBranch {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns the current working branch of the repository at {@code root}."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public static String getCurrentBranch(String root) throws GitBranchException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Path rootPath \u003d Paths.get(root);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String gitBranchCommand \u003d \"git branch\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            return StringsUtil.filterText(runCommand(rootPath, gitBranchCommand), \"\\\\* (.*)\").split(\"\\\\*\")[1].trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        } catch (RuntimeException rte) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            throw new GitBranchException(rte);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 6,
      "-": 24
    }
  },
  {
    "path": "src/main/java/reposense/git/GitClone.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.system.CommandRunner.runCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.util.StringsUtil.addQuote;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.git.exception.GitBranchException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.GitCloneException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " * Contains git clone related functionalities."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Git clone is responsible for cloning a local/remote repository into a new directory."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitClone {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String GIT_CLONE_BARE_OPTION \u003d \"--bare\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(GitClone.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clones a bare repo specified in the {@code repoConfig}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void cloneBare(RepoConfiguration repoConfig) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.deleteDirectory(repoConfig.getRepoRoot());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        clone("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            repoConfig.getLocation(), repoConfig.getRepoFolderName(), repoConfig.getRepoName(), GIT_CLONE_BARE_OPTION);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clones repo specified in the {@code repoConfig} and updates it with the branch info."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void clone(RepoConfiguration repoConfig)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            throws GitCloneException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            FileUtil.deleteDirectory(repoConfig.getRepoRoot());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Cloning from \" + repoConfig.getLocation() + \"...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            clone(repoConfig.getLocation(), repoConfig.getRepoFolderName(), repoConfig.getRepoName(), \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(\"Cloning completed!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (RuntimeException rte) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.SEVERE, \"Error encountered in Git Cloning, will attempt to continue analyzing\", rte);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new GitCloneException(rte);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            //Due to an unsolved bug on Windows Git, for some repository, Git Clone will return an error even"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            // though the repo is cloned properly."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new GitCloneException(ioe);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            repoConfig.updateBranch();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            GitCheckout.checkout(repoConfig.getRepoRoot(), repoConfig.getBranch());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        } catch (GitBranchException gbe) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            logger.log(Level.SEVERE,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "                    \"Exception met while trying to get current branch of repo. Analysis terminated.\", gbe);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            throw new GitCloneException(gbe);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (RuntimeException rte) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.SEVERE, \"Branch does not exist! Analysis terminated.\", rte);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new GitCloneException(rte);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clones a repo given the repo location into a directory."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException if it fails to create a directory."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void clone(RepoLocation location, String repoFolderName, String repoName, String additionalCommand)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        Path rootPath \u003d Paths.get(FileUtil.REPOS_ADDRESS, repoFolderName);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        Files.createDirectories(rootPath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        String command \u003d"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                String.format(\"git clone %s %s %s\", additionalCommand, addQuote(location.toString()), repoName);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        runCommand(rootPath, command);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 5,
      "-": 77
    }
  },
  {
    "path": "src/main/java/reposense/git/exception/GitBranchException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "package reposense.git.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": " * Signals that there is an exception when checking out a branch."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "public class GitBranchException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public GitBranchException(Exception e) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        super(e.getMessage());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 10
    }
  },
  {
    "path": "src/main/java/reposense/model/RepoConfiguration.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitBranch;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.git.exception.GitBranchException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Represents configuration information from CSV config file for a single repository."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class RepoConfiguration {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static final String DEFAULT_BRANCH \u003d \"HEAD\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(RepoConfiguration.class);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    private final transient String repoFolderName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private RepoLocation location;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private String branch;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private String displayName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient Date sinceDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient Date untilDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient boolean annotationOverwrite \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient List\u003cFormat\u003e formats;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient int commitNum \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient List\u003cString\u003e ignoreGlobList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient AuthorConfiguration authorConfig;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient boolean isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient List\u003cCommitHash\u003e ignoreCommitList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient boolean isFormatsOverriding;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient boolean isIgnoreGlobListOverriding;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private transient boolean isIgnoreCommitListOverriding;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    public RepoConfiguration(RepoLocation location) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        this(location, DEFAULT_BRANCH);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public RepoConfiguration(RepoLocation location, String branch) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        this(location, branch, Collections.emptyList(), Collections.emptyList(), false, Collections.emptyList(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                false, false, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public RepoConfiguration(RepoLocation location, String branch, List\u003cFormat\u003e formats, List\u003cString\u003e ignoreGlobList,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isStandaloneConfigIgnored, List\u003cCommitHash\u003e ignoreCommitList, boolean isFormatsOverriding,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isIgnoreGlobListOverriding, boolean isIgnoreCommitListOverriding) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorConfig \u003d new AuthorConfiguration(location, branch);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        this.branch \u003d location.isEmpty() ? DEFAULT_BRANCH : branch;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreGlobList \u003d ignoreGlobList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        this.formats \u003d formats;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreCommitList \u003d ignoreCommitList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isFormatsOverriding \u003d isFormatsOverriding;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isIgnoreGlobListOverriding \u003d isIgnoreGlobListOverriding;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isIgnoreCommitListOverriding \u003d isIgnoreCommitListOverriding;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        String organization \u003d location.getOrganization();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        String repoName \u003d location.getRepoName();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        if (organization !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            displayName \u003d organization + \"_\" + repoName + \"_\" + branch;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            repoFolderName \u003d organization + \"_\" + repoName;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            displayName \u003d repoName + \"_\" + branch;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            repoFolderName \u003d repoName;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setDatesToRepoConfigs("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e configs, Optional\u003cDate\u003e sinceDate, Optional\u003cDate\u003e untilDate) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        for (RepoConfiguration config : configs) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            config.setSinceDate(sinceDate.orElse(null));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            // set untilDate in summary.json to the current date of generation if it is not provided"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            config.setUntilDate(untilDate.orElse(new Date()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "     * Merges a {@code RepoConfiguration} from {@code repoConfigs} with an {@code AuthorConfiguration} from"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code authorConfigs} if their {@code RepoLocation} and branch matches"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void merge(List\u003cRepoConfiguration\u003e repoConfigs, List\u003cAuthorConfiguration\u003e authorConfigs) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        for (AuthorConfiguration authorConfig : authorConfigs) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            if (authorConfig.getLocation().isEmpty()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            RepoConfiguration matchingRepoConfig \u003d getMatchingRepoConfig(repoConfigs, authorConfig);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            if (matchingRepoConfig \u003d\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                logger.warning(String.format("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Repository %s is not found in repo-config.csv.\", authorConfig.getLocation()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            matchingRepoConfig.setAuthorConfiguration(authorConfig);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        for (AuthorConfiguration authorConfig : authorConfigs) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (authorConfig.getLocation().isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                for (RepoConfiguration repoConfig : repoConfigs) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                    repoConfig.addAuthors(authorConfig.getAuthorList());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * Iterates through {@code repoConfigs} to find a {@code RepoConfiguration} with {@code RepoLocation} and branch"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     * that matches {@code authorConfig}. Returns {@code null} if no match is found."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    private static RepoConfiguration getMatchingRepoConfig("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e repoConfigs, AuthorConfiguration authorConfig) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        for (RepoConfiguration repoConfig : repoConfigs) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            if (repoConfig.getLocation().equals(authorConfig.getLocation())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 repoConfig.getBranch().equals(authorConfig.getBranch())) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                return repoConfig;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets {@code formats} to {@code RepoConfiguration} in {@code configs} if its format list is empty."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setFormatsToRepoConfigs(List\u003cRepoConfiguration\u003e configs, List\u003cFormat\u003e formats) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        configs.stream().filter(config -\u003e config.getFormats().isEmpty())"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                        .forEach(config -\u003e config.setFormats(formats));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     * Sets {@code isStandaloneConfigIgnored} to all {@code RepoConfiguration} in {@code configs}."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void setStandaloneConfigIgnoredToRepoConfigs("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cRepoConfiguration\u003e configs, boolean isStandaloneConfigIgnored) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        configs.stream().forEach(config -\u003e config.setStandaloneConfigIgnored(isStandaloneConfigIgnored));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clears authors information and use the information provided from {@code standaloneConfig}."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    public void update(StandaloneConfig standaloneConfig) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        // only assign the new values when all the fields in {@code standaloneConfig} pass the validations."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        Format.validateFormats(standaloneConfig.getFormats());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        CommitHash.validateCommits(standaloneConfig.getIgnoreCommitList());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isIgnoreGlobListOverriding) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            ignoreGlobList \u003d standaloneConfig.getIgnoreGlobList();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isFormatsOverriding) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            formats \u003d Format.convertStringsToFormats(standaloneConfig.getFormats());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isIgnoreCommitListOverriding) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            ignoreCommitList \u003d CommitHash.convertStringsToCommits(standaloneConfig.getIgnoreCommitList());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.update(standaloneConfig, ignoreGlobList);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "     * Attempts to find matching {@code Author} given a name and an email."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "     * If no matching {@code Author} is found, {@code Author#UNKNOWN_AUTHOR} is returned."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public Author getAuthor(String name, String email) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorConfig.getAuthor(name, email);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates branch with {@code currentBranch} if default branch is specified."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateBranch(String currentBranch) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        if (branch.equals(DEFAULT_BRANCH)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            setBranch(currentBranch);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the current branch and updates branch with current branch if default branch is specified."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public void updateBranch() throws GitBranchException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        if (branch.equals(DEFAULT_BRANCH)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            String currentBranch \u003d GitBranch.getCurrentBranch(getRepoRoot());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            setBranch(currentBranch);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRepoRoot() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        String path \u003d FileUtil.REPOS_ADDRESS + File.separator + getRepoFolderName() + File.separator;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!getRepoName().isEmpty()) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            path +\u003d getRepoName() + File.separator;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        return path;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRepoFolderName() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return repoFolderName;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean equals(Object other) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        if (other \u003d\u003d this) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!(other instanceof RepoConfiguration)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        RepoConfiguration otherRepoConfig \u003d (RepoConfiguration) other;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        return location.equals(otherRepoConfig.location)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 branch.equals(otherRepoConfig.branch)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 authorConfig.equals(otherRepoConfig.authorConfig)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 ignoreGlobList.equals(otherRepoConfig.ignoreGlobList)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 isStandaloneConfigIgnored \u003d\u003d otherRepoConfig.isStandaloneConfigIgnored"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 formats.equals(otherRepoConfig.formats)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 isFormatsOverriding \u003d\u003d otherRepoConfig.isFormatsOverriding"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 isIgnoreGlobListOverriding \u003d\u003d otherRepoConfig.isIgnoreGlobListOverriding"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 isIgnoreCommitListOverriding \u003d\u003d otherRepoConfig.isIgnoreCommitListOverriding;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cAuthor, String\u003e getAuthorDisplayNameMap() {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorConfig.getAuthorDisplayNameMap();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAuthorDisplayNameMap(Map\u003cAuthor, String\u003e authorDisplayNameMap) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.setAuthorDisplayNameMap(authorDisplayNameMap);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getCommitNum() {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        return commitNum;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setCommitNum(int commitNum) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        this.commitNum \u003d commitNum;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getBranch() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        return branch;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setBranch(String branch) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        updateDisplayName(branch);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        this.branch \u003d branch;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.setBranch(branch);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    public void updateDisplayName(String branch) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        this.displayName \u003d displayName.substring(0, displayName.lastIndexOf(\u0027_\u0027) + 1) + branch;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isAnnotationOverwrite() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return annotationOverwrite;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAnnotationOverwrite(boolean annotationOverwrite) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        this.annotationOverwrite \u003d annotationOverwrite;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getIgnoreGlobList() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        return ignoreGlobList;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setIgnoreGlobList(List\u003cString\u003e ignoreGlobList) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreGlobList \u003d ignoreGlobList;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCommitHash\u003e getIgnoreCommitList() {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        return ignoreCommitList;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setIgnoreCommitList(List\u003cCommitHash\u003e ignoreCommitList) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        this.ignoreCommitList \u003d ignoreCommitList;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cAuthor\u003e getAuthorList() {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorConfig.getAuthorList();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addAuthor(Author author) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.addAuthor(author, this.getIgnoreGlobList());"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addAuthors(List\u003cAuthor\u003e authorList) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.addAuthors(authorList, this.getIgnoreGlobList());"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAuthorConfiguration(AuthorConfiguration authorConfig) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        this.authorConfig \u003d authorConfig;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        for (Author author : authorConfig.getAuthorList()) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            AuthorConfiguration.propagateIgnoreGlobList(author, ignoreGlobList);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean containsAuthor(Author author) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorConfig.containsAuthor(author);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "     * Clears authors information and sets the {@code authorList} to {@code RepoConfiguration}."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAuthorList(List\u003cAuthor\u003e authorList) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.setAuthorList(authorList);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.resetAuthorInformation(this.getIgnoreGlobList());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, Author\u003e getAuthorEmailsAndAliasesMap() {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        return authorConfig.getAuthorEmailsAndAliasesMap();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAuthorEmailsAndAliasesMap(Map\u003cString, Author\u003e authorEmailsAndAliasesMap) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.setAuthorEmailsAndAliasesMap(authorEmailsAndAliasesMap);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getSinceDate() {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        return sinceDate;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setSinceDate(Date sinceDate) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        this.sinceDate \u003d sinceDate;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getUntilDate() {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        return untilDate;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setUntilDate(Date untilDate) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        this.untilDate \u003d untilDate;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFormat\u003e getFormats() {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        return formats;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setFormats(List\u003cFormat\u003e formats) {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        this.formats \u003d formats;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setAuthorDisplayName(Author author, String displayName) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.setAuthorDisplayName(author, displayName);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addAuthorEmailsAndAliasesMapEntry(Author author, List\u003cString\u003e values) {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        authorConfig.addAuthorEmailsAndAliasesMapEntry(author, values);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDisplayName() {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        return displayName;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getRepoName() {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        return location.getRepoName();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setStandaloneConfigIgnored(boolean isStandaloneConfigIgnored) {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isStandaloneConfigIgnored \u003d isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    public RepoLocation getLocation() {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        return location;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getOrganization() {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        return location.getOrganization();"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isStandaloneConfigIgnored() {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        return isStandaloneConfigIgnored;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFormatsOverriding() {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        return isFormatsOverriding;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isIgnoreGlobListOverriding() {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        return isIgnoreGlobListOverriding;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isIgnoreCommitListOverriding() {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        return isIgnoreCommitListOverriding;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 2,
      "-": 390
    }
  },
  {
    "path": "src/main/java/reposense/report/RepoCloner.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.system.CommandRunner.runCommandAsync;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import static reposense.util.StringsUtil.addQuote;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitBranch;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.GitLsTree;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.git.exception.GitBranchException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.GitCloneException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.InvalidFilePathException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.CommandRunnerProcess;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.CommandRunnerProcessException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.system.LogsManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles asynchronous cloning of repos to allow multiple repos to be cloned and analyzed concurrently."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "public class RepoCloner {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_START_CLONING \u003d \"Cloning in parallel from %s...\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_WAITING_FOR_CLONING \u003d \"Waiting for cloning of %s to complete...\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_COMPLETE_CLONING \u003d \"Cloning of %s completed!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_ERROR_DELETING_DIRECTORY \u003d \"Error deleting report directory.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String MESSAGE_ERROR_CLONING \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Exception met while trying to clone the repo, will skip this repo.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    private static final String MESSAGE_ERROR_GETTING_BRANCH \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            \"Exception met while trying to get current branch of %s (%s), will skip this repo.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final int MAX_NO_OF_REPOS \u003d 2;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final Logger logger \u003d LogsManager.getLogger(RepoCloner.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private RepoConfiguration[] configs \u003d new RepoConfiguration[MAX_NO_OF_REPOS];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    private int currentIndex \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    private int previousIndex \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isCurrentRepoCloned \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    private String currentRepoDefaultBranch;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    private CommandRunnerProcess crp;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "     * Spawns a process to clone the repository specified by {@code config}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * Does not wait for process to finish executing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void clone(String outputPath, RepoConfiguration config) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        configs[currentIndex] \u003d config;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        isCurrentRepoCloned \u003d spawnCloneProcess(outputPath, config);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * Waits for current clone process to finish executing and returns the {@code RepoLocation} of the corresponding"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code RepoConfiguration}."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public RepoLocation getClonedRepoLocation(String outputPath) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        if (isCurrentRepoCloned) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            isCurrentRepoCloned \u003d waitForCloneProcess(outputPath, configs[currentIndex]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!isCurrentRepoCloned) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteDirectory(configs[currentIndex].getRepoRoot());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            currentRepoDefaultBranch \u003d GitBranch.getCurrentBranch(configs[currentIndex].getRepoRoot());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        } catch (GitBranchException gbe) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            // GitBranch will throw this exception when repository is empty"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            logger.log(Level.WARNING, String.format(MESSAGE_ERROR_GETTING_BRANCH,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "                    configs[currentIndex].getLocation(), configs[currentIndex].getBranch()), gbe);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            handleCloningFailed(outputPath, configs[currentIndex]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        cleanupPrevRepoFolder();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        previousIndex \u003d currentIndex;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        currentIndex \u003d (currentIndex + 1) % configs.length;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        return configs[previousIndex].getLocation();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "     * Cleans up after all repos have been cloned and analyzed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public void cleanup() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteDirectory(FileUtil.REPOS_ADDRESS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * Spawns a process to clone repo specified in {@code repoConfig}. Does not wait for process to finish executing."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * Should only handle a maximum of one spawned process at any time."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean spawnCloneProcess(String outputPath, RepoConfiguration config) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        assert(crp \u003d\u003d null);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            GitLsTree.validateFilePaths(config);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            FileUtil.deleteDirectory(config.getRepoRoot());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(String.format(MESSAGE_START_CLONING, config.getLocation()));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            Path rootPath \u003d Paths.get(FileUtil.REPOS_ADDRESS, config.getRepoFolderName());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            Files.createDirectories(rootPath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            crp \u003d runCommandAsync(rootPath, \"git clone \" + addQuote(config.getLocation().toString()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (RuntimeException | IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, MESSAGE_ERROR_CLONING, e);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            handleCloningFailed(outputPath, config);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (InvalidFilePathException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            handleCloningFailed(outputPath, config);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (GitCloneException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * Waits for previously spawned clone process to finish executing."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * Should only be called after {@code spawnCloneProcess} has been called."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean waitForCloneProcess(String outputPath, RepoConfiguration config) throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(String.format(MESSAGE_WAITING_FOR_CLONING, config.getLocation()));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            crp.waitForProcess();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.info(String.format(MESSAGE_COMPLETE_CLONING, config.getLocation()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (RuntimeException | CommandRunnerProcessException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            crp \u003d null;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, MESSAGE_ERROR_CLONING, e);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            handleCloningFailed(outputPath, config);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        crp \u003d null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleCloningFailed(String outputPath, RepoConfiguration config) throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        Path repoReportDirectory \u003d Paths.get(outputPath, config.getDisplayName());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        FileUtil.createDirectory(repoReportDirectory);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        ReportGenerator.generateEmptyRepoReport(repoReportDirectory.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes previously cloned repo directories that are not in use anymore."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    private void cleanupPrevRepoFolder() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        if (previousIndex !\u003d currentIndex) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            deleteDirectory(configs[previousIndex].getRepoRoot());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    * Deletes the {@code root} directory."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    private void deleteDirectory(String root) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            FileUtil.deleteDirectory(root);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            logger.log(Level.WARNING, MESSAGE_ERROR_DELETING_DIRECTORY, ioe);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCurrentRepoDefaultBranch() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        return currentRepoDefaultBranch;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 12,
      "-": 159
    }
  },
  {
    "path": "src/test/java/reposense/git/GitBranchTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package reposense.git;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.git.exception.GitBranchException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.git.exception.GitCloneException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.Format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.parser.InvalidLocationException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import reposense.template.GitTestTemplate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class GitBranchTest extends GitTestTemplate {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String TEST_REPO_UNCOMMON_DEFAULT_GIT_LOCATION \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            \"https://github.com/reposense/testrepo-UncommonDefaultBranch.git\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public void getCurrentBranch_masterBranch_success() throws GitBranchException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String currentBranch \u003d GitBranch.getCurrentBranch(config.getRepoRoot());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(\"master\", currentBranch);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public void getCurrentBranch_uncommonDefaultBranch_success()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "            throws GitCloneException, InvalidLocationException, GitBranchException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        RepoConfiguration uncommonDefaultConfig \u003d new RepoConfiguration("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                new RepoLocation(TEST_REPO_UNCOMMON_DEFAULT_GIT_LOCATION), RepoConfiguration.DEFAULT_BRANCH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        uncommonDefaultConfig.setFormats(Format.DEFAULT_FORMATS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        GitClone.clone(uncommonDefaultConfig);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String currentBranch \u003d GitBranch.getCurrentBranch(uncommonDefaultConfig.getRepoRoot());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        Assert.assertEquals(\"uncommon\", currentBranch);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 4,
      "-": 33
    }
  },
  {
    "path": "src/test/java/reposense/report/RepoClonerTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "package reposense.report;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import org.junit.After;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import org.junit.Assert;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.model.RepoConfiguration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.model.RepoLocation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.parser.InvalidLocationException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "import reposense.util.FileUtil;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "public class RepoClonerTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    private static final String TEST_REPO_EMPTY_GIT_LOCATION \u003d \"https://github.com/reposense/testrepo-Empty.git\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    private static final String OUTPUT_PATH \u003d \"repocloner_test\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    @After"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public void after() throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        FileUtil.deleteDirectory(FileUtil.REPOS_ADDRESS);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        FileUtil.deleteDirectory(OUTPUT_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    public void repoCloner_emptyRepo_failsGracefully() throws InvalidLocationException, IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        RepoConfiguration emptyRepositoryRepoConfig \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "                new RepoConfiguration(new RepoLocation(TEST_REPO_EMPTY_GIT_LOCATION));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        RepoCloner repoCloner \u003d new RepoCloner();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        repoCloner.clone(OUTPUT_PATH, emptyRepositoryRepoConfig);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        RepoLocation clonedRepoLocation \u003d repoCloner.getClonedRepoLocation(OUTPUT_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "        Assert.assertNull(clonedRepoLocation);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ming Yi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ming Yi": 36
    }
  }
]
