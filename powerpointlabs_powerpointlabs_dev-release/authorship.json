[
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ELearningLab/ELearningLabMenu/ELearningLabMenuImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ELearningLab.ELearningLabMenu"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportImageRibbonId(ELearningLabText.RibbonMenuId)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class ELearningLabMenuImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Bitmap(Properties.Resources.ELearningLabIcon2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ELearningLab/ELearningLabMenu/ELearningLabMenuSupertipHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ELearningLab.ELearningLabMenu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportSupertipRibbonId(ELearningLabText.RibbonMenuId)]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    class ELearningLabMenuSupertipHandler : SupertipHandler"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetSupertip(string ribbonId)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            return ELearningLabText.RibbonMenuSupertip;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ELearningLab/ELearningTaskPane/ELearningActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service.StorageService;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ELearningLab.ELearningTaskPane"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(ELearningLabText.ELearningTaskPaneTag)]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    class ELearningActionHandler : ActionHandler"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadingDialogBox splashView \u003d new LoadingDialogBox();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            splashView.Show();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureAccountStorageService.LoadUserAccount();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            WatsonAccountStorageService.LoadUserAccount();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingStorageService.LoadAudioSettingPreference();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            splashView.Close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            this.RegisterTaskPane(typeof(ELearningLabTaskpane), ELearningLabText.ELearningTaskPaneLabel,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                ELearningTaskPaneVisibleValueChangedEventHandler);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane eLearningTaskpane \u003d this.GetTaskPane(typeof(ELearningLabTaskpane));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningTaskpane.Visible \u003d !eLearningTaskpane.Visible;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ELearningTaskPaneVisibleValueChangedEventHandler(object sender, EventArgs e)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane eLearningTaskpane \u003d this.GetTaskPane(typeof(ELearningLabTaskpane));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eLearningTaskpane \u003d\u003d null)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningLabTaskpane taskpane \u003d eLearningTaskpane.Control as ELearningLabTaskpane;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eLearningTaskpane.Visible)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                taskpane.ELearningLabMainPanel.ReloadELearningLabOnSlideSelectionChanged();               "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                taskpane.ELearningLabMainPanel.SyncElearningLabOnSlideSelectionChanged();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 50,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ELearningLab/ELearningTaskPane/ELearningImageHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ELearningLab.ELearningTaskPane"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportImageRibbonId(ELearningLabText.ELearningTaskPaneTag)]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    class ELearningImageHandler : ImageHandler"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override Bitmap GetImage(string ribbonId)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Bitmap(Properties.Resources.ELearningLabIcon2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/NarrationsLab/AddNarrations/AddNarrationsActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.NarrationsLab"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(NarrationsLabText.AddNarrationsTag)]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    class AddNarrationsActionHandler : ActionHandler"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (AudioSettingService.selectedVoiceType \u003d\u003d VoiceType.AzureVoice"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 AzureAccount.GetInstance().IsEmpty())"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Invalid user account. Please log in again.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            //TODO: This needs to improved to stop using global variables"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            // If there are text in notes page for any of the selected slides "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetCurrentPresentation().SelectedSlides.Any(slide \u003d\u003e slide.NotesPageText.Trim() !\u003d \"\"))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                ComputerVoiceRuntimeService.IsRemoveAudioEnabled \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetRibbonUi().RefreshRibbonControl(\"RemoveNarrationsButton\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                ComputerVoiceRuntimeService.EmbedSelectedSlideNotes();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Failed to generate audio files.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane recorderPane \u003d this.GetAddIn().GetActivePane(typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d recorderPane.Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder \u003d\u003d null)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            // initialize selected slides\u0027 audio"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring[]\u003e allAudioFiles \u003d ComputerVoiceRuntimeService.ExtractSlideNotes();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.InitializeAudioAndScript(this.GetCurrentPresentation().SelectedSlides.ToList(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  allAudioFiles, true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            // if current list is visible, update the pane immediately"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorderPane.Visible)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.UpdateLists(currentSlide.ID);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            if (AudioSettingService.IsPreviewEnabled)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                ComputerVoiceRuntimeService.PreviewAnimations();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 82,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ShortcutsLab/AddCustomShape/AddCustomShapeActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ShortcutsLab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(ShortcutsLabText.AddCustomShapeTag)]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    class AddCustomShapeActionHandler : ActionHandler"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide slide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane shapesLabPane \u003d this.GetTaskPane(typeof(CustomShapePane));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapesLabPane \u003d\u003d null)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                this.RegisterTaskPane(typeof(CustomShapePane), ShapesLabText.TaskPanelTitle);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                shapesLabPane \u003d this.GetTaskPane(typeof(CustomShapePane));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapesLabPane \u003d\u003d null)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLabPane.Visible \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePane customShapePane \u003d shapesLabPane.Control as CustomShapePane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            customShapePane.InitCustomShapePaneStorage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            customShapePane.AddShapeFromSelection(selection);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 40,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/ShortcutsLab/ExportSlideAsImage/ExportSlideAsImageActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShortcutsLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.ShortcutsLab"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(ShortcutsLabText.ExportSlideAsImageTag)]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class ExportSlideAsImageActionHandler : ActionHandler"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cSlide\u003e selectedSlides \u003d new List\u003cSlide\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Slide slide in this.GetCurrentSelection().SlideRange)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    selectedSlides.Add(slide);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedSlides.Add(this.GetCurrentSlide().GetNativeSlide());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.SaveFileDialog saveFileDialog \u003d new System.Windows.Forms.SaveFileDialog();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            saveFileDialog.Title \u003d ShortcutsLabConstants.ExportSlideSaveFileDialogTitle;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            saveFileDialog.DefaultExt \u003d ShortcutsLabConstants.ExportSlideSaveFileDialogExtension;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            saveFileDialog.Filter \u003d ShortcutsLabConstants.ExportSlideSaveFileDialogFilter;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.DialogResult result \u003d saveFileDialog.ShowDialog();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {           "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.ExportSlides(selectedSlides, saveFileDialog.FileName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 48,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/ConvertToTooltip/ConvertToTooltipActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.ConvertToTooltipTag)]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    class ConvertToTooltipActionHandler : ActionHandler"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide \u003d\u003d null || !ShapeUtil.IsSelectionShape(selection))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapeRange selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                bool success \u003d ConvertToTooltip.AddTriggerAnimation(currentSlide, selectedShapes);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                if (success)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Open the animation custom pane if it is not opened"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!this.GetApplication().CommandBars.GetPressedMso(\"AnimationCustom\"))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetApplication().CommandBars.ExecuteMso(\"AnimationCustom\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"PowerPointLabs\", e.Message, e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 48,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/CreateCallout/CreateCalloutActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.CreateCalloutTag)]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class CreateCalloutActionHandler : ActionHandler"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide \u003d\u003d null || !ShapeUtil.IsSelectionShape(selection))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape selectedShape in selection.ShapeRange)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape callout \u003d CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, selectedShape);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertToTooltip.AddTriggerAnimation(currentSlide, selectedShape, callout);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "           }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(TooltipsLabConstants.AnimationPaneName))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(TooltipsLabConstants.AnimationPaneName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 39,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/CreateTooltip/CreateTooltipActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.CreateTooltipTag)]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    class CreateTooltipActionHandler : ActionHandler"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape triggerShape \u003d CreateTooltip.GenerateTriggerShape(currentSlide);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape callout \u003d CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, triggerShape);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertToTooltip.AddTriggerAnimation(currentSlide, triggerShape, callout);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(TooltipsLabConstants.AnimationPaneName))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(TooltipsLabConstants.AnimationPaneName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ActionFramework/TooltipsLab/CreateTrigger/CreateTriggerActionHandler.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Attribute;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Interface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ActionFramework.TooltipsLab"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    [ExportActionRibbonId(TooltipsLabText.CreateTriggerTag)]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    class CreateTriggerActionHandler : ActionHandler"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void ExecuteAction(string ribbonId)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide \u003d\u003d null || !ShapeUtil.IsSelectionShape(selection))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape selectedShape in selection.ShapeRange)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape triggerShape \u003d CreateTooltip.GenerateTriggerShapeWithReferenceCallout(currentSlide, selectedShape);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertToTooltip.AddTriggerAnimation(currentSlide, triggerShape, selectedShape);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!this.GetApplication().CommandBars.GetPressedMso(TooltipsLabConstants.AnimationPaneName))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetApplication().CommandBars.ExecuteMso(TooltipsLabConstants.AnimationPaneName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorInformationDialog.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for ColorInformationDialog.xaml"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ColorInformationDialog : Window"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "      "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public ColorInformationDialog(System.Drawing.Color color)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            DataContext \u003d this;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            WindowStartupLocation \u003d WindowStartupLocation.CenterScreen;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            colorRectangle.Fill \u003d GraphicsUtil.MediaBrushFromDrawingColor(color);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            colorHexText.Text \u003d ((HSLColor)color).ToHexString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            colorRgbText.Text \u003d ((HSLColor)color).ToRGBString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            colorHslText.Text \u003d ((HSLColor)color).ToString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/ColorsLabPaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Threading;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.DataSources;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using Color \u003d System.Drawing.Color;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using Path \u003d System.IO.Path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for TimerLabPaneWPF.xaml"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ColorsLabPaneWPF : UserControl"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Functional Test API"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetApplyTextButtonLocationAsPoint()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Point locationFromWindow \u003d applyTextColorButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.X + applyTextColorButton.ActualWidth / 2, "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.Y + applyTextColorButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetApplyLineButtonLocationAsPoint()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            Point locationFromWindow \u003d applyLineColorButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.X + applyLineColorButton.ActualWidth / 2,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.Y + applyLineColorButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetApplyFillButtonLocationAsPoint()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Point locationFromWindow \u003d applyFillColorButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.X + applyFillColorButton.ActualWidth / 2,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.Y + applyFillColorButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetMainColorRectangleLocationAsPoint()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            Point locationFromWindow \u003d selectedColorRectangle.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.X + selectedColorRectangle.ActualWidth / 2,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.Y + selectedColorRectangle.ActualHeight / 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetEyeDropperButtonLocationAsPoint()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            Point locationFromWindow \u003d eyeDropperButton.TranslatePoint(new Point(0, 0), this);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            Point topLeftOfButton \u003d PointToScreen(locationFromWindow);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Point("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.X + eyeDropperButton.ActualWidth / 2,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                topLeftOfButton.Y + eyeDropperButton.ActualHeight / 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        public IList\u003cColor\u003e GetFavoriteColorsPanelAsList()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            IList\u003cHSLColor\u003e favoriteHslColors \u003d dataSource.GetListOfFavoriteColors();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            IList\u003cColor\u003e favoriteColors \u003d new List\u003cColor\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (HSLColor favoriteHslColor in favoriteHslColors)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                favoriteColors.Add(favoriteHslColor);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            return favoriteColors;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        public void LoadFavoriteColorsFromPath(string filePath)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.LoadFavoriteColorsFromFile(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        public IList\u003cColor\u003e GetRecentColorsPanelAsList()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            IList\u003cHSLColor\u003e recentHslColors \u003d dataSource.GetListOfRecentColors();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            IList\u003cColor\u003e recentColors \u003d new List\u003cColor\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (HSLColor recentHslColor in recentHslColors)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                recentColors.Add(recentHslColor);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            return recentColors;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clear the panel to all white color."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        public void EmptyRecentColorsPanel()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                if (this.GetCurrentSlide() !\u003d null)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    dataSource.ClearRecentColors();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Recent Colors Panel Reset Failed\", e.Message, e);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Private variables"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        // To set color mode"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        private enum MODE"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            FILL,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            LINE,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            FONT,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            MAIN,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            NONE"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        private MODE _eyedropperMode;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color _previousFillColor;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color _currentEyedroppedColor;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color _currentSelectedColor;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.ShapeRange _selectedShapes;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.TextRange _selectedText;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isEyedropperMode \u003d false;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _shouldAllowDrag \u003d false;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        // Data-bindings datasource"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        ColorDataSource dataSource \u003d new ColorDataSource();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        // Eyedropper-related"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        private const float MAGNIFICATION_FACTOR \u003d 2.5f;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        private Cursor eyeDropperCursor \u003d new Cursor(new MemoryStream(Properties.Resources.EyeDropper));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        private Magnifier magnifier \u003d new Magnifier(MAGNIFICATION_FACTOR);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private System.Windows.Threading.DispatcherTimer eyeDropperTimer \u003d new System.Windows.Threading.DispatcherTimer();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CLICK_THRESHOLD \u003d 2;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        private int timer1Ticks;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        // Saving color favorites"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        private string _defaultFavoriteColorDirectory \u003d System.IO.Path.Combine("
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs.defaultFavoriteColor.thm\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        private string _defaultRecentColorDirectory \u003d Path.Combine("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs.defaultRecentColor.thm\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructor"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        public ColorsLabPaneWPF()"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            // Set data context to data source for XAML to reference."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            DataContext \u003d dataSource;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            // Do not remove. Default generated code."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            // Setup code"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupImageSources();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupEyedropperTimer();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            SetDefaultColor(Color.CornflowerBlue);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            SetDefaultFavoriteColors();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            SetRecentColors();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            // Hook the mouse process if it has not"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            PPExtraEventHelper.PPMouse.TryStartHook();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Setup Code"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Function that handles the setting up of all the images in the pane."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupImageSources()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            textColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.TextColor_icon);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            lineColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.LineColor_icon);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            fillColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.FillColor_icon);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            eyeDropperIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.EyeDropper_icon);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            brightnessIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Brightness_icon_25x25);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            saturationIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Saturation_icon_18x18);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            saveColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Save_icon);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            loadColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Load_icon);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            reloadColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Reload_icon);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            clearColorIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Clear_icon);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Set default color upon startup."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"color\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetDefaultColor(Color color)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SelectedColor \u003d color;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Set default favorite colors for favourite colors panel."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetDefaultFavoriteColors()"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadDefaultFavoritePanel();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Load recent colors into the recent colors pane."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetRecentColors()"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadRecentColorsPanel();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Setup the timer tick handler."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupEyedropperTimer()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            this.eyeDropperTimer.Tick +\u003d new System.EventHandler(this.Timer1_Tick);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Event Handlers"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        #region ColorsLabPane Handlers"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This method handles the loaded ColorsLabPane."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorsLabPaneWPF_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Tools.CustomTaskPane colorsLabPane \u003d this.GetAddIn().GetActivePane(typeof(ColorsLabPane));"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            if (colorsLabPane \u003d\u003d null || !(colorsLabPane.Control is ColorsLabPane))"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Error: ColorsLabPane not opened.\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            ColorsLabPane colorsLab \u003d colorsLabPane.Control as ColorsLabPane;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add handler for closing of ColorsLab"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            colorsLab.HandleDestroyed +\u003d ColorsLab_Closing;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This handler is called when ColorsLab is destroyed, i.e. when PPTLabs closes."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Current colors in the panel are saved when this happens."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorsLab_Closing(Object sender, EventArgs e)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveDefaultColorPaneFavoriteColors();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveColorPaneRecentColors();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Button Handlers"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        /// On mouse down, init eyedropper mode."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ApplyColorButton_MouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionNone)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ColorsLabText.ErrorNoSelection, ColorsLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            CaptureMouse();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            SetEyedropperMode(((Button)sender).Name);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            BeginEyedropping();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetApplication().StartNewUndoEntry();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Slider Value Changed Handlers"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Updates selected color when brightness slider is moved."
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        private void BrightnessSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            double newBrightness \u003d e.NewValue;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            HSLColor newColor \u003d new HSLColor();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            newColor.Hue \u003d dataSource.SelectedColor.Hue;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            newColor.Saturation \u003d dataSource.SelectedColor.Saturation;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            newColor.Luminosity \u003d newBrightness;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SelectedColor \u003d newColor;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Updates selected color when saturation slider is moved."
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaturationSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            double newSaturation \u003d e.NewValue;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            HSLColor newColor \u003d new HSLColor();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            newColor.Hue \u003d dataSource.SelectedColor.Hue;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            newColor.Saturation \u003d newSaturation;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            newColor.Luminosity \u003d dataSource.SelectedColor.Luminosity;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SelectedColor \u003d newColor;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Color Rectangle Handlers"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Add MouseUp event to rectangle to simulate a click event."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SelectedColorRectangle_MouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            // We remove the MouseUp event first before adding it to ensure that at anytime there\u0027s only"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            // one listener for the MouseUp event."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.MouseUp +\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Opens up a Windows.Forms ColorDialog upon click of the selectedColor rectangle."
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SelectedColorRectangle_MouseUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.ColorDialog colorPickerDialog \u003d new System.Windows.Forms.ColorDialog();"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            colorPickerDialog.FullOpen \u003d true;"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            // Sets the initial color select to the current selected color."
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            colorPickerDialog.Color \u003d dataSource.SelectedColor;"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            // Update the selected color if the user clicks OK"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            if (colorPickerDialog.ShowDialog() \u003d\u003d System.Windows.Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                dataSource.SelectedColor \u003d colorPickerDialog.Color;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Handles drag-and-drop functionality for color rects that can be dragged to favourite colors."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DraggableColorRectangle_MouseMove(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rect !\u003d null \u0026\u0026 e.LeftButton \u003d\u003d MouseButtonState.Released)"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                _shouldAllowDrag \u003d true;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rect !\u003d null \u0026\u0026 e.LeftButton \u003d\u003d MouseButtonState.Pressed \u0026\u0026 _shouldAllowDrag)"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                    DragDrop.DoDragDrop(rect, rect.Fill.ToString(), DragDropEffects.Copy);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                } "
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (System.Runtime.InteropServices.COMException)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                    // This exception occurs when user tries to drag the color rect to a textbox/shape on the slide."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Due to lack of drag and drop support for some PowerPoint objects, exception will be thrown."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                    // When this is detected, to insert the data to the textbox instead."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                    // More info: https://social.msdn.microsoft.com/Forums/en-US/9925d6c7-e92f-40e7-9467-7b4e69174e9e/vsto-addin-gt-facing-problem-in-implementing-dragdrop-functionality-gt-need-help?forum\u003dvsto"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.Selection currSelection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (currSelection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes ||"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                        currSelection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                        currSelection.TextRange2.Text \u003d rect.Fill.ToString();"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                _shouldAllowDrag \u003d false;"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This function prevents user to begin the drag from outside the rectangle."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DraggableColorRectangle_MouseLeave(object sender, MouseEventArgs e)"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            _shouldAllowDrag \u003d false;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rect.Name \u003d\u003d \"selectedColorRectangle\")"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                rect.MouseUp -\u003d SelectedColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Adds a MouseUp listener to the sender object when it detects a MouseDown."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        /// The purpose of this is to simulate a click event on the Rectangle object."
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorRectangle_MouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            // We remove the MouseUp event first before adding it to ensure that at anytime there\u0027s only"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            // one listener for the MouseUp event."
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.MouseUp -\u003d ColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.MouseUp +\u003d ColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Change the selectedColor to the color of the matching color rect."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorRectangle_MouseUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.MouseUp -\u003d ColorRectangle_MouseUp;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Color selectedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SelectedColor \u003d new HSLColor(selectedColor);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FavoriteRect_DragEnter(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Media.Color prevMediaColor \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            _previousFillColor \u003d GraphicsUtil.DrawingColorFromMediaColor(prevMediaColor);"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rect !\u003d null)"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                // If the DataObject contains string data, extract it."
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                if (e.Data.GetDataPresent(DataFormats.StringFormat))"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                    string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                    // If the string can be converted into a Color, "
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                    // convert it and apply it to the rect."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                    ColorConverter converter \u003d new ColorConverter();"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (converter.IsValid(dataString))"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.Windows.Media.Color mediaColor \u003d (System.Windows.Media.Color)ColorConverter.ConvertFromString(dataString);"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        Color color \u003d GraphicsUtil.DrawingColorFromMediaColor(mediaColor);"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                        SetFavoriteColorRectangle(Grid.GetColumn(rect), color);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FavoriteRect_DragOver(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Effects \u003d DragDropEffects.None;"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            // If the DataObject contains string data, extract it."
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Data.GetDataPresent(DataFormats.StringFormat))"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                // If the string can be converted into a Brush, allow copying."
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                BrushConverter converter \u003d new BrushConverter();"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                if (converter.IsValid(dataString))"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Effects \u003d DragDropEffects.Copy | DragDropEffects.Move;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FavoriteRect_DragLeave(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rect !\u003d null)"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                SetFavoriteColorRectangle(Grid.GetColumn(rect), _previousFillColor);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Handles drag and drop functionality for favourtie color rectangles."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FavoriteRect_Drop(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isEyedropperMode)"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d (System.Windows.Shapes.Rectangle)sender;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rect !\u003d null)"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "                // If the DataObject contains string data, extract it."
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                if (e.Data.GetDataPresent(DataFormats.StringFormat))"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                    string dataString \u003d (string)e.Data.GetData(DataFormats.StringFormat);"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                    // If the string can be converted into a Color, "
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                    // convert it and apply it to the rect."
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                    ColorConverter converter \u003d new ColorConverter();"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (converter.IsValid(dataString))"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.Windows.Media.Color mediaColor \u003d (System.Windows.Media.Color)ColorConverter.ConvertFromString(dataString);"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                        Color color \u003d GraphicsUtil.DrawingColorFromMediaColor(mediaColor);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                        SetFavoriteColorRectangle(Grid.GetColumn(rect), color);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Eye Dropper Event Handlers"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Gets the mouse position and pixel color value every tick of the timer."
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Timer1_Tick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "            timer1Ticks++;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            // Force the magnifier to update"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifier.Show();"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Point mousePos \u003d System.Windows.Forms.Control.MousePosition;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            IntPtr deviceContext \u003d PPExtraEventHelper.Native.GetDC(IntPtr.Zero);"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            Color pickedColor \u003d System.Drawing.ColorTranslator.FromWin32(PPExtraEventHelper.Native.GetPixel(deviceContext, mousePos.X, mousePos.Y));"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "            // If button has not been held long enough to register as a drag, then don\u0027t pick a color."
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timer1Ticks \u003c CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.MAIN)"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                ColorMainColorRect(pickedColor);"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                _currentEyedroppedColor \u003d pickedColor;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                ColorSelectedShapesWithColor(pickedColor, _eyedropperMode);"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                _currentSelectedColor \u003d pickedColor;"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Handles the end of eye dropper mode."
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        void LeftMouseButtonUpEventHandler()"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "            PPExtraEventHelper.PPMouse.LeftButtonUp -\u003d LeftMouseButtonUpEventHandler;"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifier.Hide();"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "            eyeDropperTimer.Stop();"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            // Only change the actual datasource selectedColor at the end of eyedropping."
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.MAIN)"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedColorRectangle.Opacity \u003d 1;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if (timer1Ticks \u003e\u003d CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                    dataSource.SelectedColor \u003d _currentEyedroppedColor;"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "            // Update recent colors if color has been used"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.FILL || _eyedropperMode \u003d\u003d MODE.FONT || _eyedropperMode \u003d\u003d MODE.LINE)"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if (timer1Ticks \u003e\u003d CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                    dataSource.AddColorToRecentColors(_currentSelectedColor);"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            _isEyedropperMode \u003d false;"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            _eyedropperMode \u003d MODE.NONE;"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            Mouse.OverrideCursor \u003d null;"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            Mouse.Capture(null);"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timer1Ticks \u003c CLICK_THRESHOLD)"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "                Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Loaded, new Action(delegate"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(\"To use this button, click and drag to desired color.\", ColorsLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EyeDropperButton_PreviewMouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "            CaptureMouse();"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "            SetEyedropperMode(((Button)sender).Name);"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            BeginEyedropping();"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetApplication().StartNewUndoEntry();"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Favourite Colors Button Handlers"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Saves the current favorite panel as a custom favorite file."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.SaveFileDialog saveFileDialog \u003d new System.Windows.Forms.SaveFileDialog();"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "            saveFileDialog.DefaultExt \u003d \"thm\";"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            saveFileDialog.Filter \u003d \"PPTLabsFavorites|*.thm\";"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            saveFileDialog.Title \u003d \"Save Favorite\";"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.DialogResult result \u003d saveFileDialog.ShowDialog();"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK \u0026\u0026"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                dataSource.SaveFavoriteColorsInFile(saveFileDialog.FileName))"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                SaveDefaultColorPaneFavoriteColors();"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Loads a favorite panel from an existing favorite file."
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LoadColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.OpenFileDialog openFileDialog \u003d new System.Windows.Forms.OpenFileDialog();"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            openFileDialog.DefaultExt \u003d \"thm\";"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "            openFileDialog.Filter \u003d \"PPTLabsFavorite|*.thm\";"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            openFileDialog.Title \u003d \"Load Favorite\";"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Forms.DialogResult result \u003d openFileDialog.ShowDialog();"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003d\u003d System.Windows.Forms.DialogResult.OK \u0026\u0026"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                dataSource.LoadFavoriteColorsFromFile(openFileDialog.FileName))"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "                SaveDefaultColorPaneFavoriteColors();"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Reset to the last loaded favorite panel."
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ReloadColorButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "            ResetFavoritePanel();"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clears the current favorite panel, i.e. set all favourite colors to white."
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ClearColorButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "            EmptyFavoritePanel();"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Context Menu Handlers"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Color_Information_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            MenuItem menuItem \u003d sender as MenuItem;"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "            if (menuItem \u003d\u003d null)"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Color selectedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "            ColorInformationDialog dialog \u003d new ColorInformationDialog(selectedColor);"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.Show();"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Set_Main_Color_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "            MenuItem menuItem \u003d sender as MenuItem;"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            if (menuItem \u003d\u003d null)"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Color selectedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SelectedColor \u003d new HSLColor(selectedColor);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Add_Favorite_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            MenuItem menuItem \u003d sender as MenuItem;"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            if (menuItem \u003d\u003d null)"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect \u003d ((ContextMenu)(menuItem.Parent)).PlacementTarget as System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Media.Color color \u003d ((SolidColorBrush)rect.Fill).Color;"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            HSLColor clickedColor \u003d GraphicsUtil.DrawingColorFromMediaColor(color);"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.AddColorToFavorites(clickedColor);"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helpers"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Apply Colors (Text, Fill, Line)"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Color selected shapes with selected color, in the given mode."
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"selectedColor\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"colorMode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorSelectedShapesWithColor(HSLColor selectedColor, MODE colorMode)"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "            SelectShapes();"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedShapes !\u003d null"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (PowerPoint.Shape s in _selectedShapes)"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                    try"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                        Byte r \u003d ((Color)selectedColor).R;"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "                        Byte g \u003d ((Color)selectedColor).G;"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "                        Byte b \u003d ((Color)selectedColor).B;"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "                        int rgb \u003d (b \u003c\u003c 16) | (g \u003c\u003c 8) | (r);"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                        ColorShapeWithColor(s, rgb, colorMode);"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                    catch (Exception)"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "                        RecreateCorruptedShape(s);"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedText !\u003d null"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "                    Byte r \u003d ((Color)selectedColor).R;"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "                    Byte g \u003d ((Color)selectedColor).G;"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "                    Byte b \u003d ((Color)selectedColor).B;"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                    int rgb \u003d (b \u003c\u003c 16) | (g \u003c\u003c 8) | (r);"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                    ColorTextWithColor(_selectedText, rgb, colorMode);"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Retrieves selected shapes or text."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SelectShapes()"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection \u003d\u003d null)"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes \u0026\u0026"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "                    selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedShapes \u003d selection.ChildShapeRange;"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedText \u003d selection.TextRange;"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedShapes \u003d null;"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                    _selectedText \u003d null;"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedShapes \u003d null;"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                _selectedText \u003d null;"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Colors specified text range with given color."
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"text\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorTextWithColor(PowerPoint.TextRange text, int rgb, MODE mode)"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.TextFrame frame \u003d text.Parent as PowerPoint.TextFrame;"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape selectedShape \u003d frame.Parent as PowerPoint.Shape;"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            if (mode !\u003d MODE.NONE)"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "                ColorShapeWithColor(selectedShape, rgb, mode);"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Colors specified shape with color, in the given mode."
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorShapeWithColor(PowerPoint.Shape s, int rgb, MODE mode)"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (mode)"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                case MODE.FILL:"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "                    s.Fill.ForeColor.RGB \u003d rgb;"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "                case MODE.LINE:"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "                    s.Line.ForeColor.RGB \u003d rgb;"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "                    s.Line.Visible \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "                case MODE.FONT:"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "                    ColorShapeFontWithColor(s, rgb);"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Colors specified shape with color."
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"rgb\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorShapeFontWithColor(PowerPoint.Shape s, int rgb)"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "            if (s.HasTextFrame \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection \u003d\u003d null)"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.ShapeRange.HasTextFrame \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.TextRange selectedText \u003d selection.TextRange.TrimText();"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (selectedText.Text !\u003d \"\" \u0026\u0026 selectedText !\u003d null)"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "                            selectedText.Font.Color.RGB \u003d rgb;"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "                            s.TextFrame.TextRange.TrimText().Font.Color.RGB \u003d rgb;"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                    else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                        s.TextFrame.TextRange.TrimText().Font.Color.RGB \u003d rgb;"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Recreates any specified corrupted shape."
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"s\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RecreateCorruptedShape(PowerPoint.Shape s)"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "            s.Copy();"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape newShape \u003d this.GetCurrentSlide().Shapes.Paste()[1];"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Select();"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Name \u003d s.Name;"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Left \u003d s.Left;"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Top \u003d s.Top;"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "            while (newShape.ZOrderPosition \u003e s.ZOrderPosition)"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "            s.Delete();"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Retrieves color of the selected shape(s)."
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color GetSelectedShapeColor(MODE mode)"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "            SelectShapes();"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_selectedShapes \u003d\u003d null \u0026\u0026 _selectedText \u003d\u003d null)"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                return dataSource.SelectedColor;"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                return GetSelectedShapeColor(_selectedShapes, mode);"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.TextFrame frame \u003d _selectedText.Parent as PowerPoint.TextFrame;"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape selectedShape \u003d frame.Parent as PowerPoint.Shape;"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "                return GetSelectedShapeColor(selectedShape, mode);"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "            return dataSource.SelectedColor;"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Retrieves color of the selected shapeRange, "
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        /// returning Black if shapeRange contains shapes with different colors."
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"selectedShapes\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color GetSelectedShapeColor(PowerPoint.ShapeRange selectedShapes, MODE mode)"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "            Color colorToReturn \u003d Color.Empty;"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (object selectedShape in selectedShapes)"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                Color color \u003d GetSelectedShapeColor(selectedShape as PowerPoint.Shape, mode);"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                if (colorToReturn.Equals(Color.Empty))"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "                    colorToReturn \u003d color;"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (!colorToReturn.Equals(color))"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "                    return Color.Black;"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "            return colorToReturn;"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Retrieves color of the selected shape."
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"selectedShape\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"mode\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color GetSelectedShapeColor(PowerPoint.Shape selectedShape, MODE mode)"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (mode)"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                case MODE.FILL:"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                    return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedShape.Fill.ForeColor.RGB));"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                case MODE.LINE:"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                    return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedShape.Line.ForeColor.RGB));"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                case MODE.FONT:"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (selectedShape.HasTextFrame \u003d\u003d MsoTriState.msoTrue"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 this.GetApplication().ActiveWindow.Selection.ShapeRange.HasTextFrame"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionText)"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                            PowerPoint.TextRange selectedText"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "                                \u003d this.GetApplication().ActiveWindow.Selection.TextRange.TrimText();"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "                            if (selectedText !\u003d null \u0026\u0026 selectedText.Text !\u003d \"\")"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                            {"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "                                return Color.FromArgb(ColorHelper.ReverseRGBToArgb(selectedText.Font.Color.RGB));"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                            else"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                            {"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "                                return"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "                                Color.FromArgb("
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "                                    ColorHelper.ReverseRGBToArgb(selectedShape.TextFrame.TextRange.Font.Color.RGB));"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                        else if (this.GetCurrentSelection().Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                            return"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                                Color.FromArgb("
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                                    ColorHelper.ReverseRGBToArgb(selectedShape.TextFrame.TextRange.Font.Color.RGB));"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "            return dataSource.SelectedColor;"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Eye Dropper"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Sets the eyedropper mode given the name of the rectangle."
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"rectName\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetEyedropperMode(string rectName)"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (rectName)"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"applyTextColorButton\":"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "                    _eyedropperMode \u003d MODE.FONT;"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"applyLineColorButton\":"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "                    _eyedropperMode \u003d MODE.LINE;"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"applyFillColorButton\":"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                    _eyedropperMode \u003d MODE.FILL;"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"eyeDropperButton\":"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                    _eyedropperMode \u003d MODE.MAIN;"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "                    _eyedropperMode \u003d MODE.NONE;"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Show magnifier and begin eye dropping."
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "        private void BeginEyedropping()"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "            _isEyedropperMode \u003d true;"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "            timer1Ticks \u003d 0;"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "            eyeDropperTimer.Start();"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "            Mouse.OverrideCursor \u003d eyeDropperCursor;"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "            PPExtraEventHelper.PPMouse.LeftButtonUp +\u003d LeftMouseButtonUpEventHandler;"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifier.Show();"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_eyedropperMode \u003d\u003d MODE.MAIN)"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                eyeDropperPreviewRectangle.Fill \u003d selectedColorRectangle.Fill;"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedColorRectangle.Opacity \u003d 0;"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorMainColorRect(Color color)"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            eyeDropperPreviewRectangle.Fill \u003d GraphicsUtil.MediaBrushFromDrawingColor(color);"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Favourite Colors"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Load default panel from default file, or clear the panel if unsuccessful."
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LoadDefaultFavoritePanel()"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isSuccessful \u003d dataSource.LoadFavoriteColorsFromFile(_defaultFavoriteColorDirectory);"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isSuccessful)"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "                EmptyFavoritePanel();"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Reset panel to the last loaded favorite panel."
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ResetFavoritePanel()"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "                LoadDefaultFavoritePanel();"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Favorite Panel Reset Failed\", e.Message, e);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clear the panel to all white color."
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EmptyFavoritePanel()"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                if (this.GetCurrentSlide() !\u003d null)"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "                    dataSource.ClearFavoriteColors();"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(\"Favorite Panel Reset Failed\", e.Message, e);"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Set the color rect given the name of the rect, and the color to set."
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"name\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"color\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetFavoriteColorRectangle(int column, Color color)"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SetFavoriteColor(column, color);"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Save current panel as default favorite color."
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveDefaultColorPaneFavoriteColors()"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SaveFavoriteColorsInFile(_defaultFavoriteColorDirectory);"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Recent Colors"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Save current recent colors panel to file."
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveColorPaneRecentColors()"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "            dataSource.SaveRecentColorsInFile(_defaultRecentColorDirectory);"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Load recent panel from file, or clear the panel if unsuccessful."
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LoadRecentColorsPanel()"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isSuccessful \u003d dataSource.LoadRecentColorsFromFile(_defaultRecentColorDirectory);"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isSuccessful)"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                EmptyRecentColorsPanel();"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1214,
      "yuhongherald": 33
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ColorsLab/Magnifier.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.InteropServices;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ColorsLab"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for Magnifier.xaml"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class Magnifier : Window"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private MagnifierOverlay magnifierOverlay;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private MagnificationControlHost magnificationControl;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private System.Windows.Threading.DispatcherTimer timer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private IntPtr hwndMag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isMagInitialized;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cIntPtr\u003e magFilteredWindows;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private float magnificationFactor;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private Size actualHalfSize;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private Size sourceRectSize;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private Size sourceRectHalfSize;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public Magnifier(float magnificationFactor)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            timer \u003d new System.Windows.Threading.DispatcherTimer();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            timer.Interval \u003d new TimeSpan(0, 0, 0, 0, 100);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Tick +\u003d new EventHandler(Timer_Tick);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay \u003d new MagnifierOverlay();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Loaded +\u003d MagnifierOverlay_Loaded;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            isMagInitialized \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            this.magnificationFactor \u003d magnificationFactor;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Magnification HwndHost Win32 Interop"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        private class MagnificationControlHost : HwndHost"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            internal const string WC_MAGNIFIER \u003d \"Magnifier\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            private IntPtr hwndHost;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            private int hostWidth, hostHeight;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            public MagnificationControlHost(double width, double height)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                hostWidth \u003d (int)(width * Utils.GraphicsUtil.GetDpiScale());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                hostHeight \u003d (int)(height * Utils.GraphicsUtil.GetDpiScale());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            protected override HandleRef BuildWindowCore(HandleRef hwndParent)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                hwndHost \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                // Make window click-through"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                int extendedStyle \u003d Native.GetWindowLong(hwndParent.Handle, (int)Native.WindowLong.GWL_EXSTYLE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetWindowLong(hwndParent.Handle, (int)Native.WindowLong.GWL_EXSTYLE,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                                    extendedStyle |"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (int)Native.ExtendedWindowStyles.WS_EX_TRANSPARENT |"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (int)Native.ExtendedWindowStyles.WS_EX_LAYERED |"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                                    (int)Native.ExtendedWindowStyles.WS_EX_TOOLWINDOW);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetWindowLong(hwndParent.Handle, (int)Native.WindowLong.GWL_STYLE, (int)Native.WindowStyles.WS_POPUP);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                // Must be transparent for Magnification to work"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetLayeredWindowAttributes(hwndParent.Handle, 0, 255, Native.LayeredWindowAttributeFlags.LWA_ALPHA);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                // Create Magnification control host"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                hwndHost \u003d Native.CreateWindowEx(0, WC_MAGNIFIER, \"MagnificationControl\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (int)Native.WindowStyles.WS_CHILD |"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (int)Native.WindowStyles.WS_VISIBLE |"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                                                (int)Native.MagnifierStyle.MS_CLIPAROUNDCURSOR,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                                                0, 0,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hostWidth, hostHeight,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hwndParent.Handle,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                                                IntPtr.Zero, "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                                                IntPtr.Zero, "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                                                0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                // Clip window into ellipse"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr ellipseRegion \u003d Native.CreateRoundRectRgn(0, 0,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hostWidth, hostHeight,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                                                hostWidth, hostHeight);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetWindowRgn(hwndHost, ellipseRegion, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                return new HandleRef(this, hwndHost);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            protected override IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                handled \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                return IntPtr.Zero;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            protected override void DestroyWindowCore(HandleRef hwnd)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.DestroyWindow(hwnd.Handle);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            public IntPtr HwndControl"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                get { return hwndHost; }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            public int HostWidth"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                get { return hostWidth; }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            public int HostHeight"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                get { return hostHeight; }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Public API"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        public new void Show()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isMagInitialized)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateMagnifier();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                timer.Start();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                magnifierOverlay.Visibility \u003d Visibility;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        public new void Hide()"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Stop();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Visibility \u003d Visibility;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Handled events"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Window_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                // Magnification is disabled on some environments"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsMagnificationApiAvailable())"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                    isMagInitialized \u003d Native.MagInitialize();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isMagInitialized)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                    SetupMagnifier();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception exception)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                // Windows XP does not support Magnifier"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(exception, \"Magnifier_Window_Loaded\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                TeardownMagnifier();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                isMagInitialized \u003d false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                // Hide after initializing UI"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                Hide();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MagnifierOverlay_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            IntPtr overlayHwnd \u003d new WindowInteropHelper(magnifierOverlay).Handle;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            AddMagnifierFilteredWindow(overlayHwnd);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Window_Unloaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            TeardownMagnifier();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Timer_Tick(object sender, EventArgs e)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMagnifier();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Magnifier methods"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupMagnifier()"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            magFilteredWindows \u003d new List\u003cIntPtr\u003e();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            magnificationControl \u003d new MagnificationControlHost(Width, Height);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            MagnificationHostElement.Child \u003d magnificationControl;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            hwndMag \u003d magnificationControl.HwndControl;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hwndMag \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                string errorMsg \u003d \"Create MagnifierWindow failed. Insufficient heap or handle table entries.\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new OutOfMemoryException(errorMsg);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            // Calculate dimensions once"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            actualHalfSize.Width \u003d ActualWidth / 2;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            actualHalfSize.Height \u003d ActualHeight / 2;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectSize.Width \u003d magnificationControl.HostWidth / magnificationFactor;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectSize.Height \u003d magnificationControl.HostHeight / magnificationFactor;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectHalfSize.Width \u003d sourceRectSize.Width / 2;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRectHalfSize.Height \u003d sourceRectSize.Height / 2;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            // Set the magnification factor"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MAGTRANSFORM magTransformMatrix \u003d new Native.MAGTRANSFORM();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            magTransformMatrix.m00 \u003d magnificationFactor;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            magTransformMatrix.m11 \u003d magnificationFactor;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            magTransformMatrix.m22 \u003d 1.0f;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MagSetWindowTransform(hwndMag, ref magTransformMatrix);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddMagnifierFilteredWindow(IntPtr handle)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            magFilteredWindows.Add(handle);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MagSetWindowFilterList(hwndMag, (int)Native.MagnifierFilterMode.MW_FILTERMODE_EXCLUDE,"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                                          magFilteredWindows.Count, magFilteredWindows.ToArray());"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TeardownMagnifier()"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isMagInitialized)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.MagUninitialize();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMagnifier()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Point mousePosition \u003d System.Windows.Forms.Control.MousePosition;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            // Set the source rectangle for the magnification"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.RECT sourceRect \u003d new Native.RECT();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Left \u003d mousePosition.X - (int)sourceRectHalfSize.Width;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Top \u003d mousePosition.Y - (int)sourceRectHalfSize.Height;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Right \u003d sourceRect.Left + (int)sourceRectSize.Width;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            sourceRect.Bottom \u003d sourceRect.Top + (int)sourceRectSize.Height;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.MagSetWindowSource(hwndMag, sourceRect);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            // Force magnification redraw"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.InvalidateRect(hwndMag, IntPtr.Zero, true);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            // Update position, WPF units are affected by monitor\u0027s DPI"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            Left \u003d (mousePosition.X / Utils.GraphicsUtil.GetDpiScale()) - actualHalfSize.Width;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            Top \u003d (mousePosition.Y / Utils.GraphicsUtil.GetDpiScale()) - actualHalfSize.Height;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Left \u003d Left;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            magnifierOverlay.Top \u003d Top;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper methods"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsMagnificationApiAvailable()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            // Magnification API has a bug with window handle sign-extension"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            // on Windows 7 64-bit with 32-bit applications (i.e. Win7 WoW64)"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsOSWindows7() \u0026\u0026"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                Environment.Is64BitOperatingSystem \u0026\u0026"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                !Environment.Is64BitProcess)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsOSWindows7()"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            // Major and minor version"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            return Environment.OSVersion.Platform \u003d\u003d PlatformID.Win32NT \u0026\u0026"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                    Environment.OSVersion.Version.Major \u003d\u003d 6 \u0026\u0026"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                    Environment.OSVersion.Version.Minor \u003d\u003d 1;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 293,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/DataSources/ColorDataSource.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.ComponentModel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Serialization.Formatters.Binary;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.DataSources"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    class ColorDataSource : INotifyPropertyChanged"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public IList\u003cHSLColor\u003e RecentColors"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                return recentColors;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public IList\u003cHSLColor\u003e FavoriteColors"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                return favoriteColors;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly string[] recentColorFieldNames \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorOne\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorTwo\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorThree\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorFour\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorFive\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorSix\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorSeven\","
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorEight\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorNine\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorTen\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorEleven\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \"RecentColorTwelve\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly string[] favoriteColorFieldNames \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorOne\","
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorTwo\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorThree\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorFour\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorFive\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorSix\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorSeven\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorEight\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorNine\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorTen\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorEleven\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \"favoriteColorTwelve\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cHSLColor\u003e recentColors;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cHSLColor\u003e favoriteColors;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Properties"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        private HSLColor selectedColorValue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        public HSLColor SelectedColor"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {       "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                return selectedColorValue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value !\u003d selectedColorValue)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    selectedColorValue \u003d value;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(\"selectedColor\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        public ColorDataSource()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            recentColors \u003d new ObservableCollection\u003cHSLColor\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            favoriteColors \u003d new ObservableCollection\u003cHSLColor\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            recentColors.CollectionChanged +\u003d RecentColors_CollectionChanged;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            favoriteColors.CollectionChanged +\u003d FavoriteColors_CollectionChanged;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            ClearRecentColors();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            ClearFavoriteColors();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddColorToRecentColors(HSLColor color)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d recentColors.IndexOf(color);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d recentColors.Count - 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d index; i \u003e 0; i--)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                recentColors[i] \u003d recentColors[i - 1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            recentColors[0] \u003d color;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddColorToFavorites(HSLColor color)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d favoriteColors.Count - 1; i \u003e 0; i--)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                favoriteColors[i] \u003d favoriteColors[i - 1];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            favoriteColors[0] \u003d color;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClearRecentColors()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            recentColors.Clear();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c recentColorFieldNames.Length; i++)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                recentColors.Add(Color.White);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClearFavoriteColors()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            favoriteColors.Clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c favoriteColorFieldNames.Length; i++)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                favoriteColors.Add(Color.White);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableCollection\u003cHSLColor\u003e GetListOfRecentColors()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            return recentColors;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableCollection\u003cHSLColor\u003e GetListOfFavoriteColors()"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            return favoriteColors;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetRecentColor(int index, HSLColor color)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003e\u003d recentColors.Count)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            recentColors[index] \u003d color;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetFavoriteColor(int index, HSLColor color)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003e\u003d favoriteColors.Count)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            favoriteColors[index] \u003d color;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Save/Load Colors"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool SaveRecentColorsInFile(string filePath)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                Stream fileStream \u003d File.Create(filePath);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                BinaryFormatter serializer \u003d new BinaryFormatter();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                HSLColor[] colors \u003d new HSLColor[recentColors.Count];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                recentColors.CopyTo(colors, 0);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cHSLColor\u003e colorList \u003d new List\u003cHSLColor\u003e(colors);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                serializer.Serialize(fileStream, colorList);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                fileStream.Close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool LoadRecentColorsFromFile(string filePath)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                Stream openFileStream \u003d File.OpenRead(filePath);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                BinaryFormatter deserializer \u003d new BinaryFormatter();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cHSLColor\u003e newRecentColors \u003d (List\u003cHSLColor\u003e)deserializer.Deserialize(openFileStream);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                openFileStream.Close();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                recentColors.Clear();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (HSLColor recentColor in newRecentColors)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                    recentColors.Add(recentColor);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool SaveFavoriteColorsInFile(String filePath)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                Stream fileStream \u003d File.Create(filePath);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                BinaryFormatter serializer \u003d new BinaryFormatter();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                HSLColor[] colors \u003d new HSLColor[favoriteColors.Count];"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                favoriteColors.CopyTo(colors, 0);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cHSLColor\u003e colorList \u003d new List\u003cHSLColor\u003e(colors);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                serializer.Serialize(fileStream, colorList);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                fileStream.Close();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool LoadFavoriteColorsFromFile(string filePath)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                Stream openFileStream \u003d File.OpenRead(filePath);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                BinaryFormatter deserializer \u003d new BinaryFormatter();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cHSLColor\u003e newFavoriteColors \u003d (List\u003cHSLColor\u003e)deserializer.Deserialize(openFileStream);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                openFileStream.Close();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                favoriteColors.Clear();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (HSLColor favoriteColor in newFavoriteColors)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                    favoriteColors.Add(favoriteColor);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        #region EventHandlers"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        public event PropertyChangedEventHandler PropertyChanged;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        // This method is called by the Set accessor of each property. "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        // The CallerMemberName attribute that is applied to the optional propertyName "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        // parameter causes the property name of the caller to be substituted as an argument. "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        // Create the OnPropertyChanged method to raise the event"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void RecentColors_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Collections.IList newValues \u003d e.NewItems;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (newValues?.Count ?? 0)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                case 0:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                    string name \u003d recentColorFieldNames[e.NewStartingIndex];"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (string fieldName in recentColorFieldNames)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(fieldName));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void FavoriteColors_CollectionChanged(object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Collections.IList newValues \u003d e.NewItems;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (newValues?.Count ?? 0)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                case 0:"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                    string name \u003d favoriteColorFieldNames[e.NewStartingIndex];"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                    PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (string fieldName in favoriteColorFieldNames)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(fieldName));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 312,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/AzureAccount.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AzureAccount"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        private static AzureAccount instance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        private string key;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        private string endpoint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public static AzureAccount GetInstance()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instance \u003d\u003d null)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                instance \u003d new AzureAccount();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            return instance;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private AzureAccount()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            key \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            endpoint \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetUserKeyAndRegion(string key, string endpoint)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            this.key \u003d key;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            this.endpoint \u003d endpoint;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetKey()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            return key;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetRegion()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return endpoint;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetUri()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!string.IsNullOrEmpty(endpoint))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return EndpointToUriConverter.azureEndpointToUriMapping[endpoint];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsEmpty()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return key \u003d\u003d null || endpoint \u003d\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Clear()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            key \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            endpoint \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 59,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/AzureVoice.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AzureVoice: IVoice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public Gender voiceType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public Locale locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public string voiceName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public AzureVoiceType Voice { get; set; }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        public string Locale"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                return AzureLocaleToStringConverter.localeMapping[locale];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string VoiceName"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                return Voice.ToString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string DEFAULTNAMESPACE \u003d \"Microsoft Server Speech Text to Speech Voice \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string LEFTBRACKET \u003d \"(\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string RIGHTBRACKET \u003d \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string COMMA \u003d \",\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string SPACE \u003d \" \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public AzureVoice(Gender gender, Locale locale, AzureVoiceType voice)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            voiceType \u003d gender;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            this.locale \u003d locale;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Voice \u003d voice;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            voiceName \u003d DEFAULTNAMESPACE + LEFTBRACKET + "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureLocaleToStringConverter.localeMapping[locale] + COMMA + SPACE + voice + RIGHTBRACKET;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Rank \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string ToString()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return Voice.ToString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public override object Clone()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureVoice voice \u003d new AzureVoice(voiceType, locale, Voice);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            voice.Rank \u003d Rank;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return voice;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 52,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/AzureVoiceList.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class AzureVoiceList"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public static ObservableCollection\u003cAzureVoice\u003e voices \u003d new ObservableCollection\u003cAzureVoice\u003e()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            new AzureVoice(Gender.Female, Locale.enUS, AzureVoiceType.ZiraRUS),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            new AzureVoice(Gender.Female, Locale.enUS, AzureVoiceType.JessaRUS),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            new AzureVoice(Gender.Male, Locale.enUS, AzureVoiceType.BenjaminRUS),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            new AzureVoice(Gender.Female, Locale.enUS, AzureVoiceType.Jessa24kRUS),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            new AzureVoice(Gender.Male, Locale.enUS, AzureVoiceType.Guy24kRUS)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/Enums/AudioOutputFormat.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum AudioOutputFormat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        Raw8Khz8BitMonoMULaw,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        Raw16Khz16BitMonoPcm,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        Riff8Khz8BitMonoMULaw,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        Riff16Khz16BitMonoPcm,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        Ssml16Khz16BitMonoSilk,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        Raw16Khz16BitMonoTrueSilk,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        Ssml16Khz16BitMonoTts,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio16Khz128KBitRateMonoMp3,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio16Khz64KBitRateMonoMp3,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio16Khz32KBitRateMonoMp3,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio16Khz16KbpsMonoSiren,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        Riff16Khz16KbpsMonoSiren,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Raw24Khz16BitMonoTrueSilk,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Raw24Khz16BitMonoPcm,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        Riff24Khz16BitMonoPcm,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio24Khz48KBitRateMonoMp3,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio24Khz96KBitRateMonoMp3,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Audio24Khz160KBitRateMonoMp3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/Enums/Gender.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum Gender"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        Female,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        Male"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/Enums/Locale.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum Locale"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        enUS"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/AzureVoiceGenerator/Model/Enums/Voice.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum AzureVoiceType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        ZiraRUS,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        JessaRUS,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        BenjaminRUS,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        Jessa24kRUS,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        Guy24kRUS"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/ComputerVoiceGenerator/ComputerVoiceSpeechEngine/TextToSpeech.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Speech.Synthesis;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    static class TextToSpeech"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IEnumerable\u003cstring\u003e GetVoices()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            using (SpeechSynthesizer synthesizer \u003d new SpeechSynthesizer())"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Collections.ObjectModel.ReadOnlyCollection\u003cInstalledVoice\u003e installedVoices \u003d synthesizer.GetInstalledVoices();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                IEnumerable\u003cInstalledVoice\u003e voices \u003d installedVoices.Where(voice \u003d\u003e voice.Enabled);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                return voices.Select(voice \u003d\u003e voice.VoiceInfo.Name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SaveStringToWaveFiles(string notesText, string folderPath, string fileNameFormat)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            TaggedText taggedNotes \u003d new TaggedText(notesText);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e stringsToSave \u003d taggedNotes.SplitByClicks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            //MD5 md5 \u003d MD5.Create();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c stringsToSave.Count; i++)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                string textToSave \u003d stringsToSave[i];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                string baseFileName \u003d string.Format(fileNameFormat, i + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                // The first item will autoplay; everything else is triggered by a click."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                string fileName \u003d i \u003e 0 ? baseFileName + \" (OnClick)\" : baseFileName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                string filePath \u003d folderPath + \"\\\\\" + fileName + \".wav\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                switch (AudioSettingService.selectedVoiceType)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                    case VoiceType.ComputerVoice:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                        ComputerVoiceRuntimeService.SaveStringToWaveFile(textToSave, filePath,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                            AudioSettingService.selectedVoice as ComputerVoice);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    case VoiceType.AzureVoice:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        AzureRuntimeService.SaveStringToWaveFileWithAzureVoice(textToSave, filePath, "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                            AudioSettingService.selectedVoice as AzureVoice);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                    case VoiceType.WatsonVoice:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                        WatsonRuntimeService.SaveStringToWaveFile(textToSave, filePath,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                            AudioSettingService.selectedVoice as WatsonVoice);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 56,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/ComputerVoiceGenerator/Model/ComputerVoice.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ComputerVoice: IVoice"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public string Voice { get; set; }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string VoiceName"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                return Voice;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public ComputerVoice(string voiceName)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            Voice \u003d voiceName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            Rank \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string ToString()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return Voice;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool Equals(object obj)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            if (obj \u003d\u003d null || !(obj is ComputerVoice))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            return ((ComputerVoice)obj).Voice \u003d\u003d Voice;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public override int GetHashCode()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return EqualityComparer\u003cstring\u003e.Default.GetHashCode(Voice);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public override object Clone()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            ComputerVoice voice \u003d new ComputerVoice(Voice);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            voice.Rank \u003d Rank;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            return voice;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/VoiceType.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum VoiceType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        AzureVoice,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        ComputerVoice,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        WatsonVoice,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        DefaultVoice"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/BaseModel.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Newtonsoft.Json;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public class BaseModel"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Custom data object including custom request headers, response headers and response json."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonIgnore]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public Dictionary\u003cstring, object\u003e CustomData"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                return _customData \u003d\u003d null ? new Dictionary\u003cstring, object\u003e() : _customData;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                _customData \u003d value;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private Dictionary\u003cstring, object\u003e _customData;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Gets custom request headers."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonIgnore]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public Dictionary\u003cstring, string\u003e CustomRequestHeaders"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                return CustomData.ContainsKey(Constants.CUSTOM_REQUEST_HEADERS) ? CustomData[Constants.CUSTOM_REQUEST_HEADERS] as Dictionary\u003cstring, string\u003e : null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Gets response headers."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonIgnore]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public Dictionary\u003cstring, string\u003e ResponseHeaders"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                return CustomData.ContainsKey(Constants.RESPONSE_HEADERS) ? CustomData[Constants.RESPONSE_HEADERS] as Dictionary\u003cstring, string\u003e : null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Gets the response json."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonIgnore]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ResponseJson"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                return CustomData.ContainsKey(Constants.JSON) ? CustomData[Constants.JSON] as string : null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 60,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/Constants.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class Constants"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        /// The version number for this SDK build. Added to the header in "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        /// each request as `User-Agent`."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string SDK_VERSION \u003d \"watson-apis-dotnet-sdk-2.16.0\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        /// A constant used to access custom request headers in the dynamic"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        /// customData object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string CUSTOM_REQUEST_HEADERS \u003d \"custom_request_headers\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        /// A constant used to access response headers in the dynamic"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        /// customData object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string RESPONSE_HEADERS \u003d \"response_headers\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        /// A constnat used to access response json in the dynamic customData"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        /// object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly string JSON \u003d \"json\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/Enums/WatsonVoiceType.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum WatsonVoiceType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        AllisonVoice,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        LisaVoice,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        MichaelVoice"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/IamTokenData.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using Newtonsoft.Json;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public class IamTokenData"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonProperty(\"access_token\", NullValueHandling \u003d NullValueHandling.Ignore)]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        public string AccessToken { get; set; }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonProperty(\"refresh_token\", NullValueHandling \u003d NullValueHandling.Ignore)]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public string RefreshToken { get; set; }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonProperty(\"token_type\", NullValueHandling \u003d NullValueHandling.Ignore)]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public string TokenType { get; set; }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonProperty(\"expires_in\", NullValueHandling \u003d NullValueHandling.Ignore)]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public long? ExpiresIn { get; set; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonProperty(\"expiration\", NullValueHandling \u003d NullValueHandling.Ignore)]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public long? Expiration { get; set; }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/Text.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Newtonsoft.Json;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public class Text : BaseModel"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        /// The text to synthesize."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        [JsonProperty(\"text\", NullValueHandling \u003d NullValueHandling.Ignore)]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public string _Text { get; set; }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/TokenOptions.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class TokenOptions"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        private string iamApiKey;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        private string serviceUrl;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public string IamApiKey"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return iamApiKey; }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                iamApiKey \u003d value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public string IamAccessToken { get; set; }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ServiceUrl"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return serviceUrl; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                serviceUrl \u003d value;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public string IamUrl { get; set; }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 29,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/WatsonAccount.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator.WatsonVoiceGenerator.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class WatsonAccount"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        private static WatsonAccount instance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        private string key;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        private string region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public static WatsonAccount GetInstance()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            if (instance \u003d\u003d null)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                instance \u003d new WatsonAccount();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            return instance;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private WatsonAccount()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            key \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            region \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetUserKeyAndRegion(string key, string region)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            this.key \u003d key;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            this.region \u003d region;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetKey()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            return key;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetRegion()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return region;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetEndpoint()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            return EndpointToUriConverter.watsonRegionToEndpointMapping[region];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsEmpty()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            return key \u003d\u003d null || region \u003d\u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Clear()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            key \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            region \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 55,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/Model/WatsonVoice.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class WatsonVoice: IVoice"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string VoiceName"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                return Voice.ToString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public WatsonVoiceType Voice { get; private set; }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public WatsonVoice(WatsonVoiceType voice)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            Voice \u003d voice;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public override object Clone()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            WatsonVoice voice \u003d new WatsonVoice(Voice);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            voice.Rank \u003d Rank;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return voice;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public override string ToString()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            return Voice.ToString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 30,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioGenerator/WatsonVoiceGenerator/SpeechEngine/WatsonRequest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Net.Http;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Net.Http.Formatting;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Threading.Tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Extensions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public class Request"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public HttpRequestMessage Message { get; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public MediaTypeFormatterCollection Formatters { get; }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Lazy\u003cTask\u003cHttpResponseMessage\u003e\u003e dispatch;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public Request(HttpRequestMessage message, MediaTypeFormatterCollection formatters, Func\u003cRequest, Task\u003cHttpResponseMessage\u003e\u003e dispatcher)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            Message \u003d message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            Formatters \u003d formatters;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            dispatch \u003d new Lazy\u003cTask\u003cHttpResponseMessage\u003e\u003e(() \u003d\u003e dispatcher(this));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public Request WithArgument(string key, string value)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Message.RequestUri \u003d Message.RequestUri.WithArguments(new KeyValuePair\u003cstring, object\u003e(key, value));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public Request WithBody\u003cT\u003e(T text)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            string mediaType \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Message.Content \u003d new ObjectContent\u003cT\u003e(text,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "               Formatters.FirstOrDefault(), mediaType);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public Request WithBodyContent(HttpContent body)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            Message.Content \u003d body;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public Request WithHeader(string key, string value)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            if (key \u003d\u003d \"Accept\" \u0026\u0026 value.StartsWith(\"audio/\", StringComparison.OrdinalIgnoreCase))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                Message.Headers.Accept.Clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            Message.Headers.TryAddWithoutValidation(key, value);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public async Task\u003cHttpResponseMessage\u003e AsMessage()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return await this.GetResponse(this.dispatch.Value).ConfigureAwait(false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public async Task\u003cbyte[]\u003e AsByteArray()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            HttpResponseMessage message \u003d await this.AsMessage().ConfigureAwait(false);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            return await message.Content.ReadAsByteArrayAsync().ConfigureAwait(false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public async Task\u003cT\u003e As\u003cT\u003e()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            HttpResponseMessage message \u003d await this.AsMessage().ConfigureAwait(false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            return await message.Content.ReadAsAsync\u003cT\u003e(this.Formatters).ConfigureAwait(false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        private async Task\u003cHttpResponseMessage\u003e GetResponse(Task\u003cHttpResponseMessage\u003e request)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {           "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                HttpResponseMessage response \u003d await request.ConfigureAwait(false);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                return response;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (HttpRequestException e)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"GetResponse: \" + e.InnerException.Message);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 85,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/AudioSettings/Model/Enums/AudioSettingsPage.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum AudioSettingsPage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        /// The initial main page"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        MainSettingsPage \u003d 0,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        AzureLoginPage \u003d 1,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        AudioPreviewPage \u003d 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Converters/AudioGeneratorConverters/AzureLocaleToStringConverter.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class AzureLocaleToStringConverter"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Dictionary\u003cLocale, string\u003e localeMapping \u003d new Dictionary\u003cLocale, string\u003e()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            {Locale.enUS, \"en-US\"}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Converters/AudioGeneratorConverters/EndpointToUriConverter.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.AudioGenerator"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class EndpointToUriConverter"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Dictionary\u003cstring, string\u003e azureRegionToEndpointMapping \u003d new Dictionary\u003cstring, string\u003e()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            {\"West US\", \"https://westus.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"South East Asia\", \"https://southeastasia.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"West US2\", \"https://westus2.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"East US\", \"https://eastus.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"East US2\", \"https://eastus2.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"East Asia\", \"https://eastasia.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"North Europe\", \"https://northeurope.api.cognitive.microsoft.com/sts/v1.0/issueToken\"},"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"West Europe\", \"https://westeurope.api.cognitive.microsoft.com/sts/v1.0/issueToken\"}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Dictionary\u003cstring, string\u003e azureEndpointToUriMapping \u003d new Dictionary\u003cstring, string\u003e()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {\"West US\", \"https://westus.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"South East Asia\", \"https://southeastasia.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"West US2\", \"https://westus2.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"East US\", \"https://eastus.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"East US2\", \"https://eastus2.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"East Asia\", \"https://eastasia.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"North Europe\", \"https://northeurope.tts.speech.microsoft.com/cognitiveservices/v1\"},"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"West Europe\", \"https://westeurope.tts.speech.microsoft.com/cognitiveservices/v1\"}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Dictionary\u003cstring, string\u003e watsonRegionToEndpointMapping \u003d new Dictionary\u003cstring, string\u003e()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {\"Dallas\", \"https://stream.watsonplatform.net/text-to-speech/api\"},"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"Washington DC\", \"https://gateway-wdc.watsonplatform.net/text-to-speech/api\"},"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"Frankfurt\", \"https://stream-fra.watsonplatform.net/text-to-speech/api\"},"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"Sydney\", \"https://gateway-syd.watsonplatform.net/text-to-speech/api\"},"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"Tokyo\", \"https://gateway-tok.watsonplatform.net/text-to-speech/api\"},"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            { \"London\", \"https://gateway-lon.watsonplatform.net/text-to-speech/api\"}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Converters/ELearningWorkspaceConverters/AnimationTypeToImageSourceConverter.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Globalization;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Markup;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Converters"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AnimationTypeToImageSourceConverter : MarkupExtension, IValueConverter"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public override object ProvideValue(IServiceProvider serviceProvider)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        object IValueConverter.Convert(object value, Type targetType, object parameter, CultureInfo culture)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            switch ((AnimationType)value)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                case AnimationType.Emphasis:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return GraphicsUtil.BitmapToImageSource(Properties.Resources.AnimationEmphasis);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                case AnimationType.Entrance:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return GraphicsUtil.BitmapToImageSource(Properties.Resources.AnimationEntrance);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                case AnimationType.Exit:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return GraphicsUtil.BitmapToImageSource(Properties.Resources.AnimationExit);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                case AnimationType.MotionPath:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    return GraphicsUtil.BitmapToImageSource(Properties.Resources.AnimationMotionPath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        object IValueConverter.ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "yuhongherald": 5
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Converters/ELearningWorkspaceConverters/EffectToAnimationTypeConverter.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Converters"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public class EffectToAnimationTypeConverter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        private static HashSet\u003cMsoAnimEffect\u003e motionPathEffectCollection \u003d new HashSet\u003cMsoAnimEffect\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPath4PointStar, MsoAnimEffect.msoAnimEffectPath5PointStar,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPath6PointStar, MsoAnimEffect.msoAnimEffectPath8PointStar,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathArcDown, MsoAnimEffect.msoAnimEffectPathArcLeft,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathArcRight, MsoAnimEffect.msoAnimEffectPathArcUp,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathBean, MsoAnimEffect.msoAnimEffectPathBounceLeft,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathBounceRight, MsoAnimEffect.msoAnimEffectPathBuzzsaw,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathCircle, MsoAnimEffect.msoAnimEffectPathCrescentMoon,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathCurvedSquare, MsoAnimEffect.msoAnimEffectPathCurvedX,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathCurvyLeft, MsoAnimEffect.msoAnimEffectPathCurvyRight,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathCurvyStar, MsoAnimEffect.msoAnimEffectPathDecayingWave,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathDiagonalDownRight, MsoAnimEffect.msoAnimEffectPathDiagonalUpRight,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathDiamond, MsoAnimEffect.msoAnimEffectPathDown,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathEqualTriangle, MsoAnimEffect.msoAnimEffectPathFigure8Four,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathFootball, MsoAnimEffect.msoAnimEffectPathFunnel,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathHeart, MsoAnimEffect.msoAnimEffectPathHeartbeat,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathHexagon, MsoAnimEffect.msoAnimEffectPathHorizontalFigure8,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathInvertedSquare, MsoAnimEffect.msoAnimEffectPathInvertedTriangle,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathLeft, MsoAnimEffect.msoAnimEffectPathLoopdeLoop,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathNeutron, MsoAnimEffect.msoAnimEffectPathOctagon,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathParallelogram, MsoAnimEffect.msoAnimEffectPathPeanut,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathPentagon, MsoAnimEffect.msoAnimEffectPathPlus,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathPointyStar, MsoAnimEffect.msoAnimEffectPathRight,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathRightTriangle, MsoAnimEffect.msoAnimEffectPathSCurve1,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathSCurve2, MsoAnimEffect.msoAnimEffectPathSineWave,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathSpiralLeft, MsoAnimEffect.msoAnimEffectPathSpiralRight,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathSpring, MsoAnimEffect.msoAnimEffectPathSquare,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathStairsDown, MsoAnimEffect.msoAnimEffectPathSwoosh,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathTeardrop, MsoAnimEffect.msoAnimEffectPathTrapezoid,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathTurnDown, MsoAnimEffect.msoAnimEffectPathTurnRight,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathTurnUp, MsoAnimEffect.msoAnimEffectPathTurnUpRight,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathUp, MsoAnimEffect.msoAnimEffectPathVerticalFigure8,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPathWave, MsoAnimEffect.msoAnimEffectPathZigzag"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        private static HashSet\u003cMsoAnimEffect\u003e emphasisEffectCollection \u003d new HashSet\u003cMsoAnimEffect\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectChangeFillColor, MsoAnimEffect.msoAnimEffectChangeFontColor,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectGrowShrink, MsoAnimEffect.msoAnimEffectVerticalGrow, "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectGrowWithColor, MsoAnimEffect.msoAnimEffectGrowAndTurn,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectBoldFlash, MsoAnimEffect.msoAnimEffectBrushOnColor,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectComplementaryColor, MsoAnimEffect.msoAnimEffectComplementaryColor2,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectContrastingColor, MsoAnimEffect.msoAnimEffectDarken,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectDesaturate, MsoAnimEffect.msoAnimEffectLighten,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectBrushOnUnderline, MsoAnimEffect.msoAnimEffectShimmer,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectTeeter, MsoAnimEffect.msoAnimEffectBoldReveal,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectWave"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public static AnimationType GetAnimationTypeOfEffect(Effect effect)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            if (effect.Exit \u003d\u003d Microsoft.Office.Core.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationType.Exit;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (motionPathEffectCollection.Contains(effect.EffectType))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationType.MotionPath;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (emphasisEffectCollection.Contains(effect.EffectType))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationType.Emphasis;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationType.Entrance;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 79,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Converters/ELearningWorkspaceConverters/ListItemClickNumToColorConverter.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Globalization;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Markup;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Converters"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ListItemClickNumToColorConverter : MarkupExtension, IMultiValueConverter"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDummyItem, isTriggerTypeEnabled;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            int triggerType, clickNum;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                isDummyItem \u003d (bool)values[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                isTriggerTypeEnabled \u003d (bool)values[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                triggerType \u003d (int)values[2];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                clickNum \u003d (int)values[3];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Invalid Cast Exception\" + e.Message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane eLearningTaskpane \u003d Globals.ThisAddIn.GetActivePane(typeof(ELearningLabTaskpane));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eLearningTaskpane \u003d\u003d null)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningLabTaskpane taskpane \u003d eLearningTaskpane.Control as ELearningLabTaskpane;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isDummyItem)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SolidColorBrush(Colors.Gray);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (isTriggerTypeEnabled \u0026\u0026 triggerType \u003d\u003d (int)TriggerType.WithPrevious"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 !taskpane.ELearningLabMainPanel.IsFirstItemSelfExplanation \u0026\u0026 clickNum \u003d\u003d 0)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SolidColorBrush(Colors.Transparent);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (isTriggerTypeEnabled \u0026\u0026 triggerType \u003d\u003d (int)TriggerType.WithPrevious \u0026\u0026 clickNum \u003e 0)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SolidColorBrush(Colors.Transparent);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                return new SolidColorBrush(Colors.Black);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public override object ProvideValue(IServiceProvider serviceProvider)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 68,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/ClickItem/ClickItem.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.ComponentModel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.CompilerServices;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ClickItem : INotifyPropertyChanged"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        public event PropertyChangedEventHandler PropertyChanged;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public int ClickNo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                return clickNo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                clickNo \u003d value;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                NotifyPropertyChanged(\"ClickNo\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool ShouldLabelDisplay"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                return shouldLabelDisplay;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                shouldLabelDisplay \u003d value;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                NotifyPropertyChanged(\"ShouldLabelDisplay\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public ClickItem()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        { }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        private int clickNo;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool shouldLabelDisplay;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool Equals(object other)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            if (other \u003d\u003d null || other.GetType() !\u003d GetType())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ReferenceEquals(other, this))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            return Equals(this, other);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public override int GetHashCode()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            var hashCode \u003d 2147116840;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            hashCode \u003d hashCode * -1521134295 + ClickNo.GetHashCode();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            hashCode \u003d hashCode * -1521134295 + clickNo.GetHashCode();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            return hashCode;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        public void NotifyPropertyChanged([CallerMemberName] string propertyName \u003d \"\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 68,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Effect/AbstractEffect.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract class AbstractEffect"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public string shapeName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        protected AbstractEffect(string shapeName)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeName \u003d shapeName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Effect/CustomEffect.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CustomEffect: AbstractEffect"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public string shapeId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public AnimationType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomEffect(string shapeName, string shapeId, AnimationType type): base(shapeName)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeId \u003d shapeId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            this.type \u003d type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Effect/ELLEffect.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ELLEffect: AbstractEffect"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public ELLEffect(string shapeName): base(shapeName)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        { }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Enums/AnimationType.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum AnimationType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        Entrance,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        Emphasis,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        Exit,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        MotionPath"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Enums/BackgroundWorkerType.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum BackgroundWorkerType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        ELearningLabService,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        AudioGenerationService"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Enums/NoteType.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum NoteType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        CalloutNote,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        CaptionVoiceNote"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/Model/Enums/TriggerType.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ELearningLab.ELearningWorkspace.Model"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum TriggerType"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        OnClick \u003d 0,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        WithPrevious \u003d 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/ModelFactory/ItemFactory/AbstractItemFactory.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.ELearningWorkspace.ModelFactory"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract class AbstractItemFactory"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        public IEnumerable\u003cAbstractEffect\u003e effects;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public AbstractItemFactory(IEnumerable\u003cAbstractEffect\u003e effects)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            this.effects \u003d effects;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public ClickItem GetBlock()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            return CreateBlock();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        protected abstract ClickItem CreateBlock();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/ModelFactory/ItemFactory/CustomItemFactory.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.ELearningWorkspace.ModelFactory"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CustomItemFactory : AbstractItemFactory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomItemFactory(IEnumerable\u003cCustomEffect\u003e effects):base(effects)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        { }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override ClickItem CreateBlock()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            if (effects.Count() \u003d\u003d 0)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableCollection\u003cCustomSubItem\u003e customItems \u003d new ObservableCollection\u003cCustomSubItem\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomEffect effect in effects)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                customItems.Add(new CustomSubItem(effect.shapeName, effect.shapeId, effect.type));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            return new CustomItem(customItems);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/ELearningWorkspace/ModelFactory/ItemFactory/SelfExplanationItemFactory.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.ELearningWorkspace.ModelFactory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public class SelfExplanationItemFactory : AbstractItemFactory"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public SelfExplanationItemFactory(IEnumerable\u003cELLEffect\u003e effects) : base(effects)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        { }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override ClickItem CreateBlock()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            if (effects.Count() \u003d\u003d 0)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem selfExplanation \u003d new ExplanationItem(captionText: string.Empty);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ELLEffect effect in effects)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d effect.shapeName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                string functionMatch \u003d StringUtility.ExtractFunctionFromString(shapeName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                selfExplanation.tagNo \u003d SelfExplanationTagService.ExtractTagNo(shapeName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                switch (functionMatch)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    case ELearningLabText.CaptionIdentifier:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanation.IsCaption \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    case ELearningLabText.CalloutIdentifier:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanation.IsCallout \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    case ELearningLabText.AudioIdentifier:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanation.IsVoice \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanation.VoiceLabel \u003d StringUtility.ExtractVoiceNameFromString(shapeName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (StringUtility.ExtractDefaultLabelFromVoiceLabel(selfExplanation.VoiceLabel)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                            .Equals(ELearningLabText.DefaultAudioIdentifier))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                            selfExplanation.VoiceLabel \u003d string.Format(ELearningLabText.AudioDefaultLabelFormat,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                                AudioSettingService.selectedVoice.ToString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            return selfExplanation;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Extensions/PowerPointSlideExtension.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Converters;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Extensions"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class PowerPointSlideExtension"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsFirstAnimationTriggeredByClick(this PowerPointSlide slide)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            return effects.Count() \u003e 0 \u0026\u0026"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                effects.ElementAt(0).Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IEnumerable\u003cCustomEffect\u003e GetCustomEffectsForClick(this PowerPointSlide slide, int clickNo)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            DateTime start \u003d DateTime.Now;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e().ToList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effectBefore \u003d sequence.FindFirstAnimationForClick(clickNo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effectAfter \u003d sequence.FindFirstAnimationForClick(clickNo + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                // from idxStart inclusive, idxEnd exclusive"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                int idxStart \u003d effectBefore \u003d\u003d null ? effects.Count() : effects.IndexOf(effectBefore);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                int idxEnd \u003d effectAfter \u003d\u003d null ? effects.Count() : effects.IndexOf(effectAfter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                IEnumerable\u003cEffect\u003e customEffects \u003d effects.GetRange(idxStart, idxEnd - idxStart).Where(x \u003d\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                SelfExplanationTagService.ExtractTagNo(x.Shape.Name) \u003d\u003d -1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                IEnumerable\u003cCustomEffect\u003e _customEffects \u003d customEffects.Select(x \u003d\u003e new CustomEffect(x.Shape.Name, x.Shape.Id.ToString(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                EffectToAnimationTypeConverter.GetAnimationTypeOfEffect(x)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                if (clickNo \u003e 0 \u0026\u0026 customEffects.Count() \u003e 0)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    customEffects.ElementAt(0).Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                return _customEffects;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                // most likely caused by idxStart out of bound"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                return new List\u003cCustomEffect\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IEnumerable\u003cEffect\u003e GetPPTLEffectsForClick(this PowerPointSlide slide, int clickNo)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            DateTime start \u003d DateTime.Now;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e().ToList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effectBefore \u003d sequence.FindFirstAnimationForClick(clickNo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effectAfter \u003d sequence.FindFirstAnimationForClick(clickNo + 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                // from idxStart inclusive, idxEnd exclusive"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                int idxStart \u003d effectBefore \u003d\u003d null ? effects.Count() : effects.IndexOf(effectBefore);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                int idxEnd \u003d effectAfter \u003d\u003d null ? effects.Count() : effects.IndexOf(effectAfter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                return effects.GetRange(idxStart, idxEnd - idxStart).Where(x \u003d\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                SelfExplanationTagService.ExtractTagNo(x.Shape.Name) !\u003d -1 \u0026\u0026 "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                x.Exit !\u003d Microsoft.Office.Core.MsoTriState.msoTrue);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                // most likely caused by idxStart out of bound"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                return new List\u003cEffect\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void RemoveAnimationsForShapeWithPrefix(this PowerPointSlide slide, string prefix)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            slide.RemoveAnimationsForShapes("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                slide.Shapes.Cast\u003cShape\u003e().Where(x \u003d\u003e x.Name.Contains(prefix)).ToList());           "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool ContainShapeWithExactName(this PowerPointSlide slide, string shapeName)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return slide.Shapes.Cast\u003cShape\u003e().Where(x \u003d\u003e x.Name.Trim().Equals(shapeName.Trim())).Count() \u003e 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool ContainShape(this PowerPointSlide slide, Shape shape)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            return slide.Shapes.Cast\u003cShape\u003e().Where(x \u003d\u003e x.Equals(shape)).Count() \u003e 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void DeleteShapeWithNameRegex(this PowerPointSlide slide, string regexExpr)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex regex \u003d new Regex(regexExpr);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d slide.Shapes.Cast\u003cShape\u003e().Where(x \u003d\u003e regex.Match(x.Name).Success).ToList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape s in shapes)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cShape\u003e GetShapesWithNameRegex(this PowerPointSlide slide, string regexExpr)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex regex \u003d new Regex(regexExpr);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            return slide.Shapes.Cast\u003cShape\u003e().Where(x \u003d\u003e regex.Match(x.Name).Success).ToList();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 107,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/AudioRuntimeService/AzureRuntimeService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Threading;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using NAudio.Wave;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AzureRuntimeService"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsAzureAccountPresentAndValid \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private static CancellationTokenSource cts \u003d new CancellationTokenSource();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private static CancellationToken token \u003d cts.Token;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsAzureAccountPresent()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            return !AzureAccount.GetInstance().IsEmpty();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsValidUserAccount(bool showErrorMessage \u003d true, string errorMessage \u003d \"Failed Azure authentication.\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                string _key \u003d AzureAccount.GetInstance().GetKey();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                string _endpoint \u003d EndpointToUriConverter.azureRegionToEndpointMapping[AzureAccount.GetInstance().GetRegion()];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccountAuthentication auth \u003d AzureAccountAuthentication.GetInstance(_endpoint, _key);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                string accessToken \u003d auth.GetAccessToken();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(\"Token: {0}\\n\", accessToken);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(errorMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                if (showErrorMessage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(errorMessage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsValidUserAccount(string key, string endpoint)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccountAuthentication auth \u003d AzureAccountAuthentication.GetInstance(endpoint, key);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                string accessToken \u003d auth.GetAccessToken();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(\"Token: {0}\\n\", accessToken);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(\"Failed authentication.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void RenewCancellationToken()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            cts \u003d new CancellationTokenSource();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void Cancel()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            cts.Cancel();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Audio Preview"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SpeakString(string textToSpeak, AzureVoice voice)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            SpeakStringAsync(textToSpeak, voice);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            string dirPath \u003d Path.GetTempPath() + AudioService.TempFolderName;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            string filePath \u003d dirPath + \"\\\\\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(ELearningLabText.AudioPreviewFileNameFormat, voice.VoiceName);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            PlaySavedAudioForPreview(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SpeakStringAsync(string textToSpeak, AzureVoice voice)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            RenewCancellationToken();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            string accessToken;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            string dirPath \u003d Path.GetTempPath() + AudioService.TempFolderName;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            string filePath \u003d dirPath + \"\\\\\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(ELearningLabText.AudioPreviewFileNameFormat, voice.VoiceName);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccountAuthentication auth \u003d AzureAccountAuthentication.GetInstance();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                accessToken \u003d auth.GetAccessToken();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Token: \" + accessToken);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Failed authentication.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(dirPath))"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(dirPath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            string requestUri \u003d AzureAccount.GetInstance().GetUri();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (requestUri \u003d\u003d null)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            var azureVoiceSynthesizer \u003d new SynthesizeAzureVoice();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceSynthesizer.OnAudioAvailable +\u003d PlayAudio;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceSynthesizer.OnError +\u003d OnAzureVoiceErrorHandler;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            // Reuse Synthesize object to minimize latency"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceSynthesizer.Speak(token, new InputOptions()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                RequestUri \u003d new Uri(requestUri),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                Text \u003d textToSpeak,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                VoiceType \u003d voice.voiceType,"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                Locale \u003d voice.Locale,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                VoiceName \u003d voice.voiceName,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                // Service can return audio in different output format."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                OutputFormat \u003d AudioOutputFormat.Riff24Khz16BitMonoPcm,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                AuthorizationToken \u003d \"Bearer \" + accessToken,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            }, filePath).Wait();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void PlaySavedAudioForPreview(string filePath)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            SpeechPlayingDialogBox speechPlayingDialog \u003d new SpeechPlayingDialogBox();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            WaveOutEvent player \u003d new WaveOutEvent();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            player.PlaybackStopped +\u003d (s, e) \u003d\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                    speechPlayingDialog.Dispatcher.Invoke(() \u003d\u003e { speechPlayingDialog.Close(); });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                catch"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Object already disposed.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            speechPlayingDialog.Closed +\u003d (s, e) \u003d\u003e SpeechPlayingDialog_Closed(player);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                using (var reader \u003d new WaveFileReader(filePath))"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    player.Init(reader);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    player.Play();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    speechPlayingDialog.ShowDialog();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Audio File not Found\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Audio Generation"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool SaveStringToWaveFileWithAzureVoice(string textToSave, string filePath, AzureVoice voice)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            RenewCancellationToken();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            string accessToken;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            string textToSpeak \u003d GetHumanSpeakNotesForText(textToSave);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccountAuthentication auth \u003d AzureAccountAuthentication.GetInstance();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                accessToken \u003d auth.GetAccessToken();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Token: \" + accessToken);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Failed authentication.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            string requestUri \u003d AzureAccount.GetInstance().GetUri();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            if (requestUri \u003d\u003d null)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            var azureVoiceSynthesizer \u003d new SynthesizeAzureVoice();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceSynthesizer.OnAudioAvailable +\u003d SaveAudioToWaveFile;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceSynthesizer.OnError +\u003d OnAzureVoiceErrorHandler;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            // Reuse Synthesize object to minimize latency"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceSynthesizer.Speak(token, new InputOptions()"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                RequestUri \u003d new Uri(requestUri),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                Text \u003d textToSpeak,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                VoiceType \u003d voice.voiceType,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                Locale \u003d voice.Locale,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                VoiceName \u003d voice.voiceName,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                // Service can return audio in different output format."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                OutputFormat \u003d AudioOutputFormat.Riff24Khz16BitMonoPcm,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                AuthorizationToken \u003d \"Bearer \" + accessToken,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }, filePath).Wait();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        private static string GetHumanSpeakNotesForText(string textToSave)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            TaggedText taggedText \u003d new TaggedText(textToSave);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            string strToSpeak \u003d taggedText.ToPrettyString();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            return strToSpeak;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SaveAudioToWaveFile(object sender, GenericEventArgs\u003cStream\u003e args)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveStreamToFile(args.FilePath, args.EventData);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            args.EventData.Dispose();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SaveStreamToFile(string fileFullPath, Stream stream)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                byte[] bytesInStream \u003d ReadFully(stream);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                using (FileStream fs \u003d File.Create(fileFullPath))"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                    fs.Write(bytesInStream, 0, bytesInStream.Length);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Error generating audio files. \");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        private static byte[] ReadFully(Stream input)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] buffer \u003d new byte[16 * 1024];"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            using (MemoryStream ms \u003d new MemoryStream())"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                int read;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                while ((read \u003d input.Read(buffer, 0, buffer.Length)) \u003e 0)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                    ms.Write(buffer, 0, read);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                return ms.ToArray();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void OnAzureVoiceErrorHandler(object sender, GenericEventArgs\u003cException\u003e e)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"Unable to complete the TTS request: \" + e.ToString());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void PlayAudio(object sender, GenericEventArgs\u003cStream\u003e args)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveAudioToWaveFile(sender, args);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        private static SpeechPlayingDialogBox ShowSpeechCancelDialog(WaveOutEvent player)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            SpeechPlayingDialogBox speechPlayingDialog \u003d new SpeechPlayingDialogBox();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            speechPlayingDialog.Closed +\u003d (sender, e) \u003d\u003e SpeechPlayingDialog_Closed(player);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            speechPlayingDialog.ShowDialog();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            return speechPlayingDialog;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SpeechPlayingDialog_Closed(WaveOutEvent player)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            player.Stop();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 274,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/AudioRuntimeService/WatsonRuntimeService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using NAudio.Wave;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator.WatsonVoiceGenerator.Model;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator.WatsonVoiceGenerator.SpeechEngine;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public class WatsonRuntimeService"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsWatsonAccountPresentAndValid \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public static ObservableCollection\u003cWatsonVoice\u003e Voices { get; set; } \u003d GetWatsonVoices();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsWatsonAccountPresent()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            return !WatsonAccount.GetInstance().IsEmpty();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsValidUserAccount(bool showErrorMessage \u003d true, string errorMessage \u003d \"Failed Azure authentication.\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                string _key \u003d WatsonAccount.GetInstance().GetKey();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_key \u003d\u003d null || string.IsNullOrEmpty(_key.Trim()))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new Exception(\"Empty key value\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                TokenOptions options \u003d new TokenOptions();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                options.IamApiKey \u003d _key;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                string accessToken \u003d new TokenManager(options).GetToken();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                if (string.IsNullOrEmpty(accessToken))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new Exception(\"Invalid access key!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsValidEndpoint(_key, WatsonAccount.GetInstance().GetEndpoint()))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new Exception(\"Invalid endpoint!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(\"Token: {0}\\n\", accessToken);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(errorMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                if (showErrorMessage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(errorMessage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsValidUserAccount(string key, string endpoint, string errorMessage \u003d \"Failed Azure authentication.\")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                TokenOptions options \u003d new TokenOptions();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                options.IamApiKey \u003d key;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                string accessToken \u003d new TokenManager(options).GetToken();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                if (string.IsNullOrEmpty(accessToken))"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new Exception(errorMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsValidEndpoint(key, endpoint))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new Exception(errorMessage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(\"Token: {0}\\n\", accessToken);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                Console.WriteLine(\"Failed authentication.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SaveStringToWaveFile(string text, string filePath, WatsonVoice voice)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsWatsonAccountPresentAndValid)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            string _key \u003d WatsonAccount.GetInstance().GetKey();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            string _endpoint \u003d EndpointToUriConverter.watsonRegionToEndpointMapping[WatsonAccount.GetInstance().GetRegion()];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            Text synthesizeText \u003d new Text { _Text \u003d text };"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            TokenOptions options \u003d new TokenOptions();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            options.IamApiKey \u003d _key;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            string endpoint \u003d _endpoint;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            var _service \u003d new SynthesizeWatsonVoice(options, endpoint);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            var synthesizeResult \u003d _service.Synthesize(synthesizeText, \"audio/wav\", voice: \"en-US_\" + voice.VoiceName);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            StreamUtility.SaveStreamToFile(filePath, synthesizeResult);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void Speak(string text, WatsonVoice voice)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            string dirPath \u003d Path.GetTempPath() + AudioService.TempFolderName;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            string filePath \u003d dirPath + \"\\\\\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(ELearningLabText.AudioPreviewFileNameFormat, voice.VoiceName);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(dirPath))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(dirPath);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveStringToWaveFile(text, filePath, voice);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            SpeechPlayingDialogBox speechPlayingDialog \u003d new SpeechPlayingDialogBox();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            WaveOutEvent player \u003d new WaveOutEvent();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            player.PlaybackStopped +\u003d (s, e) \u003d\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    speechPlayingDialog.Dispatcher.Invoke(() \u003d\u003e { speechPlayingDialog.Close(); });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                catch"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Object already disposed\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            speechPlayingDialog.Closed +\u003d (s, e) \u003d\u003e SpeechPlayingDialog_Closed(player);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                using (var reader \u003d new WaveFileReader(filePath))"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                    player.Init(reader);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    player.Play();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    speechPlayingDialog.ShowDialog();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Audio File not Found\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        private static ObservableCollection\u003cWatsonVoice\u003e GetWatsonVoices()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ObservableCollection\u003cWatsonVoice\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            new WatsonVoice(WatsonVoiceType.AllisonVoice),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            new WatsonVoice(WatsonVoiceType.LisaVoice),"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            new WatsonVoice(WatsonVoiceType.MichaelVoice)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SpeechPlayingDialog_Closed(WaveOutEvent player)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            player.Stop();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SaveStringToWaveFile(string text, string filePath, WatsonVoice voice, string key, string endpoint)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            Text synthesizeText \u003d new Text { _Text \u003d text };"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            TokenOptions options \u003d new TokenOptions();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            options.IamApiKey \u003d key;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            var _service \u003d new SynthesizeWatsonVoice(options, endpoint);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            var synthesizeResult \u003d _service.Synthesize(synthesizeText, \"audio/wav\", voice: \"en-US_\" + voice.VoiceName);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            StreamUtility.SaveStreamToFile(filePath, synthesizeResult);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsValidEndpoint(string key, string region)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            string dirPath \u003d Path.GetTempPath() + AudioService.TempFolderName;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            string filePath \u003d dirPath + \"\\\\\" + ELearningLabText.WatsonAudioTestFileName;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            string textToSpeak \u003d \"This is to test watson voice.\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(dirPath))"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(dirPath);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveStringToWaveFile(textToSpeak, filePath, new WatsonVoice(WatsonVoiceType.AllisonVoice), key, region);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(filePath) || AudioService.ReadWavFileTimeSpan(filePath).TotalMilliseconds \u003c 10)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"file exists? \" + File.Exists(filePath).ToString());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Time span is \" + AudioService.ReadWavFileTimeSpan(filePath).ToString());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 186,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/AudioSettingService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 618"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class AudioSettingService"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public const int AudioMainSettingsPageHeight \u003d 195;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public static double AudioPreviewPageHeight \u003d 300;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsPreviewEnabled \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public static VoiceType selectedVoiceType \u003d VoiceType.ComputerVoice;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IVoice selectedVoice \u003d ComputerVoiceRuntimeService.Voices.ElementAtOrDefault(0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public static ObservableCollection\u003cIVoice\u003e preferredVoices"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "             \u003d new ObservableCollection\u003cIVoice\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ShowSettingsDialog()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane eLearningTaskpane \u003d ActionFrameworkExtensions.GetTaskPane(typeof(ELearningLabTaskpane));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow dialog \u003d new AudioSettingsDialogWindow(AudioSettingsPage.MainSettingsPage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioMainSettingsPage page \u003d dialog.MainPage as AudioMainSettingsPage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            page.SetAudioMainSettings("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedVoiceType,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedVoice,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                IsPreviewEnabled);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            page.DialogConfirmedHandler +\u003d OnSettingsDialogConfirmed;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eLearningTaskpane \u003d\u003d null)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                dialog.ShowDialog();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningLabTaskpane taskpane \u003d eLearningTaskpane.Control as ELearningLabTaskpane;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            page.DefaultVoiceChangedHandler +\u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                taskpane.ELearningLabMainPanel.RefreshVoiceLabelOnAudioSettingChanged;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            page.IsDefaultVoiceChangedHandlerAssigned \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.ShowDialog();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void OnSettingsDialogConfirmed(VoiceType selectedVoiceType, IVoice selectedVoice, bool isPreviewCurrentSlide)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            IsPreviewEnabled \u003d isPreviewCurrentSlide;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.selectedVoiceType \u003d selectedVoiceType;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.selectedVoice \u003d selectedVoice;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 54,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/ELearningService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Extensions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ELearningService"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsELearningWorkspaceEnabled { get; set; } \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPointSlide _slide;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cExplanationItem\u003e _selfExplanationItems;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public ELearningService() { }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public ELearningService(PowerPointSlide slide, List\u003cExplanationItem\u003e selfExplanationItems)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide \u003d slide;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            _selfExplanationItems \u003d selfExplanationItems;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteShapesForUnusedItem(PowerPointSlide slide, ExplanationItem selfExplanationClickItem)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            CalloutService.DeleteCalloutShape(slide, selfExplanationClickItem.tagNo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            CaptionService.DeleteCaptionShape(slide, selfExplanationClickItem.tagNo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncExitEffectAnimations()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncExitEffectAnimations(_slide, _selfExplanationItems);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteUnusedCalloutShapes(_slide);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteUnusedAudioShapes(_slide);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteUnusedCaptionShapes(_slide);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteExitAnimationInLastClick(_slide);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncAppearEffectAnimationsForSelfExplanationItem(int i)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem selfExplanationItem \u003d _selfExplanationItems.ElementAt(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateAppearEffectAnimation(_slide, selfExplanationItem);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveLabAnimationsFromAnimationPane()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.RemoveAnimationsForShapeWithPrefix(ELearningLabText.Identifier);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public int GetExplanationItemsCount()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return _selfExplanationItems.Count;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SyncExitEffectAnimations(PowerPointSlide slide, List\u003cExplanationItem\u003e selfExplanationItems)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ExplanationItem selfExplanationItem in selfExplanationItems)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                CreateExitEffectAnimation(slide, selfExplanationItem);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateAppearEffectAnimation(PowerPointSlide slide, ExplanationItem selfExplanationItem)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isSeparateClick \u003d selfExplanationItem.TriggerIndex \u003d\u003d (int)TriggerType.OnClick || !selfExplanationItem.IsTriggerTypeComboBoxEnabled;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e effects \u003d new List\u003cEffect\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selfExplanationItem.IsVoice)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selfExplanationItem.IsVoiceLabelInvalid)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    string defaultVoiceLabel \u003d string.Format(ELearningLabText.AudioDefaultLabelFormat, AudioSettingService.selectedVoice.VoiceName);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    effect \u003d AudioService.CreateAppearEffectAudioAnimation(slide, selfExplanationItem.CaptionText, defaultVoiceLabel,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanationItem.ClickNo, selfExplanationItem.tagNo, isSeparateClick);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    selfExplanationItem.VoiceLabel \u003d defaultVoiceLabel;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    effect \u003d AudioService.CreateAppearEffectAudioAnimation(slide, selfExplanationItem.CaptionText, selfExplanationItem.VoiceLabel, "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanationItem.ClickNo, selfExplanationItem.tagNo, isSeparateClick);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect !\u003d null)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    effects.Add(effect);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selfExplanationItem.IsCallout)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                string calloutText \u003d selfExplanationItem.HasShortVersion ? selfExplanationItem.CalloutText : selfExplanationItem.CaptionText;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d CalloutService.CreateAppearEffectCalloutAnimation(slide, calloutText,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    selfExplanationItem.ClickNo, selfExplanationItem.tagNo, isSeparateClick);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                effects.Add(effect);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                CalloutService.DeleteCalloutShape(slide, selfExplanationItem.tagNo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selfExplanationItem.IsCaption)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d CaptionService.CreateAppearEffectCaptionAnimation(slide, selfExplanationItem.CaptionText,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    selfExplanationItem.ClickNo, selfExplanationItem.tagNo, isSeparateClick);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                effects.Add(effect);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                CaptionService.DeleteCaptionShape(slide, selfExplanationItem.tagNo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSeparateClick \u0026\u0026 effects.Count() \u003e 0 \u0026\u0026 selfExplanationItem.ClickNo \u003e 0)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                effects.First().Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateExitEffectAnimation(PowerPointSlide slide, ExplanationItem selfExplanationItem)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            string calloutShapeName \u003d string.Format(ELearningLabText.CalloutShapeNameFormat, selfExplanationItem.tagNo);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            string captionShapeName \u003d string.Format(ELearningLabText.CaptionShapeNameFormat, selfExplanationItem.tagNo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selfExplanationItem.IsCallout \u0026\u0026 slide.ContainShapeWithExactName(calloutShapeName))"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape calloutShape \u003d slide.GetShapeWithName(calloutShapeName)[0];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                CalloutService.CreateExitEffectCalloutAnimation(slide, calloutShape, selfExplanationItem.ClickNo);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selfExplanationItem.IsCaption \u0026\u0026 slide.ContainShapeWithExactName(captionShapeName))"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape captionShape \u003d slide.GetShapeWithName(captionShapeName)[0];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                CaptionService.CreateExitEffectCaptionAnimation(slide, captionShape, selfExplanationItem.ClickNo);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteExitAnimationInLastClick(PowerPointSlide slide)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e effectsToDelete \u003d new List\u003cEffect\u003e();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d effects.Count() - 1; i \u003e 0 \u0026\u0026 i \u003e\u003d effects.Count() - 2; i--)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d effects.ElementAt(i);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isTriggeredByClick \u003d effect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.Exit !\u003d Microsoft.Office.Core.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d effect.Shape.Name;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                if (StringUtility.IsPPTLShape(shapeName) \u0026\u0026 effect.Exit \u003d\u003d Microsoft.Office.Core.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    effectsToDelete.Add(effect);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                    //  effect.Delete();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isTriggeredByClick)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effectsToDelete.Count + i \u003d\u003d effects.Count())"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                        foreach (Effect _effect in effectsToDelete)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                            _effect.Delete();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteUnusedAudioShapes(PowerPointSlide slide)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d slide.GetShapesWithNameRegex(ELearningLabText.VoiceShapeNameRegex);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Effect effect in effects)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapes.Contains(effect.Shape))"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapes.Remove(effect.Shape);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Delete();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteUnusedCalloutShapes(PowerPointSlide slide)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d slide.GetShapesWithNameRegex(ELearningLabText.CalloutShapeNameRegex);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Effect effect in effects)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapes.Contains(effect.Shape))"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapes.Remove(effect.Shape);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Delete();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteUnusedCaptionShapes(PowerPointSlide slide)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d slide.GetShapesWithNameRegex(ELearningLabText.CaptionShapeNameRegex);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Effect effect in effects)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapes.Contains(effect.Shape))"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapes.Remove(effect.Shape);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Delete();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 215,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/FunctionService/AudioService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using NAudio.Wave;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AudioService"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string TempFolderName"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                return string.Format(ELearningLabText.TempFolderNameFormat, "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                    Globals.ThisAddIn.GetTempFolderName());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Effect CreateAppearEffectAudioAnimation(PowerPointSlide slide, string captionText, string voiceLabel,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "           int clickNo, int tagNo, bool isSeperateClick)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                shape \u003d InsertAudioShapeToSlide(slide, captionText, tagNo, voiceLabel);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(e.Message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effect;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape \u003d\u003d null)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSeperateClick)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                effect \u003d AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectMediaPlay, clickNo - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                effect \u003d AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectMediaPlay, clickNo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: add stop playing on click here"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IVoice GetVoiceFromString(string str)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Enum.IsDefined(typeof(AzureVoiceType), str))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                return AzureVoiceList.voices.Where(x \u003d\u003e x.Voice.ToString() \u003d\u003d str).ElementAtOrDefault(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (Enum.IsDefined(typeof(WatsonVoiceType), str))"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                return WatsonRuntimeService.Voices.Where(x \u003d\u003e x.Voice.ToString() \u003d\u003d str).ElementAtOrDefault(0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                return ComputerVoiceRuntimeService.Voices.Where(x \u003d\u003e x.Voice.ToString() \u003d\u003d str).ElementAtOrDefault(0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool CheckIfVoiceExists(string str)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetVoiceFromString(StringUtility.ExtractVoiceNameFromVoiceLabel(str)) !\u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        public static VoiceType GetVoiceTypeFromString(string voiceName, string defaultPostfix)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsDefaultVoiceType(defaultPostfix))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                return VoiceType.DefaultVoice;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice \u003d GetVoiceFromString(voiceName);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            if (voice is AzureVoice)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                return VoiceType.AzureVoice;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is WatsonVoice)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                return VoiceType.WatsonVoice;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return VoiceType.ComputerVoice;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsAzureVoiceSelectedForItem(ExplanationItem selfExplanationClickItem)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            string voiceName \u003d StringUtility.ExtractVoiceNameFromVoiceLabel(selfExplanationClickItem.VoiceLabel);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice \u003d GetVoiceFromString(voiceName);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            return voice is AzureVoice;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsWatsonVoiceSelectedForItem(ExplanationItem selfExplanationClickItem)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            string voiceName \u003d StringUtility.ExtractVoiceNameFromVoiceLabel(selfExplanationClickItem.VoiceLabel);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice \u003d GetVoiceFromString(voiceName);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            return voice is WatsonVoice;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        /// "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slide\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"fileName\"\u003eAbsolute path of the .wav file\u003c/param\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape InsertAudioFileOnSlide(PowerPointSlide slide, string fileName)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(fileName))"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shapes shapes \u003d slide.Shapes;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape audioShape \u003d slide.Shapes.AddMediaObject2(fileName, MsoTriState.msoFalse, MsoTriState.msoTrue, slideWidth + 20);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                slide.RemoveAnimationsForShape(audioShape);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                return audioShape;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            catch "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Audio not generated because text is not in English.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        public static TimeSpan ReadWavFileTimeSpan(string filepath)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            WaveFileReader reader \u003d new WaveFileReader(filepath);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            TimeSpan time \u003d reader.TotalTime;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        /// "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slide\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"captionText\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"tagNo\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"voiceLabel\"\u003eFormat \"voiceName(_Default)\"\u003c/param\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Shape InsertAudioShapeToSlide(PowerPointSlide slide, string captionText, int tagNo, string voiceLabel)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(captionText.Trim()))"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d string.Format(ELearningLabText.AudioCustomShapeNameFormat, tagNo, voiceLabel);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(Path.Combine(Path.GetTempPath(), TempFolderName)))"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(Path.Combine(Path.GetTempPath(), TempFolderName));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            string audioFilePath \u003d Path.Combine(Path.GetTempPath(), TempFolderName,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(ELearningLabText.AudioFileNameFormat, slide.ID, tagNo));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            string voiceName \u003d StringUtility.ExtractVoiceNameFromVoiceLabel(voiceLabel);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice \u003d GetVoiceFromString(voiceName);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d null;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isSavedSuccessful \u003d false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isSameCaptionText \u003d IsSameCaptionText(slide, captionText, voiceLabel, tagNo);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isSameCaptionText)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                isSavedSuccessful \u003d SaveTextToWaveFile(captionText, audioFilePath, voice);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSameCaptionText || isSavedSuccessful)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                shape \u003d InsertAudioFileOnSlide(slide, audioFilePath);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape !\u003d null)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Name \u003d shapeName;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            return shape;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool SaveTextToWaveFile(string text, string filePath, IVoice voice)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            if (voice is AzureVoice)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                return AzureRuntimeService.SaveStringToWaveFileWithAzureVoice(text, filePath, voice as AzureVoice);            "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is ComputerVoice)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                ComputerVoiceRuntimeService.SaveStringToWaveFile(text, filePath, voice as ComputerVoice);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is WatsonVoice)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                WatsonRuntimeService.SaveStringToWaveFile(text, filePath, voice as WatsonVoice);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsDefaultVoiceType(string str)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            return str.Equals(ELearningLabText.DefaultAudioIdentifier);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsSameCaptionText(PowerPointSlide slide, string captionText, string voiceLabel, int tagNo)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            string captionShapeName \u003d string.Format(ELearningLabText.CaptionShapeNameFormat, tagNo);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            string audioShapeName \u003d string.Format(ELearningLabText.AudioCustomShapeNameFormat, tagNo, voiceLabel);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide.HasShapeWithSameName(audioShapeName) \u0026\u0026 slide.HasShapeWithSameName(captionShapeName))"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape shape \u003d slide.GetShapeWithName(captionShapeName)[0];"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                return captionText.Trim().Equals(shape.TextFrame.TextRange.Text.Trim());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 231,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/FunctionService/CalloutService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Extensions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CalloutService"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Shape templatedShape;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Effect CreateAppearEffectCalloutAnimation(PowerPointSlide slide, string calloutText,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNo, int tagNo, bool isSeperateClick)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d InsertCalloutShapeToSlide(slide, calloutText, tagNo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSeperateClick)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectAppear, clickNo - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectAppear, clickNo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Effect CreateExitEffectCalloutAnimation(PowerPointSlide slide, Shape shape, int clickNo)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effect \u003d AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectAppear, clickNo + 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            effect.Exit \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void DeleteCalloutShape(PowerPointSlide slide, int tagNo)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d string.Format(ELearningLabText.CalloutShapeNameFormat, tagNo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            slide.DeleteShapeWithName(shapeName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Shape InsertCalloutShapeToSlide(PowerPointSlide slide, string calloutText, int tagNo)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d string.Format(ELearningLabText.CalloutShapeNameFormat, tagNo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide.ContainShapeWithExactName(shapeName))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape shape \u003d ShapeUtility.ReplaceTextForShape(slide.GetShapeWithName(shapeName)[0], calloutText);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                templatedShape \u003d shape;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return shape;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                return ShapeUtility.InsertTemplatedShapeToSlide(slide, templatedShape, shapeName, calloutText);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                return ShapeUtility.InsertDefaultCalloutBoxToSlide(slide, shapeName, calloutText);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 59,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/FunctionService/CaptionService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Extensions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 618"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CaptionService"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Shape templatedShape;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Effect CreateAppearEffectCaptionAnimation(PowerPointSlide slide, string captionText, "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNo, int tagNo, bool isSeperateClick)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d InsertCaptionShapeToSlide(slide, captionText, tagNo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSeperateClick)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectAppear, clickNo - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                return AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectAppear, clickNo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Effect CreateExitEffectCaptionAnimation(PowerPointSlide slide, Shape shape, int clickNo)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effect \u003d AnimationUtility.AppendAnimationToSlide(slide, shape, MsoAnimEffect.msoAnimEffectAppear, clickNo + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            effect.Exit \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SetShapeAsHidden(PowerPointSlide slide, string captionText, int tagNo)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d InsertCaptionShapeToSlide(slide, captionText, tagNo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Visible \u003d Microsoft.Office.Core.MsoTriState.msoFalse;            "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void DeleteCaptionShape(PowerPointSlide slide, int tagNo)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d string.Format(ELearningLabText.CaptionShapeNameFormat, tagNo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            slide.DeleteShapeWithName(shapeName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Shape InsertCaptionShapeToSlide(PowerPointSlide slide, string captionText, int tagNo)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d string.Format(ELearningLabText.CaptionShapeNameFormat, tagNo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide.ContainShapeWithExactName(shapeName))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape shape \u003d ShapeUtility.ReplaceTextForShape(slide.GetShapeWithName(shapeName)[0], captionText);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Visible \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                templatedShape \u003d shape;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Top \u003d slideHeight - shape.Height;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                return shape;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                return ShapeUtility.InsertTemplatedShapeToSlide(slide, templatedShape, shapeName, captionText);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                return ShapeUtility.InsertDefaultCaptionBoxToSlide(slide, shapeName, captionText);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 70,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Service/StorageService/ELearningLabTextStorageService.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Xml.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Service"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ELearningLabTextStorageService"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void StoreSelfExplanationTextToSlide(List\u003cExplanationItem\u003e selfExplanationClickItems,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide slide)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d ELearningLabText.ELearningLabTextStorageShapeName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            slide.DeleteShapeWithName(shapeName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cDictionary\u003cstring, string\u003e\u003e selfExplanationText \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertListToDictionary(selfExplanationClickItems);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            XElement textInxml \u003d new XElement(ELearningLabText.SelfExplanationTextIdentifier,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                selfExplanationText.Select(kv \u003d\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                new XElement(ELearningLabText.SelfExplanationItemIdentifier,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "               from text in kv select new XElement(text.Key, text.Value))));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d ShapeUtility.InsertSelfExplanationTextBoxToSlide(slide, shapeName, textInxml.ToString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cDictionary\u003cstring, string\u003e\u003e LoadSelfExplanationsFromSlide(PowerPointSlide slide)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d slide.GetShapeWithName(ELearningLabText.ELearningLabTextStorageShapeName);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapes.Count \u003e 0)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape shape \u003d shapes[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                return LoadSelfExplanationTextFromString(shape.TextFrame.TextRange.Text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private static List\u003cDictionary\u003cstring, string\u003e\u003e LoadSelfExplanationTextFromString(string text)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cDictionary\u003cstring, string\u003e\u003e tagNoToSelfExplanationTextDic \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                new List\u003cDictionary\u003cstring, string\u003e\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            XElement xml \u003d XElement.Parse(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (var selfExplanation in xml.Elements())"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                Dictionary\u003cstring, string\u003e dic \u003d new Dictionary\u003cstring, string\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.CaptionTextIdentifier,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    selfExplanation.Element(ELearningLabText.CaptionTextIdentifier).Value);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                string calloutText \u003d selfExplanation.Element(ELearningLabText.CalloutTextIdentifier).Value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                if (string.IsNullOrEmpty(calloutText.Trim()))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    dic.Add(ELearningLabText.CalloutTextIdentifier,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanation.Element(ELearningLabText.CaptionTextIdentifier).Value);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    dic.Add(ELearningLabText.CalloutTextIdentifier,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        selfExplanation.Element(ELearningLabText.CalloutTextIdentifier).Value);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.TagNoIdentifier,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    selfExplanation.Element(ELearningLabText.TagNoIdentifier).Value);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.CalloutIdentifier, selfExplanation.Element(ELearningLabText.CalloutIdentifier).Value);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.CaptionIdentifier, selfExplanation.Element(ELearningLabText.CaptionIdentifier).Value);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.AudioIdentifier, selfExplanation.Element(ELearningLabText.AudioIdentifier).Value);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.ClickNumIdentifier, selfExplanation.Element(ELearningLabText.ClickNumIdentifier).Value);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.VoiceLabel, selfExplanation.Element(ELearningLabText.VoiceLabel).Value);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                dic.Add(ELearningLabText.TriggerOnClick, selfExplanation.Element(ELearningLabText.TriggerOnClick).Value);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                tagNoToSelfExplanationTextDic.Add(dic);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            return tagNoToSelfExplanationTextDic;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        private static List\u003cDictionary\u003cstring, string\u003e\u003e ConvertListToDictionary(List\u003cExplanationItem\u003e selfExplanationClickItems)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cDictionary\u003cstring, string\u003e\u003e keyValuePairs \u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                new List\u003cDictionary\u003cstring, string\u003e\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ExplanationItem item in selfExplanationClickItems)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                Dictionary\u003cstring, string\u003e value \u003d new Dictionary\u003cstring, string\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.CaptionTextIdentifier, item.CaptionText);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!item.CaptionText.Trim().Equals(item.CalloutText.Trim()))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    value.Add(ELearningLabText.CalloutTextIdentifier, item.CalloutText);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    value.Add(ELearningLabText.CalloutTextIdentifier, string.Empty);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.TagNoIdentifier, item.tagNo.ToString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.CalloutIdentifier, item.IsCallout ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.CaptionIdentifier, item.IsCaption ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.AudioIdentifier, item.IsVoice ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.ClickNumIdentifier, item.ClickNo.ToString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.VoiceLabel, item.VoiceLabel);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                value.Add(ELearningLabText.TriggerOnClick, item.TriggerIndex \u003d\u003d (int)TriggerType.OnClick ? \"Y\" : \"No\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                keyValuePairs.Add(value);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return keyValuePairs;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 102,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Utility/AnimationUtility.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Utility"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AnimationUtility"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Append animation for `shape` with effect type `effectType` to `slide`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slide\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"shape\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"effectType\"\u003especifies the type for the generated animation effect\u003c/param\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"clickNo\"\u003ethe clickNo in which the specified effect should appear\u003c/param\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Effect AppendAnimationToSlide(PowerPointSlide slide, Shape shape, "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect effectType, int clickNo)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effect \u003d slide.SetShapeAsClickTriggered(shape, clickNo, effectType);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StringUtility.ExtractFunctionFromString(shape.Name).Equals(ELearningLabText.CalloutIdentifier))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                effect.EffectType \u003d MsoAnimEffect.msoAnimEffectFade;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 28,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Utility/ShapeUtility.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Utility"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ShapeUtility"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Insert default callout box shape to slide. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Precondition: shape with shapeName must not exist in slide before applying the method"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slide\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"shapeName\"\u003eshapeName is a string with format \"PPTL_{tagNo}_Callout\" to be associated "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        /// with generated callout shape.\u003c/param\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"calloutText\"\u003eContent in Callout Shape\u003c/param\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003egenerated callout shape\u003c/returns\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape InsertDefaultCalloutBoxToSlide(PowerPointSlide slide, string shapeName, string calloutText)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape calloutBox \u003d slide.Shapes.AddShape(MsoAutoShapeType.msoShapeRoundedRectangularCallout, 10, 10, 100, 10);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutBox.Name \u003d shapeName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutBox.TextFrame.TextRange.Text \u003d calloutText;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutBox.Left \u003d 10;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutBox.Top \u003d 10;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutBox.TextFrame.AutoSize \u003d PpAutoSize.ppAutoSizeShapeToFitText;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutBox.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentLeft;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.FormatCalloutToDefaultStyle(calloutBox);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return calloutBox;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Insert default caption box to slide"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Precondition: shape with shapeName must not exist in slide before applying the method"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slide\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"shapeName\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"captionText\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003ethe generated default caption box\u003c/returns\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape InsertDefaultCaptionBoxToSlide(PowerPointSlide slide, string shapeName, string captionText)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape captionBox \u003d slide.Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal, 0, slideHeight - 100,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                slideWidth, 100);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Name \u003d shapeName;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.AutoSize \u003d PpAutoSize.ppAutoSizeShapeToFitText;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.TextRange.Text \u003d captionText;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.WordWrap \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentCentered;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.TextRange.Font.Size \u003d 12;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Fill.BackColor.RGB \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Fill.Transparency \u003d 0.2f;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.TextRange.Font.Color.RGB \u003d 0xffffff;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Top \u003d slideHeight - captionBox.Height;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return captionBox;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Insert shape which is copied from `templatedShape` to slide"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Precondition: shapeName must not exist in slide before applying the method"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slide\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"templatedShape\"\u003eShape whose format is to be copied over\u003c/param\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"shapeName\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"text\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003ethe copied shape\u003c/returns\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape InsertTemplatedShapeToSlide(PowerPointSlide slide, Shape templatedShape, string shapeName, string text)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d ActionFrameworkExtensions.GetCurrentPresentation();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape copiedShape;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            // templatedShape and its associated animations are duplicated"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            if (templatedShape \u003d\u003d null)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new Exception(\"Templated shape is null\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            {               "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape \u003d ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    templatedShape.Copy();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    return slide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                }, pres, slide);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new Exception(\"Error copy and paste shape.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            if (copiedShape \u003d\u003d null)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new Exception(\"Copied shape is null\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            copiedShape.Name \u003d shapeName;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy shape to the default callout / caption position"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StringUtility.ExtractFunctionFromString(copiedShape.Name) \u003d\u003d ELearningLabText.CalloutIdentifier)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Left \u003d 10;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Top \u003d 10;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentLeft;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (StringUtility.ExtractFunctionFromString(copiedShape.Name) \u003d\u003d ELearningLabText.CaptionIdentifier)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Left \u003d 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Top \u003d slideHeight - 100;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Width \u003d slideWidth;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Height \u003d 100;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Top \u003d slideHeight - copiedShape.Height;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentCentered;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            copiedShape.TextFrame.AutoSize \u003d PpAutoSize.ppAutoSizeShapeToFitText;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            copiedShape.TextFrame.TextRange.Text \u003d text;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            copiedShape.TextFrame.WordWrap \u003d MsoTriState.msoTrue;         "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove associated animation with copiedShape because we only want the shape to be copied."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            slide.RemoveAnimationsForShape(copiedShape);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StringUtility.ExtractFunctionFromString(copiedShape.Name) \u003d\u003d ELearningLabText.CaptionIdentifier)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                copiedShape.Top \u003d slideHeight - copiedShape.Height;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return copiedShape;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Replace original text in `shape` with `text`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"shape\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"text\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape ReplaceTextForShape(Shape shape, string text)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.TextFrame.TextRange.Text \u003d text;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            return shape;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape InsertSelfExplanationTextBoxToSlide(PowerPointSlide slide, string shapeName, string text)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape captionBox \u003d slide.Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal, 0, 0,"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                slideWidth, 100);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Name \u003d shapeName;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.AutoSize \u003d PpAutoSize.ppAutoSizeShapeToFitText;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.TextRange.Text \u003d text;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.WordWrap \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentCentered;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.TextRange.Font.Size \u003d 12;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Fill.BackColor.RGB \u003d 0xffffff;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Fill.Transparency \u003d 0.2f;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.TextFrame.TextRange.Font.Color.RGB \u003d 0;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            captionBox.Visible \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            return captionBox;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 170,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Utility/StreamUtility.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.IO;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using NAudio.Wave;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Utility"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public class StreamUtility"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SaveStreamToFile(string fileFullPath, Stream stream)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                byte[] bytesInStream \u003d ReadFully(stream);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                using (WaveFileWriter writer \u003d new WaveFileWriter(fileFullPath, new WaveFormat(22050, 1)))"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                    writer.Write(bytesInStream, 0, bytesInStream.Length);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Failed to save stream to .wav file\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private static byte[] ReadFully(Stream input)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] buffer \u003d new byte[16 * 1024];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            using (MemoryStream ms \u003d new MemoryStream())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                int read;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                while ((read \u003d input.Read(buffer, 0, buffer.Length)) \u003e 0)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    ms.Write(buffer, 0, read);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                return ms.ToArray();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Utility/StringUtility.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Linq;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Utility"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class StringUtility"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        // input str is \"PPTL_tag#_function(_voiceName)(_Default)\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string ExtractFunctionFromString(string str)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex regex \u003d new Regex(ELearningLabText.ExtractFunctionRegex, RegexOptions.IgnoreCase);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            Match match \u003d regex.Match(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            string value \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            if (match.Success)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                value \u003d match.Groups[1].Value.Trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        // input str is \"PPTL_tag#_function(_voiceName)(_Default)\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string ExtractVoiceNameFromString(string str)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex regex \u003d new Regex(ELearningLabText.ExtractVoiceNameRegex, "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                RegexOptions.IgnoreCase);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Match match \u003d regex.Match(str);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            string value \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            if (match.Success)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                value \u003d match.Groups[1].Value.Trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return value;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        // input str is \"voiceName(_Default)\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string ExtractVoiceNameFromVoiceLabel(string str)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            return str.Split(ELearningLabText.Underscore.ToCharArray().First())[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string ExtractDefaultLabelFromVoiceLabel(string str)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            if (str.Split(ELearningLabText.Underscore.ToCharArray().First()).Count() \u003e 1)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                return str.Split(ELearningLabText.Underscore.ToCharArray().First())[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return string.Empty;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsPPTLShape(string shapeName)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeName.Contains(ELearningLabText.Identifier);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 56,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Utility/VisualTreeUtility.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Utility"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class VisualTreeUtility"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cControl\u003e GetAllChildren(DependencyObject parent)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            var list \u003d new List\u003cControl\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c VisualTreeHelper.GetChildrenCount(parent); i++)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                var child \u003d VisualTreeHelper.GetChild(parent, i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                if (child is Control)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.Add(child as Control);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                list.AddRange(GetAllChildren(child));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public static FrameworkElement FindByName(string name, FrameworkElement root)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Stack\u003cFrameworkElement\u003e tree \u003d new Stack\u003cFrameworkElement\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            tree.Push(root);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            while (tree.Count \u003e 0)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                FrameworkElement current \u003d tree.Pop();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                if (current.Name \u003d\u003d name)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    return current;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                int count \u003d VisualTreeHelper.GetChildrenCount(current);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c count; ++i)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    DependencyObject child \u003d VisualTreeHelper.GetChild(current, i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (child is FrameworkElement)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        tree.Push((FrameworkElement)child);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 51,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/AudioPreviewViews/AudioPreviewPage.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.ComponentModel;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Data;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for AudioPreviewDialogWindow.xaml"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class AudioPreviewPage: Page"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DialogConfirmedDelegate(string textToSpeak, VoiceType selectedVoiceType, IVoice selectedVoice);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public DialogConfirmedDelegate PreviewDialogConfirmedHandler { get; set; }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public VoiceType SelectedVoiceType"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((bool)azureVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.AzureVoice;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)computerVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.ComputerVoice;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)watsonVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.WatsonVoice;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)defaultVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.DefaultVoice;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    IVoice voice \u003d rankedAudioListView.SelectedItem as IVoice;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (voice is AzureVoice)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                        return VoiceType.AzureVoice;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    else if (voice is WatsonVoice)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                        return VoiceType.WatsonVoice;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        return VoiceType.ComputerVoice;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        public IVoice SelectedVoice"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((bool)azureVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    return azureVoiceComboBox.SelectedItem as AzureVoice;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)computerVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    return computerVoiceComboBox.SelectedItem as ComputerVoice;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)watsonVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    return watsonVoiceComboBox.SelectedItem as WatsonVoice;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)defaultVoiceRadioButton.IsChecked)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    return AudioSettingService.selectedVoice;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    return rankedAudioListView.SelectedItem as IVoice;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        private static Dictionary\u003cstring, string\u003e textSpokenByPerson "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003d new Dictionary\u003cstring, string\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        public AudioPreviewPage()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceComboBox.ItemsSource \u003d AzureVoiceList.voices"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                .Where(x \u003d\u003e !AudioSettingService.preferredVoices.Any(y \u003d\u003e y.VoiceName \u003d\u003d x.VoiceName));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceComboBox.DisplayMemberPath \u003d \"Voice\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceComboBox.ItemsSource \u003d ComputerVoiceRuntimeService.Voices"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                .Where(x \u003d\u003e !AudioSettingService.preferredVoices.Any(y \u003d\u003e y.VoiceName \u003d\u003d x.VoiceName));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceComboBox.ItemsSource \u003d WatsonRuntimeService.Voices"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                .Where(x \u003d\u003e !AudioSettingService.preferredVoices.Any(y \u003d\u003e y.VoiceName \u003d\u003d x.VoiceName));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            rankedAudioListView.DataContext \u003d this;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            rankedAudioListView.ItemsSource \u003d AudioSettingService.preferredVoices;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Public Functions"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetAudioPreviewSettings(string textToSpeak, VoiceType selectedVoiceType, IVoice selectedVoice)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            spokenText.Text \u003d textToSpeak;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedVoiceType \u003d\u003d VoiceType.DefaultVoice)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                defaultVoiceRadioButton.IsChecked \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            if (rankedAudioListView.Items.Contains(selectedVoice))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                rankedAudioListView.SelectedItem \u003d selectedVoice;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (selectedVoiceType)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.AzureVoice:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    azureVoiceRadioButton.IsChecked \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    azureVoiceComboBox.SelectedItem \u003d selectedVoice as AzureVoice;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.ComputerVoice:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    computerVoiceRadioButton.IsChecked \u003d true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    computerVoiceComboBox.SelectedItem \u003d selectedVoice as ComputerVoice;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.WatsonVoice:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                    watsonVoiceRadioButton.IsChecked \u003d true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                    watsonVoiceComboBox.SelectedItem \u003d selectedVoice as WatsonVoice;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    defaultVoiceRadioButton.IsChecked \u003d true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        #region XAML-Binded Event Handlers"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AudioPreviewPage_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            ToggleAzureFunctionVisibility();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            ToggleWatsonFunctionVisibility();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            defaultVoiceLabel.Content \u003d AudioSettingService.selectedVoice.ToString();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            defaultVoiceRadioButton.Checked +\u003d RadioButton_Checked;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceRadioButton.Checked +\u003d RadioButton_Checked;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceRadioButton.Checked +\u003d RadioButton_Checked;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceRadioButton.Checked +\u003d RadioButton_Checked;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceComboBox.IsEnabled \u003d azureVoiceComboBox.Items.Count \u003e 0"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 AzureRuntimeService.IsAzureAccountPresentAndValid;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceComboBox.IsEnabled \u003d watsonVoiceComboBox.Items.Count \u003e 0"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 WatsonRuntimeService.IsWatsonAccountPresentAndValid;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceComboBox.IsEnabled \u003d computerVoiceComboBox.Items.Count \u003e 0;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceRadioButton.IsEnabled \u003d azureVoiceComboBox.Items.Count \u003e 0 "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 AzureRuntimeService.IsAzureAccountPresentAndValid;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceRadioButton.IsEnabled \u003d watsonVoiceComboBox.Items.Count \u003e 0"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 WatsonRuntimeService.IsWatsonAccountPresentAndValid;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceRadioButton.IsEnabled \u003d computerVoiceComboBox.Items.Count \u003e 0;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            ICollectionView view \u003d CollectionViewSource.GetDefaultView(rankedAudioListView.ItemsSource);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            view.Refresh();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AzureVoiceLogInButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.AudioPreviewPageHeight \u003d Height;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToAzureLoginPage;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WatsonVoiceLogInButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.AudioPreviewPageHeight \u003d Height;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToWatsonLoginPage;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SpeakButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            string textToSpeak \u003d spokenText.Text.Trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(textToSpeak))"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice \u003d ((Button)sender).CommandParameter as IVoice;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            if (voice \u003d\u003d null)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                voice \u003d SelectedVoice;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            if (voice is ComputerVoice)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                ComputerVoiceRuntimeService.SpeakString(textToSpeak, voice as ComputerVoice);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is AzureVoice \u0026\u0026 !IsSameTextSpokenBySamePerson(textToSpeak, voice.VoiceName))"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureRuntimeService.SpeakString(textToSpeak, voice as AzureVoice);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is AzureVoice \u0026\u0026 IsSameTextSpokenBySamePerson(textToSpeak, voice.VoiceName))"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                string dirPath \u003d System.IO.Path.GetTempPath() + AudioService.TempFolderName;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                string filePath \u003d dirPath + \"\\\\\" +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                    string.Format(ELearningLabText.AudioPreviewFileNameFormat, voice.VoiceName);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                 AzureRuntimeService.PlaySavedAudioForPreview(filePath);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is WatsonVoice \u0026\u0026 !IsSameTextSpokenBySamePerson(textToSpeak, voice.VoiceName))"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                 WatsonRuntimeService.Speak(textToSpeak, voice as WatsonVoice);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is WatsonVoice \u0026\u0026 IsSameTextSpokenBySamePerson(textToSpeak, voice.VoiceName))"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                string dirPath \u003d System.IO.Path.GetTempPath() + AudioService.TempFolderName;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                string filePath \u003d dirPath + \"\\\\\" +"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                    string.Format(ELearningLabText.AudioPreviewFileNameFormat, voice.VoiceName);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureRuntimeService.PlaySavedAudioForPreview(filePath);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OkButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            PreviewDialogConfirmedHandler(spokenText.Text.Trim(), SelectedVoiceType, SelectedVoice);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.Close();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CancelButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.Close();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RadioButton_Checked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            if (computerVoiceRadioButton.IsChecked \u003d\u003d true"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 computerVoiceComboBox.Items.Count \u003e 0)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (azureVoiceRadioButton.IsChecked \u003d\u003d true"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 azureVoiceComboBox.Items.Count \u003e 0)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d AzureRuntimeService.IsAzureAccountPresentAndValid;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (azureVoiceRadioButton.IsChecked \u003d\u003d true"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 azureVoiceComboBox.Items.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (watsonVoiceRadioButton.IsChecked \u003d\u003d true"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 watsonVoiceComboBox.Items.Count \u003e 0)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d WatsonRuntimeService.IsWatsonAccountPresentAndValid;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (watsonVoiceRadioButton.IsChecked \u003d\u003d true"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 watsonVoiceComboBox.Items.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            if (defaultVoiceRadioButton.IsChecked \u003d\u003d true)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                voice \u003d AudioSettingService.selectedVoice;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                voice \u003d ((RadioButton)sender).CommandParameter as IVoice;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            if (voice \u003d\u003d null)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is ComputerVoice)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (voice is WatsonVoice)"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d WatsonRuntimeService.IsWatsonAccountPresentAndValid;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            else "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                previewButton.IsEnabled \u003d AzureRuntimeService.IsAzureAccountPresentAndValid;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Private Helper Functions"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ToggleAzureFunctionVisibility()"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            if (AzureRuntimeService.IsAzureAccountPresentAndValid)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceComboBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceLoginButton.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceRadioButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceLoginButton.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceRadioButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ToggleWatsonFunctionVisibility()"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            if (WatsonRuntimeService.IsWatsonAccountPresentAndValid)"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceComboBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceLoginButton.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceRadioButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceLoginButton.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceRadioButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsSameTextSpokenBySamePerson(string textToSpeak, string personName)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            if (textSpokenByPerson.ContainsKey(personName))"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                string textSpoken \u003d textSpokenByPerson[personName];"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                if (textSpoken.Trim().Equals(textToSpeak.Trim()))"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                textSpokenByPerson[personName] \u003d textToSpeak.Trim();"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                textSpokenByPerson.Add(personName, textToSpeak);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 350,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/AudioSettingsViews/AudioMainSettingsPage.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator.WatsonVoiceGenerator.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service.StorageService;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for AudioSettingsPage.xaml"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class AudioMainSettingsPage : Page"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DialogConfirmedDelegate(VoiceType selectedVoiceType, IVoice selectedVoice, bool isPreviewCurrentSlide);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public DialogConfirmedDelegate DialogConfirmedHandler { get; set; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DefaultVoiceChangedDelegate();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public DefaultVoiceChangedDelegate DefaultVoiceChangedHandler { get; set; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsDefaultVoiceChangedHandlerAssigned { get; set; } \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public VoiceType SelectedVoiceType"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((bool)RadioDefaultVoice.IsChecked)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.ComputerVoice;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)RadioAzureVoice.IsChecked)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.AzureVoice;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    return VoiceType.WatsonVoice;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public IVoice SelectedVoice"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((bool)RadioDefaultVoice.IsChecked)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    return computerVoiceComboBox.SelectedItem as ComputerVoice;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                else if ((bool)RadioAzureVoice.IsChecked)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    return azureVoiceComboBox.SelectedItem as AzureVoice;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    return watsonVoiceComboBox.SelectedItem as WatsonVoice;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableCollection\u003cIVoice\u003e Voices { get; set; }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        private Dictionary\u003cint, ComboBox\u003e rankToComboBoxMapping;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cIVoice\u003e rankedAudioListCache \u003d new List\u003cIVoice\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        public AudioMainSettingsPage()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            rankToComboBoxMapping \u003d new Dictionary\u003cint, ComboBox\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceComboBox.ItemsSource \u003d AzureVoiceList.voices;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceComboBox.DisplayMemberPath \u003d \"Voice\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceComboBox.ItemsSource \u003d ComputerVoiceRuntimeService.Voices;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceComboBox.DisplayMemberPath \u003d \"Voice\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceComboBox.ItemsSource \u003d WatsonRuntimeService.Voices;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceComboBox.DisplayMemberPath \u003d \"Voice\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            Voices \u003d LoadVoices();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            audioListView.DataContext \u003d this;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            audioListView.ItemsSource \u003d Voices;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.DataContext \u003d this;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.ItemsSource \u003d AudioSettingService.preferredVoices;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetAudioMainSettings(VoiceType selectedVoiceType, IVoice selectedVoice, bool isPreviewChecked)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoiceComboBox.ToolTip \u003d NarrationsLabText.SettingsVoiceSelectionInputTooltip;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            previewCheckbox.IsChecked \u003d isPreviewChecked;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            previewCheckbox.ToolTip \u003d NarrationsLabText.SettingsPreviewCheckboxTooltip;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (selectedVoiceType)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.AzureVoice:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                    RadioAzureVoice.IsChecked \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    azureVoiceComboBox.SelectedItem \u003d selectedVoice as AzureVoice;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.ComputerVoice:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    RadioDefaultVoice.IsChecked \u003d true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                    computerVoiceComboBox.SelectedItem \u003d selectedVoice as ComputerVoice;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.WatsonVoice:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    RadioWatsonVoice.IsChecked \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                    watsonVoiceComboBox.SelectedItem \u003d selectedVoice as WatsonVoice;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        #region XAML-Binded Event Handlers"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AudioMainSettingsPage_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            ToggleAzureFunctionVisibility();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            ToggleWatsonFunctionVisibility();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupAudioPreferenceUI();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OkButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogConfirmedHandler(SelectedVoiceType, SelectedVoice, previewCheckbox.IsChecked.GetValueOrDefault());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsDefaultVoiceChangedHandlerAssigned)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            { "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                DefaultVoiceChangedHandler();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            if (audioListView.IsVisible \u0026\u0026 !UpdateRankedAudioPreferences())"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingStorageService.SaveAudioSettingPreference();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.Close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AzureVoiceBtn_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToAzureLoginPage;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WatsonVoiceBtn_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToWatsonLoginPage;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CancelButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            if (audioListView.IsVisible)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cIVoice\u003e rankedAudioListCacheCopy \u003d rankedAudioListCache.Select(x \u003d\u003e (IVoice)x.Clone()).ToList();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                AudioSettingService.preferredVoices \u003d new ObservableCollection\u003cIVoice\u003e(rankedAudioListCacheCopy);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((AudioSettingService.selectedVoiceType \u003d\u003d VoiceType.AzureVoice "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 !AzureRuntimeService.IsAzureAccountPresent()) || "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                (AudioSettingService.selectedVoiceType \u003d\u003d VoiceType.WatsonVoice"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 !WatsonRuntimeService.IsWatsonAccountPresent()))"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                ComputerVoice defaultVoiceSelected \u003d computerVoiceComboBox.SelectedItem as ComputerVoice;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogConfirmedHandler(VoiceType.ComputerVoice, defaultVoiceSelected, previewCheckbox.IsChecked.GetValueOrDefault());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ChangeAzureAccountButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToAzureLoginPage;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LogOutAzureAccountButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureAccount.GetInstance().Clear();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureAccountStorageService.DeleteUserAccount();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoiceBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            changeAcctBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            logoutBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            RadioAzureVoice.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            RadioDefaultVoice.IsChecked \u003d true;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureRuntimeService.IsAzureAccountPresentAndValid \u003d false;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ChangeWatsonAccountButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToWatsonLoginPage;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LogOutWatsonAccountButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            WatsonAccount.GetInstance().Clear();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            WatsonAccountStorageService.DeleteUserAccount();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            watsonVoiceLoginBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            changeWatsonAcctBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            logoutWatsonAcctBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            RadioWatsonVoice.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            RadioDefaultVoice.IsChecked \u003d true;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            WatsonRuntimeService.IsWatsonAccountPresentAndValid \u003d false;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PreviewCheckBox_Checked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.IsPreviewEnabled \u003d true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PreviewCheckBox_Unchecked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.IsPreviewEnabled \u003d false;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EditRankingButton_Clicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            rankedAudioListCache \u003d AudioSettingService.preferredVoices.Select(x \u003d\u003e (IVoice)x.Clone()).ToList();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            editPreferenceButton.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            audioListView.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            updatePreferenceButton.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        /// When ranking combobox selection changed, we would like to check if there exists "
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        /// duplicate ranking. For example, if item A has ranking 1, and subsequently item B\u0027s"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        /// ranking is also changed to ranking 1. Then we should remove ranking 1 for item A."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RankingComboBox_SelectionChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            ComboBox comboBox \u003d sender as ComboBox;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            if (comboBox.SelectedIndex \u003e 0)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                int rank \u003d comboBox.SelectedIndex;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                // check if a combobox with the same ranking already exists"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                if (rankToComboBoxMapping.ContainsKey(rank))"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                    ComboBox previousComboBox \u003d rankToComboBoxMapping[rank];"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if another combobox item with the same ranking exists, we will "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                    // remove the ranking for the previous combobox item."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    if (previousComboBox.SelectedIndex \u003d\u003d rank \u0026\u0026 !comboBox.Equals(previousComboBox))"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                        previousComboBox.SelectedIndex \u003d 0;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                    rankToComboBoxMapping.Remove(rank);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                rankToComboBoxMapping.Add(rank, comboBox);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateRankingButton_Clicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!UpdateRankedAudioPreferences())"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.ItemsSource \u003d null;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.ItemsSource \u003d AudioSettingService.preferredVoices;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            // update UI"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            editPreferenceButton.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            audioListView.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            updatePreferenceButton.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Private Helper Functions"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ToggleAzureFunctionVisibility()"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            if (AzureRuntimeService.IsAzureAccountPresentAndValid)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceComboBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceBtn.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                changeAcctBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                logoutBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                RadioAzureVoice.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                azureVoiceBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                changeAcctBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                logoutBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                RadioAzureVoice.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ToggleWatsonFunctionVisibility()"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            if (WatsonRuntimeService.IsWatsonAccountPresentAndValid)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceComboBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceLoginBtn.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                changeWatsonAcctBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                logoutWatsonAcctBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                RadioWatsonVoice.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                watsonVoiceLoginBtn.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                changeWatsonAcctBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                logoutWatsonAcctBtn.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                RadioWatsonVoice.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cIVoice\u003e LoadVoices()"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableCollection\u003cIVoice\u003e voices \u003d new ObservableCollection\u003cIVoice\u003e();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (IVoice voice in AzureVoiceList.voices)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                voices.Add(voice);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (IVoice voice in ComputerVoiceRuntimeService.Voices)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                voices.Add(voice);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (IVoice voice in WatsonRuntimeService.Voices)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                voices.Add(voice);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            return voices;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool UpdateRankedAudioPreferences()"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cIVoice\u003e voices \u003d Voices.ToList().Where(x \u003d\u003e x.Rank \u003e 0).OrderBy(x \u003d\u003e x.Rank).ToList();"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableCollection\u003cIVoice\u003e voicesRanked \u003d new ObservableCollection\u003cIVoice\u003e();"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c voices.Count; i++)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                IVoice voice \u003d voices[i];"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                if (voice.Rank !\u003d i + 1)"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(\"Please rank in sequence.\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (IVoice voice in voices)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                voicesRanked.Add(voice);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingService.preferredVoices \u003d voicesRanked;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupAudioPreferenceUI()"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            editPreferenceButton.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            audioListView.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            updatePreferenceButton.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            preferredAudioListView.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 362,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/AudioSettingsViews/AudioSettingsDialogWindow.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.ComponentModel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views.AudioSettingsViews;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for NarrationsLabSettingsDialogBox.xaml"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class AudioSettingsDialogWindow : INotifyPropertyChanged"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public event PropertyChangedEventHandler PropertyChanged \u003d (sender, e) \u003d\u003e { };"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public AudioSettingsWindowDisplayOptions WindowDisplayOption"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                return windowDisplayOption;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                windowDisplayOption \u003d value;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                PropertyChanged(this, new PropertyChangedEventArgs(\"WindowDisplayOption\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public Page MainPage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                return mainPage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                mainPage \u003d value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                PropertyChanged(this, new PropertyChangedEventArgs(\"MainPage\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public Page SubAzureLoginPage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                return subAzureLoginPage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                subAzureLoginPage \u003d value;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                PropertyChanged(this, new PropertyChangedEventArgs(\"SubAzureLoginPage\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public Page SubWatsonLoginPage"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                return subWatsonLoginPage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                subWatsonLoginPage \u003d value;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                PropertyChanged(this, new PropertyChangedEventArgs(\"SubWatsonLoginPage\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        private Page mainPage, subAzureLoginPage, subWatsonLoginPage;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private AudioSettingsWindowDisplayOptions windowDisplayOption;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        public AudioSettingsDialogWindow(AudioSettingsPage page)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            mainPage \u003d CreatePageFromIndex(page);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            mainPage.DataContext \u003d this;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            subAzureLoginPage \u003d new AzureVoiceLoginPage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            subAzureLoginPage.DataContext \u003d this;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            subWatsonLoginPage \u003d new WatsonVoiceLoginPage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            subWatsonLoginPage.DataContext \u003d this;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            windowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToMainPage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            DataContext \u003d this;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            audioSettingsDialogWindow.AllowsTransparency \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            audioSettingsDialogWindow.Opacity \u003d 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void OnRenderSizeChanged(SizeChangedInfo sizeInfo)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            base.OnRenderSizeChanged(sizeInfo);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            //Calculate half of the offset to move the form"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sizeInfo.HeightChanged)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                Top +\u003d (sizeInfo.PreviousSize.Height - sizeInfo.NewSize.Height) / 2;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sizeInfo.WidthChanged)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                Left +\u003d (sizeInfo.PreviousSize.Width - sizeInfo.NewSize.Width) / 2;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MetroWindow_ContentRendered(object sender, System.EventArgs e)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            audioSettingsDialogWindow.Opacity \u003d 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        private Page CreatePageFromIndex(AudioSettingsPage index)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                case AudioSettingsPage.MainSettingsPage:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                    return new AudioMainSettingsPage();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                case AudioSettingsPage.AzureLoginPage:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    AzureVoiceLoginPage loginInstance \u003d new AzureVoiceLoginPage();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    loginInstance.key.Text \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    loginInstance.endpoint.SelectedIndex \u003d -1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    return loginInstance;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                case AudioSettingsPage.AudioPreviewPage:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    return new AudioPreviewPage();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    public enum AudioSettingsWindowDisplayOptions"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        GoToMainPage,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        GoToAzureLoginPage,"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        GoToWatsonLoginPage"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 133,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/AudioSettingsViews/AzureVoiceLoginPage.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for HumanVoiceLoginPage.xaml"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class AzureVoiceLoginPage : Page"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {     "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public AzureVoiceLoginPage()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        #region XAML-Binded Event Handlers"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Page_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            key.Text \u003d string.Empty;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            endpoint.SelectedIndex \u003d -1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CancelButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            SwitchViewToPreviousPage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ConfirmButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            string _endpoint \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            string _key \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                _key \u003d key.Text.Trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                string region \u003d ((ComboBoxItem)endpoint.SelectedItem).Content.ToString().Trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                _endpoint \u003d EndpointToUriConverter.azureRegionToEndpointMapping[region];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Key or Region cannot be empty!\", \"Invalid Input\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            if (AzureRuntimeService.IsValidUserAccount(_key, _endpoint))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                // Delete previous user account"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccount.GetInstance().Clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccountStorageService.DeleteUserAccount();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                // Create and save new user account"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                string _region \u003d ((ComboBoxItem)endpoint.SelectedItem).Content.ToString().Trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccount.GetInstance().SetUserKeyAndRegion(_key, _region);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureAccountStorageService.SaveUserAccount(AzureAccount.GetInstance());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                AzureRuntimeService.IsAzureAccountPresentAndValid \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                SwitchViewToPreviousPage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Invalid Azure Account.\\nIs your account expired?\\nAre you connected to WiFi?\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Private Helper Functions"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SwitchViewToPreviousPage()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow parentWindow \u003d Window.GetWindow(this) as AudioSettingsDialogWindow;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            parentWindow.WindowDisplayOption \u003d AudioSettingsWindowDisplayOptions.GoToMainPage;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 76,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/ELearningWorkspaceViews/CustomItemView.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Windows.Controls;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for CustomAnimationBlockView.xaml"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class CustomItemView : UserControl"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomItemView()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/ELearningWorkspaceViews/ELearningLabMainPanel.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.ComponentModel;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Threading;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Converters;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.ModelFactory;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Extensions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for ELearningLabMainPanel.xaml"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 618"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ELearningLabMainPanel : UserControl"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableCollection\u003cClickItem\u003e Items { get; set; } \u003d new ObservableCollection\u003cClickItem\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        public int FirstClickNumber"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                return slide.IsFirstAnimationTriggeredByClick() ? 1 : 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsFirstItemSelfExplanation"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Items.Count \u003e 0)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                    return Items[0] is ExplanationItem;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPointSlide slide;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        private int slideId;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isSynced;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        private BackgroundWorker worker;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        public ELearningLabMainPanel()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            syncImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SyncExplanationIcon);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            createImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.AddExplanationIcon);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d true;          "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeBackgroundWorker();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            slide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                SetupSpinnerOnLoadingBegin(content: ELearningLabText.NoSlideSelectedMessage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupSpinnerOnLoadingBegin(content: ELearningLabText.OnLoadingMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            slideId \u003d slide.ID;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            worker.RunWorkerAsync();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ListViewItemPropertyChanged(object sender, PropertyChangedEventArgs e)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This method is called when slide selection is changed "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        /// and e-learning lab is open"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ReloadELearningLabOnSlideSelectionChanged()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            slide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                slideId \u003d -1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                SetupSpinnerOnLoadingBegin(ELearningLabText.NoSlideSelectedMessage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            // We do not re-initailize elearning lab if "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            // the current slide is the same as previous slide. "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            // This can happen when user opens presentation mode on current slide"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            // and exit presentation mode subsequently."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            // check if the current slide is the same as previous slide"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide !\u003d null \u0026\u0026 slide.ID.Equals(slideId))"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            // update current slide instance"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            slideId \u003d slide.ID;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            listView.ItemsSource \u003d null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupSpinnerOnLoadingBegin(ELearningLabText.OnLoadingMessage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (worker.IsBusy)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                worker.CancelAsync();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                worker.RunWorkerAsync();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This method is called when slide selection is changed"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        /// regardless of whether e-learning lab is open"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncElearningLabOnSlideSelectionChanged()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                isSynced \u003d true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            // do not check for sync if previous slide is deleted"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                int id \u003d slide.ID;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                isSynced \u003d true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            // We do not check for sync if the current slide is the same as previous slide. "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide _slide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_slide !\u003d null \u0026\u0026 _slide.ID.Equals(slideId))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsInSync())"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Windows.Forms.DialogResult result \u003d System.Windows.Forms.MessageBox.Show("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                       ELearningLabText.PromptToSyncMessage,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                       ELearningLabText.ELearningTaskPaneLabel, System.Windows.Forms.MessageBoxButtons.YesNo);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                if (result \u003d\u003d System.Windows.Forms.DialogResult.Yes)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncClickItems();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                isSynced \u003d true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RefreshVoiceLabelOnAudioSettingChanged()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Visibility \u003d\u003d Visibility.Visible)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                ObservableCollection\u003cClickItem\u003e clickItems \u003d listView.ItemsSource as ObservableCollection\u003cClickItem\u003e;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (ClickItem item in clickItems)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (item is ExplanationItem)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                        ExplanationItem selfExplanationClickItem \u003d item as ExplanationItem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (StringUtility.ExtractDefaultLabelFromVoiceLabel(selfExplanationClickItem.VoiceLabel)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                            .Equals(ELearningLabText.DefaultAudioIdentifier))"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                            selfExplanationClickItem.VoiceLabel \u003d string.Format(ELearningLabText.AudioDefaultLabelFormat,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                                AudioSettingService.selectedVoice.ToString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitializeBackgroundWorker()"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            worker \u003d new BackgroundWorker();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            worker.WorkerSupportsCancellation \u003d true;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            worker.DoWork +\u003d Worker_DoWorkToReloadElearningLabItems;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            worker.RunWorkerCompleted +\u003d Worker_RunWorkerCompleted;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Worker_DoWorkToReloadElearningLabItems(object sender, DoWorkEventArgs e)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            Items \u003d LoadItems(e);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: true, e: e);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ClickItem item in Items)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                if (worker.CancellationPending)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Cancel \u003d true;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                item.PropertyChanged +\u003d ListViewItemPropertyChanged;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Worker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            // update UI"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Cancelled)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                worker.RunWorkerAsync();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                Dispatcher.Invoke(() \u003d\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                    listView.ItemsSource \u003d null;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                    listView.ItemsSource \u003d Items;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                    RemoveSpinnerOnLoadingFinished();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SyncClickItems()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            bool removeAzureAudioIfAccountInvalid \u003d false;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            bool removeWatsonAudioIfAccountInvalid \u003d false;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsAzureVoiceSelected())"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                removeAzureAudioIfAccountInvalid \u003d !AzureRuntimeService.IsAzureAccountPresentAndValid;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsWatsonVoiceSelected())"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                removeWatsonAudioIfAccountInvalid \u003d !WatsonRuntimeService.IsWatsonAccountPresentAndValid;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            // also align eLL first item click No to be the same as first click No on animation pane"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncCustomAnimationToTaskpane(uncheckAzureAudio: removeAzureAudioIfAccountInvalid,"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                uncheckWatsonAudio: removeWatsonAudioIfAccountInvalid);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cExplanationItem\u003e items \u003d Items.Where(x \u003d\u003e x is ExplanationItem)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                .Cast\u003cExplanationItem\u003e().ToList();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningService eLearningService \u003d new ELearningService(slide, items);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveLabAnimationsFromAnimationPane(eLearningService);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            // align first click No on animation pane to be the same as eLL first click No"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            AlignFirstClickNumberForCustomItem();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningLabTextStorageService.StoreSelfExplanationTextToSlide("
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                Items.Where(x \u003d\u003e x is ExplanationItem \u0026\u0026 !((ExplanationItem)x).IsEmpty)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                .Cast\u003cExplanationItem\u003e().ToList(), slide);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncLabItemToAnimationPane(eLearningService);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cClickItem\u003e LoadItems(DoWorkEventArgs e)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            SelfExplanationTagService.Clear();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNo \u003d FirstClickNumber;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableCollection\u003cClickItem\u003e customItems \u003d new ObservableCollection\u003cClickItem\u003e();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableCollection\u003cClickItem\u003e clickItems \u003d new ObservableCollection\u003cClickItem\u003e();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cDictionary\u003cstring, string\u003e\u003e explanationItems \u003d"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                ELearningLabTextStorageService.LoadSelfExplanationsFromSlide(slide);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            ClickItem customClickBlock;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            SelfExplanationTagService.PopulateTagNos(slide.GetShapesWithNameRegex(ELearningLabText.PPTLShapeNameRegex)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                .Select(x \u003d\u003e x.Name).ToList());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            HashSet\u003cint\u003e tagNums \u003d new HashSet\u003cint\u003e();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e().ToList();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            int startIdx \u003d 0;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            bool hasReachedEndOfSequence \u003d effects.Count \u003d\u003d 0;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomEffect\u003e customEffects \u003d new List\u003cCustomEffect\u003e();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cELLEffect\u003e pptlEffects \u003d new List\u003cELLEffect\u003e();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            do"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                if (worker.CancellationPending)"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Cancel \u003d true;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                    return clickItems;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                customEffects \u003d new List\u003cCustomEffect\u003e();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d startIdx; i \u003c effects.Count; i++)"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                    Effect effect \u003d effects.ElementAt(i);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (i \u003e startIdx \u0026\u0026 effect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                        startIdx \u003d i;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (i \u003d\u003d effects.Count - 1)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                        hasReachedEndOfSequence \u003d true;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                    bool isPPTLEffect \u003d SelfExplanationTagService.ExtractTagNo(effect.Shape.Name) !\u003d -1;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!isPPTLEffect)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                        customEffects.Add(new CustomEffect(effect.Shape.Name, effect.Shape.Id.ToString(),"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                            EffectToAnimationTypeConverter.GetAnimationTypeOfEffect(effect)));"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                customClickBlock \u003d"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                    new CustomItemFactory(customEffects).GetBlock();"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                if (customClickBlock !\u003d null)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                    customClickBlock.ClickNo \u003d clickNo;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                    customItems.Add(customClickBlock);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                }               "
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                clickNo++;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            while (startIdx \u003c\u003d effects.Count - 1 \u0026\u0026 !hasReachedEndOfSequence);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            while (explanationItems !\u003d null \u0026\u0026 explanationItems.Count \u003e 0 \u0026\u0026 customItems.Count \u003e 0)"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                if (worker.CancellationPending)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Cancel \u003d true;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                    return clickItems;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                ExplanationItem expItem \u003d CreateExpItemFromDictionary(explanationItems.First());"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomItem customItem \u003d customItems.ElementAt(0) as CustomItem;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                if (customItem.ClickNo \u003c\u003d expItem.ClickNo)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItems.Add(customItem);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                    customItems.RemoveAt(0);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItems.Add(expItem);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                    explanationItems.RemoveAt(0);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            while (explanationItems !\u003d null \u0026\u0026 explanationItems.Count \u003e 0)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                if (worker.CancellationPending)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Cancel \u003d true;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                    return clickItems;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                ExplanationItem expItem \u003d CreateExpItemFromDictionary(explanationItems.First());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                explanationItems.RemoveAt(0);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItems.Add(expItem);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            while (customItems.Count \u003e 0)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                if (worker.CancellationPending)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Cancel \u003d true;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                    return clickItems;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomItem customItem \u003d customItems.ElementAt(0) as CustomItem;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                customItems.RemoveAt(0);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItems.Add(customItem);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            return clickItems;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Custom Event Handlers for SelfExplanationBlockView"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleUpButtonClickedEvent(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem labItem \u003d ((Button)e.OriginalSource).CommandParameter as ExplanationItem;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d Items.ToList().FindIndex(x \u003d\u003e x is ExplanationItem"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 ((ExplanationItem)x).TagNo \u003d\u003d labItem.TagNo);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003e 0)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                Items.Move(index, index - 1);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            ScrollItemToView(labItem);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleDownButtonClickedEvent(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem labItem \u003d ((Button)e.OriginalSource).CommandParameter as ExplanationItem;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d Items.ToList().FindIndex(x \u003d\u003e x is ExplanationItem"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 ((ExplanationItem)x).TagNo \u003d\u003d labItem.TagNo);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003c Items.Count() - 1 \u0026\u0026 index \u003e\u003d 0)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                Items.Move(index, index + 1);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            ScrollItemToView(labItem);"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleDeleteButtonClickedEvent(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem labItem \u003d ((Button)e.OriginalSource).CommandParameter as ExplanationItem;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d Items.ToList().FindIndex(x \u003d\u003e x is ExplanationItem"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            \u0026\u0026 ((ExplanationItem)x).TagNo \u003d\u003d labItem.TagNo);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            Items.RemoveAt(index);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleTriggerTypeComboBoxSelectionChangedEvent(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        #region XMAL-Binded Event Handler"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SyncButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncClickItems();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d true;"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem selfExplanationClickItem \u003d new ExplanationItem(captionText: string.Empty);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            selfExplanationClickItem.tagNo \u003d SelfExplanationTagService.GenerateUniqueTag();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            Items.Add(selfExplanationClickItem);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            ScrollListViewToEnd();"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddItemAboveContextMenu_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            ClickItem item \u003d ((MenuItem)sender).CommandParameter as ClickItem;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem selfExplanationClickItem \u003d new ExplanationItem(captionText: string.Empty);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            selfExplanationClickItem.tagNo \u003d SelfExplanationTagService.GenerateUniqueTag();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item is ExplanationItem)"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d Items.ToList().FindIndex(x \u003d\u003e x is ExplanationItem"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 ((ExplanationItem)x).TagNo \u003d\u003d ((ExplanationItem)item).TagNo);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d Items.IndexOf(item);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "            Items.Insert(index, selfExplanationClickItem);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            ScrollItemToView(selfExplanationClickItem);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddItemBelowContextMenu_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            ClickItem item \u003d ((MenuItem)sender).CommandParameter as ClickItem;"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem selfExplanationClickItem \u003d new ExplanationItem(captionText: string.Empty);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            selfExplanationClickItem.tagNo \u003d SelfExplanationTagService.GenerateUniqueTag();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item is ExplanationItem)"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d Items.ToList().FindIndex(x \u003d\u003e x is ExplanationItem"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 ((ExplanationItem)x).TagNo \u003d\u003d ((ExplanationItem)item).TagNo);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d Items.IndexOf(item);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003c listView.Items.Count - 1)"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                Items.Insert(index + 1, selfExplanationClickItem);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                Items.Add(selfExplanationClickItem);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            isSynced \u003d false;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateClickNumAndTriggerInItems(useWorker: false, e: null);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            ScrollItemToView(selfExplanationClickItem);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Methods"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsInSync()"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "            return isSynced;"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SyncCustomAnimationToTaskpane(bool uncheckAzureAudio, bool uncheckWatsonAudio)"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            Queue\u003cCustomItem\u003e customClickItems \u003d LoadCustomClickItems();"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            ReplaceCustomItemsInItemsSource(customClickItems);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePropertiesInItemsSource(uncheckAzureAudio: uncheckAzureAudio, uncheckWatsonAudio: uncheckWatsonAudio);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SyncLabItemToAnimationPane(ELearningService service)"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            int totalSelfExplanationItemsCount \u003d service.GetExplanationItemsCount();"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            ProcessingStatusForm progressBarForm \u003d"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                new ProcessingStatusForm(totalSelfExplanationItemsCount, BackgroundWorkerType.ELearningLabService, service);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBarForm.ShowDialog();"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This method aligns starting click number between e-learning lab and animation pane."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This is necessary when first click item on e-learning lab pane is self-explanation item."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AlignFirstClickNumberForCustomItem()"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "            // effects contain only custom effects now"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNo \u003d GetClickNoOfFirstCustomItem();"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "            if (clickNo \u003e 0 \u0026\u0026 effects.Count() \u003e 0)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                effects.ElementAt(0).Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (clickNo \u003d\u003d 0 \u0026\u0026 effects.Count() \u003e 0)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                effects.ElementAt(0).Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        private int GetClickNoOfFirstCustomItem()"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c Items.Count; i++)"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Items[i] is CustomItem)"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                    return Items[i].ClickNo;"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ScrollItemToView(ClickItem item)"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Loaded,"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                new Action(delegate"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                    listView.ScrollIntoView(item);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ScrollListViewToEnd()"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.CurrentDispatcher.BeginInvoke(DispatcherPriority.Loaded, new Action(delegate"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                if (listView.Items.Count \u003e 0)"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                    listView.ScrollIntoView(listView.Items[listView.Items.Count - 1]);"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveLabAnimationsFromAnimationPane(ELearningService service)"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            service.RemoveLabAnimationsFromAnimationPane();"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateClickNumOnClickItem(ClickItem clickItem, int startClickNo, int index)"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isOnClickSelfExplanationAfterCustomItem \u003d index \u003e 0 \u0026\u0026"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem is ExplanationItem \u0026\u0026 (Items.ElementAt(index - 1) is CustomItem)"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (clickItem as ExplanationItem).TriggerIndex !\u003d (int)TriggerType.OnClick;"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isFirstOnClickSelfExplanationItem \u003d index \u003d\u003d 0"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (clickItem is ExplanationItem)"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (clickItem as ExplanationItem).TriggerIndex \u003d\u003d (int)TriggerType.OnClick;"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isFirstWithPreviousSelfExplanationItem \u003d"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003d\u003d 0"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (clickItem is ExplanationItem)"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (clickItem as ExplanationItem).TriggerIndex !\u003d (int)TriggerType.OnClick;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDummySelfExplanationItem \u003d"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem is ExplanationItem \u0026\u0026 (clickItem as ExplanationItem).IsDummyItem;"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            /* This commented piece of code is trying to handle the case when first self explanation item (SEI)"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "             * is dummy item, but the second one is active SEI item."
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isAfterDummySelfExplanationItem \u003d"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "                index \u003e 0 \u0026\u0026 (Items.ElementAt(index - 1) is ExplanationItem)"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 (Items.ElementAt(index - 1) as ExplanationItem).IsDummyItem;"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            */"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003d\u003d 0)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem.ClickNo \u003d startClickNo;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isFirstOnClickSelfExplanationItem \u0026\u0026 !isDummySelfExplanationItem)"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItem.ClickNo \u003d 1;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItem.ShouldLabelDisplay \u003d true;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isFirstWithPreviousSelfExplanationItem)"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItem.ClickNo \u003d 0;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItem.ShouldLabelDisplay \u003d true;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isDummySelfExplanationItem)"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItem.ClickNo \u003d 0;"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                    clickItem.ShouldLabelDisplay \u003d false;"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (isOnClickSelfExplanationAfterCustomItem || isDummySelfExplanationItem)"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem.ClickNo \u003d Items.ElementAt(index - 1).ClickNo;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem.ShouldLabelDisplay \u003d false;"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem.ClickNo \u003d Items.ElementAt(index - 1).ClickNo + 1;"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                clickItem.ShouldLabelDisplay \u003d true;"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            clickItem.NotifyPropertyChanged(\"ShouldLabelDisplay\");"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateTriggerOnExplanationItem(ExplanationItem selfExplanationClickItem, int index)"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((index \u003e 0 \u0026\u0026 Items.ElementAt(index - 1) is CustomItem) || index \u003d\u003d 0)"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                selfExplanationClickItem.IsTriggerTypeComboBoxEnabled \u003d true;"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                selfExplanationClickItem.IsTriggerTypeComboBoxEnabled \u003d false;"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                selfExplanationClickItem.TriggerIndex \u003d (int)TriggerType.OnClick;"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSelfExplanationItem(ExplanationItem item, bool uncheckAzureAudio, bool uncheckWatsonAudio)"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(item.CaptionText.Trim()))"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                item.IsVoice \u003d false;"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                item.IsCaption \u003d false;"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!item.HasShortVersion)"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "                    item.IsCallout \u003d false;"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item.HasShortVersion \u0026\u0026 string.IsNullOrEmpty(item.CalloutText.Trim()))"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "                item.IsCallout \u003d false;"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                item.HasShortVersion \u003d false;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item.CaptionText.Trim().Equals(item.CalloutText.Trim()))"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                item.HasShortVersion \u003d false;"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((uncheckAzureAudio \u0026\u0026 AudioService.IsAzureVoiceSelectedForItem(item))"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "                || (uncheckWatsonAudio \u0026\u0026 AudioService.IsWatsonVoiceSelectedForItem(item)))"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                item.IsVoice \u003d false;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                item.VoiceLabel \u003d string.Empty;"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Load custom animations from animation pane separated by click"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003eQueue of CustomClickItem\u003c/returns\u003e"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        private Queue\u003cCustomItem\u003e LoadCustomClickItems()"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNo \u003d FirstClickNumber;"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            Queue\u003cCustomItem\u003e customItems \u003d new Queue\u003cCustomItem\u003e();"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e effects \u003d slide.TimeLine.MainSequence.Cast\u003cEffect\u003e().ToList();"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            int startIdx \u003d 0;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "            bool hasReachedEndOfSequence \u003d effects.Count \u003d\u003d 0;"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            do"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cCustomEffect\u003e customEffects \u003d new List\u003cCustomEffect\u003e();"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d startIdx; i \u003c effects.Count; i++)"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                    Effect effect \u003d effects.ElementAt(i);"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (i \u003e startIdx \u0026\u0026 effect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick)"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "                        startIdx \u003d i;"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (i \u003d\u003d effects.Count - 1)"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                        hasReachedEndOfSequence \u003d true;"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                    bool isCustomEffect \u003d SelfExplanationTagService.ExtractTagNo(effect.Shape.Name) \u003d\u003d -1;"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (isCustomEffect)"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (customEffects.Count \u003d\u003d 0 \u0026\u0026 clickNo \u003e 0)"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                            effect.Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                        customEffects.Add(new CustomEffect(effect.Shape.Name, effect.Shape.Id.ToString(),"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                            EffectToAnimationTypeConverter.GetAnimationTypeOfEffect(effect)));"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomItem customClickBlock \u003d"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                    new CustomItemFactory(customEffects).GetBlock() as CustomItem;"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "                if (customClickBlock !\u003d null)"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "                    customClickBlock.ClickNo \u003d clickNo;"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                    customItems.Enqueue(customClickBlock);"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                clickNo++;"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            while (startIdx \u003c\u003d effects.Count - 1 \u0026\u0026 !hasReachedEndOfSequence);"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            return customItems;"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Replace all CustomClickItem in ItemsSource with `customClickItems`"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        /// If there are more CustomClickItem in ItemsSource, those are deleted."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Additional customClickItem left in customClickItems will be appended to the back of list."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"customClickItems\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cClickItem\u003e ReplaceCustomItemsInItemsSource(Queue\u003cCustomItem\u003e customClickItems)"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c Items.Count(); i++)"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                ClickItem clickItem \u003d Items.ElementAt(i);"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                if (clickItem is CustomItem)"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (customClickItems.Count() \u003e 0)"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "                        CustomItem customClickItem \u003d customClickItems.Dequeue();"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                        Items.RemoveAt(i);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                        Items.Insert(i, customClickItem);"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                        Items.RemoveAt(i);"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                        i--;"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "            while (customClickItems.Count() \u003e 0)"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomItem customClickItem \u003d customClickItems.Dequeue();"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                Items.Add(customClickItem);"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            return Items;"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Update ClickNo property in ClickItem when old CustomClickItem is replaced with new ones."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Note that we cannot reply on `BlockToIndexConverter` to update ClickNo, "
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        /// because ListViewItem which invokes `BlockToIndexConverter`, is loaded lazily."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"clickItems\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cClickItem\u003e UpdatePropertiesInItemsSource(bool uncheckAzureAudio, bool uncheckWatsonAudio)"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNo \u003d FirstClickNumber;"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c Items.Count(); i++)"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                ClickItem clickItem \u003d Items.ElementAt(i);"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateClickNumOnClickItem(clickItem, clickNo, i);"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                if (clickItem is ExplanationItem)"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                    UpdateSelfExplanationItem(clickItem as ExplanationItem, uncheckAzureAudio, uncheckWatsonAudio);"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            return Items;"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateClickNumAndTriggerInItems(bool useWorker, DoWorkEventArgs e)"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            int clickNum \u003d FirstClickNumber;"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c Items.Count(); i++)"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "                if (useWorker \u0026\u0026 worker.CancellationPending)"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Cancel \u003d true;"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                ClickItem clickItem \u003d Items.ElementAt(i);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateClickNumOnClickItem(clickItem, clickNum, i);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                if (clickItem is ExplanationItem)"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                    UpdateTriggerOnExplanationItem(clickItem as ExplanationItem, i);"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsAzureVoiceSelected()"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ClickItem item in Items)"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "                if (item is ExplanationItem \u0026\u0026 AudioService.IsAzureVoiceSelectedForItem(item as ExplanationItem))"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsWatsonVoiceSelected()"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (ClickItem item in Items)"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                if (item is ExplanationItem \u0026\u0026 AudioService.IsWatsonVoiceSelectedForItem(item as ExplanationItem))"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This method iterates through all slides and check if a slide with slideId exists"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        /// We can use slideId to check if a slide exists in slide deck because slideId is "
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        /// uniquely assigned to slide upon initialization and does not change with slide."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"slideId\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool DoesSlideExist(int slideId)"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            Slides slides \u003d Globals.ThisAddIn.Application.ActivePresentation.Slides;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Slide slide in slides)"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slideId \u003d\u003d slide.SlideID)"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupSpinnerOnLoadingBegin(string content)"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            createButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            syncButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "            eLLPane.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingPane.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingLabel.Content \u003d content;"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "            createImage.Opacity \u003d 0.5;"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "            syncImage.Opacity \u003d 0.5;"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveSpinnerOnLoadingFinished()"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "            createButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "            syncButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingPane.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "            eLLPane.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "            createImage.Opacity \u003d 1;"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "            syncImage.Opacity \u003d 1;"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        private ExplanationItem CreateExpItemFromDictionary(Dictionary\u003cstring, string\u003e expItemDic)"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem expItem \u003d new ExplanationItem(expItemDic[ELearningLabText.CaptionTextIdentifier],"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "                                    expItemDic[ELearningLabText.CalloutTextIdentifier], expItemDic[ELearningLabText.VoiceLabel],"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                                    expItemDic[ELearningLabText.CalloutIdentifier] \u003d\u003d \"Y\", expItemDic[ELearningLabText.CaptionIdentifier] \u003d\u003d \"Y\","
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "                                    expItemDic[ELearningLabText.AudioIdentifier] \u003d\u003d \"Y\", tagNo: Convert.ToInt32(expItemDic[ELearningLabText.TagNoIdentifier]));"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "            expItem.ClickNo \u003d Convert.ToInt32(expItemDic[ELearningLabText.ClickNumIdentifier]);"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "            expItem.TriggerIndex \u003d expItemDic[ELearningLabText.TriggerOnClick] \u003d\u003d \"Y\" ? (int)TriggerType.OnClick : (int)TriggerType.WithPrevious;"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            if (expItem.IsDummyItem)"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                expItem.tagNo \u003d SelfExplanationTagService.GenerateUniqueTag();"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            return expItem;"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 835,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ELearningLab/Views/ELearningWorkspaceViews/ExplanationItemView.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ELearningLab.Views"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SelfExplanationBlockView.xaml"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ExplanationItemView : UserControl"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Custom Events"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly RoutedEvent UpButtonClickedEvent \u003d EventManager.RegisterRoutedEvent("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \"UpButtonClickedHandler\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutingStrategy.Bubble,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            typeof(RoutedEventHandler),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            typeof(ExplanationItemView));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly RoutedEvent DownButtonClickedEvent \u003d EventManager.RegisterRoutedEvent("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \"DownButtonClickedHandler\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutingStrategy.Bubble,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            typeof(RoutedEventHandler),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            typeof(ExplanationItemView));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly RoutedEvent DeleteButtonClickedEvent \u003d EventManager.RegisterRoutedEvent("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "           \"DeleteButtonClickedHandler\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "           RoutingStrategy.Bubble,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "           typeof(RoutedEventHandler),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "           typeof(ExplanationItemView));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public static readonly RoutedEvent TriggerTypeSelectionChangedEvent \u003d EventManager.RegisterRoutedEvent("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \"TriggerTypeSelectionChangedHandler\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutingStrategy.Bubble,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            typeof(RoutedEventHandler),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            typeof(ExplanationItemView));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Event Handler"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public event RoutedEventHandler UpButtonClickedHandler"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            add { AddHandler(UpButtonClickedEvent, value); }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            remove { RemoveHandler(UpButtonClickedEvent, value); }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public event RoutedEventHandler DownButtonClickedHandler"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            add { AddHandler(DownButtonClickedEvent, value); }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            remove { RemoveHandler(DownButtonClickedEvent, value); }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        public event RoutedEventHandler DeleteButtonClickedHandler"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            add { AddHandler(DeleteButtonClickedEvent, value); }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            remove { RemoveHandler(DeleteButtonClickedEvent, value); }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        public event RoutedEventHandler TriggerTypeSelectionChangedHandler"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            add { AddHandler(TriggerTypeSelectionChangedEvent, value); }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            remove { RemoveHandler(TriggerTypeSelectionChangedEvent, value); }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        public ExplanationItemView()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            upImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Up);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            deleteImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SyncLabDeleteButton);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            downImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Down);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            audioImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SpeakTextContext);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            cancelCalloutImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.CancelCalloutButton);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        #region XAML-Binded Action Handler"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SelfExplanationBlockView_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            triggerTypeComboBox.SelectionChanged +\u003d TriggerTypeComboBox_SelectionChanged;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            audioCheckBox.Checked +\u003d AudioCheckBox_CheckedChanged;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            audioCheckBox.Unchecked +\u003d AudioCheckBox_CheckedChanged;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            audioPreviewButton.IsEnabled \u003d (bool)audioCheckBox.IsChecked;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            audioImage.Opacity \u003d (bool)audioCheckBox.IsChecked ? 1 : 0.5;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            audioCheckBox.Unchecked +\u003d IsVoiceCaptionCalloutCheckBox_CheckChanged;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            captionCheckBox.Unchecked +\u003d IsVoiceCaptionCalloutCheckBox_CheckChanged;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutCheckBox.Unchecked +\u003d IsVoiceCaptionCalloutCheckBox_CheckChanged;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            audioCheckBox.Checked +\u003d IsVoiceCaptionCalloutCheckBox_CheckChanged;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            captionCheckBox.Checked +\u003d IsVoiceCaptionCalloutCheckBox_CheckChanged;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutCheckBox.Checked +\u003d IsVoiceCaptionCalloutCheckBox_CheckChanged;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutedEventArgs eventArgs \u003d new RoutedEventArgs(UpButtonClickedEvent);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            eventArgs.Source \u003d sender;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            RaiseEvent(eventArgs);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DownButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutedEventArgs eventArgs \u003d new RoutedEventArgs(DownButtonClickedEvent);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            eventArgs.Source \u003d sender;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            RaiseEvent(eventArgs);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutedEventArgs eventArgs \u003d new RoutedEventArgs(DeleteButtonClickedEvent);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            eventArgs.Source \u003d sender;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            RaiseEvent(eventArgs);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VoicePreviewButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureAccountStorageService.LoadUserAccount();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioSettingsDialogWindow dialog \u003d new AudioSettingsDialogWindow(AudioSettingsPage.AudioPreviewPage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            AudioPreviewPage page \u003d dialog.MainPage as AudioPreviewPage;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            page.PreviewDialogConfirmedHandler \u003d OnSettingsDialogConfirmed;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            ConfigureAudioPreviewSettings(page);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.Title \u003d \"Audio Preview Window\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.ShowDialog();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShorterCalloutCancelButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutTextBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            hasShortVersionCheckBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            cancelCalloutBorder.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            hasShortVersionCheckBox.IsChecked \u003d false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TriggerTypeComboBox_SelectionChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutedEventArgs eventArgs \u003d new RoutedEventArgs(TriggerTypeSelectionChangedEvent);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            eventArgs.Source \u003d sender;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            RaiseEvent(eventArgs);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HasShortVersionCheckBox_CheckChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((bool)((CheckBox)sender).IsChecked)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                calloutTextBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                hasShortVersionCheckBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                cancelCalloutBorder.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                calloutTextBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                hasShortVersionCheckBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                cancelCalloutBorder.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TriggerTypeComboBox_IsEnabledChanged(object sender, DependencyPropertyChangedEventArgs e)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            ComboBox comboBox \u003d (ComboBox)sender;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!comboBox.IsEnabled)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                comboBox.Opacity \u003d 0.5;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                comboBox.Opacity \u003d 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AudioCheckBox_CheckedChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((bool)((CheckBox)sender).IsChecked)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                audioNameLabel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                audioNameLabel.Text \u003d string.Format(ELearningLabText.AudioDefaultLabelFormat, "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                    AudioSettingService.selectedVoice.ToString());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                audioPreviewButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                audioImage.Opacity \u003d 1;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                audioNameLabel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                audioPreviewButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                audioImage.Opacity \u003d 0.5;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        private void IsVoiceCaptionCalloutCheckBox_CheckChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            RoutedEventArgs eventArgs \u003d new RoutedEventArgs(TriggerTypeSelectionChangedEvent);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            eventArgs.Source \u003d sender;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            RaiseEvent(eventArgs);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Private Helpder"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnSettingsDialogConfirmed(string textToPreview, VoiceType selectedVoiceType, IVoice selectedVoice)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            captionTextBox.Text \u003d textToPreview;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (selectedVoiceType)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.AzureVoice:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.ComputerVoice:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.WatsonVoice:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                    audioNameLabel.Text \u003d selectedVoice.ToString();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                case VoiceType.DefaultVoice:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                    audioNameLabel.Text \u003d string.Format(ELearningLabText.AudioDefaultLabelFormat, "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                        AudioSettingService.selectedVoice.ToString());"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ConfigureAudioPreviewSettings(AudioPreviewPage page)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            string textToSpeak \u003d captionTextBox.Text.Trim();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            string voiceName \u003d StringUtility.ExtractVoiceNameFromVoiceLabel(audioNameLabel.Text.ToString());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!AudioService.CheckIfVoiceExists(voiceName))"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                page.SetAudioPreviewSettings(textToSpeak, VoiceType.DefaultVoice, AudioSettingService.selectedVoice);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            string defaultPostfix \u003d StringUtility.ExtractDefaultLabelFromVoiceLabel(audioNameLabel.Text.ToString());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            VoiceType voiceType \u003d AudioService.GetVoiceTypeFromString(voiceName, defaultPostfix);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            IVoice voice \u003d AudioService.GetVoiceFromString(voiceName);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            page.SetAudioPreviewSettings(textToSpeak, voiceType, voice);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 237,
      "yuhongherald": 6
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/ColorsLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using Point \u003d System.Windows.Point;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using Rectangle \u003d System.Windows.Shapes.Rectangle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    class ColorsLabController : MarshalByRefObject, IColorsLabController"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private static IColorsLabController _instance \u003d new ColorsLabController();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IColorsLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private ColorsLabPane _pane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private ColorsLabController() {}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(ColorsLabText.PaneTag));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                    typeof(ColorsLabPane)).Control as ColorsLabPane;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetApplyTextButtonLocation()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetApplyTextButtonLocationAsPoint();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetApplyLineButtonLocation()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetApplyLineButtonLocationAsPoint();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetApplyFillButtonLocation()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetApplyFillButtonLocationAsPoint();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetMainColorRectangleLocation()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetMainColorRectangleLocationAsPoint();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        public Point GetEyeDropperButtonLocation()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            Point point \u003d new Point(0, 0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    point \u003d _pane.ColorsLabPaneWPF1.GetEyeDropperButtonLocationAsPoint();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SlideBrightnessSlider(int value)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.brightnessSlider.Value \u003d value;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SlideSaturationSlider(int value)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.saturationSlider.Value \u003d value;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickMonochromeRect(int index)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleOne;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleTwo;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleThree;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleFour;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                case 5:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleFive;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                case 6:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleSix;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                case 7:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d _pane.ColorsLabPaneWPF1.monochromaticRectangleSeven;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                    rect \u003d null;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                    "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickAnalogousRect(int index)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.analogousLowerRectangle;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.analogousMiddleRectangle;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.analogousHigherRectangle;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickComplementaryRect(int index)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.complementaryLowerRectangle;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.complementaryMiddleRectangle;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.complementaryHigherRectangle;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickTriadicRect(int index)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.triadicLowerRectangle;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.triadicMiddleRectangle;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.triadicHigherRectangle;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickTetradicRect(int index)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Shapes.Rectangle rect;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (index)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicOneRectangle;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicTwoRectangle;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicThreeRectangle;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                case 4:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d _pane.ColorsLabPaneWPF1.tetradicFourRectangle;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d null;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null \u0026\u0026 rect !\u003d null)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                    LeftClickOnRectangle(rect);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        public void LoadFavoriteColors(string filePath)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.LoadFavoriteColorsFromPath(filePath);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ResetFavoriteColors()"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.reloadColorButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClearFavoriteColors()"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.clearColorButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClearRecentColors()"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ColorsLabPaneWPF1.EmptyRecentColorsPanel();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        public IList\u003cColor\u003e GetCurrentFavoritePanel()"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            IList\u003cColor\u003e list \u003d null;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                    list \u003d _pane.ColorsLabPaneWPF1.GetFavoriteColorsPanelAsList();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        public IList\u003cColor\u003e GetCurrentRecentPanel()"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "            IList\u003cColor\u003e list \u003d null;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    list \u003d _pane.ColorsLabPaneWPF1.GetRecentColorsPanelAsList();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LeftClickOnRectangle(Rectangle rect)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.RaiseEvent("
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                new MouseButtonEventArgs(Mouse.PrimaryDevice, Environment.TickCount, MouseButton.Left)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                    RoutedEvent \u003d UIElement.MouseDownEvent"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            rect.RaiseEvent("
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                new MouseButtonEventArgs(Mouse.PrimaryDevice, Environment.TickCount, MouseButton.Left)"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                    RoutedEvent \u003d UIElement.MouseUpEvent"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 374,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/ELearningLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    class ELearningLabController : MarshalByRefObject, IELearningLabController"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private static IELearningLabController _instance \u003d new ELearningLabController();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IELearningLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private ELearningLabTaskpane _pane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private ELearningLabController() { }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(ELearningLabText.ELearningTaskPaneTag));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    typeof(ELearningLabTaskpane)).Control as ELearningLabTaskpane;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddSelfExplanationItem()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ELearningLabMainPanel.createButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    ExplanationItem item1 \u003d _pane.ELearningLabMainPanel.listView.Items"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                        .OfType\u003cClickItem\u003e().Last() as ExplanationItem;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    item1.CaptionText \u003d \"Test self explanation item 1\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    item1.IsCaption \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ELearningLabMainPanel.createButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    ExplanationItem item2 \u003d _pane.ELearningLabMainPanel.listView.Items"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    .OfType\u003cClickItem\u003e().Last() as ExplanationItem;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    item2.CaptionText \u003d \"Test self explanation item 2\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    item2.CalloutText \u003d \"This is a shorter callout for self explanation item 2\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    item2.IsCaption \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                    item2.IsCallout \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ELearningLabMainPanel.createButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    ExplanationItem item3 \u003d _pane.ELearningLabMainPanel.listView.Items"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    .OfType\u003cClickItem\u003e().Last() as ExplanationItem;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    item3.CaptionText \u003d \"Test self explanation item 3\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    item3.IsCaption \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    item3.IsCallout \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Sync()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ELearningLabMainPanel.syncButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));                    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Reorder()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                    ListViewItem item \u003d (ListViewItem)_pane.ELearningLabMainPanel.listView"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    .ItemContainerGenerator.ContainerFromIndex(0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    Button downButton \u003d VisualTreeUtility.FindByName(\"downButton\", item) as Button;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (downButton !\u003d null)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                        downButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Delete()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                UIThreadExecutor.Execute((Action)(() \u003d\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                    ListViewItem item \u003d (ListViewItem)_pane.ELearningLabMainPanel.listView"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    .ItemContainerGenerator.ContainerFromIndex(0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    Button deleteButton \u003d VisualTreeUtility.FindByName(\"deleteButton\", item) as Button;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (deleteButton !\u003d null)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                        deleteButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 111,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/Controller/ShapesLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Threading.Tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl.Controller"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    class ShapesLabController : MarshalByRefObject, IShapesLabController"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private static IShapesLabController _instance \u003d new ShapesLabController();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public static IShapesLabController Instance { get { return _instance; } }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private CustomShapePane _pane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private ShapesLabController() {}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public void OpenPane()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                FunctionalTestExtensions.GetRibbonUi().OnAction("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    new RibbonControl(ShapesLabText.PaneTag));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane \u003d FunctionalTestExtensions.GetTaskPane("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                    typeof(CustomShapePane)).Control as CustomShapePane;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            _pane?.InitCustomShapePaneStorage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SaveSelectedShapes()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane?.SaveSelectedShapes();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public System.Windows.Point GetShapeForClicking(string shapeName)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Windows.Point point \u003d new System.Windows.Point(0, 0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane \u003d\u003d null)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                return point;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            Task task \u003d Task.Factory.StartNew(() \u003d\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.CustomShapePaneWPF1.Dispatcher.Invoke(() \u003d\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    point \u003d _pane.GetShapeForClicking(shapeName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            task.Wait();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return point;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportLibrary(string pathToLibrary)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane \u003d\u003d null)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            Task task \u003d Task.Factory.StartNew(() \u003d\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.CustomShapePaneWPF1.Dispatcher.Invoke(() \u003d\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    _pane.ImportLibrary(pathToLibrary);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            task.Wait();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportShape(string pathToShape)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane !\u003d null)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.ImportShape(pathToShape);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cISlideData\u003e FetchShapeGalleryPresentationData()"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane \u003d\u003d null)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cISlideData\u003e slideData \u003d _pane.GetShapeGallery()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                .Slides.Cast\u003cSlide\u003e().Select(SlideData.FromSlide).ToList();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return slideData;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickAddShapeButton()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pane \u003d\u003d null || _pane.GetAddShapeButton() \u003d\u003d null)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            // Perform clicking of button on its own UI thread"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Execute(() \u003d\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.GetAddShapeButton().RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool GetAddShapeButtonStatus()"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            bool addShapeButtonStatus \u003d false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            Task task \u003d Task.Factory.StartNew(() \u003d\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                _pane.GetAddShapeButton().Dispatcher.Invoke(() \u003d\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    addShapeButtonStatus \u003d _pane.GetAddShapeButton().IsEnabled;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            task.Wait();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            return addShapeButtonStatus;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 130,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/FunctionalTestInterface.Impl/PowerPointOperations.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.FunctionalTestInterface.Impl"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    [Serializable]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    class PowerPointOperations : MarshalByRefObject, IPowerPointOperations"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MaximizeWindow()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetCurrentWindow().WindowState \u003d PpWindowState.ppWindowMaximized;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public void EnterFunctionalTest()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointLabsFT.IsFunctionalTestOn \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ExitFunctionalTest()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointLabsFT.IsFunctionalTestOn \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsInFunctionalTest()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointLabsFT.IsFunctionalTestOn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void MaximizeWindow(int windowNumber)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FunctionalTestExtensions.GetApplication().Windows[windowNumber].Activate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FunctionalTestExtensions.GetApplication().Windows[windowNumber].WindowState \u003d PpWindowState.ppWindowMaximized;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void NewWindow()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Presentation presentation \u003d FunctionalTestExtensions.GetPresentations().Add();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public int GetNumWindows()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return FunctionalTestExtensions.GetApplication().Windows.Count;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void SetTagToAssociatedWindow()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            DocumentWindow docWindow \u003d FunctionalTestExtensions.GetCurrentWindow();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            foreach (Microsoft.Office.Tools.CustomTaskPane pane in FunctionalTestExtensions.GetAddIn().CustomTaskPanes)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if (pane.Control.Tag \u003d\u003d null) { pane.Control.Tag \u003d docWindow.HWND; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public HashSet\u003cType\u003e GetOpenPaneTypes()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            DocumentWindow docWindow \u003d FunctionalTestExtensions.GetCurrentWindow(); //.GetApplication().Windows[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            HashSet\u003cType\u003e result \u003d new HashSet\u003cType\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            foreach (Microsoft.Office.Tools.CustomTaskPane pane in FunctionalTestExtensions.GetAddIn().CustomTaskPanes)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if (pane.Control.Tag is int \u0026\u0026 (int)pane.Control.Tag \u003d\u003d docWindow.HWND) { result.Add(pane.Control.GetType()); }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cISlideData\u003e FetchPresentationData(string pathToPresentation)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            Presentation presentation \u003d FunctionalTestExtensions.GetPresentations().Open(pathToPresentation,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                WithWindow: MsoTriState.msoFalse);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cISlideData\u003e slideData \u003d presentation.Slides.Cast\u003cSlide\u003e().Select(SlideData.FromSlide).ToList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            presentation.Close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            return slideData;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cISlideData\u003e FetchCurrentPresentationData()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cISlideData\u003e slideData \u003d FunctionalTestExtensions.GetCurrentPresentation().Presentation"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                .Slides.Cast\u003cSlide\u003e().Select(SlideData.FromSlide).ToList();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            return slideData;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SavePresentationAs(string presName)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetCurrentPresentation().Presentation.SaveCopyAs(presName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClosePresentation()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            EnterFunctionalTest();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetCurrentPresentation().Presentation.Close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClosePowerPointApplication()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            EnterFunctionalTest();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetApplication().Quit();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ActivatePresentation()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(new Form() { TopMost \u003d true },"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                \"###__DO_NOT_OPEN_OTHER_WINDOW__###\\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                \"###___DURING_FUNCTIONAL_TEST___###\", \"PowerPointLabs FT\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        public int PointsToScreenPixelsX(float x)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetCurrentWindow().PointsToScreenPixelsX(x);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        public int PointsToScreenPixelsY(float y)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetCurrentWindow().PointsToScreenPixelsY(y);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOffice2010()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetApplication().Version \u003d\u003d \"14.0\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOffice2013()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetApplication().Version \u003d\u003d \"15.0\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide GetCurrentSlide()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetCurrentSlide().GetNativeSlide();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide[] GetAllSlides()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetCurrentPresentation().Presentation.Slides.Cast\u003cSlide\u003e().ToArray();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide SelectSlide(int index)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cModels.PowerPointSlide\u003e slides \u003d FunctionalTestExtensions.GetCurrentPresentation().Slides;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d slides.Count; i++)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                if (i \u003d\u003d (index - 1))"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                    Slide slide \u003d slides[i].GetNativeSlide();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                    slide.Select();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                    FunctionalTestExtensions.GetCurrentWindow().View.GotoSlide(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                    return slide;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide SelectSlide(string slideName)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cModels.PowerPointSlide\u003e slides \u003d FunctionalTestExtensions.GetCurrentPresentation().Slides;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d slides.Count; i++)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slideName \u003d\u003d slides[i].Name)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                    Slide slide \u003d slides[i].GetNativeSlide();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                    slide.Select();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                    FunctionalTestExtensions.GetCurrentWindow().View.GotoSlide(i + 1);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                    return slide;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetNotesPageText(Slide slide)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null || slide.HasNotesPage \u003d\u003d MsoTriState.msoFalse)"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                return string.Empty;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape notesPageBody \u003d notesPagePlaceholders"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                .FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            string notesText \u003d notesPageBody !\u003d null ? notesPageBody.TextFrame.TextRange.Text : string.Empty;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            return notesText;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetNotesPageText(Slide slide, string text)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape notesPageBody \u003d notesPagePlaceholders"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                .FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            if (notesPageBody !\u003d null)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                notesPageBody.TextFrame.TextRange.Text \u003d text;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        public Selection GetCurrentSelection()"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            return FunctionalTestExtensions.GetCurrentSelection();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange SelectShape(string shapeName)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e nameList \u003d new List\u003cString\u003e();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            nameList.Add(shapeName);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            return SelectShapes(nameList);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange SelectShapes(IEnumerable\u003cstring\u003e shapeNames)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange range \u003d FunctionalTestExtensions.GetCurrentSlide().Shapes.Range(shapeNames.ToArray());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            if (range.Count \u003e 0)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                range.Select();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                return range;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange SelectShapesByPrefix(string prefix)"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e nameList \u003d new List\u003cString\u003e();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Shapes shapes \u003d FunctionalTestExtensions.GetCurrentSlide().Shapes;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape sh in shapes)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                if (sh.Name.StartsWith(prefix))"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                    nameList.Add(sh.Name);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            return SelectShapes(nameList);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape RecursiveGetShapeWithPrefix(params string[] prefixes)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape parentShape \u003d SelectShapesByPrefix(prefixes[0])[1];"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c prefixes.Length; ++i)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                parentShape \u003d parentShape.GroupItems.Cast\u003cShape\u003e().FirstOrDefault(shape \u003d\u003e shape.Name.StartsWith(prefixes[i]));"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            return parentShape;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        public FileInfo ExportSelectedShapes()"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapes \u003d FunctionalTestExtensions.GetCurrentSelection().ShapeRange;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            int hashCode \u003d DateTime.Now.GetHashCode();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            string pathName \u003d TempPath.GetTempTestFolder() + \"shapeName\" + hashCode;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes.Export(pathName, PpShapeFormat.ppShapeFormatPNG);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FileInfo(pathName);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        public string SelectAllTextInShape(string shapeName)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d FunctionalTestExtensions.GetCurrentSlide().Shapes"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  .Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                  .FirstOrDefault(sh \u003d\u003e sh.Name \u003d\u003d shapeName);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            TextRange2 textRange \u003d shape.TextFrame2.TextRange;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            textRange.Select();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            return textRange.Text;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        public string SelectTextInShape(string shapeName, int startIndex, int endIndex)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d FunctionalTestExtensions.GetCurrentSlide().Shapes"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      .Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                      .FirstOrDefault(sh \u003d\u003e sh.Name \u003d\u003d shapeName);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            TextRange2 textRange \u003d shape.TextFrame2.TextRange.Characters[startIndex, endIndex - startIndex];"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            textRange.Select();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            return textRange.Text;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameSection(int index, string newName)"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetCurrentPresentation().SectionProperties.Rename(index, newName);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddSection(int index, string sectionName)"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetCurrentPresentation().SectionProperties.AddSection(index, sectionName);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteSection(int index, bool deleteSlides)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            FunctionalTestExtensions.GetCurrentPresentation().SectionProperties.Delete(index, deleteSlides);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ShowAllSlideNumbers()"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide[] slides \u003d GetAllSlides();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Slide s in slides)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                s.HeadersFooters.SlideNumber.Visible \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 278,
      "yuhongherald": 36
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Models/PowerPointMagnifyingSlide.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.AnimationLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.CropLab;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ZoomLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Models"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    class PowerPointMagnifyingSlide : PowerPointSlide"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Shape indicatorShape \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Shape zoomSlideCroppedShapes \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPointMagnifyingSlide(PowerPoint.Slide slide) : base(slide)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Name \u003d \"PPTLabsMagnifyingSlide\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteHiddenShapes();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public static PowerPointSlide FromSlideFactory(PowerPoint.Slide slide)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return new PowerPointMagnifyingSlide(slide);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddZoomToAreaAnimation(PowerPoint.Shape zoomShape)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            PrepareForZoomToArea(zoomShape);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape shapeToZoom \u003d null, referenceShape \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ZoomLabSettings.BackgroundZoomChecked)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeToZoom \u003d GetShapeToZoom(zoomShape);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                referenceShape \u003d GetReferenceShape(shapeToZoom);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                DefaultMotionAnimation.AddDefaultMotionAnimation(this, shapeToZoom, referenceShape, 0.5f, PowerPoint.MsoAnimTriggerType.msoAnimTriggerAfterPrevious);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeToZoom \u003d zoomSlideCroppedShapes.Duplicate()[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteShapeAnimations(shapeToZoom);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                LegacyShapeUtil.CopyShapePosition(zoomSlideCroppedShapes, ref shapeToZoom);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                referenceShape \u003d GetReferenceShape(zoomShape);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                DefaultMotionAnimation.AddZoomToAreaMotionAnimation(this, shapeToZoom, zoomShape, referenceShape, 0.5f, PowerPoint.MsoAnimTriggerType.msoAnimTriggerAfterPrevious);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeToZoom.Name \u003d \"PPTLabsMagnifyAreaSlide\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            referenceShape.Delete();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            zoomSlideCroppedShapes.Visible \u003d Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape.ZOrder(Office.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PrepareForZoomToArea(PowerPoint.Shape zoomShape)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            MoveMotionAnimation();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            //Delete zoom shapes and shapes with exit animations"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPoint.Shape\u003e shapes \u003d _slide.Shapes.Cast\u003cPowerPoint.Shape\u003e().ToList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cPowerPoint.Shape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e (HasExitAnimation(current) || current.Equals(zoomShape)));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape s in matchingShapes)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            float magnifyRatio \u003d PowerPointPresentation.Current.SlideWidth / zoomShape.Width;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            AddZoomSlideCroppedPicture(magnifyRatio);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteSlideNotes();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteSlideMedia();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            ManageSlideTransitions();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape \u003d AddPowerPointLabsIndicator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            //Add fade out effect for non-zoom shapes"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes \u003d _slide.Shapes.Cast\u003cPowerPoint.Shape\u003e().ToList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            matchingShapes \u003d shapes.Where(current \u003d\u003e (!(current.Equals(indicatorShape) || current.Equals(zoomSlideCroppedShapes))));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape s in matchingShapes)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteShapeAnimations(s);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!ZoomLabSettings.BackgroundZoomChecked)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.Effect effectFade \u003d _slide.TimeLine.MainSequence.AddEffect(s, PowerPoint.MsoAnimEffect.msoAnimEffectFade, PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    effectFade.Exit \u003d Office.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    effectFade.Timing.Duration \u003d 0.25f;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    s.Visible \u003d Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        //Return shape which helps to calculate the amount of zoom-in animation"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Shape GetReferenceShape(PowerPoint.Shape shapeToZoom)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape referenceShape \u003d shapeToZoom.Duplicate()[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            referenceShape.LockAspectRatio \u003d Office.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            if (referenceShape.Width \u003e referenceShape.Height)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                referenceShape.Width \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                referenceShape.Height \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            referenceShape.Left \u003d (PowerPointPresentation.Current.SlideWidth / 2) - (referenceShape.Width / 2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            referenceShape.Top \u003d (PowerPointPresentation.Current.SlideHeight / 2) - (referenceShape.Height / 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            return referenceShape;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        //Return cropped version of slide picture"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Shape GetShapeToZoom(PowerPoint.Shape zoomShape)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape shapeToZoom \u003d zoomSlideCroppedShapes.Duplicate()[1];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteShapeAnimations(shapeToZoom);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            LegacyShapeUtil.CopyShapePosition(zoomSlideCroppedShapes, ref shapeToZoom);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeToZoom.PictureFormat.CropLeft +\u003d zoomShape.Left;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeToZoom.PictureFormat.CropTop +\u003d zoomShape.Top;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeToZoom.PictureFormat.CropRight +\u003d (PowerPointPresentation.Current.SlideWidth - (zoomShape.Left + zoomShape.Width));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeToZoom.PictureFormat.CropBottom +\u003d (PowerPointPresentation.Current.SlideHeight - (zoomShape.Top + zoomShape.Height));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            LegacyShapeUtil.CopyShapePosition(zoomShape, ref shapeToZoom);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeToZoom;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        //Stores slide-size crop of the current slide as a global variable"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddZoomSlideCroppedPicture(float magnifyRatio \u003d 1.0f)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide zoomSlideCopy \u003d this.Duplicate();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            Globals.ThisAddIn.Application.ActiveWindow.View.GotoSlide(zoomSlideCopy.Index);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape cropShape \u003d zoomSlideCopy.Shapes.AddShape(Office.MsoAutoShapeType.msoShapeRectangle, 0, 0, PowerPointPresentation.Current.SlideWidth - 0.01f, PowerPointPresentation.Current.SlideHeight - 0.01f);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            cropShape.Select();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Selection sel \u003d Globals.ThisAddIn.Application.ActiveWindow.Selection;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape croppedShape \u003d CropToShape.Crop(zoomSlideCopy, sel, magnifyRatio: magnifyRatio);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                string tempFilePath \u003d FileDir.GetTemporaryPngFilePath();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                Utils.GraphicsUtil.ExportShape(croppedShape, tempFilePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                zoomSlideCroppedShapes \u003d _slide.Shapes.AddPicture2(tempFilePath,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    Office.MsoTriState.msoFalse,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                    Office.MsoTriState.msoTrue,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                    0,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                    0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                croppedShape.Delete();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileDir.DeleteFile(tempFilePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    // If the file cannot be deleted, we continue without deletion."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                // Revert to normal copy and pasting if unable to create file."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                croppedShape.Cut();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                zoomSlideCroppedShapes \u003d _slide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            zoomSlideCroppedShapes.Name \u003d \"PPTLabsMagnifyAreaGroup\" + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            Utils.ShapeUtil.FitShapeToSlide(ref zoomSlideCroppedShapes);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            zoomSlideCopy.Delete();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ManageSlideTransitions()"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveSlideTransitions();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.SlideShowTransition.AdvanceOnTime \u003d Office.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.SlideShowTransition.AdvanceOnClick \u003d Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.SlideShowTransition.AdvanceTime \u003d 0;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 187,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Models/PowerPointShapeGalleryPresentation.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Models"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    class PowerPointShapeGalleryPresentation : PowerPointPresentation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        /************************************************************************"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "         * Some General Concerns"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "         * "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "         * 1. Be careful when using PowerPointPresentation.Slides property. The"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "         * implementation requires O(n) time to access an item, instead of O(1)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "         * Therefore, when features in PowerPointSlide is not required, access"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "         * slides via PowerPointPresentation.Presentation.Slides;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "         ************************************************************************/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CategoryNameBoxSearchPattern \u003d \"[Cc]ategory: *([^\u003c\u003e:\\\"/\\\\\\\\|?*]+)\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CategoryNameFormat \u003d \"Category: {0}\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string DefaultSlideNameSearchPattern \u003d @\"[Ss]lide ?\\d+\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string DuplicateShapeSuffixFormat \u003d \"(duplicate shape {0})\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string GroupSelectionNameFormat \u003d \"Group {0} Seq_{1}\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string GroupSelectionNamePattern \u003d @\"^Group ([\\w\\s]+) Seq_(\\d+)$\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string NameSearchPattern \u003d @\"^Group {0} Seq_(\\d+)$|^{1}$\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string NameExtractionPatternFormat \u003d @\"^Group ({0}(?: \\d+)*) Seq_\\d+$|^({1}(?: \\d+)*)$\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ShapeGalleryFileExtension \u003d \".pptlabsshapes\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string UntitledCategoryNameFormat \u003d \"Untitled Category {0}\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int MaxUndoAmount \u003d 20;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPointSlide _defaultCategory;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly List\u003cShape\u003e _categoryNameBoxCollection \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Properties"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cstring\u003e Categories { get; private set; }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        public string DefaultCategory"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_defaultCategory \u003d\u003d null)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                return _defaultCategory.Name;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                FindCategoryIndex(value, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ImportToCategory { get; set; }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsImportedFile { get; set; }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Constructor"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointShapeGalleryPresentation(string path, string name) : base(path, name)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointShapeGalleryPresentation(Presentation presentation) : base(presentation)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        # region API"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddCategory(string name, bool setAsDefault \u003d true, bool fromClipBoard \u003d false)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d FindCategoryIndex(name, setAsDefault);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            // the category already exists"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index !\u003d -1)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            // ppLayoutBlank causes an error, so we use ppLayoutText instead and manually remove the"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            // place holders"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide newSlide \u003d AddSlide(name: name);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            newSlide.DeleteAllShapes();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape categoryNameBox;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fromClipBoard)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                newSlide.Shapes.Paste();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryNameBox \u003d RetrieveCategoryNameBox(newSlide);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryNameBox \u003d newSlide.Shapes.AddTextbox(Office.MsoTextOrientation.msoTextOrientationHorizontal, 0, 0,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             SlideWidth, 0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, name);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories.Add(name);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryNameBoxCollection.Add(categoryNameBox);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            if (setAsDefault)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                _defaultCategory \u003d newSlide;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        public string AddShape(PowerPointPresentation pres, PowerPointSlide origSlide, ShapeRange shapeRange, string name, string category \u003d \"\", bool fromClipBoard \u003d false)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!fromClipBoard)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                return ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeRange.Copy();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    return AddShape(name, category);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                }, pres, origSlide);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                return AddShape(name, category);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        public override void Close()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            base.Close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            RetrieveShapeGalleryFile();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CopyCategory(string name)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d FindCategoryIndex(name);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            Presentation.Slides[index].Shapes.Range().Copy();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CopyShape()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            _defaultCategory.Shapes.Range().Copy();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CopyShape(string name)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            _defaultCategory.Shapes.Range(shapes.Select(item \u003d\u003e item.Name).ToArray()).Copy();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CopyShape(IEnumerable\u003cstring\u003e nameList)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e fullList \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string name in nameList)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                fullList.AddRange(_defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name))"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                                                  .Select(item \u003d\u003e item.Name));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            _defaultCategory.Shapes.Range(fullList.ToArray()).Copy();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CopyShapeToCategory(PowerPointPresentation pres, PowerPointSlide origSlide, string name, string categoryName)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d FindCategoryIndex(categoryName);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy a shape with name from default category to another category"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide destCategory \u003d Slides[index - 1];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                _defaultCategory.Shapes.Range(shapes.Select(item \u003d\u003e item.Name).ToArray()).Copy();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                return destCategory.Shapes.Paste();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, origSlide);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasCategory(string name)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            return Slides.Any(category \u003d\u003e category.Name \u003d\u003d name);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MoveShapeToCategory(PowerPointPresentation pres, PowerPointSlide origSlide, string name, string categoryName)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d FindCategoryIndex(categoryName);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            if (index \u003d\u003d -1)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            // move a shape with name from default category to another category"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(GenerateNameSearchPattern(name));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide destCategory \u003d Slides[index - 1];"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                _defaultCategory.Shapes.Range(shapes.Select(item \u003d\u003e item.Name).ToArray()).Cut();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                return destCategory.Shapes.Paste();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, origSlide);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        public override bool Open(bool readOnly \u003d false, bool untitled \u003d false,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                                  bool withWindow \u003d true, bool focus \u003d true)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            RetrievePptxFile();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            // if we can\u0027t even open the file, return false"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!base.Open(readOnly, untitled, withWindow, focus))"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ConsistencyCheck())"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            // set default category to be the first slide, but do nothing if the presentation"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            // has no slide, i.e. it\u0027s a newly created presentation"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Presentation.Slides.Count \u003e 0)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                _defaultCategory \u003d PowerPointSlide.FromSlideFactory(Presentation.Slides[1]);  "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveCategory()"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            // we need to change the index to 0-based in order to remove from Categories"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d FindCategoryIndex(_defaultCategory.Name) - 1;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            _defaultCategory \u003d null;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories.RemoveAt(index);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryNameBoxCollection.RemoveAt(index);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveSlide(index);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveShape(string name)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            _defaultCategory.DeleteShapeWithRule(GenerateNameSearchPattern(name));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameShape(string oldName, string newName)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex nameRegex \u003d GenerateNameSearchPattern(oldName);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex replaceRegex \u003d new Regex(oldName);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _defaultCategory.GetShapesWithRule(nameRegex);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Name \u003d replaceRegex.Replace(shape.Name, newName);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameCategory(string newName)"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories[_defaultCategory.Index - 1] \u003d newName;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            _defaultCategory.Name \u003d newName;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape categoryNameBox \u003d _categoryNameBoxCollection[_defaultCategory.Index - 1];"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, newName);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Helper Function"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        /// Flushes the undo history with a dummy action."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private void FlushUndoHistory()"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c MaxUndoAmount; i++)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                Presentation.Slides[1].Background.Fill.BackColor \u003d Presentation.Slides[1].Background.Fill.BackColor;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ConsistencyCheck()"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            // if the opening ShapeGallery is a single shape file, or if there\u0027s no slide,"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            // the file is always valid"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            return (IsImportedFile \u0026\u0026 !string.IsNullOrEmpty(ImportToCategory)) ||"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                   SlideCount \u003c 1 ||"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                   InitCategories();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape ConsistencyCheckCategoryNameBox(PowerPointSlide category, ref int untitledCategoryCnt)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape categoryNameBox \u003d RetrieveCategoryNameBox(category);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            if (categoryNameBox !\u003d null)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                category.Name \u003d RetrieveCategoryName(categoryNameBox);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we do not have a name box inside, we have 3 cases:"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                // 1. slide.Name has been configured (old ShapeGallery file);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                // 2. slide.Name is default (user didn\u0027t specify a name)."
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                // for case 1 \u0026 2, we need to add a new text box into the slie."
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                // For case 1, the text of category box should be slide.Name;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                // For case 2, the text of category box should be next untitled name;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryNameBox \u003d category.Shapes.AddTextbox(Office.MsoTextOrientation.msoTextOrientationHorizontal, 0, 0,"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             SlideWidth, 0);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex defaultSlideNameRegex \u003d new Regex(DefaultSlideNameSearchPattern);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                if (defaultSlideNameRegex.IsMatch(category.Name))"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                    untitledCategoryCnt++;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                    "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                    string untitledName \u003d string.Format(UntitledCategoryNameFormat, untitledCategoryCnt);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    category.Name \u003d untitledName;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, category.Name);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryNameBoxCollection.Add(categoryNameBox);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "            return categoryNameBox;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ConsistencyCheckCategoryLocalToSlide()"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e categoriesOnDisk \u003d Directory.EnumerateDirectories(Path).ToList();"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            bool categoryLost \u003d false;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string categoryPath in categoriesOnDisk)"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                string categoryName \u003d new DirectoryInfo(categoryPath).Name;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Slides.All(category \u003d\u003e category.Name.ToLower() !\u003d categoryName.ToLower()))"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                    categoryLost \u003d true;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                    AddCategory(categoryName, false, true);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            return categoryLost;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        private string ConsistencyCheckCategorySlideToLocal(PowerPointSlide category)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryFolderPath \u003d System.IO.Path.Combine(Path, category.Name);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            string newCategoryPath \u003d categoryFolderPath;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            // the category is some how lost on the disk, regenerate the category"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(categoryFolderPath))"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "                // create the directory, since shape reconstruction will be taken care"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "                // of during ConsistencyCheckShapeToPng(), we do not need to generate"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "                // the shapes here"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(categoryFolderPath);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                // in case some of categories to be imported have the same name as those"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                // already exist categories"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsImportedFile)"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "                    int duplicateCnt \u003d 1;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                    string oriCategoryName \u003d newCategoryPath;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                    while (Directory.Exists(newCategoryPath))"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                        newCategoryPath \u003d oriCategoryName + \" \" + duplicateCnt;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                        duplicateCnt++;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.CreateDirectory(newCategoryPath);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            return newCategoryPath;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ConsistencyCheckPngToShape(IEnumerable\u003cstring\u003e pngShapes, PowerPointSlide category)"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            // if some png could not be found in shape gallery, we will delete it"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            // to save space"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            bool shapeLost \u003d false;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string pngShape in pngShapes)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d System.IO.Path.GetFileNameWithoutExtension(pngShape);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex searchPattern \u003d GenerateNameSearchPattern(shapeName);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                bool found \u003d category.HasShapeWithRule(searchPattern);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!found)"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeLost \u003d true;"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "                    File.Delete(pngShape);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeLost;"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ConsistencyCheckSelf()"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            bool shapeDuplicate \u003d false;"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            // we have 3 cases here:"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            // 1. Open ShapeGallery;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            // 2. Open a ShapeGallery via ImportCategory;"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            // For both cases, if inconsistency is found, we keep all the shapes but"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            // append \"(recovered shape X)\" to the shape name, X is the relative index"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            // Note: point 2 is not needed, becuase all no-png shapes will be exported"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            // during ConsistencyCheckShapeToPng, and pngs without a corresponding shape"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            // will be deleted during ConsistencyCheckPngToShape."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPointSlide category in Slides)"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                Dictionary\u003cstring, int\u003e shapeHash \u003d new Dictionary\u003cstring, int\u003e();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cShape\u003e shapes \u003d category.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cstring\u003e duplicateShapeNames \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (shapeHash.Count \u003d\u003d 0 ||"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                        !shapeHash.ContainsKey(shape.Name))"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "                        shapeHash[shape.Name] \u003d 1;"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                        int index \u003d (shapeHash[shape.Name] +\u003d 1);"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "                        // add to collection only if this shape is the first duplicate shape"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (index \u003d\u003d 2)"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                            duplicateShapeNames.Add(shape.Name);"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Name +\u003d string.Format(DuplicateShapeSuffixFormat, index);"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeDuplicate \u003d duplicateShapeNames.Count \u003e 0;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (string lastShapeName in duplicateShapeNames)"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape lastShape \u003d category.GetShapeWithName(lastShapeName)[0];"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                    lastShape.Name +\u003d string.Format(DuplicateShapeSuffixFormat, 1);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeDuplicate;"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ConsistencyCheckShapeToPng(List\u003cstring\u003e pngShapes, PowerPointSlide category, string shapeFolderPath)"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            // if inconsistency is found, we export the extra shape to .png"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            bool shapeLost \u003d false;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex groupSelectNamePattern \u003d new Regex(GroupSelectionNamePattern);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            // this is to handle 2 cases:"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            // 1. user deleted the .png shape accidentally;"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "            // 2. the file is imported"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in category.Shapes)"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                // skip category name box"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Type \u003d\u003d Office.MsoShapeType.msoTextBox \u0026\u0026"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                    _categoryNameBoxCollection.Contains(shape))"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                string name \u003d shape.Name;"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "                //check for sequence grouped shape"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                if (groupSelectNamePattern.IsMatch(name))"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                    name \u003d groupSelectNamePattern.Match(name).Groups[1].Value;"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapePath \u003d shapeFolderPath + @\"\\\" + name + \".png\";"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!pngShapes.Contains(shapePath))"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                    GraphicsUtil.ExportShape(shape, shapePath);"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeLost \u003d true;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeLost;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        private int FindCategoryIndex(string categoryName, bool setAsDefault \u003d false)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPointSlide category in Slides)"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                if (category.Name \u003d\u003d categoryName)"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                    index \u003d category.Index;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (setAsDefault)"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                        _defaultCategory \u003d category;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        private Regex GenerateNameSearchPattern(string name)"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            string skippedName \u003d CommonUtil.SkipRegexCharacter(name);"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            string searchPattern \u003d string.Format(NameSearchPattern, skippedName, skippedName);"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            return new Regex(searchPattern);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool InitCategories()"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            // here we need to check 3 cases:"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "            // 1. self consistency check (if there are any duplicate names);"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "            // 2. more png than shapes inside pptx (shapes for short);"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            // 3. more shapes than png."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            bool shapeDuplicate \u003d ConsistencyCheckSelf();"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            bool shapeLost \u003d false;"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            bool pngLost \u003d false;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            int untitledCategoryCnt \u003d 0;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cPowerPointSlide\u003e slides \u003d Slides;"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d Slides.Count - 1; i \u003e\u003d 0; i--)"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide category \u003d Slides[i];"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape categoryNameBox \u003d ConsistencyCheckCategoryNameBox(category, ref untitledCategoryCnt);"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                // check if we have a corresponding category directory in the Path"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeFolderPath;"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeFolderPath \u003d ConsistencyCheckCategorySlideToLocal(category);"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Unable to get shape folder path. Store the problematic category and continue"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Actual slide index starts from 1, but is accounted for in PowerPointPresentation.removeSlide(int)."
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                    RemoveSlide(i);"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                string finalCategoryName \u003d new DirectoryInfo(shapeFolderPath).Name;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cstring\u003e pngShapes \u003d Directory.EnumerateFiles(shapeFolderPath, \"*.png\").ToList();"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                // critical: OR with itself at the end to avoid early termination"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeLost \u003d ConsistencyCheckShapeToPng(pngShapes, category, shapeFolderPath) || shapeLost;"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "                pngLost \u003d ConsistencyCheckPngToShape(pngShapes, category) || pngLost;"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                // update names only when the name gets changed"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                if (category.Name !\u003d finalCategoryName)"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                    category.Name \u003d finalCategoryName;"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "                    categoryNameBox.TextFrame.TextRange.Text \u003d string.Format(CategoryNameFormat, finalCategoryName);"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "                Categories.Add(finalCategoryName);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "            bool categoryInShapeGalleryLost \u003d ConsistencyCheckCategoryLocalToSlide();"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((shapeDuplicate || shapeLost || categoryInShapeGalleryLost || pngLost) \u0026\u0026"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "                !IsImportedFile)"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorShapeCorrupted);"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        private string RetrieveCategoryName(Shape categoryNameBox)"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex categoryNamePattern \u003d new Regex(CategoryNameBoxSearchPattern);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            Match namePatternMatch \u003d categoryNamePattern.Match(categoryNameBox.TextFrame.TextRange.Text);"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryName \u003d namePatternMatch.Groups[1].Value;"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            return categoryName;"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape RetrieveCategoryNameBox(PowerPointSlide slide)"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e nameBoxCandidate \u003d slide.GetShapesWithTypeAndRule(Office.MsoShapeType.msoTextBox, new Regex(\".+\"));"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            if (nameBoxCandidate.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex categoryNamePattern \u003d new Regex(CategoryNameBoxSearchPattern);"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            // return the first match name box"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            return nameBoxCandidate.FirstOrDefault(x \u003d\u003e categoryNamePattern.IsMatch(x.TextFrame.TextRange.Text));"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RetrievePptxFile()"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeGalleryFileName \u003d FullName.Replace(\".pptx\", ShapeGalleryFileExtension);"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "            if (File.Exists(shapeGalleryFileName))"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "                File.SetAttributes(shapeGalleryFileName, FileAttributes.Normal);"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                // To ensure that the file fullName does not exist before attempting to move"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                if (!File.Exists(FullName))"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                    File.Move(shapeGalleryFileName, FullName);"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            if (File.Exists(FullName))"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                // to reduce the chance that user opens the shape gallery file, we make the pptx file hidden"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "                File.SetAttributes(FullName, FileAttributes.Normal);"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                File.SetAttributes(FullName, FileAttributes.Hidden);"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RetrieveShapeGalleryFile()"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            // set the file as a visible readonly .pptlabsshapes file."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeGalleryFileName \u003d FullName.Replace(\".pptx\", ShapeGalleryFileExtension);"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(\"FullName \u003d \" + FullName + \", Name \u003d \" + shapeGalleryFileName);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "            File.Move(FullName, shapeGalleryFileName);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            File.SetAttributes(shapeGalleryFileName, FileAttributes.Normal);"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            File.SetAttributes(shapeGalleryFileName, FileAttributes.ReadOnly);"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        private string AddShape(string name, string category) "
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide categorySlide \u003d _defaultCategory;"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!string.IsNullOrEmpty(category))"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                int categoryIndex \u003d FindCategoryIndex(category);"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                if (categoryIndex \u003d\u003d -1)"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                    return string.Empty;"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "                categorySlide \u003d Slides[categoryIndex - 1];"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "            // check if the name has been used, if used, name it to the next available name"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "            if (categorySlide.HasShapeWithRule(GenerateNameSearchPattern(name)))"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex nameExtractionRegex \u003d new Regex(string.Format(NameExtractionPatternFormat, name, name));"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cstring\u003e nameList \u003d categorySlide.GetShapesWithRule(nameExtractionRegex)"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                                            .Select(item \u003d\u003e nameExtractionRegex.Match(item.Name))"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                                            .Select(match \u003d\u003e !string.IsNullOrEmpty(match.Groups[1].Value)"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             ? match.Groups[1].Value"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                                                             : match.Groups[2].Value)"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "                                            .Distinct()"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                                            .ToList();"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                name \u003d CommonUtil.NextAvailableName(nameList, name);"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange pastedShapeRange \u003d categorySlide.Shapes.Paste();"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pastedShapeRange.Count \u003e 1)"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int nameCount \u003d 1; nameCount \u003c\u003d pastedShapeRange.Count; nameCount++)"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape shape \u003d pastedShapeRange[nameCount];"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.Name \u003d string.Format(GroupSelectionNameFormat, name, nameCount);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                pastedShapeRange[1].Name \u003d name;"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            Save();"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlushUndoHistory();"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            return name;"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 720,
      "yuhongherald": 16
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Models/PowerPointSlide.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Globalization;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.InteropServices;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Utility;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Models"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public class PowerPointSlide"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string PptLabsIndicatorShapeName \u003d \"PPTIndicator\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        protected readonly Slide _slide;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string PptLabsTemplateMarkerShapeName \u003d \"PPTTemplateMarker\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string UnnamedShapeName \u003d \"Unnamed Shape \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private List\u003cMsoAnimEffect\u003e entryEffects \u003d new List\u003cMsoAnimEffect\u003e()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectAppear, MsoAnimEffect.msoAnimEffectBlinds, MsoAnimEffect.msoAnimEffectBox,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectCheckerboard, MsoAnimEffect.msoAnimEffectCircle, MsoAnimEffect.msoAnimEffectDiamond,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectDissolve, MsoAnimEffect.msoAnimEffectFly, MsoAnimEffect.msoAnimEffectPeek, "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectPlus, MsoAnimEffect.msoAnimEffectRandomBars, MsoAnimEffect.msoAnimEffectSplit,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectStrips, MsoAnimEffect.msoAnimEffectWedge, MsoAnimEffect.msoAnimEffectWheel,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectWipe, MsoAnimEffect.msoAnimEffectExpand, MsoAnimEffect.msoAnimEffectFade,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectFadedSwivel, MsoAnimEffect.msoAnimEffectFadedZoom, MsoAnimEffect.msoAnimEffectZoom,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectCenterRevolve, MsoAnimEffect.msoAnimEffectFloat, MsoAnimEffect.msoAnimEffectGrowAndTurn,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectRiseUp, MsoAnimEffect.msoAnimEffectSpinner, MsoAnimEffect.msoAnimEffectSwivel,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectBoomerang, MsoAnimEffect.msoAnimEffectBounce, MsoAnimEffect.msoAnimEffectCredits,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectFlip, MsoAnimEffect.msoAnimEffectFloat, MsoAnimEffect.msoAnimEffectPinwheel,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimEffect.msoAnimEffectSpiral, MsoAnimEffect.msoAnimEffectWhip"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        protected PowerPointSlide(Slide slide)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide \u003d slide;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide GetNativeSlide()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            return _slide;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public static PowerPointSlide FromSlideFactory(Slide slide, bool includeIndicator \u003d false)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide powerPointSlide;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide.Name.Contains(\"PPTLabsSpotlight\"))"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                powerPointSlide \u003d PowerPointSpotlightSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (PowerPointAckSlide.IsAckSlide(slide))"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                powerPointSlide \u003d PowerPointAckSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                powerPointSlide \u003d new PowerPointSlide(slide);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            if (includeIndicator)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                powerPointSlide.AddPowerPointLabsIndicator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            return powerPointSlide;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        public String NotesPageText"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_slide \u003d\u003d null || _slide.HasNotesPage \u003d\u003d MsoTriState.msoFalse)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    return String.Empty;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d _slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape notesPageBody \u003d notesPagePlaceholders.FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                String notesText \u003d notesPageBody !\u003d null ? notesPageBody.TextFrame.TextRange.Text : String.Empty;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return notesText;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_slide \u003d\u003d null)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d _slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape notesPageBody \u003d notesPagePlaceholders.FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                if (notesPageBody !\u003d null)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    notesPageBody.TextFrame.TextRange.Text \u003d value;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        /// TODO: escape newlines so that they can be stored properly?"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// TODO: It is a known problem that if you store a string with newlines in NotesPageText, the retrieved string may be slightly different."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public void StoreDataInNotes(string data)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            NotesPageText \u003d CommonText.NotesPageStorageText + data;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        public string RetrieveDataFromNotes()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            string text \u003d NotesPageText;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!text.StartsWith(CommonText.NotesPageStorageText))"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            return text.Substring(CommonText.NotesPageStorageText.Length);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shapes Shapes"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.Shapes; }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public int ID"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.SlideID; }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public int Index"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.SlideIndex; }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public Design Design"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.Design; }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            set { _slide.Design \u003d value; }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        public PpSlideLayout Layout"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.Layout; }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            set { _slide.Layout \u003d value; }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        /// It only copies the background colour for now. Is there really no way to copy over background in general?"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CopyBackgroundColourFrom(PowerPointSlide refSlide)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.FillFormat myFill \u003d _slide.Background[1].Fill;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.FillFormat refFill \u003d refSlide._slide.Background[1].Fill;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            if (refFill.Type \u003d\u003d MsoFillType.msoFillSolid)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.FollowMasterBackground \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                myFill.ForeColor.RGB \u003d refFill.ForeColor.RGB;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                myFill.BackColor.RGB \u003d refFill.BackColor.RGB;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        public SlideShowTransition Transition"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.SlideShowTransition; }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                // deep copy set-able fields"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.AdvanceOnClick \u003d value.AdvanceOnClick;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.AdvanceOnTime \u003d value.AdvanceOnTime;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.AdvanceTime \u003d value.AdvanceTime;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.Duration \u003d value.Duration;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.EntryEffect \u003d value.EntryEffect;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.Hidden \u003d value.Hidden;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                _slide.SlideShowTransition.Speed \u003d value.Speed;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        public TimeLine TimeLine"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.TimeLine; }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        public string Name"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _slide.Name; }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            set { _slide.Name \u003d value; }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool Hidden"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return Transition.Hidden \u003d\u003d MsoTriState.msoTrue; }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            set { Transition.Hidden \u003d value ? MsoTriState.msoTrue : MsoTriState.msoFalse; }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Delete()"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Delete();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Copy()"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Copy();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MoveTo(int index)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.MoveTo(index);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide Duplicate()"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            return FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasAnimationForClick(int clickNumber)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effect \u003d mainSequence.FindFirstAnimationForClick(clickNumber);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect !\u003d null;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteShapesWithPrefixTimelineInvariant(string prefix)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            int effectCnt \u003d 1;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            while (effectCnt \u003c\u003d mainSequence.Count)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d mainSequence[effectCnt];"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.Shape.Name.StartsWith(prefix))"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if the shape is triggered on click, delete this may cause problem if the next"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                    // effect is triggered with previous and we want the time sequence to be time"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                    // invariant. To handle it, we need to set the on_prev event to be on_click."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick \u0026\u0026"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Index + 1 \u003c\u003d mainSequence.Count)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                        Effect nextEffect \u003d mainSequence[effect.Index + 1];"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (nextEffect.Timing.TriggerType \u003d\u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                            nextEffect.Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                    effect.Delete();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                    effectCnt++;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteShapesWithPrefix(prefix);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteShapesWithPrefix(string prefix)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name.StartsWith(prefix));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape s in matchingShapes)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteShapeWithRule(Regex regex)"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e regex.IsMatch(current.Name));"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape s in matchingShapes)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteShapeWithName(string name)"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name \u003d\u003d name);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape s in matchingShapes)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteHiddenShapes()"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                .Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                .Where(sh \u003d\u003e sh.Visible \u003d\u003d MsoTriState.msoFalse)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                .ToList()"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                .ForEach(sh \u003d\u003e sh.Delete());"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteAllShapes()"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape s in matchingShapes)"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetShapeAsAutoplay(Shape shape)"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect firstClickEvent \u003d mainSequence.FindFirstAnimationForClick(1);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            bool hasNoClicksOnSlide \u003d firstClickEvent \u003d\u003d null;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasNoClicksOnSlide)"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                AddShapeAsLastAutoplaying(shape, MsoAnimEffect.msoAnimEffectFade);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                InsertAnimationBeforeExisting(shape, firstClickEvent, MsoAnimEffect.msoAnimEffectFade);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetAudioAsAutoplay(Shape shape)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect firstClickEvent \u003d mainSequence.FindFirstAnimationForClick(1);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            bool hasNoClicksOnSlide \u003d firstClickEvent \u003d\u003d null;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasNoClicksOnSlide)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                AddShapeAsLastAutoplaying(shape, MsoAnimEffect.msoAnimEffectMediaPlay);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                InsertAnimationBeforeExisting(shape, firstClickEvent, MsoAnimEffect.msoAnimEffectMediaPlay);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        public void InsertPicture(string fileName, MsoTriState linkToFile, MsoTriState saveWithDoc,"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                                  Tuple\u003cSingle, Single\u003e leftTopCorner)"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes.AddPicture(fileName, linkToFile, saveWithDoc, leftTopCorner.Item1, leftTopCorner.Item2).Select();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Creates a snapshot of snapshotSlide before entry animations and places an image of the slide in this slide"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns the image shape."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape InsertEntrySnapshotOfSlide(PowerPointSlide snapshotSlide)"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide nextSlideCopy \u003d snapshotSlide.Duplicate();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlideCopy.Shapes"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "                            .Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "                            .Where(shape \u003d\u003e nextSlideCopy.HasEntryAnimation(shape))"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                            .ToList()"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                            .ForEach(shape \u003d\u003e shape.Delete());"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlideCopy.Copy();"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape slidePicture \u003d _slide.Shapes.PasteSpecial(PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            nextSlideCopy.Delete();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            return slidePicture;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Creates a snapshot of snapshotSlide after exit animations and places an image of the slide in this slide"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns the image shape."
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape InsertExitSnapshotOfSlide(PowerPointSlide snapshotSlide)"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide previousSlideCopy \u003d snapshotSlide.Duplicate();"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlideCopy.Shapes"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                            .Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                            .Where(shape \u003d\u003e previousSlideCopy.HasExitAnimation(shape))"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                            .ToList()"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                            .ForEach(shape \u003d\u003e shape.Delete());"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlideCopy.Copy();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape slidePicture \u003d _slide.Shapes.PasteSpecial(PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            previousSlideCopy.Delete();"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            return slidePicture;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Create animation effect for shape at `clickNumber`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"shape\"\u003eThe shape to be animated\u003c/param\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"clickNumber\"\u003eMin value is -1, this occurs when we want to set "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        /// a selfExplanationClickItem at ClickNo \u003d -1 as an independent animation block\u003c/param\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"effect\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        public Effect SetShapeAsClickTriggered(Shape shape, int clickNumber, MsoAnimEffect effect)"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect addedEffect;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence mainSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect nextClickEffect \u003d mainSequence.FindFirstAnimationForClick(clickNumber + 1);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect previousClickEffect \u003d mainSequence.FindFirstAnimationForClick(clickNumber);"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect nextNextClickEffect \u003d mainSequence.FindFirstAnimationForClick(clickNumber + 2);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            // In the case when clickNumber \u003d -1, "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            // we need to check effects for clickNumer + 1 and clickNumer + 2 to conclude whether there is "
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            // animations after it."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "            bool hasClicksAfter \u003d nextClickEffect !\u003d null || nextNextClickEffect !\u003d null;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            bool hasClickBefore \u003d previousClickEffect !\u003d null;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasClicksAfter)"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect nextEffect \u003d nextClickEffect !\u003d null ? nextClickEffect : nextNextClickEffect;"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                addedEffect \u003d InsertAnimationBeforeExisting(shape, nextEffect, effect);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                // to handle case when there is custom animation previously at ClickNo \u003d 0"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!StringUtility.IsPPTLShape(nextEffect.Shape.Name))"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                    nextEffect.Timing.TriggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnPageClick;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (hasClickBefore)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                addedEffect \u003d AddShapeAsLastAutoplaying(shape, effect);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (clickNumber \u003c\u003d 0)"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                addedEffect \u003d mainSequence.AddEffect(shape, effect,"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                    trigger: MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                addedEffect \u003d mainSequence.AddEffect(shape, effect);"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            return addedEffect;"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ShowShapeAfterClick(Shape shape, int clickNumber)"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            SetShapeAsClickTriggered(shape, clickNumber, MsoAnimEffect.msoAnimEffectAppear);"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        public void HideShapeAfterClick(Shape shape, int clickNumber)"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect addedEffect \u003d SetShapeAsClickTriggered(shape, clickNumber, MsoAnimEffect.msoAnimEffectAppear);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "            addedEffect.Exit \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        public void HideShapeAsLastClickIfNeeded(Shape shape)"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsNextSlideTransitionBlacklisted())"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                Sequence animationSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d animationSequence.AddEffect(shape, MsoAnimEffect.msoAnimEffectFade);"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                effect.Exit \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Translates the x and y coordinates a VML Path String (obtained from MotionEffect.Path) by a specified amount."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        /// TODO: Not sure whether it works with any VML path string yet. Need to verify. It seems to. Idea: the numerical (non-alphabetical) values alternate between x and y coordinates. I translate every value this eay by either xShift or yShift."
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        public string TranslateVmlPath(string path, float xShift, float yShift)"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] splitPath \u003d path.Split(\u0027 \u0027);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isXCoordinate \u003d true;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c splitPath.Length; ++i)"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "                string token \u003d splitPath[i].Trim();"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                if (token.Length \u003c\u003d 1 \u0026\u0026 char.IsLetter(token, 0))"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                float val \u003d float.Parse(token, CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isXCoordinate)"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                    val +\u003d xShift;"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                    isXCoordinate \u003d false;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                    val +\u003d yShift;"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "                    isXCoordinate \u003d true;"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "                splitPath[i] \u003d val.ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            return string.Join(\" \", splitPath);"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Changes the Left, Top coordinates and Width, Height of the shape while maintaining the positions of motion paths. "
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RelocateShapeWithoutPath(Shape shape, float newLeft, float newTop, float newWidth, float newHeight)"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            float originalLeft \u003d shape.Left;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            float originalTop \u003d shape.Top;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            float originalWidth \u003d shape.Width;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            float originalHeight \u003d shape.Height;"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Left \u003d newLeft;"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Top \u003d newTop;"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Width \u003d newWidth;"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Height \u003d newHeight;"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e effects \u003d TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: Generalize to paths other than msoAnimEffectPathDown?"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            effects \u003d effects.Where(e \u003d\u003e e.Shape.Equals(shape) \u0026\u0026 e.EffectType \u003d\u003d MsoAnimEffect.msoAnimEffectPathDown).ToList();"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            float xShift \u003d (originalLeft - newLeft) + (originalWidth - newWidth) / 2;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            float yShift \u003d (originalTop - newTop) + (originalHeight - newHeight) / 2;"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            xShift /\u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            yShift /\u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Effect effect in effects)"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "                MotionEffect motionEffect \u003d effect.Behaviors[1].MotionEffect;"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "                motionEffect.Path \u003d TranslateVmlPath(motionEffect.Path, xShift, yShift);"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape GroupShapes(IEnumerable\u003cShape\u003e shapes)"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            return ToShapeRange(shapes).Group();"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange ToShapeRange(Shape shape)"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapeList \u003d new List\u003cShape\u003e { shape };"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            return ToShapeRange(shapeList);"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange ToShapeRange(IEnumerable\u003cShape\u003e shapes)"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapeList \u003d shapes.ToList();"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e oldNames \u003d shapeList.Select(shape \u003d\u003e shape.Name).ToList();"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cstring\u003e currentShapeNames \u003d Shapes.Cast\u003cShape\u003e().Select(shape \u003d\u003e shape.Name);"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] unusedNames \u003d CommonUtil.GetUnusedStrings(currentShapeNames, shapeList.Count);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Zip(unusedNames, (shape, name) \u003d\u003e shape.Name \u003d name).ToList();"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapeRange \u003d Shapes.Range(unusedNames);"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Zip(oldNames, (shape, name) \u003d\u003e shape.Name \u003d name).ToList();"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeRange;"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Copies the shape into this slide, without the usual position offset when an existing shape is already there."
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape CopyShapeToSlide(Shape shape)"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                // Will affect clipboard"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Copy();"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape newShape \u003d _slide.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Name \u003d shape.Name;"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Left \u003d shape.Left;"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                newShape.Top \u003d shape.Top;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapeUtil.MoveZToJustInFront(newShape, shape);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteShapeAnimations(newShape);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "                TransferAnimation(shape, newShape);"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "                return newShape;"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (COMException)"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                // invalid shape for copy paste (e.g. a placeholder title box with no content)"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clones the specified shape onto the slide, leaving the range unmodified."
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange CloneShapeFromRange(ShapeRange range, Shape shapeToClone)"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape clonedShape \u003d this.CopyShapeToSlide(shapeToClone);"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e result \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in range)"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape \u003d\u003d shapeToClone)"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "                    result.Add(clonedShape);"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                    result.Add(shape);"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.ToShapeRange(result);"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Copies the shaperange into this slide, without the usual position offset when pasting over an existing shape."
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        /// If you are having difficulty getting a shaperange, use the ToShapeRange method."
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        /// TODO: Test this method more thoroughly in more cases other than Graphics.SquashSlides"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange CopyShapesToSlide(ShapeRange shapes)"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "            // First Index all the shapes by name, so they can be identified later."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            Dictionary\u003cstring, Shape\u003e originalShapes \u003d new Dictionary\u003cstring, Shape\u003e();"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            Dictionary\u003cstring, string\u003e originalNames \u003d new Dictionary\u003cstring, string\u003e();"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                string tempName \u003d index.ToString();"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "                originalNames.Add(tempName, shape.Name);"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                originalShapes.Add(tempName, shape);"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                // temporarily set the name before copy, so we can locate it again in the new slide."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Name \u003d tempName;"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "            // Copy all the shapes over."
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes.Copy();"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange newShapes \u003d _slide.Shapes.Paste();"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            // Now use the indexed names to set back the names and positions to the original shapes\u0027"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in newShapes)"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                string key \u003d shape.Name;"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                string originalName \u003d originalNames[key];"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape originalShape \u003d originalShapes[key];"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                originalShape.Name \u003d originalName;"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Name \u003d originalName;"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Left \u003d originalShape.Left;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Top \u003d originalShape.Top;"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "            return newShapes;"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TransferAnimation(Shape source, Shape destination)"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e enumerableSequence \u003d sequence.Cast\u003cEffect\u003e().ToList();"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect entryDetails \u003d enumerableSequence.FirstOrDefault(effect \u003d\u003e effect.Shape.Equals(source));"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            if (entryDetails !\u003d null)"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                InsertAnimationAtIndex(destination, entryDetails.Index, entryDetails.EffectType, entryDetails.Timing.TriggerType);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect exitDetails \u003d enumerableSequence.LastOrDefault(effect \u003d\u003e effect.Shape.Equals(source));"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            if (exitDetails !\u003d null \u0026\u0026 !exitDetails.Equals(entryDetails))"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "                InsertAnimationAtIndex(destination, exitDetails.Index, exitDetails.EffectType,"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "                    exitDetails.Timing.TriggerType);"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveAnimationsForShape(Shape shape)"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cEffect\u003e mainEffects \u003d _slide.TimeLine.MainSequence.Cast\u003cEffect\u003e();"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteEffectsForShape(shape, mainEffects);"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Sequence sequence in _slide.TimeLine.InteractiveSequences)"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteEffectsForShape(shape, sequence.Cast\u003cEffect\u003e());"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteShapeAnimations(Shape sh)"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int x \u003d sequence.Count; x \u003e\u003d 1; x--)"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d sequence[x];"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.Shape \u003d\u003d null || "
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                    (effect.Shape.Name \u003d\u003d sh.Name \u0026\u0026 effect.Shape.Id \u003d\u003d sh.Id))"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                    effect.Delete();"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveAnimationsForShapes(List\u003cShape\u003e shapes)"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape sh in shapes)"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteShapeAnimations(sh);"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetShapesWithPrefix(string prefix)"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name.StartsWith(prefix)).ToList();"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "            return matchingShapes;"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetShapeWithName(string name)"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name \u003d\u003d name).ToList();"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            return matchingShapes;"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns a dictionary shapeName \u003d\u003e shape,"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        /// where shape refers to the first (any) shape found in the slide with that name."
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        public Dictionary\u003cstring, Shape\u003e GetNameToShapeDictionary()"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "            Dictionary\u003cstring, Shape\u003e dictionary \u003d new Dictionary\u003cstring, Shape\u003e(shapes.Count());"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!dictionary.ContainsKey(shape.Name))"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                    dictionary.Add(shape.Name, shape);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "            return dictionary;"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape GetShape(Func\u003cShape, bool\u003e condition)"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            return _slide.Shapes.Cast\u003cShape\u003e().Where(condition).FirstOrDefault();"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetShapesWithMediaType(PpMediaType type, Regex nameRule)"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Type \u003d\u003d MsoShapeType.msoMedia \u0026\u0026"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 current.MediaType \u003d\u003d type \u0026\u0026"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                 nameRule.IsMatch(current.Name)).ToList();"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            return matchingShapes;"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetShapesWithRule(Regex nameRule)"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e nameRule.IsMatch(current.Name)).ToList();"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "            return matchingShapes;"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetShapesWithTypeAndRule(MsoShapeType type, Regex nameRule)"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Type \u003d\u003d type \u0026\u0026"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                                              nameRule.IsMatch(current.Name)).ToList();"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "            return matchingShapes;"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasShapeWithRule(Regex nameRule)"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetShapesWithRule(nameRule).Count \u003e 0;"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasShapeWithSameName(string name)"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Name \u003d\u003d name).ToList();"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            return matchingShapes.Count !\u003d 0;"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateSpotlightSlide()"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointSpotlightSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateAutoAnimateSlide()"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointAutoAnimateSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateDrillDownSlide()"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointDrillDownSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateStepBackSlide()"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointStepBackSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateZoomMagnifyingSlide()"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointMagnifyingSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateZoomMagnifiedSlide()"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointMagnifiedSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateZoomDeMagnifyingSlide()"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointDeMagnifyingSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateZoomPanSlide()"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide duplicatedSlide \u003d _slide.Duplicate()[1];"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointMagnifiedPanSlide.FromSlideFactory(duplicatedSlide);"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasExitAnimation(Shape shape)"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int x \u003d sequence.Count; x \u003e\u003d 1; x--)"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d sequence[x];"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.Shape.Name \u003d\u003d shape.Name \u0026\u0026 effect.Shape.Id \u003d\u003d shape.Id)"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Exit \u003d\u003d Office.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasEntryAnimation(Shape shape)"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int x \u003d sequence.Count; x \u003e\u003d 1; x--)"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d sequence[x];"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.Shape.Name \u003d\u003d shape.Name \u0026\u0026 effect.Shape.Id \u003d\u003d shape.Id)"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (IsEntryEffect(effect))"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                        return true;"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns the index of the first effect in the slide that belongs to the shape."
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        public int IndexOfFirstEffect(Shape shape)"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d sequence.Count; i++)"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d sequence[i];"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.Shape.Name \u003d\u003d shape.Name \u0026\u0026 effect.Shape.Id \u003d\u003d shape.Id)"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeletePlaceholderShapes()"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes.Placeholders.Cast\u003cShape\u003e().ToList().ForEach(shape \u003d\u003e shape.Delete());"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape AddTemplateSlideMarker()"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "            if (HasTemplateSlideMarker())"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            float ratio \u003d 22.5f;"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            float shapeWidth \u003d Math.Min(slideWidth, 900);"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "            float shapeHeight \u003d shapeWidth/ratio;"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape markerShape \u003d _slide.Shapes.AddTextbox(MsoTextOrientation.msoTextOrientationHorizontal, 0, 0, shapeWidth, shapeHeight);"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentCentered;"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextFrame2.TextRange.Text \u003d AgendaLabText.TemplateSlideInstructions;"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.Fill.ForeColor.RGB \u003d 0x0000C0;"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextFrame2.TextRange.Font.Bold \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextFrame2.TextRange.Font.Fill.ForeColor.RGB \u003d 0x00FFFF;"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextFrame2.TextRange.Paragraphs[2].Font.Fill.ForeColor.RGB \u003d 0xFFFFFF;"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextFrame2.TextRange.Paragraphs[2].Font.Bold \u003d MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.TextFrame2.AutoSize \u003d MsoAutoSize.msoAutoSizeTextToFitShape;"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.ZOrder(MsoZOrderCmd.msoSendToBack);"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.Left \u003d (slideWidth - markerShape.Width) / 2;"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.Top \u003d slideHeight - markerShape.Height;"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "            markerShape.Name \u003d PptLabsTemplateMarkerShapeName;"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.MakeShapeViewTimeInvisible(markerShape, _slide);"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "            return markerShape;"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasTemplateSlideMarker()"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "            return _slide.Shapes.Cast\u003cShape\u003e().Any(IsTemplateSlideMarker);"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsTemplateSlideMarker(Shape shape)"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            return shape.Name \u003d\u003d PptLabsTemplateMarkerShapeName;"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsNotTemplateSlideMarker(Shape shape)"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "            return !IsTemplateSlideMarker(shape);"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteIndicator()"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes.Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "                        .Where(IsIndicator)"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ToList()"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ForEach(shape \u003d\u003e shape.Delete());"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        public void HideIndicator()"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes.Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "                        .Where(IsIndicator)"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ToList()"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ForEach(shape \u003d\u003e shape.Visible \u003d MsoTriState.msoFalse);"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ShowIndicator()"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes.Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "                        .Where(IsIndicator)"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ToList()"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ForEach(shape \u003d\u003e shape.Visible \u003d MsoTriState.msoTrue);"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "        public void BringIndicatorToFront()"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.Shapes.Cast\u003cShape\u003e()"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "                        .Where(IsIndicator)"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ToList()"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                        .ForEach(shape \u003d\u003e shape.ZOrder(MsoZOrderCmd.msoBringToFront));"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool IsIndicator(Shape shape)"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "            return shape.Name.StartsWith(PptLabsIndicatorShapeName);"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MoveMotionAnimation()"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Effect eff in _slide.TimeLine.MainSequence)"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((eff.EffectType \u003e\u003d MsoAnimEffect.msoAnimEffectPathCircle \u0026\u0026 eff.EffectType \u003c\u003d MsoAnimEffect.msoAnimEffectPathRight) || eff.EffectType \u003d\u003d MsoAnimEffect.msoAnimEffectCustom)"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                    AnimationBehavior motion \u003d eff.Behaviors[1];"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (motion.Type \u003d\u003d MsoAnimType.msoAnimTypeMotion)"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "                        Shape sh \u003d eff.Shape;"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                        string motionPath \u003d motion.MotionEffect.Path.Trim();"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (motionPath.Last() \u003c \u0027A\u0027 || motionPath.Last() \u003e \u0027Z\u0027)"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "                            motionPath +\u003d \" X\";"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                        string[] path \u003d motionPath.Split(\u0027 \u0027);"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                        int count \u003d path.Length;"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                        float xVal \u003d Convert.ToSingle(path[count - 3]);"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                        float yVal \u003d Convert.ToSingle(path[count - 2]);"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "                        sh.Left +\u003d (xVal * PowerPointPresentation.Current.SlideWidth);"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "                        sh.Top +\u003d (yVal * PowerPointPresentation.Current.SlideHeight);"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddAppearDisappearAnimation(Shape sh)"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effectAppear \u003d sequence.AddEffect(sh, MsoAnimEffect.msoAnimEffectAppear, MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "            effectAppear.Timing.Duration \u003d 0;"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effectDisappear \u003d sequence.AddEffect(sh, MsoAnimEffect.msoAnimEffectAppear, MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "            effectDisappear.Exit \u003d Office.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "            effectDisappear.Timing.Duration \u003d 0;"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape GetShapeWithSameIDAndName(Shape shapeToMatch)"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape tempMatchingShape \u003d null;"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape sh in _slide.Shapes)"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapeToMatch.Id \u003d\u003d sh.Id \u0026\u0026 HaveSameNames(shapeToMatch, sh))"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (tempMatchingShape \u003d\u003d null)"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                        tempMatchingShape \u003d sh;"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (GetDistanceBetweenShapes(shapeToMatch, sh) \u003c GetDistanceBetweenShapes(shapeToMatch, tempMatchingShape))"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "                            tempMatchingShape \u003d sh;"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempMatchingShape;"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape GetShapeWithSameName(Shape shapeToMatch)"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape tempMatchingShape \u003d null;"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape sh in _slide.Shapes)"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "                if (HaveSameNames(shapeToMatch, sh))"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (tempMatchingShape \u003d\u003d null)"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                        tempMatchingShape \u003d sh;"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (GetDistanceBetweenShapes(shapeToMatch, sh) \u003c GetDistanceBetweenShapes(shapeToMatch, tempMatchingShape))"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                            tempMatchingShape \u003d sh;"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempMatchingShape;"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsSpotlightSlide()"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "            return _slide.Name.Contains(\"PPTLabsSpotlight\");"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsAckSlide()"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointAckSlide.IsAckSlide(this);"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        public PowerPointSlide CreateAckSlide()"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide ackSlide \u003d PowerPointPresentation.Current.Presentation.Slides.Add(PowerPointPresentation.Current.SlideCount + 1, PpSlideLayout.ppLayoutBlank);"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointAckSlide.FromSlideFactory(ackSlide);"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasTextFragments()"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape sh in _slide.Shapes)"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "                if (sh.Name.StartsWith(\"PPTLabsHighlightTextFragmentsShape\"))"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Get all shapes in the slide, ordered by when they appear in the animation timeline."
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Shapes with entry animations are ordered behind shapes without entry animations."
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Shapes without animations are placed at the back."
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetShapesOrderedByTimeline()"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapesWithEntry \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapesWithoutEntry \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "            HashSet\u003cint\u003e identifiedShapeIds \u003d new HashSet\u003cint\u003e();"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence seq \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d seq.Count; ++i)"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effect \u003d seq[i];"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape shape \u003d effect.Shape;"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!identifiedShapeIds.Contains(shape.Id))"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "                    identifiedShapeIds.Add(shape.Id);"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (IsEntryEffect(effect))"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "                        shapesWithEntry.Add(shape);"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "                        shapesWithoutEntry.Add(shape);"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e remainingShapes \u003d _slide.Shapes.Cast\u003cShape\u003e().Where(shape \u003d\u003e !identifiedShapeIds.Contains(shape.Id));"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d shapesWithoutEntry;"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes.AddRange(shapesWithEntry);"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes.AddRange(remainingShapes);"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapes;"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns all HighlightTextFragmentsShapes in the order they appear in the animation timeline."
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cShape\u003e GetTextFragments()"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e allShapes \u003d GetShapesOrderedByTimeline();"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "            return allShapes.Where(shape \u003d\u003e shape.Name.StartsWith(\"PPTLabsHighlightTextFragmentsShape\")).ToList();"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasCaptions()"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in this.Shapes)"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Name.StartsWith(\"PowerPointLabs Caption\"))"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool HasAudio()"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in this.Shapes)"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Name.Contains(ComputerVoiceRuntimeService.SpeechShapePrefix) || "
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.Name.Contains(ComputerVoiceRuntimeService.SpeechShapePrefixOld))"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "        public Effect AddShapeAsLastAutoplaying(Shape shape, MsoAnimEffect effect)"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect addedEffect \u003d _slide.TimeLine.MainSequence.AddEffect(shape, effect,"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            return addedEffect;"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Default shapes have the property where if you duplicate them (or copy/paste), they change names."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// This command renames the shapes in the slide so that they don\u0027t have the default names."
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MakeShapeNamesNonDefault()"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ShapeUtil.HasDefaultName(shape))"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.Name \u003d UnnamedShapeName + CommonUtil.UniqueDigitString();"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Gives all shapes in the slide unique names. Good to call before sync logic."
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Note: If the name of the shape is used to identify the shape (e.g. through AgendaShape),"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        /// this can be dangerous if there are duplicates as it overrides the original name."
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MakeShapeNamesUnique(Func\u003cShape, bool\u003e restrictTo \u003d null)"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "            if (restrictTo \u003d\u003d null)"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                restrictTo \u003d shape \u003d\u003e true;"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "            HashSet\u003cstring\u003e currentNames \u003d new HashSet\u003cstring\u003e();"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().Where(restrictTo);"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentNames.Contains(shape.Name))"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.Name \u003d UnnamedShapeName + CommonUtil.UniqueDigitString();"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                currentNames.Add(shape.Name);"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteSlideNumberShapes()"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapes \u003d _slide.Shapes.Cast\u003cShape\u003e().ToList();"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e matchingShapes \u003d shapes.Where(current \u003d\u003e current.Type \u003d\u003d MsoShapeType.msoPlaceholder \u0026\u0026 current.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderSlideNumber);"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape s in matchingShapes)"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                s.Delete();"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        protected Shape AddPowerPointLabsIndicator()"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "            String tempFileName \u003d Path.GetTempFileName();"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "            Properties.Resources.Indicator.Save(tempFileName);"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape indicatorShape \u003d _slide.Shapes.AddPicture(tempFileName, Office.MsoTriState.msoFalse, Office.MsoTriState.msoTrue, PowerPointPresentation.Current.SlideWidth - 120, 0, 120, 84);"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape.Left \u003d PowerPointPresentation.Current.SlideWidth - 120;"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape.Top \u003d 0;"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape.Width \u003d 120;"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape.Height \u003d 84;"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "            indicatorShape.Name \u003d PptLabsIndicatorShapeName + DateTime.Now.ToString(\"yyyyMMddHHmmssffff\");"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.MakeShapeViewTimeInvisible(indicatorShape, _slide);"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "            return indicatorShape;"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void DeleteSlideNotes()"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_slide.HasNotesPage \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Shape sh in _slide.NotesPage.Shapes)"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (sh.TextFrame.HasText \u003d\u003d MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                        sh.TextEffect.Text \u003d \"\";"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void DeleteSlideMedia()"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape sh in _slide.Shapes)"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "                if (sh.Type \u003d\u003d MsoShapeType.msoMedia)"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "                    sh.Delete();"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "        protected void RemoveSlideTransitions()"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "            _slide.SlideShowTransition.EntryEffect \u003d PpEntryEffect.ppEffectNone;"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        private Effect InsertAnimationAtIndex(Shape shape, int index, MsoAnimEffect animationEffect,"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "            MsoAnimTriggerType triggerType)"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence animationSequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect effect \u003d animationSequence.AddEffect(shape, animationEffect, MsoAnimateByLevel.msoAnimateLevelNone,"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "                triggerType);"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            effect.MoveTo(index);"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect;"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsNextSlideTransitionBlacklisted()"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isLastSlide \u003d _slide.SlideIndex \u003d\u003d PowerPointPresentation.Current.SlideCount;"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isLastSlide)"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "            // Indexes are from 1, while the slide collection starts from 0."
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide nextSlide \u003d PowerPointPresentation.Current.Slides[Index];"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (nextSlide.Transition.EntryEffect)"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectCoverUp:"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectCoverLeftUp:"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectCoverRightUp:"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectFlyFromBottom:"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectPushUp:"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectPushDown:"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectSwitchUp:"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectFlipUp:"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectCubeUp:"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectRotateUp:"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectBoxUp:"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectOrbitUp:"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "                case PpEntryEffect.ppEffectPanUp:"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void DeleteEffectsForShape(Shape shape, IEnumerable\u003cEffect\u003e mainEffects)"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cEffect\u003e shapeToDeleteList \u003d mainEffects.Where(e \u003d\u003e e.Shape.Equals(shape)).ToList();"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Effect e in shapeToDeleteList)"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Delete();"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        private float GetDistanceBetweenShapes(Shape sh1, Shape sh2)"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "            float sh1CenterX \u003d (sh1.Left + (sh1.Width / 2));"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "            float sh2CenterX \u003d (sh2.Left + (sh2.Width / 2));"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "            float sh1CenterY \u003d (sh1.Top + (sh1.Height / 2));"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            float sh2CenterY \u003d (sh2.Top + (sh2.Height / 2));"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "            float distSquared \u003d (float)(Math.Pow((sh2CenterX - sh1CenterX), 2) + Math.Pow((sh2CenterY - sh1CenterY), 2));"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "            return (float)(Math.Sqrt(distSquared));"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool HaveSameNames(Shape sh1, Shape sh2)"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "            String name1 \u003d sh1.Name;"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "            String name2 \u003d sh2.Name;"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "            return (name1.ToUpper().CompareTo(name2.ToUpper()) \u003d\u003d 0);"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "        private Effect InsertAnimationBeforeExisting(Shape shape, Effect existing, MsoAnimEffect effect)"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d _slide.TimeLine.MainSequence;"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "            Effect newAnimation \u003d sequence.AddEffect(shape, effect, MsoAnimateByLevel.msoAnimateLevelNone,"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "                MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "            newAnimation.MoveBefore(existing);"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "            return newAnimation;"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        /// TODO: What does \"Entry Animation\" mean? entryEffects.Contains(effectType) could mean that it is either an entry or exit animation. Perhaps change it to entryEffects.Contains(effectType) \u0026\u0026 entryEffects.Exit \u003d\u003d Mso False"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsEntryEffect(Effect effect)"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "            return effect.Exit \u003d\u003d MsoTriState.msoFalse \u0026\u0026 entryEffects.Contains(effect.EffectType);"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1371,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/Views/AdjustImageWindow.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Documents;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Threading;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.CropLab;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Util;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Views.ImageAdjustment;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.WPF.Observable;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using Color \u003d System.Windows.Media.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.PictureSlidesLab.Views"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for Window1.xaml"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class AdjustImageWindow"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        //used for display in the adjust dimensions window only."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableString thumbnailImageFile \u003d new ObservableString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AdjustUnit \u003d 10;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private CroppingAdorner _croppingAdorner;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private FrameworkElement _frameworkElement;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isRectSizeSet;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private double _rectX;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private double _rectY;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private double _rectWidth;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private double _rectHeight;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        //used for applying styles to the ppt"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CropResult { get; set; }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //used in generating previews."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CropResultThumbnail { get; set; }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public string RotateResult { get; set; }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public Rect Rect { get; set; }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsCropped { get; set; }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsRotated { get; set; }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOpen { get; set; }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        public AdjustImageWindow()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageHolder.DataContext \u003d thumbnailImageFile;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            MoveLeftImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Left);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            MoveUpImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Up);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            MoveDownImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Down);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            MoveRightImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Right);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            ZoomInImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.PlusZoom);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            ZoomOutImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.MinusZoom);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            AutoFitImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Fit);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            LeftRotateImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.LeftRotate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            RightRotateImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.RightRotate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlipHorizontalImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.FlipHorizontal);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            FlipVerticalImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.FlipVertical);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ShowAdjustPictureDimensionsDialog()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowDialog();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetThumbnailImage(string imageFile)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            CropResultThumbnail \u003d imageFile;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.Invoke(new Action(() \u003d\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                thumbnailImageFile.Text \u003d imageFile;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetFullsizeImage(string imageFile)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            CropResult \u003d imageFile;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetCropRect(double x, double y, double width, double height)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            _isRectSizeSet \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            _rectX \u003d x;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            _rectY \u003d y;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            _rectWidth \u003d width;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            _rectHeight \u003d height;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveCropFromCur()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            AdornerLayer aly \u003d AdornerLayer.GetAdornerLayer(_frameworkElement);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            aly.Remove(_croppingAdorner);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddCropToElement(FrameworkElement element)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_frameworkElement !\u003d null)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveCropFromCur();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect rect;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_isRectSizeSet)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d new Rect("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    _rectX,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                    _rectY,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    _rectWidth,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    _rectHeight);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d AutoFit(element);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            AdornerLayer layer \u003d AdornerLayer.GetAdornerLayer(element);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner \u003d new CroppingAdorner(element, rect);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.SlideWidth \u003d this.GetCurrentPresentation().SlideWidth;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.SlideHeight \u003d this.GetCurrentPresentation().SlideHeight;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.CropChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                Rect croppingRect \u003d _croppingAdorner.ClippingRectangle;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                if (croppingRect.Width*croppingRect.Height \u003c 1)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                    SaveCropButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    SaveCropButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect \u003d rect;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            layer.Add(_croppingAdorner);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            _frameworkElement \u003d element;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            SetClipColorGrey();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Window_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            AddCropToElement(ImageHolder);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            AdjustControlsSize();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            CenterWindowOnScreen();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AdjustControlsSize()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            // adjust image holder size"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageHolder.Width \u003d ImageHolder.ActualWidth;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageHolder.Height \u003d ImageHolder.ActualHeight;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            // adjust this window size"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            Height \u003d ImageHolder.ActualHeight + 15 + SaveCropButton.ActualHeight + 50;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            Width \u003d ImageHolder.ActualWidth + 20;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CenterWindowOnScreen()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            double screenWidth \u003d SystemParameters.PrimaryScreenWidth;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            double screenHeight \u003d SystemParameters.PrimaryScreenHeight;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            double windowWidth \u003d Width;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            double windowHeight \u003d Height;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            Left \u003d (screenWidth / 2) - (windowWidth / 2);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            Top \u003d (screenHeight / 2) - (windowHeight / 2);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetClipColorGrey()"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_croppingAdorner !\u003d null)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                Color color \u003d Colors.Black;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                color.A \u003d 110;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                _croppingAdorner.Fill \u003d new SolidColorBrush(color);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveCropButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect rect \u003d _croppingAdorner.ClippingRectangle;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            double xRatio \u003d rect.X / ImageHolder.ActualWidth;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            double yRatio \u003d rect.Y / ImageHolder.ActualHeight;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            double widthRatio \u003d rect.Width / ImageHolder.ActualWidth;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            double heightRatio \u003d rect.Height / ImageHolder.ActualHeight;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect \u003d rect;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            CropResult \u003d CropAndSaveImageFromFile(CropResult, xRatio, yRatio, widthRatio, heightRatio);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            CropResultThumbnail \u003d ImageUtil.GetThumbnailFromFullSizeImg(CropResult);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            IsCropped \u003d true;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            Close();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private string CropAndSaveImageFromFile(string image, double xRatio, double yRatio, double widthRatio, double heightRatio)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Bitmap originalImg \u003d (Bitmap)Bitmap.FromFile(image);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap result \u003d CropToShape.KiCut(originalImg,"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                (float)xRatio * originalImg.Width,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                (float)yRatio * originalImg.Height,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                (float)widthRatio * originalImg.Width,"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                (float)heightRatio * originalImg.Height);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            string croppedImage \u003d StoragePath.GetPath(\"crop-\""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                                    + DateTime.Now.GetHashCode() + \"-\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                                    + Guid.NewGuid().ToString().Substring(0, 7));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            result.Save(croppedImage);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return croppedImage;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AutoFitButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect rect \u003d AutoFit();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.ClippingRectangle \u003d rect;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        private Rect AutoFit(FrameworkElement element \u003d null)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideWidth \u003d this.GetCurrentPresentation().SlideWidth;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            float slideHeight \u003d this.GetCurrentPresentation().SlideHeight;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            element \u003d element ?? _frameworkElement;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect rect;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            if (element.ActualWidth / element.ActualHeight"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c slideWidth/slideHeight)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                double targetHeight \u003d element.ActualWidth / slideWidth * slideHeight;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d new Rect("
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                    0,"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                    (element.ActualHeight - targetHeight) / 2,"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                    element.ActualWidth,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                    targetHeight);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                double targetWidth \u003d element.ActualHeight / slideHeight * slideWidth;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                rect \u003d new Rect("
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                    (element.ActualWidth - targetWidth) / 2,"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                    0,"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                    targetWidth,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                    element.ActualHeight);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            return rect;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveLeftButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.MoveCroppingRect(-AdjustUnit, 0);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveUpButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.MoveCroppingRect(0, -AdjustUnit);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveDownButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.MoveCroppingRect(0, AdjustUnit);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveRightButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.MoveCroppingRect(AdjustUnit, 0);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ZoomInButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.ZoomCroppingRect(AdjustUnit);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ZoomOutButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            _croppingAdorner.ZoomCroppingRect(-AdjustUnit);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RotateFlipImg(RotateFlipType roatateFlipType)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap img \u003d (Bitmap)Bitmap.FromFile(CropResult);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            img.RotateFlip(roatateFlipType);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            String rotatedImg \u003d StoragePath.GetPath(\"rotated-\""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                                    + DateTime.Now.GetHashCode() + \"-\""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                                    + Guid.NewGuid().ToString().Substring(0, 7));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            img.Save(rotatedImg);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            CropResult \u003d rotatedImg;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            RotateResult \u003d rotatedImg;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            thumbnailImageFile.Text \u003d ImageUtil.GetThumbnailFromFullSizeImg(rotatedImg);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            CropResultThumbnail \u003d ImageUtil.GetThumbnailFromFullSizeImg(rotatedImg);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            IsRotated \u003d true;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            //Resize the ImageHolder and Window after rotating"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "            if (roatateFlipType.Equals(RotateFlipType.Rotate270FlipNone)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                || roatateFlipType.Equals(RotateFlipType.Rotate90FlipNone))"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageHolder.Width \u003d ImageHolder.ActualHeight / Bitmap.FromFile(CropResultThumbnail).Height * Bitmap.FromFile(CropResultThumbnail).Width;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageHolder.Height \u003d ImageHolder.ActualHeight;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                this.Width \u003d ImageHolder.Width + 20;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                this.CenterWindowOnScreen();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.Invoke(DispatcherPriority.SystemIdle, new Action(() \u003d\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                Rect rect \u003d AutoFit();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "                _croppingAdorner.ClippingRectangle \u003d rect;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LeftRotateButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            RotateFlipImg(RotateFlipType.Rotate270FlipNone);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RightRotateButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            RotateFlipImg(RotateFlipType.Rotate90FlipNone);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlipHorizontalButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            RotateFlipImg(RotateFlipType.Rotate180FlipY);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FlipVerticalButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            RotateFlipImg(RotateFlipType.Rotate180FlipX);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 310,
      "yuhongherald": 19
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/Views/PictureSlidesLabWindow.xaml.VariationStageControls.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Model;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using Color \u003d System.Drawing.Color;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using Forms \u003d System.Windows.Forms;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.PictureSlidesLab.Views"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    partial class PictureSlidesLabWindow"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        ///////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // Implemented variation stage controls in UI"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        ///////////////////////////////////////////////////////////////"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Visibility controls and binding style option to property"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        /// update controls visibility here"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateVariationStageControls()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateVariantsColorPanelVisibility();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateVariantFontPanelVisibility();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateVariantsSliderVisibility();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePictureAspectRefreshButtonVisibility();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Binding selected property"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        /// open a color dialog to customize color when user clicks the color panel in the variation stage"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsColorPanel_OnMouseLeftButtonUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            Border panel \u003d sender as Border;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            if (panel \u003d\u003d null)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            ColorDialog colorDialog \u003d new ColorDialog"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                Color \u003d GetColor(panel.Background as SolidColorBrush),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                FullOpen \u003d true"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            if (colorDialog.ShowDialog() \u003d\u003d Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.BindSelectedColor(colorDialog.Color,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsFontPanel_OnDropDownClosed(object sender, EventArgs e)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.BindSelectedFont("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsFontPanel_OnKeyUp(object sender, System.Windows.Input.KeyEventArgs e)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Key \u003d\u003d Key.Up || e.Key \u003d\u003d Key.Down)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.BindSelectedFont("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsSlider_OnValueChangedFinal(object sender, EventArgs e)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            Type type \u003d e.GetType();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            if (type.Equals(typeof(System.Windows.Input.KeyEventArgs)))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Windows.Input.KeyEventArgs eventArgs \u003d (System.Windows.Input.KeyEventArgs)e;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                if (eventArgs.Key !\u003d Key.Left \u0026\u0026 eventArgs.Key !\u003d Key.Right)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsSliderValueChanged.Flag)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.BindSelectedSliderValue("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.IsSliderValueChanged.Flag \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsSlider_OnValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.IsSliderValueChanged.Flag \u003d true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper funcs"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateVariantFontPanelVisibility()"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            if (VariantsComboBox.SelectedValue \u003d\u003d null)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedItem \u003d StylesVariationListBox.SelectedValue as ImageItem;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            string currentCategory \u003d (string) VariantsComboBox.SelectedValue;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentCategory \u003d\u003d PictureSlidesLabText.VariantCategoryFontFamily"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 selectedItem !\u003d null"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 selectedItem.Tooltip !\u003d PictureSlidesLabText.NoEffect)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                FontPanel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.BindStyleToFontPanel();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                FontPanel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateVariantsColorPanelVisibility()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            if (VariantsComboBox.SelectedValue \u003d\u003d null)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedItem \u003d StylesVariationListBox.SelectedValue as ImageItem;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            string currentCategory \u003d (string) VariantsComboBox.SelectedValue;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentCategory.Contains(PictureSlidesLabText.ColorHasEffect)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                 \u0026\u0026 selectedItem !\u003d null"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                 \u0026\u0026 selectedItem.Tooltip !\u003d PictureSlidesLabText.NoEffect)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.BindStyleToColorPanel();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateVariantsSliderVisibility()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            if (VariantsComboBox.SelectedValue \u003d\u003d null)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedItem \u003d StylesVariationListBox.SelectedValue as ImageItem;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            string currentCategory \u003d (string)VariantsComboBox.SelectedValue;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsSliderSupported(currentCategory)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                 \u0026\u0026 selectedItem !\u003d null"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                 \u0026\u0026 selectedItem.Tooltip !\u003d PictureSlidesLabText.NoEffect)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.BindStyleToSlider();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePictureAspectRefreshButtonVisibility()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            if (VariantsComboBox.SelectedValue \u003d\u003d null)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            string currentCategory \u003d (string) VariantsComboBox.SelectedValue;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentCategory \u003d\u003d PictureSlidesLabText.VariantCategoryPicture)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureAspectRefreshButton.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureAspectRefreshButton.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color GetColor(SolidColorBrush brush)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return GraphicsUtil.DrawingColorFromBrush(brush);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsSliderSupported(string currentCategory)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            return currentCategory \u003d\u003d PictureSlidesLabText.VariantCategoryBlurriness"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                 || currentCategory \u003d\u003d PictureSlidesLabText.VariantCategoryBrightness"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                 || currentCategory.Contains(PictureSlidesLabText.TransparencyHasEffect);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 212,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/Views/PictureSlidesLabWindow.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Specialized;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.ComponentModel;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls.Primitives;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Animation;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Threading;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using MahApps.Metro.Controls.Dialogs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Model;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Service;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Util;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.ViewModel;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Views.Interface;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.WPF.Observable;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "using ButtonBase \u003d System.Windows.Controls.Primitives.ButtonBase;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "using Clipboard \u003d System.Windows.Forms.Clipboard;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "using DragEventArgs \u003d System.Windows.DragEventArgs;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "using Forms \u003d System.Windows.Forms;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "using KeyEventArgs \u003d System.Windows.Input.KeyEventArgs;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "using ListBox \u003d System.Windows.Controls.ListBox;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "using MessageBox \u003d System.Windows.MessageBox;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "using Point \u003d System.Windows.Point;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.PictureSlidesLab.Views"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for Picture Slides Lab"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class PictureSlidesLabWindow : IPictureSlidesLabWindowView"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Props \u0026 States"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        // UI model used to adjust image offset"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public AdjustImageWindow CropWindow { get; set; }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        // UI model for drag and drop"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableString DragAndDropInstructionText { get; set; }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public QuickDropDialog QuickDropDialog { get; set; }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        // indicate to add-in that whether the window is open"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOpen { get; set; }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsVariationsFlyoutOpen { get; private set; }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // indicate that whether the window is closing"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsClosing { get; set; }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        // View model that contains the presenting logic"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private PictureSlidesLabWindowViewModel ViewModel { set; get; }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        // used to indicate right-click item"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        private int _clickedImageSelectionItemIndex \u003d -1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        // other UI control flags"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isAbleLoadingOnWindowActivate \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isStylePreviewRegionInit;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        private int _lastSelectedSlideIndex \u003d -1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isDisplayDefaultPicture;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isEnableUpdatePreview \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        //Window size control constant"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardSystemWidth \u003d 1280.0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardSystemHeight \u003d 800.0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardWindowWidth \u003d 1200.0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardWindowHeight \u003d 700.0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        private const double StandardPrewienGridWidth \u003d 560.0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        private const float StandardDpi \u003d 96f;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Lifecycle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        public PictureSlidesLabWindow()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            // start loading process"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            EveryDayPhrase.Text \u003d new EveryDayPhraseService().GetEveryDayPhrase();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLabGridLoadingOverlay.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SettingsButtonIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.PslSettings);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            PictureAspectRefreshButtonIcon.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.PslRefresh);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            InitSizePosition();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL begins\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            SetTimeout(Init, 800);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Init()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                InitUiExceptionHandling();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                InitViewModel();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                InitGotoSlideDialog();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                InitLoadStylesDialog();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                InitErrorTextDialog();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                InitDragAndDrop();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                // leave some time for data binding to finish"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                SetTimeout(InitStyleing, 50);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init done\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(PictureSlidesLabText.ErrorWhenInitialize, e);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"Init\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitSizePosition()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Size mSize \u003d SystemInformation.WorkingArea.Size;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            //Devices might have scale factors \u003e 100%"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            float scaleFactor \u003d GetScalingFactor();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            double systemHeight \u003d mSize.Height / scaleFactor;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            double systemWidth \u003d mSize.Width / scaleFactor;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            double windowWidth \u003d systemWidth / StandardSystemWidth;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            double windowHeight \u003d systemHeight / StandardSystemHeight;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Width \u003d StandardWindowWidth * windowWidth;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Height \u003d StandardWindowHeight * windowHeight;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.StylesPreviewGrid.Width \u003d StandardPrewienGridWidth * windowWidth;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Left \u003d (systemWidth - this.Window.Width) / 2;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.Top \u003d (systemHeight - this.Window.Height) / 2;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Window.WindowStartupLocation \u003d WindowStartupLocation.Manual;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        private float GetScalingFactor()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            Graphics graphics \u003d Graphics.FromHwnd(IntPtr.Zero);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            return graphics.DpiX / StandardDpi;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitUiExceptionHandling()"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            AppDomain.CurrentDomain.UnhandledException +\u003d HandleUnhandledException;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.UnhandledException +\u003d HandleUnhandledException;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL init UI exception handling done\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitStyleing()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init styling begins\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                // load back the style from the current slide, or"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                // select the first picture to preview styles"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isSuccessfullyLoaded \u003d LoadStyleAndImage(this.GetCurrentSlide(),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    isLoadingWithDefaultPicture: false);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ViewModel.ImageSelectionList.Count \u003e\u003d 2 \u0026\u0026 !isSuccessfullyLoaded)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Not loaded back style and picture, going to select a picture.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                    // index-0 is choosePicture placeholder"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.ImageSelectionListSelectedId.Number \u003d 1;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init styling done\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(PictureSlidesLabText.ErrorWhenInitialize, e);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"InitStyleing\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove loading overlay"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLabGridLoadingOverlay.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL init loading screen collapsed\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitViewModel()"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel \u003d new PictureSlidesLabWindowViewModel(this);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.StylesVariationList.CollectionChanged +\u003d StylesVariationList_OnCollectionChanged;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.StylesPreviewList.CollectionChanged +\u003d StylesPreviewList_OnCollectionChanged;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ImageSelectionList.CollectionChanged +\u003d ImageSelectionList_OnCollectionChanged;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            DataContext \u003d ViewModel;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsPane.DataContext \u003d ViewModel.Settings;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsPane.UpdateInsertCitationControlsVisibility();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewInterfaceWhenImageListChange(ViewModel.ImageSelectionList);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL init ViewModel done\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitDragAndDrop()"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            DragAndDropInstructionText \u003d new ObservableString { Text \u003d PictureSlidesLabText.DragAndDropInstruction };"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            DragAndDropInstructions.DataContext \u003d DragAndDropInstructionText;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PSL init drag and drop done\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnClosing(object sender, CancelEventArgs e)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                IsOpen \u003d false;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                IsClosing \u003d true;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                if (QuickDropDialog !\u003d null)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                    QuickDropDialog.Close();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                    QuickDropDialog \u003d null;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.CleanUp();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"PSL closed\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"PictureSlidesLabWindow_OnClosing\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Common UI Events \u0026 Interactions"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionList_OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewInterfaceWhenImageListChange(sender as Collection\u003cImageItem\u003e);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesVariationList_OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateVariationInterface(sender as Collection\u003cImageItem\u003e);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreviewList_OnCollectionChanged(object sender, NotifyCollectionChangedEventArgs e)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewInterfaceWhenPreviewListChange(sender as Collection\u003cImageItem\u003e);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Drag and Drop"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDragLeave(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLabGridOverlay.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDragEnter(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            if (args.Data.GetDataPresent(\"FileDrop\")"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                || args.Data.GetDataPresent(\"Text\"))"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Drag enter\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLabGridOverlay.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                Activate();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDrop(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args \u003d\u003d null)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Drop enter\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.Data.GetDataPresent(\"FileDrop\"))"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                    string[] filenames \u003d (args.Data.GetData(\"FileDrop\") as string[]);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (filenames \u003d\u003d null || filenames.Length \u003d\u003d 0)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                        return;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(filenames,"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (args.Data.GetDataPresent(\"Text\"))"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                    string imageUrl \u003d args.Data.GetData(\"Text\") as string;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(imageUrl,"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"PictureSlidesLabWindow_OnDrop\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLabGridOverlay.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Copy and Paste Picture"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemPastePictureHere_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            HandlePastedPicture();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Key \u003d\u003d Key.V"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Keyboard.Modifiers \u003d\u003d ModifierKeys.Control)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                HandlePastedPicture();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// set isUsingWinformMsgBox to true when it requires a msgbox out of"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the main window of PSL"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"isUsingWinformMsgBox\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandlePastedPicture(bool isUsingWinformMsgBox \u003d false)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Drawing.Image pastedPicture \u003d Clipboard.GetImage();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                StringCollection pastedFiles \u003d Clipboard.GetFileDropList();"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pastedPicture \u003d\u003d null \u0026\u0026"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "                    (pastedFiles \u003d\u003d null || pastedFiles.Count \u003d\u003d 0))"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (isUsingWinformMsgBox)"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                        MessageBox.Show(PictureSlidesLabText.InfoPasteNothing, \"PowerPointLabs\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                        ShowInfoMessageBox(PictureSlidesLabText.InfoPasteNothing);"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Nothing to paste\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pastedPicture !\u003d null)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Pasted enter\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                    string pastedPictureFile \u003d StoragePath.GetPath(\"pastedImg-\""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                + DateTime.Now.GetHashCode() + \"-\""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                + Guid.NewGuid().ToString().Substring(0, 7));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                    pastedPicture.Save(pastedPictureFile);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(new[] {pastedPictureFile},"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "                    // examine whether it\u0027s thumbnail picture"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (pastedPicture.Width \u003c\u003d 400"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "                        \u0026\u0026 pastedPicture.Height \u003c\u003d 400)"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (isUsingWinformMsgBox)"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                            MessageBox.Show(PictureSlidesLabText.InfoPasteThumbnail, \"PowerPointLabs\");"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "                            ShowInfoMessageBox(PictureSlidesLabText.InfoPasteThumbnail);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (pastedFiles !\u003d null \u0026\u0026 pastedFiles.Count \u003e 0)"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.AddImageSelectionListItem(pastedFiles.Cast\u003cstring\u003e().ToArray(),"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"HandlePastedPicture\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabGridLoadingOverlay_OnPreviewMouseLeftButtonUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLabGridLoadingOverlay.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Show QuickDrop dialog when PictureSlidesLab window is deactivated"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnDeactivated(object sender, EventArgs e)"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsDisposed)"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                _lastSelectedSlideIndex \u003d this.GetCurrentSlide().Index;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsDisposed"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 (CropWindow \u003d\u003d null || !CropWindow.IsOpen))"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (QuickDropDialog \u003d\u003d null)"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog \u003d new QuickDropDialog(this);"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.DropHandler +\u003d PictureSlidesLabWindow_OnDrop;"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.PasteHandler +\u003d () \u003d\u003e { HandlePastedPicture(isUsingWinformMsgBox: true); };"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.ShowQuickDropDialog();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                        Logger.Log(\"PSL Quick Drop Dialog begins\");"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "                    else if (!QuickDropDialog.IsOpen \u0026\u0026 !QuickDropDialog.IsDisposed)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                        QuickDropDialog.ShowQuickDropDialog();"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"PictureSlidesLabWindow_OnDeactivated\");"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Show preview images when an image is selected in the ImageSelectionList"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionListBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ImageSelectionListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                LeaveDefaultPictureMode();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ImageSelectionListBox.SelectedIndex \u003d\u003d 0)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                // 0 is for Choose Pictures placeholder,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                // de-select it"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageSelectionListBox.SelectedIndex \u003d -1;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.UpdateSelectedPictureInPictureVariation();"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewImages();"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesCustomizeButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomizeStyle("
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                (ImageItem) ImageSelectionListBox.SelectedValue ?? CreateDefaultPictureItem());"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreviewApplyButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ApplyStyleInPreviewStage("
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            GC.Collect();"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Allow arrow keys to navigate the listbox items"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ListBox_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBox listbox \u003d sender as ListBox;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            if (listbox \u003d\u003d null || listbox.Items.Count \u003c\u003d 0)"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (e.Key)"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Right:"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Down:"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!listbox.Items.MoveCurrentToNext())"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                        listbox.Items.MoveCurrentToLast();"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Left:"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Up:"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!listbox.Items.MoveCurrentToPrevious())"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                        listbox.Items.MoveCurrentToFirst();"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d true;"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Delete image by backspace/delete key"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionListBox_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (e.Key)"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Delete:"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Back:"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                    DeleteSelectedImage();"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBox_OnKeyDown(sender, e);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Drag splitter to change grid width"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Splitter_OnDragDelta(object sender, DragDeltaEventArgs e)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            double newWidth \u003d StylesPreviewGrid.ActualWidth + e.HorizontalChange;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            // Prevent StylesPreviewGrid from becoming too small"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            if (newWidth \u003c StylesPreviewGrid.MinWidth)"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesPreviewGrid.Width \u003d StylesPreviewGrid.MinWidth;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "            // Prevent StylesPreviewGrid from overflowing grid column 0"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (newWidth \u003e Column0.Width.Value)"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesPreviewGrid.Width \u003d Column0.Width.Value;"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesPreviewGrid.Width \u003d newWidth;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Enable \u0026 disable Apply button for preview interface"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreivewListBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewStageControls();"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewStageControls()"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StylesPreviewListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 IsDisplayDefaultPicture())"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesCustomizeButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (StylesPreviewListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 ImageSelectionListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesCustomizeButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesApplyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesCustomizeButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Press ENTER button to apply"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesPreviewListBox_OnKeyUp(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBox listbox \u003d sender as ListBox;"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "            if (listbox \u003d\u003d null || listbox.Items.Count \u003c\u003d 0)"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (e.Key)"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                case Key.Enter:"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (StylesApplyButton.IsEnabled)"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "                        StylesApplyButton.RaiseEvent(new RoutedEventArgs(ButtonBase.ClickEvent));"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "        /// When window is re-activated, refresh the preview images and hide QuickDrop dialog"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureSlidesLabWindow_OnActivated(object sender, EventArgs e)"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "                // init last selected slide index"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_lastSelectedSlideIndex \u003d\u003d -1)"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "                    _lastSelectedSlideIndex \u003d this.GetCurrentSlide().Index;"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "                // hide quick drop dialog when main window activated"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "                if (QuickDropDialog !\u003d null \u0026\u0026 QuickDropDialog.IsOpen)"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "                    QuickDropDialog.HideQuickDropDialog();"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                // when no current slide"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                if (this.GetCurrentSlide() \u003d\u003d null)"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Current slide is null\");"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "                    GotoSlideButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                    LoadStylesButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.StylesPreviewList.Clear();"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.StylesVariationList.Clear();"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                // when allowed to do loading"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (_isStylePreviewRegionInit \u0026\u0026 _isAbleLoadingOnWindowActivate)"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "                    GotoSlideButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "                    LoadStylesButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                    SetTimeout(() \u003d\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                        // update preview images when slide no change"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (_lastSelectedSlideIndex \u003d\u003d this.GetCurrentSlide().Index)"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                            UpdatePreviewImages();"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "                        // or load style and image if slide has been changed"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "                            LoadStyleAndImage(this.GetCurrentSlide());"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "                    }, 250);"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"PictureSlidesLabWindow_OnActivated\");"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Obtain right-clicked listbox item and don\u0027t select any image"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImageSelectionListBox_OnPreviewMouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            ListBoxItem item \u003d ItemsControl.ContainerFromElement((ItemsControl) sender, (DependencyObject) e.OriginalSource) "
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "                as ListBoxItem;"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null || item.Content \u003d\u003d null)"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.RightButton \u003d\u003d MouseButtonState.Pressed)"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "                _clickedImageSelectionItemIndex \u003d -1;"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c ImageSelectionListBox.Items.Count; i++)"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "                    ListBoxItem listBoxItem \u003d ImageSelectionListBox.ItemContainerGenerator.ContainerFromIndex(i) "
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "                        as ListBoxItem;"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (listBoxItem \u003d\u003d null)"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (IsMouseOverTarget(listBoxItem, e.GetPosition(listBoxItem)))"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                        _clickedImageSelectionItemIndex \u003d i;"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Handled \u003d true;"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (e.LeftButton \u003d\u003d MouseButtonState.Pressed)"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"begin import pictures\");"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem imageItem \u003d item.Content as ImageItem;"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                if (imageItem !\u003d null"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 imageItem.ImageFile \u003d\u003d StoragePath.ChoosePicturesImgPath)"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "                    OpenFileDialog openFileDialog \u003d new OpenFileDialog"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "                        Multiselect \u003d true,"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                        Filter \u003d @\"Image File|*.png;*.jpg;*.jpeg;*.bmp;*.gif;\""
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "                    DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (openFileDialog.ShowDialog() \u003d\u003d Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "                        ViewModel.AddImageSelectionListItem(openFileDialog.FileNames,"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                    EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.Handled \u003d true;"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemDeleteThisImage_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteImage();"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemDeleteAllImages_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowInfoMessageBox(PictureSlidesLabText.InfoDeleteAllImage, "
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageDialogStyle.AffirmativeAndNegative)"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                .ContinueWith(task \u003d\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (task.Result \u003d\u003d MessageDialogResult.Affirmative)"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "                        Dispatcher.BeginInvoke(new Action(DeleteAllImage));"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemAdjustImage_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clickedImageSelectionItemIndex \u003c 0"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "                || _clickedImageSelectionItemIndex \u003e ImageSelectionListBox.Items.Count)"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.Items.GetItemAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "            AdjustImageDimensions(selectedImage);"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemAdjustImage_OnClickFromPreviewListBox(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation())"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem imageItem \u003d ViewModel.GetSelectedPictureInPictureVariation("
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                    StylesVariationListBox.SelectedIndex);"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                if (imageItem.ImageFile \u003d\u003d StoragePath.NoPicturePlaceholderImgPath"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "                    || imageItem.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustImageDimensions(imageItem);"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.SelectedItem;"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustImageDimensions(selectedImage);"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemEditSource_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clickedImageSelectionItemIndex \u003c 0"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "                || _clickedImageSelectionItemIndex \u003e ImageSelectionListBox.Items.Count)"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.Items.GetItemAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            EditPictureSource(selectedImage);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemEditSource_OnClickFromPreviewListBox(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation())"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem imageItem \u003d ViewModel.GetSelectedPictureInPictureVariation("
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "                    StylesVariationListBox.SelectedIndex);"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "                if (imageItem.ImageFile \u003d\u003d StoragePath.NoPicturePlaceholderImgPath"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                    || imageItem.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "                EditPictureSource(imageItem);"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.SelectedItem;"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selectedImage \u003d\u003d null || selectedImage.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "                EditPictureSource(selectedImage);"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Update controls states when selection changed in the variation stage"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariationListBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation()"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesVariationListBox.SelectedIndex \u003e\u003d 0)"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageItem selectedImageItem \u003d"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                    .GetSelectedPictureInPictureVariation(StylesVariationListBox.SelectedIndex);"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selectedImageItem.ImageFile \u003d\u003d StoragePath.NoPicturePlaceholderImgPath"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "                    || selectedImageItem.ImageFile \u003d\u003d StoragePath.LoadingImgPath)"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "                    StyleVariationApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "                    StyleVariationApplyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationStyleOptionsWhenSelectedItemChange();"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateVariationStageControls();"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (ImageSelectionListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 StylesVariationListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 StylesPreviewListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationApplyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationStyleOptionsWhenSelectedItemChange();"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateVariationStageControls();"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (IsDisplayDefaultPicture()"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesVariationListBox.SelectedValue !\u003d null"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesPreviewListBox.SelectedValue !\u003d null)"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationStyleOptionsWhenSelectedItemChange();"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateVariationStageControls();"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationApplyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        /// step-by-step customization when user changes variant category"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"sender\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"e\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariantsComboBox_OnSelectionChanged(object sender, SelectionChangedEventArgs e)"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Change aspect to \" + ViewModel.CurrentVariantCategory.Text);"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStepByStepStylesVariationImages("
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "                    (ImageItem) ImageSelectionListBox.SelectedValue ?? CreateDefaultPictureItem(),"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception expt)"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(TextCollection.PictureSlidesLabText.ErrorFailedToLoadPreviewImages, expt);"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(expt, \"VariantsComboBox_OnSelectionChanged\");"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        private void StylesVariationApplyButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ApplyStyleInVariationStage("
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            GC.Collect();"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        private void VariationFlyoutBackButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            CloseVariationsFlyout();"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddCitationSlideButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            Models.PowerPointPresentation presentation \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "            if (presentation.Slides.Any(PictureCitationSlide.IsCitationSlide))"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                Models.PowerPointSlide citationSlide \u003d presentation.Slides.Where(PictureCitationSlide.IsCitationSlide).First();"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.AddPictureCitationSlide(citationSlide.GetNativeSlide(), presentation.Slides);"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "            else // no citation slide yet, so create one"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "                Slide slide \u003d presentation.Presentation.Slides.Add(presentation.SlideCount + 1, PpSlideLayout.ppLayoutText);"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.AddPictureCitationSlide(slide, presentation.Slides);"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "            presentation.AddAckSlide();"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowInfoMessageBox(PictureSlidesLabText.InfoAddPictureCitationSlide);"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenSettingsButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            SettingsFlyoutControl.IsOpen \u003d true;"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SettingsFlyoutControl_OnIsOpenChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!SettingsFlyoutControl.IsOpen)"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.Log(\"Setting flyout is closed\");"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "                SetTimeout(() \u003d\u003e { UpdatePreviewImages(); }, 500);"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PictureAspectRefreshButton_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.RefreshLast8Pictures();"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdatePreviewImages();"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper funcs"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteAllImage()"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.RemoveAllImageSelectionListItems();"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "            HandleDeletePictureInPictureVariation();"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleDeletePictureInPictureVariation()"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.UpdatePictureInPictureVariationWhenDeleteSome();"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ViewModel.IsInPictureVariation())"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdatePreviewImages();"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteImage()"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_clickedImageSelectionItemIndex \u003c 1 "
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "                || _clickedImageSelectionItemIndex \u003e\u003d ImageSelectionListBox.Items.Count)"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem) ImageSelectionListBox.Items.GetItemAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null)"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ImageSelectionList.RemoveAt(_clickedImageSelectionItemIndex);"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "            HandleDeletePictureInPictureVariation();"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteSelectedImage()"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageItem selectedImage \u003d (ImageItem)ImageSelectionListBox.SelectedItem;"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedImage \u003d\u003d null"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                || ImageSelectionListBox.SelectedIndex \u003d\u003d 0)"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.ImageSelectionList.RemoveAt(ImageSelectionListBox.SelectedIndex);"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "            HandleDeletePictureInPictureVariation();"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EditPictureSource(ImageItem source)"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "            MetroDialogSettings metroDialogSettings \u003d new MetroDialogSettings"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                DefaultText \u003d source.Source"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "            this.ShowInputAsync(\"Edit Picture Source\", \"Picture taken from\", metroDialogSettings)"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "                .ContinueWith(task \u003d\u003e"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!string.IsNullOrEmpty(task.Result))"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                        source.Source \u003d task.Result;"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AdjustImageDimensions(ImageItem source)"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow \u003d new AdjustImageWindow();"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow.SetThumbnailImage(source.ImageFile);"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow.SetFullsizeImage(source.FullSizeImageFile);"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "            if (source.Rect.Width \u003e 1)"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "                CropWindow.SetCropRect(source.Rect.X, source.Rect.Y, source.Rect.Width, source.Rect.Height);"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "            DisableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "            CropWindow.ShowAdjustPictureDimensionsDialog();"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "            EnableLoadingStyleOnWindowActivate();"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CropWindow.IsCropped)"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "                if (CropWindow.IsRotated)"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.Source \u003d CropWindow.RotateResult;"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.ImageFile \u003d ImageUtil.GetThumbnailFromFullSizeImg(CropWindow.RotateResult);"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.FullSizeImageFile \u003d CropWindow.RotateResult;"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "                    source.ContextLink \u003d CropWindow.RotateResult;"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "                source.UpdateImageAdjustmentOffset(CropWindow.CropResult, CropWindow.CropResultThumbnail, CropWindow.Rect);        "
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdatePreviewImages();"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        /// decide visibility for instructions and stylesPreviewGrid"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewInterfaceWhenImageListChange(Collection\u003cImageItem\u003e list)"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "            // there is only `Choose Picture` placeholder image"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "            ImageSelectionInstructions.Visibility \u003d list.Count \u003c\u003d 1"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "                ? Visibility.Visible"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "                : Visibility.Hidden;"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ImageSelectionInstructions.Visibility \u003d\u003d Visibility.Visible)"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (ImageSelectionListBox.SelectedValue \u003d\u003d null"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesPreviewListBox.Items.Count \u003d\u003d 0"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                     \u0026\u0026 StylesVariationListBox.Items.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "            // there are `Choose Picture` placeholder image +"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "            // 2 sample pictures + maybe 1 image chosen by user"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "            if (StoragePath.IsFirstTimeUsage() \u0026\u0026 list.Count \u003c\u003d 4"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 ImageSelectionInstructions.Visibility \u003d\u003d Visibility.Hidden)"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageSelectionInstructionsForFirstTime.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageSelectionInstructionsForFirstTime.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "            // show StylesPreviewRegion aft there\u0027r some images in the SearchList region"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "            if (list.Count \u003e 1 \u0026\u0026 !_isStylePreviewRegionInit)"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                // only one time entry"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "                _isStylePreviewRegionInit \u003d true;"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                StylesPreviewGrid.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                GotoSlideButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                LoadStylesButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        /// decide visibility and enability of variation stage\u0027s "
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateVariationInterface(Collection\u003cImageItem\u003e list)"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "            if (list.Count !\u003d 0)"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsComboBox.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (this.GetCurrentSlide() \u003d\u003d null)"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsComboBox.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "            else // select \u0027loading\u0027 image"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                VariationInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsComboBox.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsColorPanel.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                VariantsSlider.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// decide visibility for instructions"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewInterfaceWhenPreviewListChange(Collection\u003cImageItem\u003e list)"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "            if (list.Count !\u003d 0 || ImageSelectionInstructions.Visibility \u003d\u003d Visibility.Visible)"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (this.GetCurrentSlide() \u003d\u003d null)"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructions.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                PreviewInstructionsWhenNoSelectedSlide.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        private static bool IsMouseOverTarget(Visual target, Point point)"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "            Rect bounds \u003d VisualTreeHelper.GetDescendantBounds(target);"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "            return bounds.Contains(point);"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenVariationsFlyout()"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "            Dispatcher.BeginInvoke(new Action(() \u003d\u003e"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsVariationsFlyoutOpen)"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "                TranslateTransform left2RightToShowTranslate \u003d new TranslateTransform { X \u003d -StylesPreviewGrid.ActualWidth };"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationsFlyout.RenderTransform \u003d left2RightToShowTranslate;"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "                StyleVariationsFlyout.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "                DoubleAnimation left2RightToShowAnimation \u003d new DoubleAnimation(-StylesPreviewGrid.ActualWidth, 0,"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "                    TimeSpan.FromMilliseconds(350))"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "                    EasingFunction \u003d new SineEase { EasingMode \u003d EasingMode.EaseInOut },"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "                    AccelerationRatio \u003d 0.5"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "                };"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "                left2RightToShowTranslate.BeginAnimation(TranslateTransform.XProperty, left2RightToShowAnimation);"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "                IsVariationsFlyoutOpen \u003d true;"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "            }));"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CloseVariationsFlyout()"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsVariationsFlyoutOpen)"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "            TranslateTransform right2LeftToHideTranslate \u003d new TranslateTransform();"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "            StyleVariationsFlyout.RenderTransform \u003d right2LeftToHideTranslate;"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "            DoubleAnimation right2LeftToHideAnimation \u003d new DoubleAnimation(0, -StyleVariationsFlyout.ActualWidth,"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "                TimeSpan.FromMilliseconds(350))"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                EasingFunction \u003d new SineEase { EasingMode \u003d EasingMode.EaseInOut },"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                AccelerationRatio \u003d 0.5"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            right2LeftToHideAnimation.Completed +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                Dispatcher.BeginInvoke(new Action(() \u003d\u003e"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                    StyleVariationsFlyout.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!IsDisplayDefaultPicture())"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "                        UpdatePreviewImages();"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "                        UpdatePreviewImages(CreateDefaultPictureItem());"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "                        UpdatePreviewStageControls();"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "                }));"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "            right2LeftToHideTranslate.BeginAnimation(TranslateTransform.XProperty, right2LeftToHideAnimation);"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "            IsVariationsFlyoutOpen \u003d false;"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "            ViewModel.CurrentVariantCategory.Text \u003d \"\";"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"Variation is closed\");"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdatePreviewImages(ImageItem source \u003d null, bool isEnteringPictureVariation \u003d false)"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_isEnableUpdatePreview)"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsVariationsFlyoutOpen \u0026\u0026 isEnteringPictureVariation)"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"Entering pic aspect\");"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "                    // when it\u0027s to load the design for a default picture,"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "                    // and it\u0027s at the variation stage,"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                    // directly jump to picture variation to select picture"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "                    int picVariationIndex \u003d ViewModel.VariantsCategory.IndexOf("
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "                        PictureSlidesLabText.VariantCategoryPicture);"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (VariantsComboBox.SelectedIndex !\u003d picVariationIndex)"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                        VariantsComboBox.SelectedIndex \u003d picVariationIndex;"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "                        ViewModel.UpdatePreviewImages("
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                        source ?? (ImageItem)ImageSelectionListBox.SelectedValue ?? CreateDefaultPictureItem(),"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (IsDisplayDefaultPicture())"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"In default pic mode\");"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if it\u0027s in Default Picture mode, allow"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                    // updating preview images"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.UpdatePreviewImages("
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "                        source ?? CreateDefaultPictureItem(),"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "                    // else, try to update preview images using"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                    // source or current selected picture."
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                    ViewModel.UpdatePreviewImages("
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                        source ?? (ImageItem) ImageSelectionListBox.SelectedValue,"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.GetCurrentPresentation().SlideHeight);"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"UpdatePreviewImages\");"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CustomizeStyle(ImageItem source, List\u003cStyleOption\u003e givenStyles \u003d null,"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "            Dictionary\u003cstring, List\u003cStyleVariant\u003e\u003e givenVariants \u003d null)"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "                ViewModel.UpdateStyleVariationImagesWhenOpenFlyout("
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                    source ?? (ImageItem) ImageSelectionListBox.SelectedValue,"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentSlide().GetNativeSlide(),"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideWidth,"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetCurrentPresentation().SlideHeight,"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                    givenStyles, givenVariants);"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "                OpenVariationsFlyout();"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"CustomizeStyle\");"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "        private void LeaveDefaultPictureMode()"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "            _isDisplayDefaultPicture \u003d false;"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EnableLoadingStyleOnWindowActivate()"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "            _isAbleLoadingOnWindowActivate \u003d true;"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DisableLoadingStyleOnWindowActivate()"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "            _isAbleLoadingOnWindowActivate \u003d false;"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Execute action after time (in ms)"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"action\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"time\"\u003etime in ms\u003c/param\u003e"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetTimeout(Action action, int time)"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "            DispatcherTimer timer \u003d new DispatcherTimer(DispatcherPriority.Render)"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "                Interval \u003d new TimeSpan(0, 0, 0, 0, time) // in ms"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Tick +\u003d (o, args) \u003d\u003e"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "                timer.Stop();"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "                action();"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "            timer.Start();"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleUnhandledException(object sender, DispatcherUnhandledExceptionEventArgs e)"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.LogException(e.Exception, sender.GetType() + \" \" + sender);"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowErrorMessageBox(\"Unexpected errors happened!\", e.Exception);"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HandleUnhandledException(object sender, UnhandledExceptionEventArgs e)"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.LogException(e.ExceptionObject as Exception, sender.GetType() + \" \" + sender);"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "            ShowErrorMessageBox(\"Unexpected errors happened!\", e.ExceptionObject as Exception);"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        // check PSL window is really closing or not"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsDisposed"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsClosing)"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Reflection.PropertyInfo propertyInfo \u003d typeof(Window).GetProperty(\"IsDisposed\", "
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "                return (bool) propertyInfo.GetValue(this, null);"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1351,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/Views/QuickDropDialog.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.ComponentModel;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using MahApps.Metro.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Util;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.PictureSlidesLab.Views"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for QuickDropDialog.xaml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class QuickDropDialog"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DropHandle(object sender, DragEventArgs e);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public event DropHandle DropHandler;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void PasteHandle();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public event PasteHandle PasteHandler;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // indicate whether the window is open/closed or not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOpen { get; set; }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private MetroWindow _parent;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsDisposed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Reflection.PropertyInfo propertyInfo \u003d typeof(Window).GetProperty(\"IsDisposed\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                return (bool) propertyInfo.GetValue(this, null);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public QuickDropDialog(MetroWindow parent)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            _parent \u003d parent;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            InitDragAndDrop();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            PictureSlidesLabLogo.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.PictureSlidesLab);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ShowQuickDropDialog()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Show();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public void HideQuickDropDialog()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Hide();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        // drag to move window"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private void QuickDropDialog_OnMouseDown(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.LeftButton \u003d\u003d MouseButtonState.Pressed)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                DragMove();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitDragAndDrop()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            AllowDrop \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            DragEnter +\u003d OnDragEnter;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            DragLeave +\u003d OnDragLeave;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            DragOver +\u003d OnDragEnter;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            Drop +\u003d OnDrop;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnDrop(object sender, DragEventArgs e)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                if (DropHandler !\u003d null)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    DropHandler(sender, e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                Overlay.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnDragLeave(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            Overlay.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnDragEnter(object sender, DragEventArgs args)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            if (args.Data.GetDataPresent(\"FileDrop\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                || args.Data.GetDataPresent(\"Text\"))"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                Overlay.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                Activate();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        private void QuickDropDialog_OnClosing(object sender, CancelEventArgs e)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            IsOpen \u003d false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        private void QuickDropDialog_OnMouseDoubleClick(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_parent.WindowState \u003d\u003d WindowState.Minimized)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                _parent.WindowState \u003d WindowState.Normal;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            _parent.Activate();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MenuItemPastePictureHere_OnClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PasteHandler !\u003d null)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                PasteHandler();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        private void QuickDropDialog_OnKeyDown(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Key \u003d\u003d Key.V"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 Keyboard.Modifiers \u003d\u003d ModifierKeys.Control"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 PasteHandler !\u003d null)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                PasteHandler();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 142,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/PictureSlidesLab/Views/SettingsFlyout.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PictureSlidesLab.Model;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Color \u003d System.Drawing.Color;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.PictureSlidesLab.Views"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SettingsFlyout.xaml"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SettingsFlyout"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public SettingsFlyout()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateInsertCitationControlsVisibility();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public void UpdateInsertCitationControlsVisibility()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            if (InsertCitationToggleSwitch.IsChecked !\u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 InsertCitationToggleSwitch.IsChecked.Value)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontColorLabel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontColorPanel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontSizeLabel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontSizeSlider.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationAlignmentLabel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationAlignmentComboBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                UseTextBoxLabel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                UseTextBoxToggleSwitch.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationTextBoxColorLabel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationTextBoxColorPanel.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontColorLabel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontColorPanel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontSizeLabel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationFontSizeSlider.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationAlignmentLabel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationAlignmentComboBox.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                UseTextBoxLabel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                UseTextBoxToggleSwitch.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationTextBoxColorLabel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                CitationTextBoxColorPanel.Visibility \u003d Visibility.Collapsed;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ColorPanel_OnMouseLeftButtonUp(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            Border panel \u003d sender as Border;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            if (panel \u003d\u003d null)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            ColorDialog colorDialog \u003d new ColorDialog"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                Color \u003d GetColor(panel.Background as SolidColorBrush),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                FullOpen \u003d true"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            if (colorDialog.ShowDialog() !\u003d DialogResult.OK)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            string hexString \u003d StringUtil.GetHexValue(colorDialog.Color);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            Settings settings \u003d DataContext as Settings;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            if (settings \u003d\u003d null)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            if (panel.Name \u003d\u003d \"CitationTextBoxColorPanel\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                settings.CitationTextBoxColor \u003d hexString;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (panel.Name \u003d\u003d \"CitationFontColorPanel\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                settings.CitationFontColor \u003d hexString;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        private Color GetColor(SolidColorBrush brush)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return GraphicsUtil.DrawingColorFromBrush(brush);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InsertCitationToggleSwitch_OnIsCheckedChanged(object sender, EventArgs e)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateInsertCitationControlsVisibility();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 109,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Properties/Resources.Designer.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿//------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003cauto-generated\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "//     This code was generated by a tool."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "//     Runtime Version:4.0.30319.42000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "//"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "//     Changes to this file may cause incorrect behavior and will be lost if"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "//     the code is regenerated."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "// \u003c/auto-generated\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "//------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "namespace PowerPointLabs.Properties"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    ///   A strongly-typed resource class, for looking up localized strings, etc."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // This class was auto-generated by the StronglyTypedResourceBuilder"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // class via a tool like ResGen or Visual Studio."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // To add or remove a member, edit your .ResX file then rerun ResGen"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // with the /str option, or rebuild your VS project."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Resources.Tools.StronglyTypedResourceBuilder\", \"15.0.0.0\")]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public class Resources {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private static global::System.Resources.ResourceManager resourceMan;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private static global::System.Globalization.CultureInfo resourceCulture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\")]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        internal Resources() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Returns the cached ResourceManager instance used by this class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public static global::System.Resources.ResourceManager ResourceManager {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                if (object.ReferenceEquals(resourceMan, null)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    global::System.Resources.ResourceManager temp \u003d new global::System.Resources.ResourceManager(\"PowerPointLabs.Properties.Resources\", typeof(Resources).Assembly);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    resourceMan \u003d temp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                return resourceMan;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Overrides the current thread\u0027s CurrentUICulture property for all"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   resource lookups using this strongly typed resource class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public static global::System.Globalization.CultureInfo Culture {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                return resourceCulture;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            set {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                resourceCulture \u003d value;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap About {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"About\", resourceCulture);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Acknowledgement {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Acknowledgement\", resourceCulture);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddAnimation {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddAnimation\", resourceCulture);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddAnimationContext {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddAnimationContext\", resourceCulture);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddAudio {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddAudio\", resourceCulture);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddCaption {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddCaption\", resourceCulture);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddExplanationIcon {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddExplanationIcon\", resourceCulture);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddNarrationContext {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddNarrationContext\", resourceCulture);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddSpotlightContext {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddSpotlightContext\", resourceCulture);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddToCustomShapes {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddToCustomShapes\", resourceCulture);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AddToCustomShapesDisabled {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AddToCustomShapesDisabled\", resourceCulture);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinHorizontalIcon {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinHorizontalWithAlignIcon {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinHorizontalWithAlignIcon\", resourceCulture);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinVerticalIcon {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AdjoinVerticalWithAlignIcon {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AdjoinVerticalWithAlignIcon\", resourceCulture);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaLab {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaLab\", resourceCulture);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaRemove {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaRemove\", resourceCulture);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaSettings {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaSettings\", resourceCulture);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaSidebar {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaSidebar\", resourceCulture);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaSync {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaSync\", resourceCulture);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaText {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaText\", resourceCulture);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AgendaVisual {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AgendaVisual\", resourceCulture);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignBottomDefaultIcon {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignBottomDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignBottomIcon {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignBottomIcon\", resourceCulture);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignCenterIcon {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignHorizontalCenterDefaultIcon {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignHorizontalCenterDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignHorizontalCenterIcon {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignHorizontalCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignLeftDefaultIcon {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignLeftDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignLeftIcon {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignLeftIcon\", resourceCulture);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignRadialIcon {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignRadialIcon\", resourceCulture);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignRightDefaultIcon {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignRightDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignRightIcon {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignRightIcon\", resourceCulture);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignTopDefaultIcon {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignTopDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignTopIcon {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignTopIcon\", resourceCulture);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignVerticalCenterDefaultIcon {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignVerticalCenterDefaultIcon\", resourceCulture);"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AlignVerticalCenterIcon {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AlignVerticalCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Appear {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Appear\", resourceCulture);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Bounce {"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Bounce\", resourceCulture);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Fade {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Fade\", resourceCulture);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Float_In {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Float_In\", resourceCulture);"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Fly_In {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Fly_In\", resourceCulture);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Grow___Turn {"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Grow___Turn\", resourceCulture);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Random_Bars {"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Random_Bars\", resourceCulture);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Shape {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Shape\", resourceCulture);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Split {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Split\", resourceCulture);"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Swivel {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Swivel\", resourceCulture);"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Wheel {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Wheel\", resourceCulture);"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Wipe {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Wipe\", resourceCulture);"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Animation_Zoom {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Animation_Zoom\", resourceCulture);"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationEmphasis {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationEmphasis\", resourceCulture);"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationEntrance {"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationEntrance\", resourceCulture);"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationExit {"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationExit\", resourceCulture);"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationLab {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationLab\", resourceCulture);"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationMotionPath {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationMotionPath\", resourceCulture);"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AnimationsGroup {"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AnimationsGroup\", resourceCulture);"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Apply_icon {"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Apply_icon\", resourceCulture);"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap AudioGroup {"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"AudioGroup\", resourceCulture);"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap BlurBackground {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"BlurBackground\", resourceCulture);"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap BlurRemainder {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"BlurRemainder\", resourceCulture);"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap BlurSelected {"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"BlurSelected\", resourceCulture);"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Brightness_icon_25x25 {"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Brightness_icon_25x25\", resourceCulture);"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Bullets {"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Bullets\", resourceCulture);"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CancelCalloutButton {"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CancelCalloutButton\", resourceCulture);"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CaptionsLab {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CaptionsLab\", resourceCulture);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ChoosePicturesIcon {"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ChoosePicturesIcon\", resourceCulture);"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Clear_icon {"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Clear_icon\", resourceCulture);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Byte[]."
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static byte[] ClosedHand {"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ClosedHand\", resourceCulture);"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((byte[])(obj));"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ColorsLab {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ColorsLab\", resourceCulture);"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ConvertToPicture {"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ConvertToPicture\", resourceCulture);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ConvertToTooltip {"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ConvertToTooltip\", resourceCulture);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CreateCallout {"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CreateCallout\", resourceCulture);"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CreateTooltip {"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CreateTooltip\", resourceCulture);"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CreateTrigger {"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CreateTrigger\", resourceCulture);"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropLab {"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropLab\", resourceCulture);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropOutPadding {"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropOutPadding\", resourceCulture);"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropToAspectRatio {"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropToAspectRatio\", resourceCulture);"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropToSame {"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropToSame\", resourceCulture);"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CropToSlide {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CropToSlide\", resourceCulture);"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CutOutShape {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CutOutShape\", resourceCulture);"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap CutOutShapeMenu {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"CutOutShapeMenu\", resourceCulture);"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DefaultPicture {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DefaultPicture\", resourceCulture);"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeCenterIcon {"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeCenterIcon\", resourceCulture);"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeGridIcon {"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeGridIcon\", resourceCulture);"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeHorizontalIcon {"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeRadialIcon {"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeRadialIcon\", resourceCulture);"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeShapeIcon {"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeShapeIcon\", resourceCulture);"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DistributeVerticalIcon {"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DistributeVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Down {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Down\", resourceCulture);"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap DuplicateRotateIcon {"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"DuplicateRotateIcon\", resourceCulture);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EditNameContext {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EditNameContext\", resourceCulture);"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EffectsGroup {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EffectsGroup\", resourceCulture);"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EffectsLab {"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EffectsLab\", resourceCulture);"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ELearningLab {"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ELearningLab\", resourceCulture);"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ELearningLabIcon2 {"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ELearningLabIcon2\", resourceCulture);"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ExportSlideAsPicture {"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ExportSlideAsPicture\", resourceCulture);"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Byte[]."
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        public static byte[] EyeDropper {"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EyeDropper\", resourceCulture);"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((byte[])(obj));"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap EyeDropper_icon {"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"EyeDropper_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Feedback {"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Feedback\", resourceCulture);"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FillColor_icon {"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FillColor_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FillSlide {"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FillSlide\", resourceCulture);"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Fit {"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Fit\", resourceCulture);"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FitToHeight {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FitToHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FitToWidth {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FitToWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipHorizontal {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipHorizontal\", resourceCulture);"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipHorizontalIcon {"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipVertical {"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipVertical\", resourceCulture);"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FlipVerticalIcon {"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FlipVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap FormattingGroup {"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"FormattingGroup\", resourceCulture);"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap halfWidth {"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"halfWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HelpMenu {"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HelpMenu\", resourceCulture);"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HideShape {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HideShape\", resourceCulture);"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightBackground {"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightBackground\", resourceCulture);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightBackgroundContext {"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightBackgroundContext\", resourceCulture);"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightLab {"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightLab\", resourceCulture);"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightText {"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightText\", resourceCulture);"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightTextContext {"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightTextContext\", resourceCulture);"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap HighlightWords {"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"HighlightWords\", resourceCulture);"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Indicator {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Indicator\", resourceCulture);"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap InSlideAnimation {"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"InSlideAnimation\", resourceCulture);"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap InSlideContext {"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"InSlideContext\", resourceCulture);"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Left {"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Left\", resourceCulture);"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LeftRotate {"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LeftRotate\", resourceCulture);"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LineColor_icon {"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LineColor_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LineColor_icon1 {"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LineColor_icon1\", resourceCulture);"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Load_icon {"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Load_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Loading {"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Loading\", resourceCulture);"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap LockAxisIcon {"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"LockAxisIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Logo {"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Logo\", resourceCulture);"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Magnify {"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Magnify\", resourceCulture);"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap MakeTransparent {"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"MakeTransparent\", resourceCulture);"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap maxWidth {"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"maxWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap MergeIntoGroup {"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"MergeIntoGroup\", resourceCulture);"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap MinusZoom {"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"MinusZoom\", resourceCulture);"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap minWidth {"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"minWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap NarrationsLab {"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"NarrationsLab\", resourceCulture);"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Byte[]."
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "        public static byte[] OpenHand {"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"OpenHand\", resourceCulture);"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((byte[])(obj));"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteAtCursorPosition {"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteAtCursorPosition\", resourceCulture);"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteAtOriginalPosition {"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteAtOriginalPosition\", resourceCulture);"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteIntoGroup {"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteIntoGroup\", resourceCulture);"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteLab {"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteLab\", resourceCulture);"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteToFillSlide {"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteToFillSlide\", resourceCulture);"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PasteToFitSlide {"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PasteToFitSlide\", resourceCulture);"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Pause {"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Pause\", resourceCulture);"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PictureSlidesLab {"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PictureSlidesLab\", resourceCulture);"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Play {"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Play\", resourceCulture);"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PlusZoom {"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PlusZoom\", resourceCulture);"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PositionsLab {"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PositionsLab\", resourceCulture);"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PptlabsContextMenu {"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PptlabsContextMenu\", resourceCulture);"
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslRefresh {"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslRefresh\", resourceCulture);"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslSample1 {"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslSample1\", resourceCulture);"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslSample2 {"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslSample2\", resourceCulture);"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap PslSettings {"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"PslSettings\", resourceCulture);"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RadialShapeOrientationDynamicIcon {"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RadialShapeOrientationDynamicIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RadialShapeOrientationFixedIcon {"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RadialShapeOrientationFixedIcon\", resourceCulture);"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RecolorBackground {"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RecolorBackground\", resourceCulture);"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RecolorRemainder {"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RecolorRemainder\", resourceCulture);"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Record {"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Record\", resourceCulture);"
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RecordAudio {"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RecordAudio\", resourceCulture);"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Refresh {"
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Refresh\", resourceCulture);"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Reload_icon {"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Reload_icon\", resourceCulture);"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReloadAnimation {"
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReloadAnimation\", resourceCulture);"
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReloadAnimationContext {"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReloadAnimationContext\", resourceCulture);"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReloadSpotlight {"
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReloadSpotlight\", resourceCulture);"
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveAudio {"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveAudio\", resourceCulture);"
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveCaption {"
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveCaption\", resourceCulture);"
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveHighlighting {"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveHighlighting\", resourceCulture);"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RemoveNotes {"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RemoveNotes\", resourceCulture);"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ReplaceWithClipboard {"
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ReplaceWithClipboard\", resourceCulture);"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeDecreaseHeight {"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeDecreaseHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeDecreaseWidth {"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeDecreaseWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeFitToFill {"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeFitToFill\", resourceCulture);"
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeFitToHeight {"
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeFitToHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeFitToWidth {"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeFitToWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeIncreaseHeight {"
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeIncreaseHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeIncreaseWidth {"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeIncreaseWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeLab {"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeLab\", resourceCulture);"
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeLock {"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeLock\", resourceCulture);"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeMatchHeight {"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeMatchHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeMatchWidth {"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeMatchWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeProportionArea {"
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeProportionArea\", resourceCulture);"
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeProportionHeight {"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeProportionHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeProportionWidth {"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeProportionWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSameHeight {"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSameHeight\", resourceCulture);"
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSameSize {"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSameSize\", resourceCulture);"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSameWidth {"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSameWidth\", resourceCulture);"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStore {"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStore\", resourceCulture);"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchBottom {"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchBottom\", resourceCulture);"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchLeft {"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchLeft\", resourceCulture);"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchRight {"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchRight\", resourceCulture);"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeStretchTop {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeStretchTop\", resourceCulture);"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricBottom {"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricBottom\", resourceCulture);"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricLeft {"
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricLeft\", resourceCulture);"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricRight {"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricRight\", resourceCulture);"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeSymmetricTop {"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeSymmetricTop\", resourceCulture);"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ResizeUnlock {"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ResizeUnlock\", resourceCulture);"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Right {"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Right\", resourceCulture);"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2022,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2023,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2024,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2025,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2026,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RightArrowGreen {"
      },
      {
        "lineNumber": 2027,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2028,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RightArrowGreen\", resourceCulture);"
      },
      {
        "lineNumber": 2029,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2030,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2031,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2032,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2033,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2034,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2035,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2036,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RightRotate {"
      },
      {
        "lineNumber": 2037,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2038,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RightRotate\", resourceCulture);"
      },
      {
        "lineNumber": 2039,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2040,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2041,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2042,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2043,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2044,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2045,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2046,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap RotateIcon {"
      },
      {
        "lineNumber": 2047,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2048,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"RotateIcon\", resourceCulture);"
      },
      {
        "lineNumber": 2049,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2050,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2051,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2052,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2053,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2054,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2055,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2056,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Saturation_icon_18x18 {"
      },
      {
        "lineNumber": 2057,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2058,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Saturation_icon_18x18\", resourceCulture);"
      },
      {
        "lineNumber": 2059,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2060,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2061,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2062,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2063,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2064,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2065,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2066,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Save_icon {"
      },
      {
        "lineNumber": 2067,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2068,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Save_icon\", resourceCulture);"
      },
      {
        "lineNumber": 2069,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2070,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2071,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2072,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2073,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2074,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2075,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2076,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SaveLab {"
      },
      {
        "lineNumber": 2077,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2078,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SaveLab\", resourceCulture);"
      },
      {
        "lineNumber": 2079,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2080,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2081,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2082,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2083,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2084,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2085,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2086,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SaveLabActionButton {"
      },
      {
        "lineNumber": 2087,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2088,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SaveLabActionButton\", resourceCulture);"
      },
      {
        "lineNumber": 2089,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2090,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2091,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2092,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2093,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2094,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2095,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2096,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SettingsGear {"
      },
      {
        "lineNumber": 2097,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2098,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SettingsGear\", resourceCulture);"
      },
      {
        "lineNumber": 2099,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2100,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2102,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2104,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2105,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2106,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ShapesLab {"
      },
      {
        "lineNumber": 2107,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2108,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ShapesLab\", resourceCulture);"
      },
      {
        "lineNumber": 2109,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2110,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2112,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2114,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2116,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SnapAwayIcon {"
      },
      {
        "lineNumber": 2117,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2118,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SnapAwayIcon\", resourceCulture);"
      },
      {
        "lineNumber": 2119,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2121,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2123,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2124,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2126,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SnapHorizontalIcon {"
      },
      {
        "lineNumber": 2127,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2128,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SnapHorizontalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 2129,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2132,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2133,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2134,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2135,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2136,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SnapVerticalIcon {"
      },
      {
        "lineNumber": 2137,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2138,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SnapVerticalIcon\", resourceCulture);"
      },
      {
        "lineNumber": 2139,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2140,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2142,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2143,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2144,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2145,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2146,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SpeakTextContext {"
      },
      {
        "lineNumber": 2147,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2148,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SpeakTextContext\", resourceCulture);"
      },
      {
        "lineNumber": 2149,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2150,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2152,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2153,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2154,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2155,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2156,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Spotlight {"
      },
      {
        "lineNumber": 2157,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2158,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Spotlight\", resourceCulture);"
      },
      {
        "lineNumber": 2159,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2162,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2163,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2164,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2165,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2166,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Stop {"
      },
      {
        "lineNumber": 2167,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2168,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Stop\", resourceCulture);"
      },
      {
        "lineNumber": 2169,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2172,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2173,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2174,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2175,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2176,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SwapIcon {"
      },
      {
        "lineNumber": 2177,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2178,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SwapIcon\", resourceCulture);"
      },
      {
        "lineNumber": 2179,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2181,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2182,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2183,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2184,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2185,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2186,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncExplanationIcon {"
      },
      {
        "lineNumber": 2187,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2188,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncExplanationIcon\", resourceCulture);"
      },
      {
        "lineNumber": 2189,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2192,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2193,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2194,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2195,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLab {"
      },
      {
        "lineNumber": 2197,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2198,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLab\", resourceCulture);"
      },
      {
        "lineNumber": 2199,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2200,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2202,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2203,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2204,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2205,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2206,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabCopyButton {"
      },
      {
        "lineNumber": 2207,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2208,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabCopyButton\", resourceCulture);"
      },
      {
        "lineNumber": 2209,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2210,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2212,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2213,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2214,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2215,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2216,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabDeleteButton {"
      },
      {
        "lineNumber": 2217,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2218,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabDeleteButton\", resourceCulture);"
      },
      {
        "lineNumber": 2219,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2220,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2221,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2222,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2223,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2224,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2225,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2226,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabEditButton {"
      },
      {
        "lineNumber": 2227,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2228,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabEditButton\", resourceCulture);"
      },
      {
        "lineNumber": 2229,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2231,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2232,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2233,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2234,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2235,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2236,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap SyncLabPasteButton {"
      },
      {
        "lineNumber": 2237,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2238,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"SyncLabPasteButton\", resourceCulture);"
      },
      {
        "lineNumber": 2239,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2240,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2241,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2242,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2243,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2244,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2245,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2246,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap TextColor_icon {"
      },
      {
        "lineNumber": 2247,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2248,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"TextColor_icon\", resourceCulture);"
      },
      {
        "lineNumber": 2249,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2250,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2252,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2253,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2254,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2255,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap TimerLab {"
      },
      {
        "lineNumber": 2257,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2258,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"TimerLab\", resourceCulture);"
      },
      {
        "lineNumber": 2259,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2261,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2262,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2263,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2264,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2265,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2266,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap TooltipsLab {"
      },
      {
        "lineNumber": 2267,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2268,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"TooltipsLab\", resourceCulture);"
      },
      {
        "lineNumber": 2269,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2270,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2271,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2272,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2273,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2274,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2275,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2276,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Tutorial {"
      },
      {
        "lineNumber": 2277,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2278,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Tutorial\", resourceCulture);"
      },
      {
        "lineNumber": 2279,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2282,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2283,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2284,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2285,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2286,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Up {"
      },
      {
        "lineNumber": 2287,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2288,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Up\", resourceCulture);"
      },
      {
        "lineNumber": 2289,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2291,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2292,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2293,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2294,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2295,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2296,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap UserGuide {"
      },
      {
        "lineNumber": 2297,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2298,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"UserGuide\", resourceCulture);"
      },
      {
        "lineNumber": 2299,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2300,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2302,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2303,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2304,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2305,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2306,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap Zoom {"
      },
      {
        "lineNumber": 2307,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2308,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"Zoom\", resourceCulture);"
      },
      {
        "lineNumber": 2309,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2312,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2313,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2314,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2315,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomIn {"
      },
      {
        "lineNumber": 2317,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2318,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomIn\", resourceCulture);"
      },
      {
        "lineNumber": 2319,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2320,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2321,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2322,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2323,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2324,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2325,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomInContext {"
      },
      {
        "lineNumber": 2327,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2328,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomInContext\", resourceCulture);"
      },
      {
        "lineNumber": 2329,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2330,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2331,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2332,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2333,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2334,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2335,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2336,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomLab {"
      },
      {
        "lineNumber": 2337,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2338,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomLab\", resourceCulture);"
      },
      {
        "lineNumber": 2339,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2341,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2342,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2343,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2344,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2345,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2346,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomOut {"
      },
      {
        "lineNumber": 2347,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2348,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomOut\", resourceCulture);"
      },
      {
        "lineNumber": 2349,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2350,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2351,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2352,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2353,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2354,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2355,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2356,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomOutContext {"
      },
      {
        "lineNumber": 2357,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2358,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomOutContext\", resourceCulture);"
      },
      {
        "lineNumber": 2359,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2362,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2363,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2364,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2365,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2366,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomToArea {"
      },
      {
        "lineNumber": 2367,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2368,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomToArea\", resourceCulture);"
      },
      {
        "lineNumber": 2369,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2370,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2372,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 2373,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 2374,
        "author": {
          "gitId": "-"
        },
        "content": "        ///   Looks up a localized resource of type System.Drawing.Bitmap."
      },
      {
        "lineNumber": 2375,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 2376,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Drawing.Bitmap ZoomToAreaContext {"
      },
      {
        "lineNumber": 2377,
        "author": {
          "gitId": "-"
        },
        "content": "            get {"
      },
      {
        "lineNumber": 2378,
        "author": {
          "gitId": "-"
        },
        "content": "                object obj \u003d ResourceManager.GetObject(\"ZoomToAreaContext\", resourceCulture);"
      },
      {
        "lineNumber": 2379,
        "author": {
          "gitId": "-"
        },
        "content": "                return ((System.Drawing.Bitmap)(obj));"
      },
      {
        "lineNumber": 2380,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 2381,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 2382,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2383,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2381,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SaveLab/Views/SaveLabSettingsDialogBox.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Forms \u003d System.Windows.Forms;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SaveLab.Views"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SaveLabSettingsDialogBox.xaml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SaveLabSettingsDialogBox"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DialogConfirmedDelegate(string savePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public DialogConfirmedDelegate DialogConfirmedHandler { get; set; }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public SaveLabSettingsDialogBox()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public SaveLabSettingsDialogBox(string savePath)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            : this()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            savePathBrowserIconImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Load_icon);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            savePathInput.IsReadOnly \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            savePathInput.Text \u003d savePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OkButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogConfirmedHandler(savePathInput.Text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SavePathBrowserButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            FolderBrowserDialog folderDialog \u003d new FolderBrowserDialog"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowNewFolderButton \u003d true,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                SelectedPath \u003d savePathInput.Text,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                Description \u003d SaveLabText.FolderDialogDescription"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            // loop until user chooses a folder, or click \"Cancel\" button"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            while (true)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                // this launcher will scroll the view to selected path"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogResult folderDialogResult \u003d FolderDialogLauncher.ShowFolderBrowser(folderDialog);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                if (folderDialogResult \u003d\u003d Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                    string newPath \u003d folderDialog.SelectedPath;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    savePathInput.Text \u003d newPath;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if user cancels the dialog, break the loop"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 66,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/CustomShapePane.Designer.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System.Windows.Controls;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab.Views;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    partial class CustomShapePane"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required designer variable."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.ComponentModel.IContainer components \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public void UpdateOnSelectionChange(Selection sel)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.UpdateAddShapeButtonEnabledStatus(sel);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddShapeFromSelection(Selection selection)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.AddShapeFromSelection(selection);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddCustomShape(string shapeName, string shapePath, bool immediateEditing)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.AddCustomShape(shapeName, shapePath, immediateEditing);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveCustomShape(string shapeName)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.RemoveCustomShape(shapeName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameCustomShape(string shapeOldName, string shapeNewName)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.RenameCustomShape(shapeOldName, shapeNewName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddCategory(string newCategoryName)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.AddCategory(newCategoryName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveCategory(int removedCategoryIndex)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.RemoveCategory(removedCategoryIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameCategory(int renameCategoryIndex, string newCategoryName)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.RenameCategory(renameCategoryIndex, newCategoryName);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public void InitCustomShapePaneStorage()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.SetStorageSettings();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Test Interface"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePaneItem GetShape(string shapeName)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            return CustomShapePaneWPF1.GetShape(shapeName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportLibrary(string pathToLibrary)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.ImportLibrary(pathToLibrary);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportShape(string pathToShape)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.ImportShape(pathToShape);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        public Presentation GetShapeGallery()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            return CustomShapePaneWPF1.GetShapeGallery();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        public Button GetAddShapeButton()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            return CustomShapePaneWPF1.addShapeButton;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SaveSelectedShapes()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneWPF1.SaveSelectedShapes();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        public System.Windows.Point GetShapeForClicking(string shapeName)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            return CustomShapePaneWPF1.GetShapeForClicking(shapeName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Clean up any resources being used."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"disposing\"\u003etrue if managed resources should be disposed; otherwise, false.\u003c/param\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override void Dispose(bool disposing)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            if (disposing \u0026\u0026 (components !\u003d null))"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                components.Dispose();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            base.Dispose(disposing);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Component Designer generated code"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required method for Designer support - do not modify "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the contents of this method with the code editor."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InitializeComponent()"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1 \u003d new System.Windows.Forms.Integration.ElementHost();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            this.CustomShapePaneWPF1 \u003d new PowerPointLabs.ShapesLab.Views.CustomShapePaneWPF();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            this.SuspendLayout();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            // elementHost1"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Dock \u003d System.Windows.Forms.DockStyle.Fill;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Location \u003d new System.Drawing.Point(0, 0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Name \u003d \"elementHost1\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Size \u003d new System.Drawing.Size(300, 833);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.TabIndex \u003d 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Text \u003d \"elementHost1\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            this.elementHost1.Child \u003d this.CustomShapePaneWPF1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            // CustomShapePane"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            // "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            this.AutoScaleDimensions \u003d new System.Drawing.SizeF(6F, 13F);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            this.AutoScaleMode \u003d System.Windows.Forms.AutoScaleMode.Font;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Controls.Add(this.elementHost1);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Name \u003d \"CustomShapePane\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Size \u003d new System.Drawing.Size(300, 833);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            this.ResumeLayout(false);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        private System.Windows.Forms.Integration.ElementHost elementHost1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePaneWPF CustomShapePaneWPF1 { get; private set; }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentCategory"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                return CustomShapePaneWPF1.CurrentCategory;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePaneWPF1.CurrentCategory \u003d value;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 163,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/Views/CustomComboBoxItem.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.ShapesLab.Views"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    class CustomComboBoxItem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public string actualName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool isDefaultCategory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string DefaultCategorySuffix \u003d \" (default)\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomComboBoxItem(string name, string defaultCategory)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            actualName \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            isDefaultCategory \u003d name \u003d\u003d defaultCategory;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetNewDefaultCategory(string defaultCategory)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            isDefaultCategory \u003d actualName \u003d\u003d defaultCategory;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        override public string ToString()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return actualName + (isDefaultCategory ? DefaultCategorySuffix : \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 25,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/Views/CustomShapePaneItem.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab.Views"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for CustomShapePaneItem.xaml"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class CustomShapePaneItem : UserControl"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private Bitmap image;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private CustomShapePaneWPF parent;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private Status editStatus;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool hasJustExitedFromTextBox \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private string shapeName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public enum Status"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Idle,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Editing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePaneItem(CustomShapePaneWPF parent, string shapeName, string shapePath, bool isReadyForEditing, ObservableCollection\u003cMenuItem\u003e moveShapeContextMenu)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            Initialize(isReadyForEditing);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            this.parent \u003d parent;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            ImagePath \u003d shapePath;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeName \u003d shapeName;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.Text \u003d shapeName;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            moveShape.Items.Clear();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            moveShape.ItemsSource \u003d moveShapeContextMenu;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            // critical line, we need to free the reference to the image immediately after we\u0027ve"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            // finished thumbnail generation, else we could not modify (rename/ delete) the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            // image. Therefore, we use using keyword to ensure a collection."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            using (Bitmap bitmap \u003d new Bitmap(shapePath))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                Image \u003d Utils.GraphicsUtil.CreateThumbnailImage(bitmap, 50, 50);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Properties"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        public Bitmap Image"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                return image;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                image \u003d value;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateImage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        public Status EditStatus"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                return editStatus;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                if (value \u003d\u003d editStatus)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                editStatus \u003d value;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                switch (value)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    case Status.Editing:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                        StartNameEdit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    case Status.Idle:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                        FinishNameEdit();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ImagePath { get; set; }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        public string Text"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeName;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Updates UI"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"newShapeName\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncRenameShape(string newShapeName)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.Text \u003d newShapeName;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeName \u003d newShapeName;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        public void UnfocusTextBox()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            //unfocus from the textbox"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            DependencyObject scope \u003d FocusManager.GetFocusScope(textBox);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            FocusManager.SetFocusedElement(scope, this as IInputElement);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        public void StartNameEdit()"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            SetEditableTextBox();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FinishNameEdit()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            SetReadOnlyTextBox();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            RenameShape(textBox.Text.Trim());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Context Menu"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddShapeClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.AddShapesToSlide();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EditShapeClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            EditStatus \u003d Status.Editing;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteShapeClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.RemoveAllSelectedShapes();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        // for names, we do not allow name involves"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        // \u003c (less than)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        // \u003e (greater than)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        // : (colon)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        // \" (double quote)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        // / (forward slash)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        // \\ (backslash)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        // | (vertical bar or pipe)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        // ? (question mark)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        // * (asterisk)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        // Regex \u003d [\u003c\u003e:\"/\\\\|?*]"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string InvalidCharsRegex \u003d \"[\u003c\u003e:\\\"/\\\\\\\\|?*]\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Initialize(bool isReadyForEdit)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            canvas.Focusable \u003d true;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.KeyDown +\u003d EnterKeyWhileEditing;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.LostFocus +\u003d TextBoxLostFocus;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isReadyForEdit)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                SetEditableTextBox();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                SetReadOnlyTextBox();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetReadOnlyTextBox()"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.IsReadOnly \u003d true;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.IsHitTestVisible \u003d false;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.CaretIndex \u003d 0;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.BorderThickness \u003d new Thickness(0, 0, 0, 0);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.Background \u003d Background;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetEditableTextBox()"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.IsReadOnly \u003d false;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.IsHitTestVisible \u003d true;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.CaretIndex \u003d 0;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.BorderThickness \u003d new Thickness(2, 2, 2, 2);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.Background \u003d System.Windows.Media.Brushes.White;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.Focus();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            textBox.SelectAll();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool HasNameChanged(string newShapeName)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            return newShapeName \u003d\u003d shapeName;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsDuplicateName(string newShapeName)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            string newPath \u003d ImagePath.Replace(shapeName, newShapeName);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            // if the new name has been used, the new name is not allowed"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            if (File.Exists(newPath))"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorFileNameExist);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsValidName(string name)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex invalidChars \u003d new Regex(InvalidCharsRegex);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            return !(string.IsNullOrWhiteSpace(name) ||"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                     invalidChars.IsMatch(name) ||"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                     Utils.ShapeUtil.IsShapeNameOverMaximumLength(name));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RenameShape(string newShapeName)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            if (HasNameChanged(newShapeName))"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!IsValidName(newShapeName))"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(Utils.ShapeUtil.IsShapeNameOverMaximumLength(newShapeName)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "                                    ? CommonText.ErrorNameTooLong"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                                    : CommonText.ErrorInvalidCharacter);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                textBox.Text \u003d shapeName;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                EditStatus \u003d Status.Editing;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsDuplicateName(newShapeName))"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                EditStatus \u003d Status.Editing;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            //Update image"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            string newPath \u003d ImagePath.Replace(@\"\\\" + shapeName, @\"\\\" + newShapeName);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            if (File.Exists(ImagePath))"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Move(ImagePath, newPath);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetAddIn().ShapePresentation.RenameShape(shapeName, newShapeName);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            ImagePath \u003d newPath;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabUtils.SyncShapeRename(this.GetAddIn(), shapeName, newShapeName, parent.CurrentCategory);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.RenameCustomShape(shapeName, newShapeName);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Event Handlers"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateImage()"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            // if image isn\u0027t set, fill the control with the label"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            if (image \u003d\u003d null)"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                col1.Width \u003d new GridLength(0);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                BitmapSource source \u003d GraphicsUtil.BitmapToImageSource(image);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Source \u003d source;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                col1.Width \u003d new GridLength(60);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EnterKeyWhileEditing(object sender, KeyEventArgs e)"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.Key \u003d\u003d Key.Return)"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                UnfocusTextBox();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                e.Handled \u003d true;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TextBoxLostFocus(object sender, EventArgs args)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            hasJustExitedFromTextBox \u003d true;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "            EditStatus \u003d Status.Idle;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnMouseDoubleClick(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d true;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sender \u003d\u003d canvas \u0026\u0026 e.ClickCount \u003c 2)"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            EditStatus \u003d Status.Idle;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.AddShapesToSlide();"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        private void FocusTextBox()"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasJustExitedFromTextBox)"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                hasJustExitedFromTextBox \u003d false;"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!canvas.IsFocused)"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            EditStatus \u003d Status.Editing;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            SetEditableTextBox();"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ClickOutsideTextBox(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            UnfocusTextBox();"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 350,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/Views/CustomShapePaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.ObjectModel;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Navigation;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShortcutsLab;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "using MenuItem \u003d System.Windows.Controls.MenuItem;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "using MessageBox \u003d System.Windows.Forms.MessageBox;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab.Views"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for CustomShapePaneWPF.xaml"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class CustomShapePaneWPF : System.Windows.Controls.UserControl"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportLibraryFileDialogFilter \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs Shapes File|*.pptlabsshapes;*.pptx\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportShapesFileDialogFilter \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            \"PowerPointLabs Shape File|*.pptlabsshape;*.pptx\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportFileNameNoExtension \u003d \"import\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ImportFileCopyName \u003d ImportFileNameNoExtension + \".pptx\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Comparers.AtomicNumberStringCompare _stringComparer \u003d new Comparers.AtomicNumberStringCompare();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        private BindingSource _categoryBinding;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        private ObservableCollection\u003cMenuItem\u003e _contextMenuCategoryBinding;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        private WrapPanel wrapPanel;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Properties"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        public ObservableCollection\u003cstring\u003e Categories { get; private set; }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentCategory { get; set; }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public string ShapeRootFolderPath { get; private set; }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public string CurrentShapeFolderPath"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return ShapeRootFolderPath + @\"\\\" + CurrentCategory; }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsStorageSettingsGiven"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                return ShapeRootFolderPath !\u003d null \u0026\u0026 CurrentCategory !\u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePaneWPF()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            DataContext \u003d this;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            addShapeImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.AddToCustomShapes);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            singleShapeDownloadLink.NavigateUri \u003d new Uri(CommonText.SingleShapeDownloadUrl);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Init"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetStorageSettings()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsStorageSettingsGiven)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            ThisAddIn addIn \u003d this.GetAddIn();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            addIn.InitializeShapesLabConfig();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            addIn.InitializeShapeGallery();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRootFolderPath \u003d ShapesLabSettings.SaveFolderPath;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            CurrentCategory \u003d addIn.ShapesLabConfig.DefaultCategory;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            Categories \u003d new ObservableCollection\u003cstring\u003e(this.GetAddIn().ShapePresentation.Categories);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupMoveShapeContextMenu();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupCategoryBoxItems();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CustomShapePaneWPF_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Tools.CustomTaskPane shapesLabPane \u003d this.GetAddIn().GetActivePane(typeof(CustomShapePane));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePane customShapePane \u003d shapesLabPane?.Control as CustomShapePane;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShapePane \u003d\u003d null)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorShapePaneNotOpened);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateAddShapeButtonEnabledStatus(this.GetCurrentSelection());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            customShapePane.HandleDestroyed +\u003d CustomShapePane_Closing;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CustomShapePane_Closing(Object sender, EventArgs e)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public void UpdateAddShapeButtonEnabledStatus(Selection selection)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((selection \u003d\u003d null) || (selection.Type \u003d\u003d PpSelectionType.ppSelectionNone)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                || (selection.Type \u003d\u003d PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                || !ShapeUtil.IsSelectionShapeOrText(selection))"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                DisableAddShapesButton();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                EnableAddShapesButton();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool GetAddShapeButtonEnabledStatus()"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            return addShapeButton.IsEnabled;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddShapeFromSelection(Selection selection)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            ThisAddIn addIn \u003d this.GetAddIn();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            // first of all we check if the shape gallery has been opened correctly"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!addIn.ShapePresentation.Opened)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorShapeGalleryInit);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check this so that it is the same requirements as ConvertToPicture which is used when adding shapes"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ShapeUtil.IsSelectionShapeOrText(selection))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(new Form() { TopMost \u003d true },"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapesLabText.ErrorAddSelectionInvalid, ShapesLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            // Finish checks, will add shape(s) from selection"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShapes \u003d selection.ChildShapeRange;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            // add shape into shape gallery first to reduce flicker"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d addIn.ShapePresentation.AddShape(pres, currentSlide, selectedShapes, selectedShapes[1].Name);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            // add the selection into pane and save it as .png locally"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapePath \u003d Path.Combine(CurrentShapeFolderPath, shapeName + \".png\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            bool success \u003d ConvertToPicture.ConvertAndSave(selectedShapes, shapePath);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!success)"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            // sync the shape among all opening panels"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabUtils.SyncShapeAdd(addIn, shapeName, shapePath, CurrentCategory);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            // finally, add the shape into the panel"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            AddCustomShape(shapeName, shapePath, false);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Adds a shape lexicographically."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddCustomShape(string shapeName, string shapePath, bool isReadyForEdit)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            DehighlightSelected();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneItem shapeItem \u003d new CustomShapePaneItem(this, shapeName, shapePath, isReadyForEdit, _contextMenuCategoryBinding);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            int insertionIndex \u003d GetShapeInsertionIndex(shapeName);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Items.Insert(insertionIndex, shapeItem);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.SelectedIndex \u003d insertionIndex;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.ScrollIntoView(shapeItem);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveCustomShape(string shapeName)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            int shapeIndex \u003d GetShapeItemIndex(shapeName);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeIndex \u003c 0)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Items.RemoveAt(shapeIndex);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveAllSelectedShapes()"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            //store names in list first, as enumeration will fail if the selected items are modified."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e shapeNames \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomShapePaneItem shape in shapeList.SelectedItems)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeNames.Add(shape.Text);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string shapeName in shapeNames)"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveShape(shapeName);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameCustomShape(string oldShapeName, string newShapeName)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            int shapeIndex \u003d GetShapeItemIndex(oldShapeName);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeIndex \u003c 0)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneItem shape \u003d shapeList.Items[shapeIndex] as CustomShapePaneItem;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.SyncRenameShape(newShapeName);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Items.Remove(shape);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            int insertionIndex \u003d GetShapeInsertionIndex(newShapeName);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Items.Insert(insertionIndex, shape);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.SelectedIndex \u003d insertionIndex;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.ScrollIntoView(shape);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsShapeSelected(CustomShapePaneItem shape)"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeList.SelectedItems.Contains(shape);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddShapesToSlide()"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeList.SelectedItems.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorNoPanelSelected, ShapesLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            if (currentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorViewTypeNotSupported);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomShapePaneItem shape in shapeList.SelectedItems)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetAddIn().ShapePresentation.CopyShape(shape.Text);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                    currentSlide.Shapes.Paste().Select();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                    return ClipboardUtil.ClipboardRestoreSuccess;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                }, this.GetCurrentPresentation(), currentSlide);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MoveShapes(string newCategoryName)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            //Add shape names first as shapeList.Items will be modified"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e shapeNames \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomShapePaneItem shape in shapeList.SelectedItems)"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeNames.Add(shape.Text);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string shapeName in shapeNames)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                string oriPath \u003d Path.Combine(CurrentShapeFolderPath, shapeName) + \".png\";"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                string destPath \u003d Path.Combine(ShapeRootFolderPath, newCategoryName, shapeName) + \".png\";"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we have an identical name in the destination category, we won\u0027t allow"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                // moving"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                if (File.Exists(destPath))"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(string.Format(TextCollection.ShapesLabText.ErrorSameShapeNameInDestination,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                                    shapeName,"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                                    newCategoryName));"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointPresentation pres \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                // move shape in ShapeGallery to correct place"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                Globals.ThisAddIn.ShapePresentation.MoveShapeToCategory(pres, currentSlide, shapeName, newCategoryName);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Move(oriPath, destPath);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveCustomShape(shapeName);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabUtils.SyncShapeRemove(this.GetAddIn(), shapeName, CurrentCategory);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabUtils.SyncShapeAdd(this.GetAddIn(), shapeName, destPath, newCategoryName);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddCategory(string newCategoryName)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.AddCategory(newCategoryName);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding.Add(new CustomComboBoxItem(newCategoryName, null));"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            _contextMenuCategoryBinding.Add(new CustomMenuItem(newCategoryName, MoveShapeClick));"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveCategory(int removedCategoryIndex)"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "            int categoryIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding.RemoveAt(categoryIndex);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "            _contextMenuCategoryBinding.RemoveAt(categoryIndex);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            if (categoryIndex \u003d\u003d removedCategoryIndex)"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryBox.SelectedIndex \u003d Math.Max(0, categoryIndex - 1);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameCategory(int renameCategoryIndex, string newCategoryName)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isCurrentCategoryRenamed \u003d renameCategoryIndex \u003d\u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomComboBoxItem item \u003d _categoryBinding[renameCategoryIndex] as CustomComboBoxItem;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            item.actualName \u003d newCategoryName;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding.RemoveAt(renameCategoryIndex);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding.Insert(renameCategoryIndex, item);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            _contextMenuCategoryBinding.RemoveAt(renameCategoryIndex);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "            _contextMenuCategoryBinding.Insert(renameCategoryIndex, new CustomMenuItem(newCategoryName, MoveShapeClick));"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isCurrentCategoryRenamed)"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "                CurrentCategory \u003d newCategoryName;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryBox.SelectedIndex \u003d renameCategoryIndex;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Test Interface"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomShapePaneItem GetShape(string shapeName)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            int shapeIndex \u003d GetShapeItemIndex(shapeName);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeIndex \u003d\u003d -1)"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            return (CustomShapePaneItem) shapeList.Items[shapeIndex];"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportLibrary(string pathToLibrary)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            ImportShapes(pathToLibrary, true);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ImportShape(string pathToShape)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "            ImportShapes(pathToShape, false);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        public Presentation GetShapeGallery()"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.GetAddIn().ShapePresentation.Presentation;"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SaveSelectedShapes()"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapeFromSelection(selection);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        public System.Windows.Point GetShapeForClicking(string shapeName)"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            int shapeIndex \u003d GetShapeItemIndex(shapeName);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeIndex \u003d\u003d -1)"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "                return new System.Windows.Point(0, 0);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePaneItem shape \u003d (CustomShapePaneItem)shapeList.Items[shapeIndex];"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.FinishNameEdit();"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            return shape.grid.PointToScreen(new System.Windows.Point(20, 20));"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Context Menu"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripAddCategoryClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabCategoryInfoDialogBox categoryInfoDialog \u003d new ShapesLabCategoryInfoDialogBox(string.Empty, false);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.DialogConfirmedHandler +\u003d (string newCategoryName) \u003d\u003e"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabUtils.SyncAddCategory(this.GetAddIn(), newCategoryName);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                AddCategory(newCategoryName);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryBox.SelectedIndex \u003d _categoryBinding.Count - 1;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.ShowDialog();"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Focus();"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripImportCategoryClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "            OpenFileDialog fileDialog \u003d new OpenFileDialog"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                Filter \u003d ImportLibraryFileDialogFilter,"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "                Multiselect \u003d false,"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                Title \u003d ShapesLabText.ImportLibraryFileDialogTitle"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            //flowlayoutContextMenuStrip.Hide();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileDialog.ShowDialog() \u003d\u003d DialogResult.Cancel)"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "            ImportShapes(fileDialog.FileName, true);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(ShapesLabText.SuccessImport);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripImportShapesClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            OpenFileDialog fileDialog \u003d new OpenFileDialog"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                Filter \u003d ImportShapesFileDialogFilter,"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                Multiselect \u003d true,"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                Title \u003d ShapesLabText.ImportShapeFileDialogTitle"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileDialog.ShowDialog() \u003d\u003d DialogResult.Cancel)"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            bool importSuccess \u003d fileDialog.FileNames.Aggregate(true,"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               (current, fileName) \u003d\u003e"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                                                               ImportShapes(fileName, false) \u0026\u0026 current);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!importSuccess)"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(ShapesLabText.SuccessImport);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripRemoveCategoryClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove the last category will not be entertained"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_categoryBinding.Count \u003d\u003d 1)"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorRemoveLastCategory);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            int categoryIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryName \u003d (_categoryBinding[categoryIndex] as CustomComboBoxItem)?.actualName;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            string categoryPath \u003d Path.Combine(ShapeRootFolderPath, categoryName);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDefaultCategory \u003d this.GetAddIn().ShapesLabConfig.DefaultCategory \u003d\u003d CurrentCategory;"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isDefaultCategory)"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogResult result \u003d"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.RemoveDefaultCategoryMessage,"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                                    ShapesLabText.RemoveDefaultCategoryCaption,"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                                    MessageBoxButtons.OKCancel);"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                if (result \u003d\u003d DialogResult.Cancel)"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove current category in shape gallery"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.RemoveCategory();"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove category on the disk"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "            FileDir.DeleteFolder(categoryPath);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabUtils.SyncRemoveCategory(this.GetAddIn(), categoryIndex);"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveCategory(categoryIndex);"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetAddIn().ShapePresentation.DefaultCategory \u003d\u003d null)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetAddIn().ShapePresentation.DefaultCategory \u003d CurrentCategory;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isDefaultCategory)"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomComboBoxItem item \u003d _categoryBinding[0] as CustomComboBoxItem;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetAddIn().ShapesLabConfig.DefaultCategory \u003d item?.actualName;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                item?.SetNewDefaultCategory(this.GetAddIn().ShapesLabConfig.DefaultCategory);"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "                _categoryBinding.RemoveAt(0);"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                _categoryBinding.Insert(0, item);"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryBox.SelectedIndex \u003d 0;"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripRenameCategoryClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabCategoryInfoDialogBox categoryInfoDialog \u003d new ShapesLabCategoryInfoDialogBox(string.Empty, false);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.DialogConfirmedHandler +\u003d (string newCategoryName) \u003d\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                // if current category is the default category, change ShapeConfig"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "                if (this.GetAddIn().ShapesLabConfig.DefaultCategory \u003d\u003d CurrentCategory)"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetAddIn().ShapesLabConfig.DefaultCategory \u003d newCategoryName;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "                // rename the category in ShapeGallery"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetAddIn().ShapePresentation.RenameCategory(newCategoryName);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "                // rename the category on the disk"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                string newPath \u003d Path.Combine(ShapeRootFolderPath, newCategoryName);"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.Move(CurrentShapeFolderPath, newPath);"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "                    // this may occur when the newCategoryName.tolower() \u003d\u003d oldCategoryName.tolower()"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "                // rename the category in combo box"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                int categoryIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabUtils.SyncRenameCategory(this.GetAddIn(), categoryIndex, newCategoryName);"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "                RenameCategory(categoryIndex, newCategoryName);"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryInfoDialog.ShowDialog();"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Focus();"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripSetAsDefaultCategoryClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapesLabConfig.DefaultCategory \u003d CurrentCategory;"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(string.Format(ShapesLabText.SuccessSetAsDefaultCategory, CurrentCategory));"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int index \u003d 0; index \u003c _categoryBinding.Count; index++)"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomComboBoxItem category \u003d _categoryBinding[index] as CustomComboBoxItem;"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "                if (category \u003d\u003d null || (!category.isDefaultCategory \u0026\u0026 category.actualName !\u003d CurrentCategory))"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "                category.SetNewDefaultCategory(CurrentCategory);"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                _categoryBinding.RemoveAt(index);"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "                _categoryBinding.Insert(index, category);"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "                if (category.actualName \u003d\u003d CurrentCategory)"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                    categoryBox.SelectedIndex \u003d index;"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ContextMenuStripSettingsClicked(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabSettingsDialogBox settingsDialog \u003d new ShapesLabSettingsDialogBox(ShapeRootFolderPath);"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "            settingsDialog.DialogConfirmedHandler +\u003d (string newSavePath) \u003d\u003e"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!MigrateShapeFolder(ShapeRootFolderPath, newSavePath))"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapesLabSettings.SaveFolderPath \u003d newSavePath;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show("
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                    string.Format(ShapesLabText.SuccessSaveLocationChanged, newSavePath),"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapesLabText.SuccessSaveLocationChangedTitle, MessageBoxButtons.OK,"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBoxIcon.Information);"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            settingsDialog.ShowDialog();"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupCategoryBoxItems()"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            ObservableCollection\u003cCustomComboBoxItem\u003e categoryBoxItems \u003d new ObservableCollection\u003cCustomComboBoxItem\u003e();"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            string defaultCategory \u003d this.GetAddIn().ShapePresentation.DefaultCategory;"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string category in Categories)"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "                categoryBoxItems.Add(new CustomComboBoxItem(category, defaultCategory));"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            _categoryBinding \u003d new BindingSource { DataSource \u003d categoryBoxItems };"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryBox.ItemsSource \u003d _categoryBinding;"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c Categories.Count; i++)"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Categories[i] \u003d\u003d CurrentCategory)"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "                    categoryBox.SelectedIndex \u003d i;"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupMoveShapeContextMenu()"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            _contextMenuCategoryBinding \u003d new ObservableCollection\u003cMenuItem\u003e();"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string category in Categories)"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "                _contextMenuCategoryBinding.Add(new CustomMenuItem(category, MoveShapeClick));"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DehighlightSelected()"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.UnselectAll();"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DisableAddShapesButton()"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            addShapeButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            addShapeImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.AddToCustomShapesDisabled);"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EnableAddShapesButton()"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            addShapeButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            addShapeImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.AddToCustomShapes);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "        private int GetShapeItemIndex(string shapeName)"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int index \u003d 0; index \u003c shapeList.Items.Count; index++)"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((shapeList.Items[index] as CustomShapePaneItem).Text \u003d\u003d shapeName)"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "                    return index;"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns the index at which the shape should be inserted lexicographically"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        private int GetShapeInsertionIndex(string shapeName)"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int index \u003d 0; index \u003c shapeList.Items.Count; index++)"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "                if ((shapeList.Items[index] as CustomShapePaneItem).Text.CompareTo(shapeName) \u003e\u003d 0)"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                    return index;"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeList.Items.Count;"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PaneReload()"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            // clear all and load shapes from folder"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Items.Clear();"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            PrepareShapes();"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeList.Items.IsEmpty)"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            // scroll the view to show the first item"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.ScrollIntoView(shapeList.Items[0]);"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeList.Focus();"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "        private string GetShapePath(string shapeName)"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "            return CurrentShapeFolderPath + @\"\\\" + shapeName + \".png\";"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveShape(string shapeName)"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapePath \u003d GetShapePath(shapeName);"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(shapePath))"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove shape from disk and shape gallery"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            File.Delete(shapePath);"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove shape from shape gallery"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.RemoveShape(shapeName);"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "            // sync shape removing among all task panes"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabUtils.SyncShapeRemove(this.GetAddIn(), shapeName, CurrentCategory);"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveCustomShape(shapeName);"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Shape Storage"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ImportShapes(string importFilePath, bool fromLibrary)"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointShapeGalleryPresentation importShapeGallery \u003d PrepareImportGallery(importFilePath, fromLibrary);"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!importShapeGallery.Open(withWindow: false, focus: false))"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.ErrorImportFile);"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (importShapeGallery.Slides.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.ErrorImportNoSlide);"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if user tries to import shapes but the file contains multiple categories,"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                    // stop processing and warn the user"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!fromLibrary \u0026\u0026 importShapeGallery.Categories.Count \u003e 1)"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "                        MessageBox.Show("
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "                            string.Format(ShapesLabText.ErrorImportSingleCategory,"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                                          importShapeGallery.Name));"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "                    // copy all shapes in the import shape gallery to current shape gallery"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (fromLibrary)"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "                        ImportShapesFromLibrary(importShapeGallery);"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "                        ImportShapesFromSingleShape(importShapeGallery);"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorTitle, e.Message, e);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                importShapeGallery.Close();"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "                // delete the import file copy"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                FileDir.DeleteFile(Path.Combine(ShapeRootFolderPath, ImportFileNameNoExtension + \".pptlabsshapes\"));"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImportShapesFromLibrary(PowerPointShapeGalleryPresentation importShapeGallery)"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (string importCategory in importShapeGallery.Categories)"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                    importShapeGallery.CopyCategory(importCategory);"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.GetAddIn().ShapePresentation.AddCategory(importCategory, false, true);"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "                    _categoryBinding.Add(new CustomComboBoxItem(importCategory, null));"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                    _contextMenuCategoryBinding.Add(new CustomMenuItem(importCategory, MoveShapeClick));"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "                return ClipboardUtil.ClipboardRestoreSuccess;"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, currentSlide);"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ImportShapesFromSingleShape(PowerPointShapeGalleryPresentation importShapeGallery)"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapeRange \u003d importShapeGallery.Slides[0].Shapes.Range();"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeRange.Count \u003c 1)"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeName \u003d shapeRange[1].Name;"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "            // Utilises deprecated classes as CustomShapePane does not utilise ActionFramework"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d this.GetCurrentSlide();"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointPresentation pres \u003d this.GetCurrentPresentation();"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "                importShapeGallery.CopyShape(shapeName);"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeName \u003d this.GetAddIn().ShapePresentation.AddShape(pres, currentSlide, null, shapeName, fromClipBoard: true);"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                string exportPath \u003d Path.Combine(CurrentShapeFolderPath, shapeName + \".png\");"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.ExportShape(shapeRange, exportPath);"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "                return ClipboardUtil.ClipboardRestoreSuccess;"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, currentSlide);"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool MigrateShapeFolder(string oldPath, string newPath)"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadingDialogBox loadingDialog \u003d new LoadingDialogBox(ShapesLabText.MigratingDialogTitle,"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    ShapesLabText.MigratingDialogContent);"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Show();"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "            // close the opening presentation"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "            if (this.GetAddIn().ShapePresentation.Opened)"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "                this.GetAddIn().ShapePresentation.Close();"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "            // migration only cares about if the folder has been copied to the new location entirely."
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FileDir.CopyFolder(oldPath, newPath))"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                loadingDialog.Close();"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorMigration);"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            // now we will try our best to delete the original folder, but this is not guaranteed"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            // because some of the using files, such as some opening shapes, and the evil thumb.db"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FileDir.DeleteFolder(oldPath))"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorOriginalFolderDeletion);"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRootFolderPath \u003d newPath;"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "            // modify shape gallery presentation\u0027s path and name, then open it"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.Path \u003d newPath;"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.Open(withWindow: false, focus: false);"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.DefaultCategory \u003d CurrentCategory;"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Close();"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PrepareFolder()"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(CurrentShapeFolderPath))"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(CurrentShapeFolderPath);"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPointShapeGalleryPresentation PrepareImportGallery(string importFilePath, bool fromCategory)"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "            string importFileCopyPath \u003d Path.Combine(ShapeRootFolderPath, ImportFileCopyName);"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "            // copy the file to the current shape root if the file is not under root "
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(importFileCopyPath))"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "                File.Copy(importFilePath, importFileCopyPath);"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            // init the file as an imported file"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointShapeGalleryPresentation importShapeGallery \u003d new PowerPointShapeGalleryPresentation(ShapeRootFolderPath,"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            ImportFileNameNoExtension)"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "                IsImportedFile \u003d true,"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "                ImportToCategory \u003d fromCategory ? string.Empty : CurrentCategory"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "            return importShapeGallery;"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PrepareShapes()"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "            PrepareFolder();"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "            IOrderedEnumerable\u003cstring\u003e shapes \u003d"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.EnumerateFiles(CurrentShapeFolderPath, \"*.png\")"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "                .OrderBy(item \u003d\u003e item, _stringComparer);"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string shape in shapes)"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeName \u003d Path.GetFileNameWithoutExtension(shape);"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapeName \u003d\u003d null)"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(ShapesLabText.ErrorFileNameInvalid);"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                AddCustomShape(shapeName, shape, false);"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "            DehighlightSelected();"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Event Handlers"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WrapPanelLoaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            wrapPanel \u003d sender as WrapPanel;"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CategoryBoxSelectedIndexChanged(object sender, EventArgs e)"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "            int selectedIndex \u003d categoryBox.SelectedIndex;"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedIndex \u003d\u003d -1)"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "            string selectedCategory \u003d (_categoryBinding[selectedIndex] as CustomComboBoxItem)?.actualName;"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            CurrentCategory \u003d selectedCategory;"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "            this.GetAddIn().ShapePresentation.DefaultCategory \u003d selectedCategory;"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "            PaneReload();"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddShapeButton_Click(object sender, EventArgs e)"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapeFromSelection(selection);"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ClickOutsideShapeList(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "            categoryBox.Focus();"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Hyperlink_RequestNavigate(object sender, RequestNavigateEventArgs e)"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "            Process.Start(new ProcessStartInfo(e.Uri.AbsoluteUri));"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d true;"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "        private void MoveShapeClick(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomMenuItem item \u003d sender as CustomMenuItem;"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "            if (item \u003d\u003d null)"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "            MoveShapes(item.actualName);"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 953,
      "yuhongherald": 5
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/Views/ShapesLabCategoryInfoDialogBox.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab.Views"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for ShapesLabCategoryInfoDialogBox.xaml"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ShapesLabCategoryInfoDialogBox"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DialogConfirmedDelegate(string categoryName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public DialogConfirmedDelegate DialogConfirmedHandler { get; set; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        // for names, we do not allow name involves"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        // \u003c (less than)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        // \u003e (greater than)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        // : (colon)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        // \" (double quote)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // / (forward slash)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        // \\ (backslash)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        // | (vertical bar or pipe)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        // ? (question mark)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        // * (asterisk)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        // Windows reserved file names."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string InvalidCharsRegex \u003d \"^.*(?i)(CON|PRN|AUX|NUL|COM1|COM2|COM3|COM4|COM5|COM6|COM7|COM8|COM9|LPT1|LPT2|LPT3|LPT4|LPT5|LPT6|LPT7|LPT8|LPT9)(?-i).*$|[\u003c\u003e:\\\"/\\\\\\\\|?*]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool shouldUseExistingCategory;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapesLabCategoryInfoDialogBox()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapesLabCategoryInfoDialogBox(string categoryName, bool shouldUseExistingCategory)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            : this()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!string.IsNullOrEmpty(categoryName))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                nameInput.Text \u003d categoryName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                nameInput.SelectAll();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shouldUseExistingCategory \u003d shouldUseExistingCategory;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OkButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            string name \u003d nameInput.Text.Trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            if (VerifyName(name) \u0026\u0026 VerifyCategory(name))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogConfirmedHandler(name);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                Close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool VerifyName(string name)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Utils.ShapeUtil.IsShapeNameOverMaximumLength(name))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorNameTooLong);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex invalidChars \u003d new Regex(InvalidCharsRegex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrWhiteSpace(name) || invalidChars.IsMatch(name))"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorInvalidCharacter);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool VerifyCategory(string name)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!shouldUseExistingCategory \u0026\u0026 this.GetAddIn().ShapePresentation.HasCategory(name))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorDuplicateCategoryName);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (shouldUseExistingCategory \u0026\u0026 !this.GetAddIn().ShapePresentation.HasCategory(name))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShapesLabText.ErrorCategoryNameMissing);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 95,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShapesLab/Views/ShapesLabSettingsDialogBox.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Forms \u003d System.Windows.Forms;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShapesLab.Views"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for ShapesLabSettingsDialogBox.xaml"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ShapesLabSettingsDialogBox"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DialogConfirmedDelegate(string savePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public DialogConfirmedDelegate DialogConfirmedHandler { get; set; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapesLabSettingsDialogBox()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public ShapesLabSettingsDialogBox(string savePath) : this()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            savePathBrowserIconImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.Load_icon);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            savePathInput.IsReadOnly \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            savePathInput.Text \u003d savePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OkButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogConfirmedHandler(savePathInput.Text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            Close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SavePathBrowserButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            FolderBrowserDialog folderDialog \u003d new FolderBrowserDialog"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowNewFolderButton \u003d true,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                SelectedPath \u003d savePathInput.Text,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                Description \u003d ShapesLabText.FolderDialogDescription"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            // loop until user chooses an empty folder, or click \"Cancel\" button"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            while (true)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                // this launcher will scroll the view to selected path"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogResult folderDialogResult \u003d FolderDialogLauncher.ShowFolderBrowser(folderDialog);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                if (folderDialogResult \u003d\u003d Forms.DialogResult.OK)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    string newPath \u003d folderDialog.SelectedPath;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (!FileDir.IsDirectoryEmpty(newPath))"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.Windows.MessageBox.Show(ShapesLabText.ErrorFolderNonEmpty);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                        savePathInput.Text \u003d newPath;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    // if user cancels the dialog, break the loop"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 77,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ShortcutsLab/ConvertToPicture.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.ShortcutsLab"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class ConvertToPicture"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void Convert(PowerPointPresentation pres, PowerPointSlide slide, PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapeUtil.IsSelectionShapeOrText(selection))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape shape \u003d GetShapeFromSelection(selection);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                int originalZOrder \u003d shape.ZOrderPosition;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                // In case shape is corrupted"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                if (ShapeUtil.IsCorrupted(shape))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape \u003d ShapeUtil.CorruptionCorrection(shape, slide);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertToPictureForShape(pres, slide, shape, originalZOrder);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShortcutsLabText.ErrorTypeNotSupported, ShortcutsLabText.ErrorWindowTitle);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool ConvertAndSave(ShapeRange selectedShapes, string fileName)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ShapeUtil.IsShapeRangeShapeOrText(selectedShapes))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(ShortcutsLabText.ErrorTypeNotSupported, ShortcutsLabText.ErrorWindowTitle);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                GraphicsUtil.ExportShape(selectedShapes, fileName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(\"Exception during export shapes: \" + e.Message, ShortcutsLabText.ErrorWindowTitle);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void ConvertToPictureForShape(PowerPointPresentation pres, PowerPointSlide slide, PowerPoint.Shape shape, int originalZOrder)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            float rotation \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                rotation \u003d shape.Rotation;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Rotation \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                Logger.LogException(e, \"Chart cannot be rotated.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            ClipboardUtil.RestoreClipboardAfterAction(() \u003d\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Copy();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                float x \u003d shape.Left;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                float y \u003d shape.Top;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                float width \u003d shape.Width;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                float height \u003d shape.Height;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Delete();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape pic \u003d slide.Shapes.PasteSpecial(PowerPoint.PpPasteDataType.ppPastePNG)[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Left \u003d x + (width - pic.Width) / 2;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Top \u003d y + (height - pic.Height) / 2;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Rotation \u003d rotation;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                // move picture to original z-order"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                while (pic.ZOrderPosition \u003e originalZOrder)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    pic.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                while (pic.ZOrderPosition \u003c originalZOrder)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    pic.ZOrder(Office.MsoZOrderCmd.msoBringForward);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                pic.Select();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                return pic;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            }, pres, slide);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetShapeFromSelection(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetShapeFromSelection(selection.ShapeRange);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        private static PowerPoint.Shape GetShapeFromSelection(PowerPoint.ShapeRange shapeRange)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape result \u003d shapeRange.Count \u003e 1 ? shapeRange.Group() : shapeRange[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 108,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncFormatListItem.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SyncFormatListItem.xaml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SyncFormatListItem : UserControl"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        Bitmap image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncFormatListItem()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateImage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool? IsChecked"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                return checkBox.IsChecked;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                checkBox.IsChecked \u003d value;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public Bitmap Image"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                return image;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                image \u003d value;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateImage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateImage()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            // if image isn\u0027t set, fill the control with the label"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            if (image \u003d\u003d null)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                label.Margin \u003d new Thickness(30, label.Margin.Top,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                            label.Margin.Right, label.Margin.Bottom);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                BitmapSource source \u003d GraphicsUtil.BitmapToImageSource(image);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Source \u003d source;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                label.Margin \u003d new Thickness(65, label.Margin.Top,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                            label.Margin.Right, label.Margin.Bottom);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        public String Text"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                return label.Content.ToString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                label.Content \u003d value;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 80,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncFormatPaneItem.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SyncFormatPaneItem.xaml"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SyncFormatPaneItem : UserControl"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private Bitmap image;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private SyncPaneWPF parent;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private string shapeKey \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private SyncLabShapeStorage shapeStorage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private FormatTreeNode[] formats \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncFormatPaneItem(SyncPaneWPF parent, string shapeKey,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncLabShapeStorage shapeStorage, FormatTreeNode[] formats)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            this.parent \u003d parent;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeKey \u003d shapeKey;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            this.shapeStorage \u003d shapeStorage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            this.formats \u003d formats;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            editImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SyncLabEditButton);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            pasteImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SyncLabPasteButton);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            deleteImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SyncLabDeleteButton);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateToolTipBody();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Getters and Setters"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public string FormatShapeKey"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeKey;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        public FormatTreeNode[] Formats"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                return formats;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                formats \u003d value;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        public Bitmap Image"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                return image;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                image \u003d value;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateImage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool FormatShapeExists"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeStorage.GetShape(shapeKey) !\u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateImage()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            // if image isn\u0027t set, fill the control with the label"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            if (image \u003d\u003d null)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Hidden;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                col1.Width \u003d new GridLength(0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                BitmapSource source \u003d GraphicsUtil.BitmapToImageSource(image);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Source \u003d source;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                imageBox.Visibility \u003d Visibility.Visible;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                col1.Width \u003d new GridLength(60);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public string Text"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                return textBlock.Text;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                textBlock.Text \u003d value;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                toolTipName.Text \u003d value;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateToolTipBody()"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            StringBuilder toolTipBodyText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (FormatTreeNode format in formats)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                toolTipBodyText.Append(GetNamesOfCheckedNodes(format.Name, format));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            toolTipBody.Text \u003d toolTipBodyText.ToString().Trim(\"\\n\".ToCharArray());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        private string GetNamesOfCheckedNodes(string rootName, FormatTreeNode node)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            if (node.IsChecked ?? false)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                return (node.Name.Equals(rootName) ? \"\" : rootName +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                    SyncFormatConstants.FormatNameSeparator) + node.Name + \"\\n\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (FormatTreeNode child in node.ChildrenNodes ?? new FormatTreeNode[] { })"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                result.Append(GetNamesOfCheckedNodes(rootName, child));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            return result.ToString();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ApplyFormatToSelected()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape formatShape \u003d shapeStorage.GetShape(shapeKey);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            if (formatShape \u003d\u003d null)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorShapeDeleted, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                parent.ClearInvalidFormats();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            this.StartNewUndoEntry();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.ApplyFormats(formats, formatShape);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Event Handlers"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        private void PasteButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            ApplyFormatToSelected();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        private void EditButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d shapeStorage.GetShape(shapeKey);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.Dialog \u003d new SyncFormatDialog(shape, Text, formats);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.Dialog.ObjectName \u003d this.Text;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            bool? result \u003d parent.Dialog.ShowDialog();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!result.HasValue || !(bool)result)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            this.formats \u003d parent.Dialog.Formats;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            this.Text \u003d parent.Dialog.ObjectName;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.Dialog \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateToolTipBody();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DeleteButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            parent.RemoveFormatItem(this);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OnMouseDoubleClick(object sender, MouseButtonEventArgs e)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            ApplyFormatToSelected();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 199,
      "yuhongherald": 5
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/SyncLab/Views/SyncPaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.SyncLab.Views"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for SyncPaneWPF.xaml"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class SyncPaneWPF : UserControl"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncFormatDialog Dialog { get; set; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly SyncLabShapeStorage shapeStorage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public SyncPaneWPF()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeStorage \u003d SyncLabShapeStorage.Instance;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            copyImage.Source \u003d GraphicsUtil.BitmapToImageSource(Properties.Resources.SyncLabCopyButton);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncPaneWPF_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Tools.CustomTaskPane syncLabPane \u003d this.GetAddIn().GetActivePane(typeof(SyncPane));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            if (syncLabPane \u003d\u003d null || !(syncLabPane.Control is SyncPane))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(TextCollection.SyncLabText.ErrorSyncPaneNotOpened);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncPane syncLab \u003d syncLabPane.Control as SyncPane;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateCopyButtonEnabledStatus(this.GetCurrentSelection());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            syncLab.HandleDestroyed +\u003d SyncPane_Closing;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncPane_Closing(Object sender, EventArgs e)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Dialog !\u003d null)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                Dialog.Close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        #region GUI API"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public int FormatCount"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                return formatListBox.Items.Count;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        public void UpdateCopyButtonEnabledStatus(Selection selection)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((selection \u003d\u003d null) || (selection.Type \u003d\u003d PpSelectionType.ppSelectionNone) "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                || (selection.Type \u003d\u003d PpSelectionType.ppSelectionSlides))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                copyButton.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                toolTipTextBox.Text \u003d SyncLabText.DisabledToolTipText;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                copyButton.IsEnabled \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                toolTipTextBox.Text \u003d SyncLabText.EnabledToolTipText;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool GetCopyButtonEnabledStatus()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            return copyButton.IsEnabled;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        public FormatTreeNode[] GetFormats(int index)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return (formatListBox.Items[index] as SyncFormatPaneItem).Formats;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetFormatText(int index)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            return (formatListBox.Items[index] as SyncFormatPaneItem).Text;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetFormatText(int index, string text)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            (formatListBox.Items[index] as SyncFormatPaneItem).Text \u003d text;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Sync API"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RemoveFormatItem(Object format)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            while (index \u003c formatListBox.Items.Count)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                if (formatListBox.Items[index] \u003d\u003d format)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatListBox.Items.RemoveAt(index);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClearInvalidFormats()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            while (index \u003c formatListBox.Items.Count)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                SyncFormatPaneItem item \u003d formatListBox.Items[index] as SyncFormatPaneItem;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                if (item.FormatShapeExists)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    formatListBox.Items.RemoveAt(index);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Applies a set of formats from a source shape to shapes selected by the user "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"nodes\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"formatShape\"\u003esource shape\u003c/param\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ApplyFormats(FormatTreeNode[] nodes, Shape formatShape)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapes \u003d GetSelectedShapesForFormatting();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedShapes \u003d\u003d null)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorPasteSelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                Format[] formats \u003d GetFormatsToApply(nodes);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapeUtil.ApplyFormats(formats, formatShape, selectedShapes);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        private Format[] GetFormatsToApply(FormatTreeNode[] nodes)"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cFormat\u003e list \u003d new List\u003cFormat\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (FormatTreeNode node in nodes)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                if (node.IsFormatNode \u0026\u0026 node.IsChecked.HasValue \u0026\u0026 node.IsChecked.Value)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.Add(node.Format);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (node.ChildrenNodes !\u003d null)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                    list.AddRange(GetFormatsToApply(node.ChildrenNodes));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            return list.ToArray();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Get shapes selected by user"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003eShapeRange of selected shapes, or null."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Null is returned over an empty collection as selections may not contain ShapeRanges"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/returns\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        private ShapeRange GetSelectedShapesForFormatting()"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((selection.Type !\u003d PpSelectionType.ppSelectionShapes \u0026\u0026"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.Type !\u003d PpSelectionType.ppSelectionText) ||"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.ShapeRange.Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                shapes \u003d selection.ChildShapeRange;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapes;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddFormatToList(Shape shape, string name, FormatTreeNode[] formats)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeKey \u003d CopyShape(shape, formats);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeKey \u003d\u003d null)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorCopy);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormatPaneItem item \u003d new SyncFormatPaneItem(this, shapeKey, shapeStorage, formats);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            item.Text \u003d name;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            item.Image \u003d new System.Drawing.Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            formatListBox.Items.Insert(0, item);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            formatListBox.SelectedIndex \u003d 0;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        #region GUI Handles"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CopyButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            Selection selection \u003d this.GetCurrentSelection();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((selection.Type !\u003d PpSelectionType.ppSelectionShapes \u0026\u0026"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.Type !\u003d PpSelectionType.ppSelectionText) ||"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                selection.ShapeRange.Count !\u003d 1)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorCopySelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d selection.ShapeRange[1];"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape.Type \u003d\u003d MsoShapeType.msoSmartArt) "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorSmartArtUnsupported, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.HasChildShapeRange)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.ChildShapeRange.Count !\u003d 1)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                    MessageBox.Show(SyncLabText.ErrorCopySelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                shape \u003d selection.ChildShapeRange[1];"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            bool canSyncPlaceHolder \u003d"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type \u003d\u003d MsoShapeType.msoPlaceholder \u0026\u0026 "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapeUtil.CanCopyMsoPlaceHolder(shape, SyncFormatUtil.GetTemplateShapes());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shape.Type !\u003d MsoShapeType.msoAutoShape \u0026\u0026"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type !\u003d MsoShapeType.msoLine \u0026\u0026"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type !\u003d MsoShapeType.msoPicture \u0026\u0026"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Type !\u003d MsoShapeType.msoTextBox \u0026\u0026"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "                !canSyncPlaceHolder)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(SyncLabText.ErrorCopySelectionInvalid, SyncLabText.ErrorDialogTitle);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            Dialog \u003d new SyncFormatDialog(shape);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            Dialog.ObjectName \u003d shape.Name;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            bool? result \u003d Dialog.ShowDialog();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!result.HasValue || !(bool)result)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            AddFormatToList(shape, Dialog.ObjectName, Dialog.Formats);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            Dialog \u003d null;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Shape Saving"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        // Saves shape into another powerpoint file"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        // Returns a key to find the shape by,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "        // or null if the shape cannot be copied"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        private string CopyShape(Shape shape, FormatTreeNode[] nodes)"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            return shapeStorage.CopyShape(shape, GetFormatsToApply(nodes));"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 284,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TextCollection/ELearningLabText.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace PowerPointLabs.TextCollection"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class ELearningLabText"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuId \u003d \"eLearningLabMenu\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuLabel \u003d \"e-Learning\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string RibbonMenuSupertip \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "            \"Use eLearning Lab to create audio, callouts, captions and tooltips all in one go!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ELearningTaskPaneTag \u003d \"E-Learning Workspace\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ELearningTaskPaneSuperTip \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            \"This is the work space for creating e-learning slides.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ELearningTaskPaneLabel \u003d \"e-Learning Lab\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ELearningLabSettingsTag \u003d \"ELearningLabSettings\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string Identifier \u003d \"PPTL\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string Underscore \u003d \"_\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CalloutIdentifier \u003d \"Callout\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CaptionIdentifier \u003d \"Caption\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AudioIdentifier \u003d \"Audio\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string DefaultAudioIdentifier \u003d \"Default\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TextStorageIdentifier \u003d \"Storage\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SelfExplanationTextIdentifier \u003d \"SelfExplanationText\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CalloutTextIdentifier \u003d \"CalloutText\"; "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CaptionTextIdentifier \u003d \"CaptionText\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TagNoIdentifier \u003d \"TagNo\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ClickNumIdentifier \u003d \"ClickNum\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string VoiceLabel \u003d \"VoiceLabel\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TriggerOnClick \u003d \"TriggerOnClick\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SelfExplanationItemIdentifier \u003d \"Item\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string NoSlideSelectedMessage \u003d \"No slide is selected\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string OnLoadingMessage \u003d \"Now Loading...\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_IsCallout \u003d \"IsCallout\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_IsCaption \u003d \"IsCaption\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_IsVoice \u003d \"IsVoice\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_HasShortVersion \u003d \"HasShortVersion\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_CalloutText \u003d \"CalloutText\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_CaptionText \u003d \"CaptionText\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_VoiceLabel \u003d \"VoiceLabel\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_TriggerIndex \u003d \"TriggerIndex\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_IsDummyItem \u003d \"IsDummyItem\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_IsTriggerTypeComboBoxEnabled \u003d \"IsTriggerTypeComboBoxEnabled\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExplanationItem_IsVoiceLabelInvalid \u003d \"IsVoiceLabelInvalid\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ELearningLabTextStorageShapeName \u003d Identifier + Underscore + TextStorageIdentifier;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AudioDefaultLabelFormat \u003d \"{0}\" + Underscore + DefaultAudioIdentifier;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AudioFileNameFormat \u003d \"Slide {0} ClickNo {1} Speech.wav\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AudioPreviewFileNameFormat \u003d \"PPTL_preview_{0}.wav\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string WatsonAudioTestFileName \u003d \"PPTL_Test_Watson.wav\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string SelfExplanationItemFormat \u003d \"Item\" + Underscore + \"{0}\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CaptionShapeNameFormat \u003d Identifier + Underscore + \"{0}\" + Underscore + CaptionIdentifier;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CalloutShapeNameFormat \u003d Identifier + Underscore + \"{0}\" + Underscore + CalloutIdentifier;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AudioCustomShapeNameFormat \u003d Identifier + Underscore + \"{0}\" + Underscore + AudioIdentifier + Underscore + \"{1}\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string AudioDefaultShapeNameFormat \u003d Identifier + Underscore + \"{0}\" + "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Underscore + AudioIdentifier + Underscore + \"{1}\" + Underscore + DefaultAudioIdentifier;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ProgressStatusLabelFormat \u003d \"Progress: {0}%\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string TempFolderNameFormat \u003d @\"\\PowerPointLabs Temp\\\" + \"{0}\" + @\"\\\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExtractTagNoRegex \u003d Identifier + Underscore + @\"([1-9][0-9]*)\" + "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            Underscore + \"(\" + CalloutIdentifier + \"|\" + CaptionIdentifier + \"|\" + AudioIdentifier + @\").*\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExtractFunctionRegex \u003d Identifier + Underscore + @\"[1-9][0-9]*\" + Underscore"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "               + \"(\" + CalloutIdentifier + \"|\" + CaptionIdentifier + \"|\" + AudioIdentifier + \")\" + @\".*\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string ExtractVoiceNameRegex \u003d Identifier + Underscore + @\"[1-9][0-9]*\" + Underscore"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              + CalloutIdentifier + \"|\" + CaptionIdentifier + \"|\" + AudioIdentifier + Underscore + @\"(.*)\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string VoiceShapeNameRegex \u003d Identifier + Underscore + @\"[1-9][0-9]*\" + Underscore"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            + AudioIdentifier + Underscore + @\".*\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CalloutShapeNameRegex \u003d Identifier + Underscore + @\"[1-9][0-9]*\" + Underscore"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            + CalloutIdentifier;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string CaptionShapeNameRegex \u003d Identifier + Underscore + @\"[1-9][0-9]*\" + Underscore "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            + CaptionIdentifier;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string PPTLShapeNameRegex \u003d Identifier + Underscore + @\"[1-9][0-9]*\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            Underscore + \"(\" + CalloutIdentifier + \"|\" + CaptionIdentifier + \"|\" + AudioIdentifier + @\").*\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        public const string PromptToSyncMessage \u003d \"ELearningLab detected that you have unsynced items in your workspace.\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    \"Do you want to sync them now?\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 79,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/ThisAddIn.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Globalization;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO.Compression;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.ExceptionServices;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.InteropServices;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting.Channels;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting.Channels.Ipc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Log;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.AutoUpdate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.CaptionsLab;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Views;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.FunctionalTestInterface.Impl;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.FunctionalTestInterface.Impl.Controller;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.PositionsLab;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ResizeLab;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SaveLab;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TimerLab;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Views;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "using MessageBox \u003d System.Windows.Forms.MessageBox;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "using Office \u003d Microsoft.Office.Core;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class ThisAddIn"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public readonly int MaxCustomTaskPanes \u003d 2;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public readonly string OfficeVersion2013 \u003d \"15.0\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public readonly string OfficeVersion2010 \u003d \"14.0\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string AppDataFolder \u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), \"PowerPointLabs\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        public Ribbon1 Ribbon;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        internal ShapesLabConfigSaveFile ShapesLabConfig;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        internal PowerPointShapeGalleryPresentation ShapePresentation;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        private delegate void SyncElearningItemsDelegate();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string AppLogName \u003d \"PowerPointLabs.log\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string SlideXmlSearchPattern \u003d @\"slide(\\d+)\\.xml\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TempFolderNamePrefix \u003d @\"\\PowerPointLabs Temp\\\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ShapeGalleryPptxName \u003d \"ShapeGallery\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string SyncLabPptxName \u003d \"Sync Lab - Do not edit\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TempZipName \u003d \"tempZip.zip\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private string _deactivatedPresFullName;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        private string tempFolderName;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _pptLabsShouldTerminate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool isResizePaneVisible;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Dictionary\u003cPowerPoint.DocumentWindow,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e\u003e _documentPaneMapper \u003d new Dictionary\u003cPowerPoint.DocumentWindow, List\u003cCustomTaskPane\u003e\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Dictionary\u003cPowerPoint.DocumentWindow,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            string\u003e _documentHashcodeMapper \u003d new Dictionary\u003cPowerPoint.DocumentWindow, string\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        /// The channel for .NET Remoting calls."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        private IChannel _ftChannel;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsApplicationVersion2010()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            return Application.Version \u003d\u003d OfficeVersion2010;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsApplicationVersion2013()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return Application.Version \u003d\u003d OfficeVersion2013;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        public Control GetActiveControl(Type type)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane taskPane \u003d GetActivePane(type);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskPane \u003d\u003d null ? null : taskPane.Control;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetTempFolderName()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempFolderName;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomTaskPane GetActivePane(Type type)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                activeWindow \u003d Application.ActiveWindow;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (COMException)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetPaneFromWindow(type, activeWindow);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        public Control GetControlFromWindow(Type type, PowerPoint.DocumentWindow window)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane taskPane \u003d GetPaneFromWindow(typeof(CustomShapePane), window);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskPane \u003d\u003d null ? null : taskPane.Control;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomTaskPane GetPaneFromWindow(Type type, PowerPoint.DocumentWindow window)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(window))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e panes \u003d _documentPaneMapper[window];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomTaskPane pane in panes)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                    UserControl control \u003d pane.Control;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (control.GetType() \u003d\u003d type)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                        return pane;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                    return null;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetActiveWindowTempName()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            return _documentHashcodeMapper[Application.ActiveWindow];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        public void InitializeShapeGallery()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            // achieves singleton ShapePresentation"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapePresentation?.Opened ?? false)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            string shapeRootFolderPath \u003d ShapesLabSettings.SaveFolderPath;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapePresentation \u003d"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                new PowerPointShapeGalleryPresentation(shapeRootFolderPath, ShapeGalleryPptxName);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!ShapePresentation.Open(withWindow: false, focus: false) \u0026\u0026"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                !ShapePresentation.Opened)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                // if the presentation gets some error during opening, and the error could not"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                // be resolved by consistency check, prompt the user about the error"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorShapeGalleryInit);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapePresentation.HasCategory(ShapesLabConfig.DefaultCategory))"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapePresentation.DefaultCategory \u003d ShapesLabConfig.DefaultCategory;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            // if we do not have the default category, create and add it to ShapeGallery"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapePresentation.AddCategory(ShapesLabConfig.DefaultCategory);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapePresentation.Save();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        public void InitializeShapesLabConfig()"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            // if ShapesLabConfig has already been intialized, do nothing"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapesLabConfig !\u003d null)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapesLabConfig \u003d new ShapesLabConfigSaveFile(AppDataFolder);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            // create a directory under specified location if the location does not exist"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(ShapesLabSettings.SaveFolderPath))"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(ShapesLabSettings.SaveFolderPath);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        public void PrepareMediaFiles(PowerPoint.Presentation pres, string tempPath)"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            string presFullName \u003d pres.FullName;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            string presName \u003d pres.Name;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            // in case of embedded slides, we need to regulate the file name and full name"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            RegulatePresentationName(pres, tempPath, ref presName, ref presFullName);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsEmptyFile(presFullName))"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "                string zipFullPath \u003d tempPath + TempZipName;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                // before we do everything, check if there\u0027s an undelete old zip file"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                // due to some error"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileDir.DeleteFile(zipFullPath);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileDir.CopyFile(presFullName, zipFullPath);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (Exception e)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                    ErrorDialogBox.ShowDialog(CommonText.ErrorAccessTempFolder, string.Empty, e);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                ExtractMediaFiles(zipFullPath, tempPath);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorPrepareMedia, \"Files cannot be linked.\", e);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        public string PrepareTempFolder(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            string presName \u003d pres.Name;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            string presFullName \u003d pres.FullName;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            // here presFullName makes no use, just to fit in the signature"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            RegulatePresentationName(pres, null, ref presName, ref presFullName);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempPath \u003d GetPresentationTempFolder(presName);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            // if temp folder doesn\u0027t exist, create"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Directory.Exists(tempPath))"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.Delete(tempPath, true);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorCreateTempFolder, string.Empty, e);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(tempPath);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempPath;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RegisterResizePane(PowerPoint.Presentation presentation)"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            if (GetActivePane(typeof(ResizeLabPane)) !\u003d null)"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow \u003d presentation.Application.ActiveWindow;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "            RegisterTaskPane(new ResizeLabPane(), ResizeLabText.TaskPaneTitle, activeWindow,"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                ResizeTaskPaneVisibleValueChangedEventHandler, null);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RegisterRecorderPane(PowerPoint.DocumentWindow activeWindow, string tempFullPath)"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "            if (GetActivePane(typeof(RecorderTaskPane)) !\u003d null)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            RegisterTaskPane(new RecorderTaskPane(tempFullPath), NarrationsLabText.RecManagementPanelTitle, activeWindow,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "                TaskPaneVisibleValueChangedEventHandler, null);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncShapeAdd(string shapeName, string shapeFullName, string category)"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.DocumentWindow window in Globals.ThisAddIn.Application.Windows)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                if (window \u003d\u003d Application.ActiveWindow)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane shapePaneControl \u003d GetControlFromWindow(typeof(CustomShapePane), window) as CustomShapePane;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapePaneControl?.CurrentCategory \u003d\u003d category)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.AddCustomShape(shapeName, shapeFullName, false);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncShapeRemove(string shapeName, string category)"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.DocumentWindow window in Globals.ThisAddIn.Application.Windows)"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "                if (window \u003d\u003d Application.ActiveWindow)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane shapePaneControl \u003d GetControlFromWindow(typeof(CustomShapePane), window) as CustomShapePane;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapePaneControl?.CurrentCategory \u003d\u003d category)"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.RemoveCustomShape(shapeName);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SyncShapeRename(string shapeOldName, string shapeNewName, string category)"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.DocumentWindow window in Globals.ThisAddIn.Application.Windows)"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                if (window \u003d\u003d Application.ActiveWindow)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomShapePane shapePaneControl \u003d GetControlFromWindow(typeof(CustomShapePane), window) as CustomShapePane;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapePaneControl?.CurrentCategory \u003d\u003d category)"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapePaneControl.RenameCustomShape(shapeOldName, shapeNewName);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool VerifyOnLocal(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex invalidPathRegex \u003d new Regex(\"^[hH]ttps?:\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            return !invalidPathRegex.IsMatch(pres.Path);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool VerifyVersion(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            return !pres.Name.EndsWith(\".ppt\");"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Functions"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        public CustomTaskPane RegisterTaskPane(UserControl control, string title, PowerPoint.DocumentWindow wnd,"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    EventHandler visibleChangeEventHandler \u003d null,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    EventHandler dockPositionChangeEventHandler \u003d null)"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            LoadingDialogBox loadingDialog \u003d new LoadingDialogBox();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Show();"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "            // note down the control\u0027s width"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            int width \u003d control.Width;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            // register the user control to the CustomTaskPanes collection and set it as"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            // current active task pane;"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane taskPane \u003d CustomTaskPanes.Add(control, title, wnd);"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "            // task pane UI setup"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "            taskPane.Visible \u003d false;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            taskPane.Width \u003d width + 20;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            // map the current window with the task pane"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(wnd))"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "                _documentPaneMapper[wnd] \u003d new List\u003cCustomTaskPane\u003e();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            _documentPaneMapper[wnd].Add(taskPane);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if (_documentPaneMapper[wnd].Count \u003e MaxCustomTaskPanes)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                // remove the oldest task pane"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                Type oldestPaneType \u003d _documentPaneMapper[wnd].First().Control.GetType();"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                RemoveTaskPane(wnd, oldestPaneType);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                Trace.TraceInformation("
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    $\"Removed pane {oldestPaneType.ToString()} over limit: {MaxCustomTaskPanes.ToString()}\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation("
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "                \"After Pane Width Change: \" +"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "                string.Format(\"Pane Width \u003d {0}, Pane Height \u003d {1}, Control Width \u003d {2}, Control Height {3}\","
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskPane.Width, taskPane.Height, control.Width, control.Height));"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "            // event handlers register"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "            if (visibleChangeEventHandler !\u003d null)"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                taskPane.VisibleChanged +\u003d visibleChangeEventHandler;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            if (dockPositionChangeEventHandler !\u003d null)"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "                taskPane.DockPositionChanged +\u003d dockPositionChangeEventHandler;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "            loadingDialog.Close();"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "            return taskPane;"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override Microsoft.Office.Core.IRibbonExtensibility CreateRibbonExtensibilityObject()"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon \u003d new Ribbon1();"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "            return Ribbon;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupLogger()"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check if folder exists and if not, create it"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!Directory.Exists(AppDataFolder))"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(AppDataFolder);"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            string fileName \u003d DateTime.Now.ToString(\"yyyy-MM-dd\") + AppLogName;"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            string logPath \u003d Path.Combine(AppDataFolder, fileName);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.AutoFlush \u003d true;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.Listeners.Add(new TextWriterTraceListener(logPath));"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShutDownRecorderPane()"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d GetActiveControl(typeof(RecorderTaskPane)) as RecorderTaskPane;"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder?.HasEvent() ?? false)"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.ForceStopEvent();"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShutDownPictureSlidesLab()"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureSlidesLab.Views.PictureSlidesLabWindow pictureSlidesLabWindow \u003d Ribbon.PictureSlidesLabWindow;"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pictureSlidesLabWindow?.IsOpen ?? false)"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "                pictureSlidesLabWindow.Close();"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveTaskPanes(PowerPoint.DocumentWindow activeWindow)"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(activeWindow))"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e activePanes \u003d _documentPaneMapper[activeWindow];"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (CustomTaskPane pane in activePanes)"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomTaskPanes.Remove(pane);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "            _documentPaneMapper.Remove(activeWindow);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveTaskPane(PowerPoint.DocumentWindow window, Type paneType)"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_documentPaneMapper.ContainsKey(window))"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cCustomTaskPane\u003e activePanes \u003d _documentPaneMapper[window];"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d activePanes.Count - 1; i \u003e\u003d 0; i--)"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomTaskPane pane \u003d activePanes[i];"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pane.Control.GetType() !\u003d paneType)"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "                CustomTaskPanes.Remove(pane);"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "                activePanes.RemoveAt(i);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RegulatePresentationName(PowerPoint.Presentation pres, string tempPath, ref string presName,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "            ref string presFullName)"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            // this function is used to handle \"embed on other application\" issue. In this case,"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            // all of presentation name, path and full name do not match the usual rule: name is"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "            // \"Untitled\", path is empty string and full name is \"slide in XX application\". We need"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "            // to regulate these fields properly."
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!presName.Contains(\".pptx\"))"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "                presName +\u003d \".pptx\";"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            if (tempPath !\u003d null)"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "                // every time when recorder pane is open,"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "                // save this presentation\u0027s copy, which will be used"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "                // to load audio files later"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "                pres.SaveCopyAs(tempPath + presName);"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "                presFullName \u003d tempPath + presName;"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TaskPaneVisibleValueChangedEventHandler(object sender, EventArgs e)"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane recorderPane \u003d GetActivePane(typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d recorderPane.Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "            // trigger close form event when closing hide the pane"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!recorder?.Visible ?? false)"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.RecorderPaneClosing();"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "                // remove recorder pane and force it to reload when next time open"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveTaskPane(Application.ActiveWindow, typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ResizeTaskPaneVisibleValueChangedEventHandler(object sender, EventArgs e)"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane resizePane \u003d GetActivePane(typeof(ResizeLabPane));"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            if (resizePane \u003d\u003d null)"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "            isResizePaneVisible \u003d resizePane.Visible;"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool SlidesInRangeHaveCaptions(PowerPoint.SlideRange sldRange)"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Slide slide in sldRange)"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide pptSlide \u003d PowerPointSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pptSlide.HasCaptions())"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool SlidesInRangeHaveAudio(PowerPoint.SlideRange sldRange)"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Slide slide in sldRange)"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPointSlide pptSlide \u003d PowerPointSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "                if (pptSlide.HasAudio())"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SlideShowBeginHandler(PowerPoint.SlideShowWindow wn)"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "            _isInSlideShow \u003d true;"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            AgendaLab.AgendaLabMain.SlideShowBeginHandler();"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SlideShowEndHandler(PowerPoint.Presentation presentation)"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            _isInSlideShow \u003d false;"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d GetActiveControl(typeof(RecorderTaskPane)) as RecorderTaskPane;"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder \u003d\u003d null)"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "                AgendaLab.AgendaLabMain.SlideShowEndHandler();"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "            // force recording session ends"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder.HasEvent())"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.ForceStopEvent();"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            // enable slide show button"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.EnableSlideShow();"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "            // when leave the show, dispose the in-show control if we have one"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.DisposeInSlideControlBox();"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            // if audio buffer is not empty, render the effects"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder.AudioBuffer.Count !\u003d 0)"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cPowerPointSlide\u003e slides \u003d PowerPointPresentation.Current.Slides.ToList();"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int i \u003d 0; i \u003c recorder.AudioBuffer.Count; i++)"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (recorder.AudioBuffer[i].Count \u003d\u003d 0)"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (Tuple\u003cAudioMisc.Audio, int\u003e audio in recorder.AudioBuffer[i])"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "                        audio.Item1.EmbedOnSlide(slides[i], audio.Item2);"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (ELearningLab.Service.ComputerVoiceRuntimeService.IsRemoveAudioEnabled)"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "                        ELearningLab.Service.ComputerVoiceRuntimeService.IsRemoveAudioEnabled \u003d true;"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "                        Ribbon.RefreshRibbonControl(\"RemoveNarrationsButton\");"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            // clear the buffer after embed"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "            recorder.AudioBuffer.Clear();"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "            // change back the slide range settings"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.ActivePresentation.SlideShowSettings.RangeType \u003d PowerPoint.PpSlideShowRangeType.ppShowAll;"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "            AgendaLab.AgendaLabMain.SlideShowEndHandler();"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsEmptyFile(string filePath)"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!File.Exists(filePath))"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "            FileInfo fileInfo \u003d new FileInfo(filePath);"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "            return fileInfo.Length \u003d\u003d 0;"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateRecorderPane(int count, int id)"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane recorderPane \u003d GetActivePane(typeof(RecorderTaskPane));"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            // if there\u0027s no active pane associated with the current window, return"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d recorderPane.Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder \u003d\u003d null)"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            // if the user has selected none or more than 1 slides, recorder pane should show nothing"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "            if (count !\u003d 1)"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "                if (recorderPane.Visible)"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "                    recorder.ClearDisplayLists();"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "                // initailize the current slide"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.InitializeAudioAndScript(PowerPointCurrentPresentationInfo.CurrentSlide, null, false);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "                // if the pane is shown, refresh the pane immediately"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "                if (recorderPane.Visible)"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "                    recorder.UpdateLists(id);"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateTimerPane(bool isVisible)"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane timerPane \u003d GetActivePane(typeof(TimerPane));"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timerPane !\u003d null)"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "                timerPane.Visible \u003d isVisible;"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateELearningPane(int selectedSlidesCount)"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomTaskPane elearningLabPane \u003d GetActivePane(typeof(ELearningLabTaskpane));"
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "            if (elearningLabPane \u003d\u003d null)"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningLabTaskpane taskpane \u003d elearningLabPane.Control as ELearningLabTaskpane;"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "            taskpane.ELearningLabMainPanel.SyncElearningLabOnSlideSelectionChanged();"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "            if (elearningLabPane.Visible \u003d\u003d true)"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                taskpane.ELearningLabMainPanel.ReloadELearningLabOnSlideSelectionChanged();"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "        private string GetPresentationTempFolder(string presName)"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempName \u003d presName.GetHashCode().ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempPath \u003d Path.GetTempPath() + TempFolderNamePrefix + tempName + @\"\\\";"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "            return tempPath;"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CleanUp(PowerPoint.DocumentWindow associatedWindow)"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_documentHashcodeMapper.ContainsKey(associatedWindow))"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "                _documentHashcodeMapper.Remove(associatedWindow);"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "            // if there exists some task panes, remove them"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "            RemoveTaskPanes(associatedWindow);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ExtractMediaFiles(string zipFullPath, string tempPath)"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                ZipStorer zip \u003d ZipStorer.Open(zipFullPath, FileAccess.Read);"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                List\u003cZipStorer.ZipFileEntry\u003e dir \u003d zip.ReadCentralDir();"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex regex \u003d new Regex(SlideXmlSearchPattern);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (ZipStorer.ZipFileEntry entry in dir)"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "                    string name \u003d Path.GetFileName(entry.FilenameInZip);"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (name \u003d\u003d null)"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (name.Contains(\".wav\") ||"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "                        regex.IsMatch(name))"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "                        zip.ExtractFile(entry, tempPath + name);"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "                zip.Close();"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "                FileDir.DeleteFile(zipFullPath);"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception e)"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "                ErrorDialogBox.ShowDialog(CommonText.ErrorExtract, \"Archived files cannot be retrieved.\", e);"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "        private void BreakRecorderEvents()"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "            RecorderTaskPane recorder \u003d GetActiveControl(typeof(RecorderTaskPane)) as RecorderTaskPane;"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recorder?.HasEvent() ?? false)"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "                recorder.ForceStopEvent();"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShutDownSyncLab()"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "            // If sync lab open, then close it."
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Presentation syncLabPpt \u003d GetOpenedSyncLabPresentation();"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            if (syncLabPpt !\u003d null)"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "                syncLabPpt.Close();"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceInformation(\"SyncLab terminated.\");"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Presentation GetOpenedSyncLabPresentation()"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Presentation presentation in Application.Presentations)"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "                if (presentation.Name.Contains(SyncLabPptxName))"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "                    return presentation;"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShutDownShapesLab()"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ShapePresentation?.Opened ?? false)"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "                if (string.IsNullOrEmpty(ShapesLabConfig.DefaultCategory))"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapesLabConfig.DefaultCategory \u003d ShapePresentation.Categories[0];"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapePresentation.Close();"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceInformation(\"ShapesLab terminated.\");"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Powerpoint Application Event Handlers"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInStartup(object sender, EventArgs e)"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupLogger();"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "            Logger.Log(\"PowerPointLabs Started\");"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "            CultureUtil.SetDefaultCulture(CultureInfo.GetCultureInfo(\"en-US\"));"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            new Updater().TryUpdate();"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupFunctionalTestChannels();"
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.Init(Application);"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "            PPKeyboard.Init(Application);"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.Init(Application);"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.Init();"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupDoubleClickHandler();"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupTabActivateHandler();"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "            SetupAfterCopyPasteHandler();"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveLabSettings.InitialiseLocalStorage();"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "            // According to MSDN, when more than 1 event are triggered, callback\u0027s invoking sequence"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "            // follows the defining order. I.e. the earlier you defined, the earlier it will be"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "            // executed."
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "            // Here, we want the priority to be: Application action \u003e Window action \u003e Slide action"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "            // Priority High: Application Actions"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "            ((PowerPoint.EApplication_Event)Application).NewPresentation +\u003d ThisAddInNewPresentation;"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.AfterNewPresentation +\u003d ThisAddInAfterNewPresentation;"
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.PresentationOpen +\u003d ThisAddInPresentationOpen;"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.PresentationClose +\u003d ThisAddInPresentationClose;"
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "            // Priority Mid: Window Actions"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.WindowActivate +\u003d ThisAddInApplicationOnWindowActivate;"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.WindowDeactivate +\u003d ThisAddInApplicationOnWindowDeactivate;"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.WindowSelectionChange +\u003d ThisAddInSelectionChanged;"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.SlideShowBegin +\u003d SlideShowBeginHandler;"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.SlideShowEnd +\u003d SlideShowEndHandler;"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "            // Priority Low: Slide Actions"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "            Application.SlideSelectionChanged +\u003d ThisAddInSlideSelectionChanged;"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInApplicationOnWindowDeactivate(PowerPoint.Presentation pres, PowerPoint.DocumentWindow wn)"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(pres.Name + \" (Presentation) and \" + wn.Caption + \" (Window) deactivated.\");"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "            _deactivatedPresFullName \u003d pres.FullName;"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInApplicationOnWindowActivate(PowerPoint.Presentation pres, PowerPoint.DocumentWindow wn)"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pres \u003d\u003d null)"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(pres.Name + \" (Presentation) and \" + wn.Caption + \" (Window) activated.\");"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePane customShape \u003d GetActiveControl(typeof(CustomShapePane)) as CustomShapePane;"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "            // make sure ShapeGallery\u0027s default category is consistent with current presentation"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "            if (customShape !\u003d null)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                string currentCategory \u003d customShape.CurrentCategory;"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                ShapePresentation.DefaultCategory \u003d currentCategory;"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "            // If a window was activated in any way, PptLabs should not terminate."
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            _pptLabsShouldTerminate \u003d false;"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInSlideSelectionChanged(PowerPoint.SlideRange sldRange)"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: doing range sweep to check these var may affect performance, consider initializing these"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO: variables only at program starts"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            NotesToCaptions.IsRemoveCaptionsEnabled \u003d SlidesInRangeHaveCaptions(sldRange);"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            ComputerVoiceRuntimeService.IsRemoveAudioEnabled \u003d SlidesInRangeHaveAudio(sldRange);"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "            // update recorder pane"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sldRange.Count \u003e 0)"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "                int slideID;"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                    slideID \u003d sldRange[1].SlideID;"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (COMException)"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateRecorderPane(sldRange.Count, slideID);"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "                TimerLab.TimerLab.IsTimerEnabled \u003d true;"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLab.PictureSlidesLab.IsPictureSlidesEnabled \u003d true;"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateRecorderPane(sldRange.Count, -1);"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "                TimerLab.TimerLab.IsTimerEnabled \u003d false;"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateTimerPane(false);"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "                PictureSlidesLab.PictureSlidesLab.IsPictureSlidesEnabled \u003d false;"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "                ShutDownPictureSlidesLab();"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateELearningPane(sldRange.Count);"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "            // in case the recorder is on event"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "            BreakRecorderEvents();"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "            // ribbon function init"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "            HighlightLab.HighlightBulletsText.IsHighlightPointsEnabled \u003d true;"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            HighlightLab.HighlightBulletsBackground.IsHighlightBackgroundEnabled \u003d true;"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sldRange.Count !\u003d 1)"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                HighlightLab.HighlightBulletsText.IsHighlightPointsEnabled \u003d false;"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "                HighlightLab.HighlightBulletsBackground.IsHighlightBackgroundEnabled \u003d false;"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide tmp \u003d sldRange[1];"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Presentation presentation \u003d PowerPointPresentation.Current.Presentation;"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "                int slideIndex \u003d tmp.SlideIndex;"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide next \u003d tmp;"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide prev \u003d tmp;"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slideIndex \u003c presentation.Slides.Count)"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "                    next \u003d presentation.Slides[slideIndex + 1];"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slideIndex \u003e 1)"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "                    prev \u003d presentation.Slides[slideIndex - 1];"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"PictureSlidesLabButton\");"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"TimerLabButton\");"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"HighlightPointsButton\");"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"HighlightBackgroundButton\");"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"RemoveCaptionsButton\");"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"RemoveNarrationsButton\");"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ELearningTaskPaneButton\");"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "        // To handle AccessViolationException"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "        [HandleProcessCorruptedStateExceptions]"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInSelectionChanged(PowerPoint.Selection sel)"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sel.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Shape sh \u003d null;"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                    sh \u003d sel.ShapeRange[1];"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (AccessViolationException e)"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.LogException(e, \"ThisAddInSelectionChanged\");"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "                    Logger.Log(\"We do not have access to the ShapeRange now!\");"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isResizePaneVisible)"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "                    sel.ShapeRange.LockAspectRatio \u003d ResizeLabPaneWPF.IsAspectRatioLocked"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                        ? Office.MsoTriState.msoTrue"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "                        : Office.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "            // When there is no selection on the slide, disable the add/copy buttons on"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            // customshapepane and syncpane respectively"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncPane syncPane \u003d GetActivePane(typeof(SyncPane))?.Control as SyncPane;"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "            syncPane?.UpdateOnSelectionChange(sel);"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomShapePane customShapePane \u003d GetActivePane(typeof(CustomShapePane))?.Control as CustomShapePane;"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "            customShapePane?.UpdateOnSelectionChange(sel);"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AnimateInSlideButton\");"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"DrillDownButton\");"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"StepBackButton\");"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AddSpotlightButton\");"
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AddZoomInButton\");"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"AddZoomOutButton\");"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ZoomToAreaButton\");"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ReplaceWithClipboardButton\");"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"PasteIntoGroupButton\");"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"ConvertToTooltipButton\");"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"CreateCalloutButton\");"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"CreateTriggerButton\");"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "            // To grey out the \"HighlightText\" button whenever non-text fragment or nothing has been selected"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(\"HighlightTextButton\");"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInNewPresentation(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow activeWindow \u003d pres.Application.ActiveWindow;"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempName \u003d pres.Name.GetHashCode().ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "            _documentHashcodeMapper[activeWindow] \u003d tempName;"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "            // Refresh ribbon to enable the menu buttons"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "            RefreshRibbonMenuButtons();"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "            // Initialise the \"Maintain Tab Focus\" and \"Compress Images\" checkbox"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.InitialiseVisibilityCheckbox();"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.InitialiseCompressImagesCheckbox();"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "        // solve new un-modified unsave problem"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInAfterNewPresentation(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "            //Access the BuiltInDocumentProperties so that the property storage does get created."
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "            object o \u003d pres.BuiltInDocumentProperties;"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "            pres.Saved \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInPresentationOpen(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "            // Windows count could be zero if presentation is opened as preview of template slides"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pres.Application.Windows.Count \u003e 0)"
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.DocumentWindow activeWindow \u003d pres.Application.ActiveWindow;"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "                tempFolderName \u003d pres.Name.GetHashCode().ToString(CultureInfo.InvariantCulture);"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we opened a new window, register the window with its name"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_documentHashcodeMapper.ContainsKey(activeWindow))"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                    _documentHashcodeMapper[activeWindow] \u003d tempFolderName;"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                // Refresh ribbon to enable the menu buttons if there are now at least one window"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "                RefreshRibbonMenuButtons();"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "                // Initialise the \"Maintain Tab Focus\" and \"Compress Images\" checkbox"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.InitialiseVisibilityCheckbox();"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.InitialiseCompressImagesCheckbox();"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInPresentationClose(PowerPoint.Presentation pres)"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(\"Closing \" + pres.Name + \"...\");"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "            // We need to check if there is only one window AND the active window\u0027s presentation "
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "            // has the same name as the one we are closing because it is possible for background "
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "            // presentation (those without windows) to close and trigger this event as well."
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "            // We only want to shut down PPTLabs if we are closing the main presentation."
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Application.Windows.Count \u003d\u003d 1 \u0026\u0026"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "                Application.ActiveWindow.Presentation.FullName \u003d\u003d pres.FullName)"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "                // If this current window we are closing is the last window, then PptLabs should terminate."
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "                _pptLabsShouldTerminate \u003d true;"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            // special case: if we are closing \u0027ShapeGallery.pptx\u0027 or \u0027Sync Lab - Do not edit.pptx\u0027, no other action will be done"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "            if (pres.Name.Contains(ShapeGalleryPptxName) || pres.Name.Contains(SyncLabPptxName))"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_pptLabsShouldTerminate)"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "                ShutDownSyncLab();"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "                ShutDownShapesLab();"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "                ShutDownPictureSlidesLab();"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "            ShutDownRecorderPane();"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "            // find the document that holds the presentation with pres.Name"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            // special case will be embedded slide. in this case pres.Windows return exception"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.DocumentWindow associatedWindow;"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceInformation(\"Total windows of closing presentation \u003d \" + pres.Windows.Count);"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceInformation(\"Windows are: \");"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (PowerPoint.DocumentWindow window in pres.Windows)"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "                    Trace.TraceInformation(\"\\t\" + window.Caption);"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "                associatedWindow \u003d pres.Windows[1];"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceInformation(\"Closing presentation - \" + pres.FullName + \" - has no window.\");"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "            // for Functional Test to close presentation"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PowerPointLabsFT.IsFunctionalTestOn)"
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "                IntPtr handle \u003d Native.FindWindow(\"PPTFrameClass\", pres.Name + \" - Microsoft PowerPoint\");"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SetForegroundWindow(handle);"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "                SendKeys.Send(\"N\");"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(\"Closing associated window...\");"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            CleanUp(associatedWindow);"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "            // Refresh ribbon to grey out the menu / buttons if there are no windows open"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "            RefreshRibbonMenuButtons();"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RefreshRibbonMenuButtons()"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(AnimationLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ZoomLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(NarrationsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(CaptionsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(HighlightLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(EffectsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(PositionsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ResizeLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ColorsLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(SaveLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(SyncLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(ShapesLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(CropLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(PasteLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(TimerLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(AgendaLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "            Ribbon.RefreshRibbonControl(PictureSlidesLabText.RibbonMenuId);"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ThisAddInShutdown(object sender, EventArgs e)"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.StopHook();"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "            PPKeyboard.StopHook();"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.StopHook();"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "            PositionsPaneWpf.ClearAllEventHandlers();"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "            UIThreadExecutor.TearDown();"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.TraceInformation(DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \": PowerPointLabs Exiting\");"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "            Trace.Close();"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_ftChannel !\u003d null)"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "                ChannelServices.UnregisterChannel(_ftChannel);"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Copy paste handlers"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.DocumentWindow _copyFromWnd;"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly Regex _shapeNamePattern \u003d new Regex(@\"^[^\\[]\\D+\\s\\d+$\");"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "        private HashSet\u003cString\u003e _isShapeMatchedAlready;"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AfterPasteEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.Slide currentSlide \u003d Application.ActiveWindow.View.Slide as PowerPoint.Slide;"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "                string pptName \u003d Application.ActivePresentation.Name;"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 currentSlide?.SlideID !\u003d _previousSlideForCopyEvent.SlideID"
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 pptName \u003d\u003d _previousPptName)"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.ShapeRange pastedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cstring\u003e nameListForPastedShapes \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "                    Dictionary\u003cstring, string\u003e nameDictForPastedShapes \u003d new Dictionary\u003cstring, string\u003e();"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cstring\u003e nameListForCopiedShapes \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cPowerPoint.Shape\u003e corruptedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (PowerPoint.Shape shape in _copiedShapes)"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": "                        try"
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "                            nameListForCopiedShapes.Add(shape.Name);"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "                        catch"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "                            //handling corrupted shapes"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "                            shape.Copy();"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "                            PowerPoint.Shape fixedShape \u003d _previousSlideForCopyEvent.Shapes.Paste()[1];"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "                            fixedShape.Left \u003d shape.Left;"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": "                            fixedShape.Top \u003d shape.Top;"
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "                            while (fixedShape.ZOrderPosition \u003e shape.ZOrderPosition)"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "                            {"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "                                fixedShape.ZOrder(Office.MsoZOrderCmd.msoSendBackward);"
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "                            corruptedShapes.Add(shape);"
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "                            nameListForCopiedShapes.Add(fixedShape.Name);"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (PowerPoint.Shape shape in corruptedShapes)"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Delete();"
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "                    _isShapeMatchedAlready \u003d new HashSet\u003cstring\u003e();"
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d pastedShapes.Count; i++)"
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.Shape shape \u003d pastedShapes[i];"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "                        int matchedShapeIndex \u003d FindMatchedShape(shape);"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": "                        string uniqueName \u003d Guid.NewGuid().ToString();"
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "                        nameDictForPastedShapes[uniqueName] \u003d nameListForCopiedShapes[matchedShapeIndex];"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Name \u003d uniqueName;"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": "                        nameListForPastedShapes.Add(shape.Name);"
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "                    //Re-select pasted shapes"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.ShapeRange range \u003d currentSlide.Shapes.Range(nameListForPastedShapes.ToArray());"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (PowerPoint.Shape shape in range)"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Name \u003d nameDictForPastedShapes[shape.Name];"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "                    range.Select();"
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": "                    List\u003cPowerPoint.Slide\u003e pastedSlides \u003d selection.SlideRange.Cast\u003cPowerPoint.Slide\u003e().OrderBy(x \u003d\u003e x.SlideIndex).ToList();"
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (int i \u003d 0; i \u003c pastedSlides.Count; i++)"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (AgendaLab.AgendaSlide.IsReferenceslide(_copiedSlides[i]))"
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                        {"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                            pastedSlides[i].Name \u003d _copiedSlides[i].Name;"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "                            pastedSlides[i].Design \u003d _copiedSlides[i].Design;"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "                //TODO: log in ThisAddIn.cs"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "        private int FindMatchedShape(PowerPoint.Shape shape)"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": "            //Strong matching:"
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c _copiedShapes.Count; i++)"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsSimilarShape(shape, _copiedShapes[i])"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 IsSimilarName(shape.Name, _copiedShapes[i].Name)"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 Math.Abs(shape.Left - _copiedShapes[i].Left) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 Math.Abs(shape.Height - _copiedShapes[i].Height) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !_isShapeMatchedAlready.Contains(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture)))"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "                    _isShapeMatchedAlready.Add(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture));"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "            //Blur matching:"
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c _copiedShapes.Count; i++)"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsSimilarShape(shape, _copiedShapes[i])"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 IsSimilarName(shape.Name, _copiedShapes[i].Name)"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 !_isShapeMatchedAlready.Contains(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture)))"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "                    _isShapeMatchedAlready.Add(_copiedShapes[i].Id.ToString(CultureInfo.InvariantCulture));"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": "                    return i;"
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsSimilarShape(PowerPoint.Shape shape, PowerPoint.Shape shape2)"
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "            return Math.Abs(shape.Width - shape2.Width) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 Math.Abs(shape.Height - shape2.Height) \u003c float.Epsilon"
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 shape.Type \u003d\u003d shape2.Type"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "                   \u0026\u0026 (shape.Type !\u003d Office.MsoShapeType.msoAutoShape"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": "                       || shape.AutoShapeType \u003d\u003d shape2.AutoShapeType);"
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Similar name defi:"
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "        /// 1. if they\u0027re not default shape name, they must be the exact same"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "        /// 2. if they\u0027re default shape name, the shape type in the name must be the exact same"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "        /// 3. otherwise not similar"
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"name1\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"name2\"\u003e\u003c/param\u003e"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsSimilarName(string name1, string name2)"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "            //remove enclosing brackets for name2"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex nameEnclosedInBrackets \u003d new Regex(@\"^\\[\\D+\\s\\d+\\]$\");"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!nameEnclosedInBrackets.IsMatch(name1)"
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 nameEnclosedInBrackets.IsMatch(name2)"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 name2.Length \u003e 2)"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "                name2 \u003d name2.Substring(1, name2.Length - 2);"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_shapeNamePattern.IsMatch(name1)"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 !_shapeNamePattern.IsMatch(name2))"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": "                return name1.Equals(name2);"
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "            if (_shapeNamePattern.IsMatch(name1)"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 _shapeNamePattern.IsMatch(name2))"
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "                Regex shapeTypeInName \u003d new Regex(@\"^[^\\[]\\D+\\s(?\u003d\\d+$)\");"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeTypeForName1 \u003d shapeTypeInName.Match(name1).ToString();"
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "                string shapeTypeForName2 \u003d shapeTypeInName.Match(name2).ToString();"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "                return shapeTypeForName1.Equals(shapeTypeForName2);"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AfterPasteRecorderEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": "                // invalid paste event triggered because of system message loss"
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "                if (_copiedSlides.Count \u003c 1)"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "                // if we copied from a presentation without recorder pane or pasted to a"
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "                // presentation without recorder pane, paste event will not be entertained"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_documentPaneMapper.ContainsKey(_copyFromWnd) ||"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "                    _documentPaneMapper[_copyFromWnd] \u003d\u003d null ||"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": "                    GetActivePane(typeof(RecorderTaskPane)) \u003d\u003d null)"
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "                RecorderTaskPane copyFromRecorderPane \u003d"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "                    GetPaneFromWindow(typeof(RecorderTaskPane), _copyFromWnd).Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": "                RecorderTaskPane activeRecorderPane \u003d GetActivePane(typeof(RecorderTaskPane)).Control as RecorderTaskPane;"
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "                if (activeRecorderPane \u003d\u003d null ||"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "                    copyFromRecorderPane \u003d\u003d null)"
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.SlideRange slideRange \u003d selection.SlideRange;"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "                int oriSlide \u003d 0;"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (object sld in slideRange)"
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPointSlide oldSlide \u003d PowerPointSlide.FromSlideFactory(_copiedSlides[oriSlide]);"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPointSlide newSlide \u003d PowerPointSlide.FromSlideFactory(sld as PowerPoint.Slide);"
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "                    activeRecorderPane.PasteSlideAudioAndScript(newSlide,"
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                copyFromRecorderPane.CopySlideAudioAndScript(oldSlide));"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "                    oriSlide++;"
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "                // update the lists when all done"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateRecorderPane(slideRange.Count, slideRange[1].SlideID);"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AfterCopyEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "                _copyFromWnd \u003d Application.ActiveWindow;"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionSlides)"
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedSlides.Clear();"
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (object sld in selection.SlideRange)"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.Slide slide \u003d sld as PowerPoint.Slide;"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "                        _copiedSlides.Add(slide);"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedSlides.Sort((x, y) \u003d\u003e (x.SlideIndex - y.SlideIndex));"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedShapes.Clear();"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "                    _previousSlideForCopyEvent \u003d Application.ActiveWindow.View.Slide as PowerPoint.Slide;"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": "                    _previousPptName \u003d Application.ActivePresentation.Name;"
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "                    foreach (object sh in selection.ShapeRange)"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": "                        PowerPoint.Shape shape \u003d sh as PowerPoint.Shape;"
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "                        _copiedShapes.Add(shape);"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "                    _copiedShapes.Sort((x, y) \u003d\u003e (x.Id - y.Id));"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteToFillSlideButton\");"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteToFitSlideButton\");"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteAtOriginalPositionButton\");"
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"ReplaceWithClipboardButton\");"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "                Ribbon.RefreshRibbonControl(\"PasteIntoGroupButton\");"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "            catch"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": "                //TODO: log in ThisAddIn.cs"
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Tab Activate"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupTabActivateHandler()"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": "            _tabActivate +\u003d TabActivateEventHandler;"
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": "        private Native.WinEventDelegate _tabActivate;"
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "        private IntPtr _eventHook \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "        //This handler is used to check, whether Home tab is enabled or not"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "        //After Shortcut (Alt + H + O) is sent to PowerPoint by method OpenPropertyWindowForOffice10,"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": "        //if unsuccessful (Home tab is not enabled), EVENT_SYSTEM_MENUEND will be received"
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "        //if successful   (Property window is open), EVENT_OBJECT_CREATE will be received"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "        //To check the events occurred, use AccEvent32.exe"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": "        //Refer to MSAA - Event Constants:"
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "        //http://msdn.microsoft.com/en-us/library/windows/desktop/dd318066(v\u003dvs.85).aspx"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "        void TabActivateEventHandler(IntPtr hook, uint eventType,"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": "        IntPtr hwnd, int idObject, int child, uint thread, uint time)"
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eventType \u003d\u003d (uint)Native.Event.EVENT_SYSTEM_MENUEND"
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "                || eventType \u003d\u003d (uint)Native.Event.EVENT_OBJECT_CREATE)"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.UnhookWinEvent(_eventHook);"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": "                _eventHook \u003d IntPtr.Zero;"
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": "            if (eventType \u003d\u003d (uint)Native.Event.EVENT_SYSTEM_MENUEND)"
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(CommonText.ErrorTabActivate, CommonText.ErrorTabActivateTitle);"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Double Click to Open Property Window"
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string ShortcutAltHO \u003d \"%h%o\";"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CommandOpenBackgroundFormat \u003d 0x8F;"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool _isInSlideShow;"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupAfterCopyPasteHandler()"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.AfterCopy +\u003d AfterCopyEventHandler;"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.AfterPaste +\u003d AfterPasteRecorderEventHandler;"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": "            PPCopy.AfterPaste +\u003d AfterPasteEventHandler;"
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly List\u003cPowerPoint.Shape\u003e _copiedShapes \u003d new List\u003cPowerPoint.Shape\u003e();"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "        private readonly List\u003cPowerPoint.Slide\u003e _copiedSlides \u003d new List\u003cPowerPoint.Slide\u003e();"
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "        private PowerPoint.Slide _previousSlideForCopyEvent;"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "        private string _previousPptName;"
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupDoubleClickHandler()"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "            PPMouse.DoubleClick +\u003d DoubleClickEventHandler;"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DoubleClickEventHandler(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionNone)"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "                    TrySelectTransparentShape();"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "                if (selection.Type \u003d\u003d PowerPoint.PpSelectionType.ppSelectionShapes)"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (IsApplicationVersion2010())"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "                        OpenPropertyWindowForOffice10();"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "                        OpenPropertyWindowForOffice13OrHigher(selection);"
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (COMException e)"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": "                string logText \u003d \"DoubleClickEventHandler\" + \": \" + e.Message + \": \" + e.StackTrace;"
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "                Trace.TraceError(DateTime.Now.ToString(\"yyyyMMddHHmmss\") + \": \" + logText);"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TrySelectTransparentShape()"
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PowerPointCurrentPresentationInfo.CurrentSlide \u003d\u003d null)"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape overlappingShape \u003d null;"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "            int overlappingShapeZIndex \u003d -1;"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shapes shapesInCurrentSlide \u003d PowerPointCurrentPresentationInfo.CurrentSlide.Shapes;"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Shape shape in shapesInCurrentSlide)"
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "                if (IsMouseWithinShape(shape)"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "                    \u0026\u0026 shape.ZOrderPosition \u003e overlappingShapeZIndex)"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "                    overlappingShape \u003d shape;"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "                    overlappingShapeZIndex \u003d shape.ZOrderPosition;"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "            if (overlappingShape?.Visible \u003d\u003d Office.MsoTriState.msoTrue)"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "                overlappingShape.Select();"
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsMouseWithinShape(PowerPoint.Shape sh)"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "            float x \u003d Cursor.Position.X;"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": "            float y \u003d Cursor.Position.Y;"
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "            int left \u003d Application.ActiveWindow.PointsToScreenPixelsX(sh.Left);"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "            int top \u003d Application.ActiveWindow.PointsToScreenPixelsY(sh.Top);"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": "            int right \u003d Application.ActiveWindow.PointsToScreenPixelsX(sh.Left + sh.Width);"
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "            int bottom \u003d Application.ActiveWindow.PointsToScreenPixelsY(sh.Top + sh.Height);"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "            return x \u003e left"
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 x \u003c right"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 y \u003e top"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 y \u003c bottom;"
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "        //For office 2013 or Higher version:"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "        //Open Background Format window, then selecting the shape will"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "        //convert the window to Property window"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenPropertyWindowForOffice13OrHigher(PowerPoint.Selection selection)"
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!_isInSlideShow)"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "                PowerPoint.ShapeRange selectedShapes \u003d selection.ShapeRange;"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "                Native.SendMessage("
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": "                    Process.GetCurrentProcess().MainWindowHandle,"
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "                    (uint)Native.Message.WM_COMMAND,"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "                    new IntPtr(CommandOpenBackgroundFormat),"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "                    IntPtr.Zero);"
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedShapes.Select();"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "        //For office 2010 (in office 2013, this method has bad user exp)"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "        //Use hotkey (Alt - H - O) to activate Property window"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenPropertyWindowForOffice10()"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!_isInSlideShow)"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (_eventHook \u003d\u003d IntPtr.Zero)"
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "                        //Check whether Home tab is enabled or not"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "                        _eventHook \u003d Native.SetWinEventHook("
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "                            (uint)Native.Event.EVENT_SYSTEM_MENUEND,"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "                            (uint)Native.Event.EVENT_OBJECT_CREATE,"
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "                            IntPtr.Zero,"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "                            _tabActivate,"
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "                            (uint)Process.GetCurrentProcess().Id,"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "                            0,"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": "                            0);"
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "                    SendKeys.Send(ShortcutAltHO);"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (InvalidOperationException)"
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "                // ignore exception"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SetupFunctionalTestChannels()"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "            _ftChannel \u003d new IpcChannel(\"PowerPointLabsFT\");"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "            ChannelServices.RegisterChannel(_ftChannel, false);"
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "            RemotingConfiguration.RegisterWellKnownServiceType(typeof(PowerPointLabsFT),"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "                \"PowerPointLabsFT\", WellKnownObjectMode.Singleton);"
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": "        #region VSTO generated code"
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Required method for Designer support - do not modify"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": "        /// the contents of this method with the code editor."
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "        private void InternalStartup()"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": "            Startup +\u003d ThisAddInStartup;"
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "            Shutdown +\u003d ThisAddInShutdown;"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1627,
      "yuhongherald": 11
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TimerLab/TimerLabPaneWPF.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TimerLab"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for TimerLabPaneWPF.xaml"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class TimerLabPaneWPF : UserControl"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape timerBody \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape lineMarkerGroup \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape timeMarkerGroup \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape sliderHead \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape sliderBody \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape progressBar \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        bool isProgressBar \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public TimerLabPaneWPF()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Timer Properties"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private int Duration()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            int duration \u003d TimerLabConstants.SecondsInMinute;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value !\u003d null)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                int minutes \u003d (int)value;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                int seconds \u003d (int)(Math.Round(value - minutes, 2) * 100);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                duration \u003d (minutes * TimerLabConstants.SecondsInMinute) + seconds;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            return duration;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool Countdown()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isCountdown \u003d TimerLabConstants.DefaultCountdownSetting;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CountdownCheckBox.IsChecked.HasValue)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                isCountdown \u003d CountdownCheckBox.IsChecked.Value;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            return isCountdown;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ProgressBar()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ProgressBarCheckBox.IsChecked.HasValue)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                isProgressBar \u003d ProgressBarCheckBox.IsChecked.Value;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return isProgressBar;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        private float TimerWidth()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            float width \u003d (float)WidthSlider.Value;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            return width;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        private float TimerHeight()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            float height \u003d (float)HeightSlider.Value;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            return height;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        private float DefaultTimerLeft(float slideWidth, float timerWidth)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            return (slideWidth - timerWidth) / 2;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        private float DefaultTimerTop(float slideHeight, float timerHeight)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            return (slideHeight - timerHeight) / 2;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        private int TimerBodyColor()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(68, 84, 106);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        private int ProgressBarTimerBodyColor()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(247, 150, 70);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        private int SliderColor()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(247, 150, 70);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        private int TimeMarkerColor()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(90, 90, 90);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        private int LineMarkerColor()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            return GraphicsUtil.PackRgbInt(68, 114, 196);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Timer Creation"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateBlocksTimer(int duration, float timerWidth, float timerHeight, float timerLeft,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            float timerTop, bool isCountdown, bool isProgressBar)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                AddTimerBody(timerWidth, timerHeight, timerLeft, timerTop, ProgressBarTimerBodyColor());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                AddProgressBar(duration, timerWidth, timerHeight, TimerBodyColor(), SlideWidth());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                AddTimerBody(timerWidth, timerHeight, timerLeft, timerTop, TimerBodyColor());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                AddSlider(duration, timerWidth, timerHeight, SliderColor(), SlideWidth());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            AddMarkers(duration, timerWidth, timerHeight, TimeMarkerColor(), LineMarkerColor(), isCountdown);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Body"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddTimerBody(float timerWidth, float timerHeight, float timerLeft, float timerTop, int timerBodyColor)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                timerLeft, timerTop, timerWidth, timerHeight);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Name \u003d TimerLabConstants.TimerBodyId;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerBodyId);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Fill.ForeColor.RGB \u003d timerBodyColor;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Line.ForeColor.RGB \u003d timerBodyColor;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Markers"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddMarkers(int duration, float timerWidth, float timerHeight, int timeMarkerColor, int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            if (duration \u003c\u003d TimerLabConstants.SecondsInMinute)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                AddSecondsMarker(duration, TimerLabConstants.DefaultDenomination, timerWidth, timerHeight, "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultMinutesLineMarkerWidth, "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultTimeMarkerWidth, TimerLabConstants.DefaultTimeMarkerHeight,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                                timeMarkerColor, lineMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "                AddMinutesMarker(duration, TimerLabConstants.DefaultDenomination, timerWidth, timerHeight,"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultMinutesLineMarkerWidth,"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "                                TimerLabConstants.DefaultTimeMarkerWidth, TimerLabConstants.DefaultTimeMarkerHeight,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "                                timeMarkerColor, lineMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPosition();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSecondsMarker(int duration, int denomination, float timerWidth, float timerHeight, "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                                    float lineMarkerWidth, float timeMarkerWidth, float timeMarkerHeight,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                                    int timeMarkerColor, int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e lineMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e timeMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            float widthPerSec \u003d timerWidth / duration;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            int currentMarker \u003d TimerLabConstants.StartTime;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            while (currentMarker \u003c\u003d duration) "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                // Get the marker text to be printed"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                String markerText \u003d isCountdown ? (duration - currentMarker).ToString() : currentMarker.ToString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add time marker"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape timeMarker \u003d AddTimeMarker(currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, markerText);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkers.Add(timeMarker);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add line marker if it is not the start or end"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker !\u003d TimerLabConstants.StartTime \u0026\u0026 currentMarker !\u003d duration)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape lineMarker \u003d AddLineMarker(currentMarker, widthPerSec, timerHeight, "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                                                    TimerLabConstants.DefaultSecondsLineMarkerWidth, lineMarkerColor);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkers.Add(lineMarker);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker \u003e\u003d duration)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                currentMarker \u003d GetNextMarkerPosition(currentMarker, duration, denomination, isCountdown);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup \u003d null;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkers.Count \u003d\u003d 1)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup \u003d lineMarkers[0];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (lineMarkers.Count \u003e 1)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerLineMarkerId, TimerLabConstants.TimerLineMarkerGroupId);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerTimeMarkerId, TimerLabConstants.TimerTimeMarkerGroupId);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddMinutesMarker(int duration, int denomination, float timerWidth, float timerHeight, "
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                                    float lineMarkerWidth, float timeMarkerWidth, float timeMarkerHeight, "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                                    int timeMarkerColor, int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e lineMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e timeMarkers \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            float widthPerSec \u003d timerWidth / duration;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            int currentMarker \u003d TimerLabConstants.StartTime;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            while (currentMarker \u003c\u003d duration)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isStart \u003d currentMarker \u003d\u003d 0;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isMinuteMark \u003d isCountdown ? (duration - currentMarker) % TimerLabConstants.SecondsInMinute \u003d\u003d 0 : currentMarker % TimerLabConstants.SecondsInMinute \u003d\u003d 0;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isEnd \u003d currentMarker \u003d\u003d duration;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add time markers for start, every minute, and end"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isStart || isMinuteMark || isEnd)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Add time marker"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape timeMarker \u003d AddMinuteTimeMarker(duration, currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                    timeMarkers.Add(timeMarker);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                // Add line marker if it is not the start or end"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker !\u003d TimerLabConstants.StartTime \u0026\u0026 currentMarker !\u003d duration)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                    // Thicken the line if it is a minute marker"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape lineMarker \u003d AddMinuteLineMarker(duration, currentMarker, widthPerSec, timerHeight, lineMarkerColor, isCountdown);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkers.Add(lineMarker);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker \u003e\u003d duration)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                currentMarker \u003d GetNextMarkerPosition(currentMarker, duration, denomination, isCountdown);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerLineMarkerId, TimerLabConstants.TimerLineMarkerGroupId);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup \u003d GroupShapes(TimerLabConstants.TimerTimeMarkerId, TimerLabConstants.TimerTimeMarkerGroupId);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        private int GetNextMarkerPosition(int currentMarker, int duration, int denomination, bool isCountdown)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            // If it\u0027s Countdown Timer and we are at the start, take into account specified durations that are not multiple of denomination"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isCountdown \u0026\u0026 currentMarker \u003d\u003d 0 \u0026\u0026 duration % denomination !\u003d 0)"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "                return duration % denomination;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                return Math.Min(currentMarker + denomination, duration);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape AddMinuteTimeMarker(int duration, int currentMarker, float widthPerSec, float timerHeight,"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                                    float timeMarkerWidth, float timeMarkerHeight, int timeMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "            // Get the marker text to be printed"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            int remainingDuration \u003d duration - currentMarker;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            String markerText \u003d isCountdown ? remainingDuration.ToString() : currentMarker.ToString();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape timeMarker \u003d AddTimeMarker(currentMarker, widthPerSec, timerHeight, timeMarkerWidth, timeMarkerHeight, timeMarkerColor, markerText);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!isCountdown)"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                int remainingSeconds \u003d currentMarker % TimerLabConstants.SecondsInMinute;"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker \u003d\u003d duration \u0026\u0026 remainingSeconds !\u003d 0)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (currentMarker / TimerLabConstants.SecondsInMinute).ToString() +"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \".\" + remainingSeconds.ToString(\"D2\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (currentMarker / TimerLabConstants.SecondsInMinute).ToString();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                int leftoverSeconds \u003d remainingDuration % TimerLabConstants.SecondsInMinute;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentMarker \u003d\u003d 0 \u0026\u0026 leftoverSeconds !\u003d 0)"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (remainingDuration / TimerLabConstants.SecondsInMinute).ToString() +"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                                                            \".\" + leftoverSeconds.ToString(\"D2\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "                    timeMarker.TextFrame.TextRange.Text \u003d (remainingDuration / TimerLabConstants.SecondsInMinute).ToString();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            return timeMarker;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape AddMinuteLineMarker(int duration, int currentMarker, float widthPerSec, float timerHeight, "
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                                          int lineMarkerColor, bool isCountdown)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isMinuteMarker \u003d isCountdown ? ((duration - currentMarker) % TimerLabConstants.SecondsInMinute \u003d\u003d 0) :"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "                                                         (currentMarker % TimerLabConstants.SecondsInMinute \u003d\u003d 0);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            float markerLineWeight \u003d isMinuteMarker ? TimerLabConstants.DefaultMinutesLineMarkerWidth :"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "                                                        TimerLabConstants.DefaultSecondsLineMarkerWidth;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape lineMarker \u003d AddLineMarker(currentMarker, widthPerSec, timerHeight, markerLineWeight, lineMarkerColor);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "            return lineMarker;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape AddTimeMarker(int currentMarker, float widthPerSec, float timerHeight, "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                                    float timeMarkerWidth, float timeMarkerHeight, int timeMarkerColor, string markerText)"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape timeMarker \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    currentMarker * widthPerSec, 0, "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                    timeMarkerWidth, timeMarkerHeight);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Name \u003d TimerLabConstants.TimerTimeMarkerId + markerText;"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerTimeMarkerId);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.TextFrame.WordWrap \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Fill.Transparency \u003d TimerLabConstants.TransparencyTransparent;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.TextFrame.TextRange.Font.Color.RGB \u003d timeMarkerColor;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarker.TextFrame.TextRange.Text \u003d markerText;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "            return timeMarker;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape AddLineMarker(int currentMarker, float widthPerSec, float timerHeight, float lineWeight, int lineMarkerColor)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "            string markerText \u003d currentMarker.ToString();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "            float beginX \u003d currentMarker * widthPerSec;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "            float beginY \u003d 0;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "            float endX \u003d currentMarker * widthPerSec;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "            float endY \u003d timerHeight;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape lineMarker \u003d this.GetCurrentSlide().Shapes.AddLine(beginX, beginY, endX, endY);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Name \u003d TimerLabConstants.TimerLineMarkerId + markerText;"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerLineMarkerId);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Line.Weight \u003d lineWeight;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarker.Line.ForeColor.RGB \u003d lineMarkerColor;"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "            return lineMarker;"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Progress Bar"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddProgressBar(int duration, float timerWidth, float timerHeight, int sliderColor, float slideWidth)"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateProgressBarShape(timerWidth, timerHeight, sliderColor);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "            // Positioning Progress Bar onto the timer"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateProgressBarPosition();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add effect"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "            AddProgressBarAnimation(duration);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddProgressBarAnimation(int duration)"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Effect progressBarMotionEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "                    progressBar,"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimEffect.msoAnimEffectGrowShrink,"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone,"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBarMotionEffect.Timing.Duration \u003d duration;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBarMotionEffect.Timing.SmoothStart \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBarMotionEffect.Timing.SmoothEnd \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.AnimationBehavior shrinkBehavior \u003d progressBarMotionEffect.Behaviors[1];"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            // Shrink width to 0"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            shrinkBehavior.ScaleEffect.ByX \u003d 0f;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "            shrinkBehavior.ScaleEffect.ByY \u003d 100f;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Slider"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSlider(int duration, float timerWidth, float timerHeight, int sliderColor, float slideWidth)"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateSliderHeadAndBodyShape(timerHeight, sliderColor);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderPosition();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add slider animations"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderAnimations(duration, timerWidth, slideWidth);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSliderAnimations(int duration, float timerWidth, float slideWidth)"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderMotionEffect(sliderHead, duration, timerWidth, slideWidth, PowerPoint.MsoAnimTriggerType.msoAnimTriggerOnPageClick);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderMotionEffect(sliderBody, duration, timerWidth, slideWidth, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderEndEffect(sliderHead, PowerPoint.MsoAnimTriggerType.msoAnimTriggerAfterPrevious);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSliderEndEffect(sliderBody, PowerPoint.MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSliderMotionEffect(Shape shape, int duration, float timerWidth, float slideWidth, PowerPoint.MsoAnimTriggerType trigger)"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Effect sliderMotionEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape,"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimEffect.msoAnimEffectPathRight, "
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone, "
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "                    trigger);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.AnimationBehavior motion \u003d sliderMotionEffect.Behaviors[1];"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            float end \u003d timerWidth / slideWidth;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "            motion.MotionEffect.Path \u003d \"M 0 0 L \" + end + \" 0 E\";"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderMotionEffect.Timing.Duration \u003d duration;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderMotionEffect.Timing.SmoothStart \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderMotionEffect.Timing.SmoothEnd \u003d Microsoft.Office.Core.MsoTriState.msoFalse;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddSliderEndEffect(Shape shape, PowerPoint.MsoAnimTriggerType trigger)"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Effect sliderEndEffect \u003d this.GetCurrentSlide().TimeLine.MainSequence.AddEffect("
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape,"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimEffect.msoAnimEffectDarken, "
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "                    PowerPoint.MsoAnimateByLevel.msoAnimateLevelNone,"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "                    trigger);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderEndEffect.Timing.Duration \u003d TimerLabConstants.ColorChangeDuration;"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Controls"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Create Button"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "            // check if timer is already created"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateMarkerPosition();"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isProgressBar)"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                    UpdateProgressBarPosition();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                    UpdateSliderPosition();"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                WidthTextBox.Text \u003d Math.Round(timerBody.Width).ToString();"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "                HeightTextBox.Text \u003d Math.Round(timerBody.Height).ToString();"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                ShowErrorMessageBox(TimerLabConstants.ErrorMessageOneTimerOnly);"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                // Properties"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                int duration \u003d Duration();"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isCountdown \u003d Countdown();"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                bool isProgressBar \u003d ProgressBar();"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerWidth \u003d TimerWidth();"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerHeight \u003d TimerHeight();"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                // Position"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerLeft \u003d DefaultTimerLeft(SlideWidth(), timerWidth);"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                float timerTop \u003d DefaultTimerTop(SlideHeight(), timerHeight);"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                CreateBlocksTimer(duration, timerWidth, timerHeight, timerLeft, timerTop, isCountdown, isProgressBar);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Duration Control"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DurationTextBox_ValueDecremented(object sender, "
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            MahApps.Metro.Controls.NumericUpDownChangedRoutedEventArgs args)"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value \u003d\u003d null)"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d TimerLabConstants.DefaultDisplayDuration;"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "            int integerPart \u003d (int)value;"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "            double fractionalPart \u003d value - integerPart;"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Math.Round(fractionalPart, 2) \u003d\u003d TimerLabConstants.FractionalDecrementLowerBound)"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d (integerPart - 1) + TimerLabConstants.FractionalDecrementOffset;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DurationTextBox_ValueIncremented(object sender, "
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "            MahApps.Metro.Controls.NumericUpDownChangedRoutedEventArgs args)"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value \u003d\u003d null)"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d TimerLabConstants.DefaultDisplayDuration;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "            int integerPart \u003d (int)value;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "            double fractionalPart \u003d value - integerPart;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Math.Round(fractionalPart, 2) \u003d\u003d TimerLabConstants.FractionalIncrementUpperBound)"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d integerPart + TimerLabConstants.FractionalIncrementOffset;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DurationTextBox_LostFocus(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "            if (DurationTextBox.Value \u003d\u003d null)"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            double value \u003d Math.Round(DurationTextBox.Value.Value, 2);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            int integerPart \u003d (int)value;"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "            double fractionalPart \u003d value - integerPart;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Math.Round(fractionalPart, 2) \u003e TimerLabConstants.FractionalIncrementUpperBound)"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "                DurationTextBox.Value \u003d integerPart + 1;"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FindTimer())"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "            ReformMissingComponents();"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "            RecreateMarkers();"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "            AdjustZOrder();"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateProgressBarPosition();"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateProgressBarAnimationDuration();"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPosition();"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderAnimationDuration();"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Countdown Control"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CountdownCheckBox_StateChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "            // CountdownCheckBox.isChecked can return null if checkbox is in indeterminate state in a 3-state checkbox (checked, unchecked, indeterminate)"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "            // In this application, the checkbox is only 2-state, but we guard against this because IsChecked returns a nullable boolean (bool?)"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CountdownCheckBox.IsChecked \u003d\u003d null)"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FindTimer())"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "            ReformMissingComponents();"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "            RecreateMarkers();"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "            AdjustZOrder();"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateProgressBarPosition();"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateProgressBarPosition();"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPosition();"
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderAnimationDuration();"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "            }  "
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ProgressBarCheckBox_StateChanged(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "            // ProgressBarCheckBox.isChecked can return null if checkbox is in indeterminate state in a 3-state checkbox (checked, unchecked, indeterminate)"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "            // In this application, the checkbox is only 2-state, but we guard against this because IsChecked returns a nullable boolean (bool?)"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ProgressBarCheckBox.IsChecked \u003d\u003d null)"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "            ProgressBar();"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FindTimer())"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "            ReformMissingComponents();"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "            RecreateMarkers();"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveSlider();"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "                ChangeTimerBodyColor(SliderColor());"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "                RemoveProgressBar();"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "                ChangeTimerBodyColor(TimerBodyColor());"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "                RecreateSlider();"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "            AdjustZOrder();"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Width Control"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthSlider_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Minimum \u003d TimerLabConstants.MinTimerWidth;"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Maximum \u003d SlideWidth();"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Value \u003d TimerLabConstants.DefaultTimerWidth;   "
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "            // update text box value"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "            float value \u003d (float)WidthSlider.Value;"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthTextBox.Text \u003d ((int)value).ToString();"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FindTimer()) "
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "            ReformMissingComponents();"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "            float increment \u003d value - timerBody.Width;"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Left \u003d NewPosition(timerBody.Left, increment);"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Width \u003d timerBody.Width + increment;"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "                progressBar.Left \u003d timerBody.Left;"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "                progressBar.Width \u003d timerBody.Width * 2;"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateProgressBarPositionX();"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "            } "
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "            {                    "
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPositionX();"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPositionX();"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthTextBox.Text \u003d TimerLabConstants.DefaultTimerWidth.ToString();"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d !IsNumbersOnly(e.Text);"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_TextBoxPasting(object sender, DataObjectPastingEventArgs e)"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.DataObject.GetDataPresent(typeof(String)))"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "                String text \u003d (String)e.DataObject.GetData(typeof(String));"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsNumbersOnly(text))"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.CancelCommand();"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "                e.CancelCommand();"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WidthTextBox_LostFocus(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(WidthTextBox.Text))"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "                WidthTextBox.Text \u003d ((int)WidthSlider.Value).ToString();"
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Convert.ToInt32(WidthTextBox.Text);"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Max(value, (int)TimerLabConstants.MinTimerWidth);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Min(value, (int)SlideWidth());"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthTextBox.Text \u003d value.ToString();"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": "            WidthSlider.Value \u003d value;"
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Height Control"
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightSlider_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Minimum \u003d TimerLabConstants.MinTimerHeight;"
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Maximum \u003d SlideHeight();"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Value \u003d TimerLabConstants.DefaultTimerHeight;"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightSlider_ValueChanged(object sender, RoutedPropertyChangedEventArgs\u003cdouble\u003e e)"
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "            // update text box value"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "            float value \u003d (float)HeightSlider.Value;"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightTextBox.Text \u003d ((int)value).ToString();"
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!FindTimer())"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "            ReformMissingComponents();"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "            float increment \u003d value - timerBody.Height;"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Top \u003d NewPosition(timerBody.Top, increment);"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Height \u003d timerBody.Height + increment;"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "                progressBar.Top \u003d timerBody.Top;"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": "                progressBar.Height \u003d timerBody.Height;"
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateProgressBarPositionX();"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "                UpdateSliderPositionY();"
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPositionY();"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_Loaded(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightTextBox.Text \u003d TimerLabConstants.DefaultTimerHeight.ToString();"
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_PreviewTextInput(object sender, TextCompositionEventArgs e)"
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "            e.Handled \u003d !IsNumbersOnly(e.Text);"
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_TextBoxPasting(object sender, DataObjectPastingEventArgs e)"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "            if (e.DataObject.GetDataPresent(typeof(String)))"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "                String text \u003d (String)e.DataObject.GetData(typeof(String));"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!IsNumbersOnly(text))"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "                    e.CancelCommand();"
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "                e.CancelCommand();"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "        private void HeightTextBox_LostFocus(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrEmpty(HeightTextBox.Text))"
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "                HeightTextBox.Text \u003d ((int)HeightSlider.Value).ToString();"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "            int value \u003d Convert.ToInt32(HeightTextBox.Text);"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Max(value, (int)TimerLabConstants.MinTimerHeight);"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": "            value \u003d Math.Min(value, (int)SlideHeight());"
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightTextBox.Text \u003d value.ToString();"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "            HeightSlider.Value \u003d value;"
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "            // update timer dimensions"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "            if (FindTimer())"
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "                ReformMissingComponents();"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Timer Helper"
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ChangeTimerBodyColor(int timerBodyColor)"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Fill.ForeColor.RGB \u003d timerBodyColor;"
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Line.ForeColor.RGB \u003d timerBodyColor;"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateProgressBarShape(float timerWidth, float timerHeight, int sliderColor)"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": "            // Creation of progress bar"
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape visibleProgressBar \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                       0, 0, timerWidth, timerHeight);"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "            visibleProgressBar.Fill.ForeColor.RGB \u003d sliderColor;"
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "            visibleProgressBar.Line.ForeColor.RGB \u003d sliderColor;"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "            float rightOfProgressBar \u003d visibleProgressBar.Left + visibleProgressBar.Width;"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "            float topOfProgressBar \u003d visibleProgressBar.Top;"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "            // Position invisible progress bar to the right of the visible one"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape invisibleProgressBar \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                       rightOfProgressBar, topOfProgressBar, timerWidth, timerHeight);"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "            invisibleProgressBar.Fill.Transparency \u003d TimerLabConstants.TransparencyTransparent;"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "            invisibleProgressBar.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "            // Grouping the shapes together"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] progressBarNames \u003d new string[] { visibleProgressBar.Name, invisibleProgressBar.Name };"
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar \u003d this.GetCurrentSlide().Shapes.Range(progressBarNames).Group();"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar.Name \u003d TimerLabConstants.ProgressBarId;"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.ProgressBarId);"
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateSliderHeadAndBodyShape(float timerHeight, int sliderColor)"
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeIsoscelesTriangle,"
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                0, 0,"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                TimerLabConstants.DefaultSliderHeadSize,"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                TimerLabConstants.DefaultSliderHeadSize);"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Name \u003d TimerLabConstants.TimerSliderHeadId;"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerSliderHeadId);"
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Rotation \u003d TimerLabConstants.Rotate180Degrees;"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Fill.ForeColor.RGB \u003d sliderColor;"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody \u003d this.GetCurrentSlide().Shapes.AddShape(Microsoft.Office.Core.MsoAutoShapeType.msoShapeRectangle,"
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                0, 0,"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                TimerLabConstants.DefaultSliderBodyWidth,"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                timerHeight);"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Name \u003d TimerLabConstants.TimerSliderBodyId;"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Tags.Add(TimerLabConstants.ShapeId, TimerLabConstants.TimerSliderBodyId);"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Fill.ForeColor.RGB \u003d sliderColor;"
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Line.Transparency \u003d TimerLabConstants.TransparencyTransparent;"
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ReformMissingComponents()"
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isTimerBodyRecreated \u003d ReformTimerBodyIfMissing();"
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isMarkersRecreated \u003d ReformMarkersIfMissing();"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isTimerComponentRecreated \u003d ReformTimerComponentIfMissing();"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isTimerBodyRecreated || isMarkersRecreated || isTimerComponentRecreated)"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "                AdjustZOrder();"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ReformTimerBodyIfMissing()"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timerBody \u003d\u003d null)"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "                int timerBodyColor;"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "                if (isProgressBar)"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "                    timerBodyColor \u003d SliderColor();"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": "                    timerBodyColor \u003d TimerBodyColor();"
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "                AddTimerBody(TimerWidth(), TimerHeight(), "
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "                            DefaultTimerLeft(SlideWidth(), TimerWidth()),"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "                            DefaultTimerTop(SlideHeight(), TimerHeight()), "
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "                            timerBodyColor);"
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody.Rotation \u003d 0;"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ReformMarkersIfMissing()"
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup \u003d\u003d null || timeMarkerGroup \u003d\u003d null)"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "                RecreateMarkers();"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool ReformTimerComponentIfMissing()"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "                if (progressBar \u003d\u003d null)"
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "                    RecreateProgressBar();"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "                if (sliderHead \u003d\u003d null || sliderBody \u003d\u003d null)"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "                    RecreateSlider();"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RecreateMarkers()"
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove current markers"
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "            int timeMarkerColor \u003d TimeMarkerColor();"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "            if (timeMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkerColor \u003d timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB;"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkerGroup.Delete();"
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": "            int lineMarkerColor \u003d LineMarkerColor();"
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerColor \u003d lineMarkerGroup.Line.ForeColor.RGB;"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Delete();"
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "            // add new markers"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "            AddMarkers(Duration(), timerBody.Width, timerBody.Height, timeMarkerColor, lineMarkerColor, Countdown());"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.TextFrame.TextRange.Font.Color.RGB \u003d timeMarkerColor;"
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveSlider()"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead \u003d GetShapeByName(TimerLabConstants.TimerSliderHeadId);"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody \u003d GetShapeByName(TimerLabConstants.TimerSliderBodyId);"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Delete();"
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Delete();"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RecreateSlider()"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": "            int sliderColor \u003d SliderColor();"
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "            // remove current Slider"
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sliderHead !\u003d null)"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderColor \u003d sliderHead.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderHead.Delete();"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sliderBody !\u003d null)"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderColor \u003d sliderBody.Fill.ForeColor.RGB;"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderBody.Delete();"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "            AddSlider(Duration(), timerBody.Width, timerBody.Height, sliderColor, SlideWidth());"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveProgressBar()"
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar \u003d GetShapeByName(TimerLabConstants.ProgressBarId);"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar.Delete();"
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RecreateProgressBar()"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "            int progressBarColor \u003d TimerBodyColor();"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "            AddProgressBar(Duration(), timerBody.Width, timerBody.Height, progressBarColor, SlideWidth());"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMarkerPosition()"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPositionX();"
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateMarkerPositionY();"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMarkerPositionX()"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "                float widthPerSec \u003d timerBody.Width / Duration();"
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "                float lineSpacing \u003d TimerLabConstants.DefaultDenomination * widthPerSec;"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "                int numOfLineMarkers \u003d (int)(Math.Ceiling((double)Duration() / TimerLabConstants.DefaultDenomination)) - 2;"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Left \u003d timerBody.Left + lineSpacing;"
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Width \u003d numOfLineMarkers * lineSpacing;"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "                // Countdown timers have inconsistent starting points, espeically when duration of the timer is not a multiple of the denomination (10 sec)"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "                // So we need to take this into account by calculating the required space and resetting the lineMarkerGroup"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": "                // This is unlike the default timer where the starting offset is always the same (1 lineSpacing from left)"
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "                if (Countdown())"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": "                    float requiredSpaceFromLeft \u003d timerBody.Width - lineSpacing - lineMarkerGroup.Width;"
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkerGroup.Left \u003d timerBody.Left + requiredSpaceFromLeft;"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Left \u003d timerBody.Left;"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Width \u003d timerBody.Width;"
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateMarkerPositionY()"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Top \u003d timerBody.Top;"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": "                lineMarkerGroup.Height \u003d timerBody.Height;"
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup.Top \u003d timerBody.Top + timerBody.Height;"
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderPosition()"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderPositionX();"
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderPositionY();"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderPositionX()"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Left \u003d timerBody.Left - (TimerLabConstants.DefaultSliderHeadSize / 2);"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Left \u003d timerBody.Left - (TimerLabConstants.DefaultSliderBodyWidth / 2);"
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateSliderAnimationPath();"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderPositionY()"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead.Top \u003d timerBody.Top - (TimerLabConstants.DefaultSliderHeadSize / 2);"
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Top \u003d timerBody.Top;"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody.Height \u003d timerBody.Height;"
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateProgressBarPosition()"
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateProgressBarPositionX();"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateProgressBarPositionY();"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateProgressBarPositionX()"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar.Left \u003d timerBody.Left;"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateProgressBarPositionY()"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar.Top \u003d timerBody.Top;"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderAnimationDuration()"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectPathRight)"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderBodyId) ||"
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderHeadId))"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Timing.Duration \u003d Duration();"
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateProgressBarAnimationDuration()"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectGrowShrink)"
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.ProgressBarId))"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Timing.Duration \u003d Duration();"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "        private void UpdateSliderAnimationPath()"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (PowerPoint.Effect effect in this.GetCurrentSlide().TimeLine.MainSequence)"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "                if (effect.EffectType \u003d\u003d PowerPoint.MsoAnimEffect.msoAnimEffectPathRight)"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderBodyId) ||"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Shape.Tags[TimerLabConstants.ShapeId].Equals(TimerLabConstants.TimerSliderHeadId))"
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "                        float end \u003d timerBody.Width / SlideWidth();"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Behaviors[1].MotionEffect.Path \u003d \"M 0 0 L \" + end + \" 0 E\";"
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AdjustZOrder()"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "            //Adjust z-order"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isProgressBar)"
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "                progressBar.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "                if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "                if (lineMarkerGroup !\u003d null)"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "                    lineMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "                timeMarkerGroup.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderHead.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "                sliderBody.ZOrder(Microsoft.Office.Core.MsoZOrderCmd.msoBringToFront);"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Shape Helper"
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "        private float NewPosition(float originalPosition, float objectSize)"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "            return originalPosition - objectSize / 2;"
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GetLineMarkerGroup()"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape result \u003d GetShapeByName(TimerLabConstants.TimerLineMarkerGroupId);"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": "            if (result \u003d\u003d null)"
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "                result \u003d GetShapeByName(TimerLabConstants.TimerLineMarkerId);"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GetShapeByName(string name)"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "            return GetShapeByName(name, this.GetCurrentSlide().Shapes);"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GetShapeByName(string name, dynamic shapes)"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in shapes)"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Tags[TimerLabConstants.ShapeId].Equals(name))"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                    return shape;"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        private Shape GroupShapes(string shapeName, string groupName)"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "            bool firstInGroup \u003d true;"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in this.GetCurrentSlide().Shapes)"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Tags[TimerLabConstants.ShapeId].Equals(shapeName))"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (firstInGroup)"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Select();"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "                        firstInGroup \u003d false;"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "                        shape.Select(Microsoft.Office.Core.MsoTriState.msoFalse);"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape group \u003d this.GetCurrentSelection().ShapeRange.Group();"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": "            group.Name \u003d groupName;"
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "            group.Tags.Add(TimerLabConstants.ShapeId, groupName);"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "            return group;"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Validation Helper"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool FindTimer()"
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "            timerBody \u003d GetShapeByName(TimerLabConstants.TimerBodyId);"
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "            lineMarkerGroup \u003d GetLineMarkerGroup();"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "            timeMarkerGroup \u003d GetShapeByName(TimerLabConstants.TimerTimeMarkerGroupId);"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderHead \u003d GetShapeByName(TimerLabConstants.TimerSliderHeadId);"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "            sliderBody \u003d GetShapeByName(TimerLabConstants.TimerSliderBodyId);"
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            progressBar \u003d GetShapeByName(TimerLabConstants.ProgressBarId);"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "            if ((timerBody \u003d\u003d null) \u0026\u0026 (progressBar \u003d\u003d null) \u0026\u0026 (lineMarkerGroup \u003d\u003d null) \u0026\u0026 "
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "                (timeMarkerGroup \u003d\u003d null) \u0026\u0026 (sliderHead \u003d\u003d null) \u0026\u0026 (sliderBody \u003d\u003d null))"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "        private bool IsNumbersOnly(string text)"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex regex \u003d new Regex(\"[0-9]+\");"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "            return regex.IsMatch(text);"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Slide Dimensions"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "        private float SlideWidth()"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.GetCurrentPresentation().SlideWidth;"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        private float SlideHeight()"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": "            return this.GetCurrentPresentation().SlideHeight;"
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Error Handling"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ShowErrorMessageBox(string content)"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBox.Show(content, TextCollection.CommonText.ErrorTitle);"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1216,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/ConvertToTooltip.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Assigns tooltip to shapes, follows the convention that the first shape is the trigger shape, the rest"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// of the shapes will be the callouts. All callout shapes will appear on first click of the trigger shape,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// and all will disappear on second click of the trigger shape."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class ConvertToTooltip"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static bool AddTriggerAnimation(PowerPointSlide currentSlide, ShapeRange selectedShapes)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            if (selectedShapes.Count \u003c 2)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(TooltipsLabText.ErrorLessThanTwoShapesSelected,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                    TooltipsLabText.ErrorTooltipsDialogTitle);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape triggerShape \u003d selectedShapes[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapesToAnimate \u003d GetShapesToAnimate(selectedShapes);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            AddTriggerAnimation(currentSlide, triggerShape, shapesToAnimate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void AddTriggerAnimation(PowerPointSlide currentSlide, Shape triggerShape, Shape calloutShape)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e calloutShapeList \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            calloutShapeList.Add(calloutShape);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            AddTriggerAnimation(currentSlide, triggerShape, calloutShapeList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void AddTriggerAnimation(PowerPointSlide currentSlide, Shape triggerShape, List\u003cShape\u003e newShapesToAnimate)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            TimeLine timeline \u003d currentSlide.TimeLine;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            // Get the shapes that are already associated with trigger shape"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e shapesToAnimate \u003d GetShapesInInteractiveSequenceWithAnimationsRemoved(currentSlide, triggerShape, newShapesToAnimate);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequence sequence \u003d timeline.InteractiveSequences.Add();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            AddTriggerEffect(triggerShape, shapesToAnimate, TooltipsLabSettings.AnimationType, sequence);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void AddTriggerEffect(Shape triggerShape, List\u003cShape\u003e shapesToAnimate, MsoAnimEffect effect, Sequence sequence)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add Entrance Effect"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c shapesToAnimate.Count; i++)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape animationShape \u003d shapesToAnimate[i];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                MsoAnimTriggerType triggerType;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                // The first shape will be triggered by the click to appear"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                if (i \u003d\u003d 0)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnShapeClick;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    sequence.AddTriggerEffect(animationShape, effect, triggerType, triggerShape);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                // Rest of the shapes will appear with the first shape"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    sequence.AddEffect(shapesToAnimate[i], effect,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add Exit Effect to Shapes"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c shapesToAnimate.Count; i++)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape animationShape \u003d shapesToAnimate[i];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                MsoAnimTriggerType triggerType;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                Effect effectInSequence;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                // The first shape will be triggered by the click to disappear"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                if (i \u003d\u003d 0)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerOnShapeClick;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    effectInSequence \u003d sequence.AddTriggerEffect(animationShape, effect, triggerType, triggerShape);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                // Rest of the shapes will disappear with the first shape"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                else"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    triggerType \u003d MsoAnimTriggerType.msoAnimTriggerWithPrevious;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    effectInSequence \u003d sequence.AddEffect(shapesToAnimate[i], effect, "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                        MsoAnimateByLevel.msoAnimateLevelNone, MsoAnimTriggerType.msoAnimTriggerWithPrevious);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                effectInSequence.Exit \u003d Microsoft.Office.Core.MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        private static List\u003cShape\u003e GetShapesInInteractiveSequenceWithAnimationsRemoved(PowerPointSlide currentSlide, Shape triggerShape, List\u003cShape\u003e shapesToAnimate)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            Sequences sequences \u003d currentSlide.TimeLine.InteractiveSequences;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            // A set is used here so no duplicate shapes will be added"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            ISet\u003cShape\u003e shapesToAnimateSet \u003d new HashSet\u003cShape\u003e(shapesToAnimate);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            // Find the existing sequence that has the triggerShape"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d sequences.Count; i++)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                Sequence sequence \u003d sequences[i];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                // Iterate from the back because of deletion"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                for (int j \u003d sequence.Count; j \u003e\u003d 1; j--)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                    Effect effect \u003d sequence[j];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    // A sequence is attached to a trigger shape. However we can only use the effect to find out"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    // what is the trigger shape, thus we break when the first effect\u0027s trigger shape is not "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    // what we are looking for and delete all effects from the sequence otherwise."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (effect.Timing.TriggerShape \u003d\u003d triggerShape)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                        shapesToAnimateSet.Add(effect.Shape);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                        effect.Delete();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            return new List\u003cShape\u003e(shapesToAnimateSet);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        private static List\u003cShape\u003e GetShapesToAnimate(ShapeRange selectedShapes)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cShape\u003e animatedShapes \u003d new List\u003cShape\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 2; i \u003c\u003d selectedShapes.Count; i++)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                animatedShapes.Add(selectedShapes[i]);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            return animatedShapes;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 141,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/CreateTooltip.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPoint \u003d Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class CreateTooltip"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        // Generate a trigger shape directly in the center bottom position of the specified callout shape."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public static PowerPoint.Shape GenerateTriggerShapeWithReferenceCallout(PowerPointSlide currentSlide, PowerPoint.Shape callout)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            float left \u003d ShapeUtil.GetCenterPoint(callout).X - TooltipsLabConstants.TriggerShapeDefaultWidth / 2;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            float top \u003d ShapeUtil.GetBottom(callout) + TooltipsLabConstants.TriggerShapeAndCalloutSpacing;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape triggerShape \u003d currentSlide.Shapes.AddShape("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShape, "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                left, "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                top, "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultWidth, "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultHeight);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.FormatTriggerShapeToDefaultStyle(triggerShape);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            return triggerShape;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public static PowerPoint.Shape GenerateCalloutWithReferenceTriggerShape(PowerPointSlide currentSlide, PowerPoint.Shape triggerShape)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            float midpointX \u003d ShapeUtil.GetMidpointX(triggerShape);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape callout \u003d currentSlide.Shapes.AddShape("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabSettings.ShapeType,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                midpointX - TooltipsLabConstants.CalloutShapeDefaultWidth/2 + (float)(TooltipsLabConstants.CalloutArrowheadHorizontalAdjustment * TooltipsLabConstants.CalloutShapeDefaultWidth),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                triggerShape.Top - (float)(TooltipsLabConstants.CalloutArrowheadVerticalAdjustment * TooltipsLabConstants.CalloutShapeDefaultHeight) - TooltipsLabConstants.TriggerShapeAndCalloutSpacing,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.CalloutShapeDefaultWidth,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.CalloutShapeDefaultHeight);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.FormatCalloutToDefaultStyle(callout);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            callout.TextFrame2.AutoSize \u003d MsoAutoSize.msoAutoSizeTextToFitShape;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            callout.TextEffect.Alignment \u003d MsoTextEffectAlignment.msoTextEffectAlignmentCentered;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            return callout;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public static PowerPoint.Shape GenerateTriggerShape(PowerPointSlide currentSlide)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPoint.Shape triggerShape \u003d currentSlide.Shapes.AddShape("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                Microsoft.Office.Core.MsoAutoShapeType.msoShapeOval, "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultLeft, "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultTop, "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultWidth, "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabConstants.TriggerShapeDefaultHeight);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeUtil.FormatTriggerShapeToDefaultStyle(triggerShape);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            return triggerShape;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 60,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/TooltipsLabSettings.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TooltipsLab.Views;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using MsoAutoShapeType \u003d Microsoft.Office.Core.MsoAutoShapeType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TooltipsLab"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class TooltipsLabSettings"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        public static MsoAutoShapeType ShapeType \u003d MsoAutoShapeType.msoShapeRoundedRectangularCallout;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        public static MsoAnimEffect AnimationType \u003d MsoAnimEffect.msoAnimEffectFade;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ShowSettingsDialog()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            TooltipsLabSettingsDialogBox dialog \u003d new TooltipsLabSettingsDialogBox(ShapeType, AnimationType);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.DialogConfirmedHandler +\u003d OnSettingsDialogConfirmed;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            dialog.ShowDialog();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void OnSettingsDialogConfirmed(MsoAutoShapeType newShapeType, MsoAnimEffect newAnimationType)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeType \u003d newShapeType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            AnimationType \u003d newAnimationType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 26,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/Views/TooltipsLabSettingsAnimationEntry.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TooltipsLab.Views"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for TooltipsLabSettingsAnimationEntry.xaml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class TooltipsLabSettingsAnimationEntry : UserControl"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private MsoAnimEffect selectedEffectType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public TooltipsLabSettingsAnimationEntry(MsoAnimEffect defaultEffectType, Bitmap image)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            Type \u003d defaultEffectType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            imageBox.Source \u003d GraphicsUtil.BitmapToImageSource(image);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Properties"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        public MsoAnimEffect Type"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                return selectedEffectType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                selectedEffectType \u003d value;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                string nameForDisplay \u003d RawNameToDisplayName(value.ToString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                textBlock.Text \u003d nameForDisplay;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                ToolTip \u003d nameForDisplay;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper functions"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        private void RemoveImage()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            imageBox.IsEnabled \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            imageBox.Height \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            Height \u003d 20;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            textBlock.Margin \u003d new Thickness(0, 5, 0, 5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        private string RawNameToDisplayName(string name)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            string trimmed \u003d name.Replace(TooltipsLabConstants.AnimationNameHeader, \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            if (string.IsNullOrWhiteSpace(trimmed))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                return string.Empty;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            StringBuilder newText \u003d new StringBuilder(trimmed.Length * 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            newText.Append(trimmed[0]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c trimmed.Length; i++)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                if (char.IsUpper(trimmed[i]))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                    newText.Append(\u0027 \u0027);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                newText.Append(trimmed[i]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            return newText.ToString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 80,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/Views/TooltipsLabSettingsDialogBox.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using Shapes \u003d Microsoft.Office.Interop.PowerPoint.Shapes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TooltipsLab.Views"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for TooltipsLabSettingsDialogBox.xaml"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class TooltipsLabSettingsDialogBox"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public delegate void DialogConfirmedDelegate(MsoAutoShapeType newShapeType, MsoAnimEffect newAnimationType);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        public DialogConfirmedDelegate DialogConfirmedHandler { get; set; }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private MsoAutoShapeType lastSelectedShapeType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private MsoAnimEffect lastSelectedAnimType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public TooltipsLabSettingsDialogBox(MsoAutoShapeType selectedShapeType, MsoAnimEffect selectedAnimType)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            lastSelectedShapeType \u003d selectedShapeType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            lastSelectedAnimType \u003d selectedAnimType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Initialize();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private void Initialize()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Array shapeTypes \u003d Enum.GetValues(typeof(MsoAutoShapeType));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap[] shapeBitmaps \u003d ShapeTypesToBitmaps(shapeTypes, TooltipsLabConstants.CalloutNameSubstring);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c shapeTypes.Length; i++)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shapeBitmaps[i] \u003d\u003d null)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabSettingsShapeEntry newEntry \u003d new TooltipsLabSettingsShapeEntry("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    (MsoAutoShapeType)shapeTypes.GetValue(i), shapeBitmaps[i]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                shapeList.Items.Add(newEntry);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                if (newEntry.Type \u003d\u003d lastSelectedShapeType)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeList.SelectedItem \u003d newEntry;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    shapeList.ScrollIntoView(newEntry);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c TooltipsLabConstants.AnimationEffects.Length; i++)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                TooltipsLabSettingsAnimationEntry newEntry \u003d new TooltipsLabSettingsAnimationEntry("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    TooltipsLabConstants.AnimationEffects[i],"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    TooltipsLabConstants.AnimationImages[i]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                animationList.Items.Add(newEntry);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                if (newEntry.Type \u003d\u003d lastSelectedAnimType)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    animationList.SelectedItem \u003d newEntry;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    animationList.ScrollIntoView(newEntry);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        private Bitmap[] ShapeTypesToBitmaps(Array types, string shapeType)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            Shapes shapes \u003d SyncFormatUtil.GetTemplateShapes();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap[] bitmaps \u003d new Bitmap[types.Length];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c types.Length; i++)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!((MsoAutoShapeType)types.GetValue(i)).ToString().Contains(shapeType))"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    Shape shape \u003d shapes.AddShape("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                        (MsoAutoShapeType)types.GetValue(i), 0, 0,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                        TooltipsLabConstants.DisplayImageSize.Width,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                        TooltipsLabConstants.DisplayImageSize.Height);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    ShapeUtil.FormatCalloutToDefaultStyle(shape);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmaps[i] \u003d new Bitmap(GraphicsUtil.ShapeToBitmap(shape));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    shape.Delete();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                catch"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            return bitmaps;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        #region EventHandlers"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OkButton_Click(object sender, RoutedEventArgs e)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            TooltipsLabSettingsShapeEntry shapeItem \u003d shapeList.SelectedItem as TooltipsLabSettingsShapeEntry;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            TooltipsLabSettingsAnimationEntry animationItem \u003d"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                animationList.SelectedItem as TooltipsLabSettingsAnimationEntry;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            if (shapeItem !\u003d null \u0026\u0026 animationItem !\u003d null)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogConfirmedHandler(shapeItem.Type, animationItem.Type);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            Close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 112,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/TooltipsLab/Views/TooltipsLabSettingsShapeEntry.xaml.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Drawing;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Controls;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.TooltipsLab.Views"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003csummary\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /// Interaction logic for TooltipsLabSettingsShapeEntry.xaml"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public partial class TooltipsLabSettingsShapeEntry : UserControl"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private MsoAutoShapeType type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constructors"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public TooltipsLabSettingsShapeEntry(MsoAutoShapeType type, Bitmap image)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            InitializeComponent();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            Type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            imageBox.Source \u003d GraphicsUtil.BitmapToImageSource(image);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Properties"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public MsoAutoShapeType Type"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            get"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                return type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            set"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                type \u003d value;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                string nameForDisplay \u003d value.ToString().Replace("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                    TooltipsLabConstants.ShapeNameHeader, \"\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                textBlock.Text \u003d nameForDisplay;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                ToolTip \u003d nameForDisplay;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "yuhongherald": 5
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Utils/CommonUtil.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Text.RegularExpressions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Utils"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static class CommonUtil"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        #region text"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Used for the method UniqueDigitString()."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        /// _sessionGlobalUniqueIndex is guaranteed to be unique within the same powerpoint session."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private static int _sessionGlobalUniqueIndex \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string NextAvailableName(List\u003cstring\u003e nameList, string name)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e orderedNameList \u003d nameList.OrderBy(item \u003d\u003e item, new Comparers.AtomicNumberStringCompare()).ToList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            int nextDefaultNumber \u003d NextDefaultNumber(orderedNameList, name);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            return nextDefaultNumber \u003d\u003d 0 ? name : string.Format(\"{0} {1}\", name, nextDefaultNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string SkipRegexCharacter(string str)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex replacePattern \u003d new Regex(@\"([^\\d\\s\\w])\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            return replacePattern.Replace(str, \"\\\\$1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Used to encode a string to make it a safe file name."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Base64 usually uses a / and a + character. This uses a _ and a - instead. (safe for file names)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string FilenameBase64(string str)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] plainTextBytes \u003d System.Text.Encoding.UTF8.GetBytes(str);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            str \u003d Convert.ToBase64String(plainTextBytes);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            str \u003d str.Replace(\"+\", \"-\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            str \u003d str.Replace(\"/\", \"_\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Used to encode a string into base64. Uses only alphanumeric chars and + and / characters."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string Base64Encode(string str)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] plainTextBytes \u003d System.Text.Encoding.UTF8.GetBytes(str);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            str \u003d Convert.ToBase64String(plainTextBytes);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Used to decode a string from base64. Uses only alphanumeric chars and + and / characters."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string Base64Decode(string base64EncodedData)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            byte[] base64EncodedBytes \u003d Convert.FromBase64String(base64EncodedData);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            return System.Text.Encoding.UTF8.GetString(base64EncodedBytes);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Converts a list of strings into a single string for storage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Adds a checksum at the end as well"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string SerializeCollection(List\u003cstring\u003e collection)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            string serialized \u003d string.Join(\"@\", collection.Select(Base64Encode));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            return serialized + \"@\" + ComputeCheckSum(serialized);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Converts a single serialised string back into a list of strings. (strings serialized by SerializeCollection)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Verifies the checksum as well. If checksum does not match, returns null."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        public static List\u003cstring\u003e UnserializeCollection(string dataString)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            int lastDelim \u003d dataString.LastIndexOf(\u0027@\u0027);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            if (lastDelim \u003d\u003d -1)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            // Verify checksum"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            string hashCode \u003d dataString.Substring(lastDelim + 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            string serialized \u003d dataString.Substring(0, lastDelim);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            if (ComputeCheckSum(serialized).ToString() !\u003d hashCode)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            return serialized.Split(new[] {\u0027@\u0027}, StringSplitOptions.None)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                             .Select(Base64Decode)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                             .ToList();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Generates a unique string of digits to be used in slide names."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        /// _sessionGlobalUniqueIndex is guaranteed to be unique within the same powerpoint session."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        /// DateTimeNow.ToString guaranteed to be unique across different powerpoint sessions."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string UniqueDigitString()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            string digitString \u003d DateTime.Now.ToString(\"yyyyMMddHHmmssffff\") + _sessionGlobalUniqueIndex;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            _sessionGlobalUniqueIndex++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            return digitString;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns a list of (nStrings) strings that differ from all strings in presentStrings"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string[] GetUnusedStrings(IEnumerable\u003cstring\u003e presentStrings, int nStrings)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e unusedStrings \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            int longestString \u003d presentStrings.Select(str \u003d\u003e str.Length).Max();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            string baseString \u003d new string(\u0027a\u0027, longestString);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c nStrings; ++i)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                unusedStrings.Add(baseString + i);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            return unusedStrings.ToArray();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        public static string SplitCamelCase(string input)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            return Regex.Replace(input, \"([A-Z])\", \" $1\", RegexOptions.Compiled).Trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        #endregion // text"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Math"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Computes ceil(dividend / divisor)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        public static int CeilingDivide(int dividend, int divisor)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            return (dividend + divisor - 1) / divisor;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        public static PointF RotatePoint(PointF p, PointF origin, float rotation)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            double rotationInRadian \u003d DegreeToRadian(rotation);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            double rotatedX \u003d Math.Cos(rotationInRadian) * (p.X - origin.X) - Math.Sin(rotationInRadian) * (p.Y - origin.Y) + origin.X;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            double rotatedY \u003d Math.Sin(rotationInRadian) * (p.X - origin.X) + Math.Cos(rotationInRadian) * (p.Y - origin.Y) + origin.Y;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            return new PointF((float)rotatedX, (float)rotatedY);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        public static double DegreeToRadian(float angle)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            return angle / 180.0 * Math.PI;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Function"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        private static int NextDefaultNumber(List\u003cstring\u003e nameList, string name)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            Regex namePattern \u003d new Regex(string.Format(\"{0}(?: (\\\\d+))*\", name));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            int min \u003d 0;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!string.IsNullOrEmpty(namePattern.Match(nameList[0]).Groups[1].Value))"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                return min;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c nameList.Count; i++)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                int currentCnt \u003d int.Parse(namePattern.Match(nameList[i]).Groups[1].Value);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                if (currentCnt !\u003d min + 1)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                    return min + 1;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                min++;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            return min + 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Works like a hashcode function, but returns a digit string."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Except that hashcode isn\u0027t consistent across all platforms / implementations. This is."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        private static string ComputeCheckSum(string s)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            uint x \u003d 0;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (char c in s)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                x +\u003d c;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                x *\u003d 565325351;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            return x.ToString();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 201,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/PowerPointLabs/Utils/GraphicsUtil.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics.CodeAnalysis;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing.Drawing2D;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Drawing.Imaging;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using System.Windows.Interop;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Windows.Media.Imaging;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "using PPExtraEventHelper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "using Drawing \u003d System.Drawing;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "namespace PowerPointLabs.Utils"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    [SuppressMessage(\"Microsoft.StyleCop.CSharp.OrderingRules\", \"SA1202:ElementsMustBeOrderedByAccess\", Justification \u003d \"To refactor to partials\")]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    internal static class GraphicsUtil"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "#pragma warning disable 0618"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Constants"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private static readonly Object FileLock \u003d new object();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public static float PictureExportingRatio \u003d 330.0f / 72.0f;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        private const float targetDpi \u003d 96.0f;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        private static float dpiScale \u003d 1.0f;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        // Picture exporting ratios"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        private const float pictureExportingRatioHigh \u003d 330.0f / 72.0f;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        private const float pictureExportingRatioCompressed \u003d 96.0f / 72.0f;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        // Heuristics for image compression obtained through testing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        private const long targetCompression \u003d 75L;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        private const long fileSizeLimit \u003d 40000L;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        // Static initializer to retrieve dpi scale once"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        static GraphicsUtil()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            using (Graphics g \u003d Graphics.FromHwnd(IntPtr.Zero))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                dpiScale \u003d g.DpiX / targetDpi;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        #region API"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Shape"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ExportShape(Shape shape, string exportPath)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            int slideWidth \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            int slideHeight \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                slideWidth \u003d (int)PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                slideHeight \u003d (int)PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (NullReferenceException)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                // Getting Presentation.Current may throw NullReferenceException during unit testing"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                shape.Export(exportPath, PpShapeFormat.ppShapeFormatPNG, ExportMode: PpExportMode.ppScaleToFit);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            shape.Export(exportPath, PpShapeFormat.ppShapeFormatPNG, slideWidth,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                         slideHeight, PpExportMode.ppScaleToFit);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ExportShape(ShapeRange shapeRange, string exportPath)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            int slideWidth \u003d (int)PowerPointPresentation.Current.SlideWidth;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            int slideHeight \u003d (int)PowerPointPresentation.Current.SlideHeight;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeRange.Export(exportPath, PpShapeFormat.ppShapeFormatPNG, slideWidth,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                              slideHeight, PpExportMode.ppScaleToFit);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Bitmap ShapeToBitmap(Shape shape)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            // we need a lock here to prevent race conditions on the temporary file"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            lock (FileLock)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                string fileName \u003d CommonText.TemporaryImageStorageFileName;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                string tempPicPath \u003d Path.Combine(Path.GetTempPath(), fileName);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                ExportShape(shape, tempPicPath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                Image image \u003d Image.FromFile(tempPicPath);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                Bitmap bitmap \u003d new Bitmap(image);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                // free up the original file to be deleted"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                image.Dispose();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                FileInfo file \u003d new FileInfo(Path.GetTempPath() + fileName);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                if (file.Exists)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                    file.Delete();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                return bitmap;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Shape CompressImageInShape(Shape targetShape, PowerPointSlide currentSlide)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            // Specify the temp location to be saved. Must be cleared before each new access to that location"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            string fileName \u003d CommonText.TemporaryCompressedImageStorageFileName;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            string tempFileStoragePath \u003d Path.Combine(Path.GetTempPath(), fileName);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            // Export the shape to extract the image within it"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            targetShape.Export(tempFileStoragePath, PpShapeFormat.ppShapeFormatJPG);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check if the image is acceptable in terms of size"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            FileInfo tempFile \u003d new FileInfo(tempFileStoragePath);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            tempFile.Refresh();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            long fileLength \u003d tempFile.Length;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            if (fileLength \u003c fileSizeLimit)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                // Delete the file as it is not needed anymore"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                DeleteSpecificFilePath(tempFileStoragePath);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                // Return the original shape"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                return targetShape;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            // Create a new bitmap from the image representing the exported shape"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            Image img \u003d Image.FromFile(tempFileStoragePath);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap imgBitMap \u003d new Bitmap(img);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            // Releases resources held by image object and delete temp file"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            img.Dispose();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteSpecificFilePath(tempFileStoragePath);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            // Compresses and save the bitmap based on the specified level of compression (0 -\u003e lowest quality, 100 -\u003e highest quality)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveJpg(imgBitMap, tempFileStoragePath, targetCompression);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            // Retrieve the compressed image and return a shape representing the image"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape compressedImgShape \u003d currentSlide.Shapes.AddPicture(tempFileStoragePath,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                    Microsoft.Office.Core.MsoTriState.msoFalse,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                    Microsoft.Office.Core.MsoTriState.msoTrue,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    targetShape.Left,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    targetShape.Top);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            // Delete temp file again to return to original empty state"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            DeleteSpecificFilePath(tempFileStoragePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            // Delete targetShape to prevent duplication"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            targetShape.Delete();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            return compressedImgShape;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        // Save the file with a specific compression level."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void SaveJpg(Bitmap bm, string fileName, long compression)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Imaging.EncoderParameters encoderParams \u003d new System.Drawing.Imaging.EncoderParameters(1);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            encoderParams.Param[0] \u003d new System.Drawing.Imaging.EncoderParameter("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                System.Drawing.Imaging.Encoder.Quality, compression);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Imaging.ImageCodecInfo imageCodecInfo \u003d GetEncoderInfo(\"image/jpeg\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            File.Delete(fileName);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            bm.Save(fileName, imageCodecInfo, encoderParams);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        private static System.Drawing.Imaging.ImageCodecInfo GetEncoderInfo(string mimeType)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Drawing.Imaging.ImageCodecInfo[] encoders \u003d System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c\u003d encoders.Length; i++)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                if (encoders[i].MimeType \u003d\u003d mimeType)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                    return encoders[i];"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        private static void DeleteSpecificFilePath(string filePath)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            FileInfo file \u003d new FileInfo(filePath);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            if (file.Exists)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                file.Delete();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Slide"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ExportSlides(List\u003cSlide\u003e slides, string exportPath, float magnifyRatio \u003d 1.0f)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slides.Count \u003c\u003d 0)"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            } "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            else if (slides.Count \u003d\u003d 1)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                ExportSlide(slides[0], exportPath, magnifyRatio);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            // Get folder name from exportPath"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            string folderName \u003d GetDefaultFolderNameForExport(exportPath);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                Directory.CreateDirectory(folderName);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Slide slide in slides)"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                    string fileName \u003d folderName + \"\\\\\" + slide.Name + \".png\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                    ExportSlide(slide, fileName, magnifyRatio);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                // Alert the user that the slides have been saved in a folder"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                string messageBoxText \u003d \"The selected slides have been saved as a separate file in the folder \" + folderName + \".\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(messageBoxText);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            catch (Exception)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                // Failed to create directory, we save the images all to the specified path"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Slide slide in slides)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                    string fileName \u003d folderName + \"_\" + slide.Name + \".png\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                    ExportSlide(slide, fileName, magnifyRatio);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                // Alert the user that the slides have been saved as a separate file in the specified folder."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                string messageBoxText \u003d \"The selected slides have been saved as a separate file in the specified folder.\";"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBox.Show(messageBoxText);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ExportSlide(Slide slide, string exportPath, float magnifyRatio \u003d 1.0f)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            slide.Export(exportPath,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                         \"PNG\","
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                         (int)(GetDesiredExportWidth() * magnifyRatio),"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                         (int)(GetDesiredExportHeight() * magnifyRatio));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ExportSlide(PowerPointSlide slide, string exportPath, float magnifyRatio \u003d 1.0f)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            ExportSlide(slide.GetNativeSlide(), exportPath, magnifyRatio);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Bitmap"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Bitmap CreateThumbnailImage(Image oriImage, int width, int height)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            double scalingRatio \u003d CalculateScalingRatio(oriImage.Size, new Size(width, height));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            // calculate width and height after scaling"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "            int scaledWidth \u003d (int)Math.Round(oriImage.Size.Width * scalingRatio);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "            int scaledHeight \u003d (int)Math.Round(oriImage.Size.Height * scalingRatio);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            // calculate left top corner position of the image in the thumbnail"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            int scaledLeft \u003d (width - scaledWidth) / 2;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            int scaledTop \u003d (height - scaledHeight) / 2;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "            // define drawing area"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "            Rectangle drawingRect \u003d new Rectangle(scaledLeft, scaledTop, scaledWidth, scaledHeight);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "            Bitmap thumbnail \u003d new Bitmap(width, height);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            // here we set the thumbnail as the highest quality"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "            using (Graphics thumbnailGraphics \u003d System.Drawing.Graphics.FromImage(thumbnail))"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "                thumbnailGraphics.CompositingQuality \u003d CompositingQuality.HighQuality;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "                thumbnailGraphics.InterpolationMode \u003d InterpolationMode.HighQualityBicubic;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "                thumbnailGraphics.SmoothingMode \u003d SmoothingMode.HighQuality;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "                thumbnailGraphics.DrawImage(oriImage, drawingRect);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "            return thumbnail;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public static BitmapImage BitmapToImageSource(Bitmap bitmap)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            using (MemoryStream memory \u003d new MemoryStream())"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                bitmap.Save(memory, System.Drawing.Imaging.ImageFormat.Png);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                memory.Position \u003d 0;"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                BitmapImage bitmapimage \u003d new BitmapImage();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                bitmapimage.BeginInit();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                bitmapimage.StreamSource \u003d memory;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                bitmapimage.CacheOption \u003d BitmapCacheOption.OnLoad;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                bitmapimage.EndInit();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return bitmapimage;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        #region GDI+"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void SuspendDrawing(Control control)"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.SendMessage(control.Handle, (uint) Native.Message.WM_SETREDRAW, IntPtr.Zero, IntPtr.Zero);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ResumeDrawing(Control control)"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "            Native.SendMessage(control.Handle, (uint) Native.Message.WM_SETREDRAW, new IntPtr(1), IntPtr.Zero);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            control.Refresh();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Color"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        public static int ConvertColorToRgb(Drawing.Color argb)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "            return (argb.B \u003c\u003c 16) | (argb.G \u003c\u003c 8) | argb.R;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        public static int PackRgbInt(byte r, int g, int b)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            return (b \u003c\u003c 16) | (g \u003c\u003c 8) | r;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Drawing.Color ConvertRgbToColor(int rgb)"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "            return Drawing.Color.FromArgb(rgb \u0026 255, (rgb \u003e\u003e 8) \u0026 255, (rgb \u003e\u003e 16) \u0026 255);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void UnpackRgbInt(int rgb, out byte r, out byte g, out byte b)"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "            r \u003d (byte)(rgb \u0026 255);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "            g \u003d (byte)((rgb \u003e\u003e 8) \u0026 255);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            b \u003d (byte)((rgb \u003e\u003e 16) \u0026 255);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public static Drawing.Color DrawingColorFromMediaColor(System.Windows.Media.Color mediaColor, bool opaque \u003d false)"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return Drawing.Color.FromArgb(opaque ? 255 : mediaColor.A,"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                mediaColor.R, mediaColor.G, mediaColor.B);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Windows.Media.Color MediaColorFromDrawingColor(Drawing.Color drawingColor)"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "            return System.Windows.Media.Color.FromArgb(drawingColor.A, drawingColor.R, drawingColor.G, drawingColor.B);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "        public static Drawing.Color DrawingColorFromBrush(System.Windows.Media.Brush brush)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "            return DrawingColorFromMediaColor((brush as SolidColorBrush).Color);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        public static System.Windows.Media.Brush MediaBrushFromDrawingColor(Drawing.Color color)"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "            return new SolidColorBrush(MediaColorFromDrawingColor(color));"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Settings"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        public static void ShouldCompressPictureExport(bool shouldCompress)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            PictureExportingRatio \u003d shouldCompress ? pictureExportingRatioCompressed : pictureExportingRatioHigh;"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "        #region Helper Methods"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "        private static double CalculateScalingRatio(Size oldSize, Size newSize)"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "            double scalingRatio;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            if (oldSize.Width \u003e\u003d oldSize.Height)"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "                scalingRatio \u003d (double)newSize.Width / oldSize.Width;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "                scalingRatio \u003d (double)newSize.Height / oldSize.Height;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            return scalingRatio;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        private static double GetDesiredExportWidth()"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            // Powerpoint displays at 72 dpi, while the picture stores in 96 dpi or 330 dpi, depending on user option."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointPresentation.Current.SlideWidth * PictureExportingRatio;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        private static double GetDesiredExportHeight()"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "            // Powerpoint displays at 72 dpi, while the picture stores in 96 dpi or 330 dpi, depending on user option."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "            return PowerPointPresentation.Current.SlideHeight * PictureExportingRatio;"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        private static string GetDefaultFolderNameForExport(string exportPath)"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "            string folderName \u003d exportPath.Substring(0, exportPath.Length - 4);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "            int suffix \u003d 1;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "            int idx \u003d exportPath.LastIndexOf(\u0027\\\\\u0027);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "            string folderPath \u003d exportPath.Substring(0, idx + 1);"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "            while (Directory.Exists(folderName))"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "                // Change to default folder name with suffix"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "                string suffixString \u003d suffix.ToString();"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "                folderName \u003d folderPath + \"PPTLabs_ExportedSlides_\" + suffixString;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "                suffix++;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "            return folderName;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Converts a Bitmap to Bitmap source"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003cparam name\u003d\"bitmap\"\u003eThe bitmap to convert\u003c/param\u003e"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003eThe converted object\u003c/returns\u003e"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "        public static BitmapSource CreateBitmapSourceFromGdiBitmap(Bitmap bitmap)"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "            Rectangle rect \u003d new System.Drawing.Rectangle(0, 0, bitmap.Width, bitmap.Height);"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "            BitmapData bitmapData \u003d bitmap.LockBits("
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "                rect,"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                ImageLockMode.ReadWrite,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                Drawing.Imaging.PixelFormat.Format32bppArgb);"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            try"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                int size \u003d (rect.Width * rect.Height) * 4;"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                return BitmapSource.Create("
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmap.Width,"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmap.Height,"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmap.HorizontalResolution,"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmap.VerticalResolution,"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                    PixelFormats.Bgra32,"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "                    null,"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmapData.Scan0,"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "                    size,"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "                    bitmapData.Stride);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            finally"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                bitmap.UnlockBits(bitmapData);"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "        public static float GetDpiScale()"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "            return dpiScale;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "        #endregion"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 439,
      "yuhongherald": 21
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/AutoNarrationTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AutoNarrationTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"NarrationsLab\\\\AutoNarrate.pptx\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_AutoNarrationTest()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(7);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            PplFeatures.AutoNarrate();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide expSlide \u003d PpOperations.SelectSlide(8);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            ThreadUtil.WaitFor(1000); // need to wait for loading"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expSlide, actualSlide);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 27,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/BaseFunctionalTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Diagnostics;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Runtime.Remoting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Base;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract class BaseFunctionalTest: TestAssemblyFixture"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public TestContext TestContext { get; set; }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        // prefix legend:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        // pp - PowerPoint"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        // ppl - PowerPointLabs"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        protected static IPowerPointLabsFeatures PplFeatures;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        protected static IPowerPointOperations PpOperations;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        // To be implemented by downstream testing classes,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        // specify the name for the testing slide."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        // It is assumed that the testing slides reside"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        // in \"doc/test\" folder."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        protected abstract string GetTestingSlideName();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        // To be override by some test case to use new"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        // PowerPoint application instance for FT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        protected virtual bool IsUseNewPpInstance()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Setup()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            if (IsUseNewPpInstance())"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                CloseActivePpInstance();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            OpenSlideForTest(GetTestingSlideName());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            ConnectPpl();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCleanup]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TearDown()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            if (TestContext.CurrentTestOutcome !\u003d UnitTestOutcome.Passed)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                if (!Directory.Exists(PathUtil.GetTestFailurePath()))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                    Directory.CreateDirectory(PathUtil.GetTestFailurePath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                PpOperations.SavePresentationAs("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    PathUtil.GetTestFailurePresentationPath("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                        TestContext.TestName + \"_\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                        GetTestingSlideName()));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while (PpOperations.GetNumWindows() \u003e 0)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                PpOperations.ClosePresentation();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        protected static void CheckIfClipboardIsRestored(Action action, int actualSlideNum, string shapeNameToBeCopied, int expSlideNum, string expShapeNameToDelete, string expCopiedShapeName)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideNum);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapeToBeCopied \u003d PpOperations.SelectShape(shapeNameToBeCopied);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(1, shapeToBeCopied.Count);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add this shape to clipboard"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            shapeToBeCopied.Copy();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            action();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            // Paste whatever in clipboard"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange newShape \u003d actualSlide.Shapes.Paste();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            // Check if pasted shape is the same as the shape added to clipboard originally"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(shapeNameToBeCopied, newShape.Name);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(shapeToBeCopied.Count, newShape.Count);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(expSlideNum);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            if (expShapeNameToDelete !\u003d \"\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                PpOperations.SelectShape(expShapeNameToDelete)[1].Delete();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            //Set the pasted shape location because the location of the pasted shape is flaky"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape expCopied \u003d PpOperations.SelectShape(expCopiedShapeName)[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Top \u003d expCopied.Top;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            newShape.Left \u003d expCopied.Left;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ConnectPpl()"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            const int waitTime \u003d 3000;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            int retryCount \u003d 5;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            while (retryCount \u003e 0)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                // if already connected, break"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                if (PplFeatures !\u003d null \u0026\u0026 PpOperations !\u003d null)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                // otherwise keep trying to connect for some times"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                try"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    IPowerPointLabsFT ftInstance \u003d (IPowerPointLabsFT) Activator.GetObject(typeof (IPowerPointLabsFT),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"ipc://PowerPointLabsFT/PowerPointLabsFT\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    PplFeatures \u003d ftInstance.GetFeatures();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    PpOperations \u003d ftInstance.GetOperations();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                catch (RemotingException)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                    retryCount--;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    ThreadUtil.WaitFor(waitTime);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PplFeatures \u003d\u003d null || PpOperations \u003d\u003d null)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.Fail(\"Failed to connect to PowerPointLabs add-in. You can try to increase retryCount.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.EnterFunctionalTest();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            // activate the thread of presentation window"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(1500);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                \"PowerPointLabs FT\", \"{*}\","
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                PpOperations.ActivatePresentation);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        private void OpenSlideForTest(String slideName)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            Process pptProcess \u003d new Process"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                StartInfo \u003d"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                    FileName \u003d slideName, "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                    WorkingDirectory \u003d PathUtil.GetDocTestPath()"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            pptProcess.Start();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CloseActivePpInstance()"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            Process[] processes \u003d Process.GetProcessesByName(\"POWERPNT\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            if (processes.Length \u003e 0)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Process p in processes)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    p.CloseMainWindow();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            WaitForPpInstanceToClose();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations \u003d null;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            PplFeatures \u003d null;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        private void WaitForPpInstanceToClose()"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            int retry \u003d 5;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            while (Process.GetProcessesByName(\"POWERPNT\").Length \u003e 0"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                \u0026\u0026 retry \u003e 0)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                retry--;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                ThreadUtil.WaitFor(1500);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            if (Process.GetProcessesByName(\"POWERPNT\").Length \u003e 0)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (Process process in Process.GetProcessesByName(\"POWERPNT\"))"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "                    process.Kill();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 189,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/ELearningLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ELearningLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TestSyncExplanationItemSlideNo \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ExpectedSyncExplanationItemSlideNo \u003d 2;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TestReorderExplanationItemSlideNo \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ExpectedReorderExplanationItemSlideNo \u003d 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TestDeleteExplanationItemSlideNo \u003d 5;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ExpectedDeleteExplanationItemSlideNo \u003d 6;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"ELearningLab\\\\ELearningLabTest.pptx\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_CreateSelfExplanationTest()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(TestSyncExplanationItemSlideNo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            IELearningLabController eLearningLab \u003d PplFeatures.ELearningLab;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.OpenPane();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(5000);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.AddSelfExplanationItem();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSyncExplanationItems(eLearningLab);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(TestReorderExplanationItemSlideNo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(5000);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.AddSelfExplanationItem();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            TestReorderExplanationItems(eLearningLab);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(TestDeleteExplanationItemSlideNo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(5000);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.AddSelfExplanationItem();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            TestDeleteExplanationItems(eLearningLab);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSyncExplanationItems(IELearningLabController eLearningLab)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.Sync();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(TestSyncExplanationItemSlideNo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(ExpectedSyncExplanationItemSlideNo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide, similarityTolerance: 0.9);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestReorderExplanationItems(IELearningLabController eLearningLab)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.Reorder();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.Sync();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(TestReorderExplanationItemSlideNo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(ExpectedReorderExplanationItemSlideNo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide, similarityTolerance: 0.9);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestDeleteExplanationItems(IELearningLabController eLearningLab)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.Delete();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            eLearningLab.Sync();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expSlide \u003d PpOperations.SelectSlide(TestDeleteExplanationItemSlideNo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(ExpectedDeleteExplanationItemSlideNo);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide, similarityTolerance: 0.9);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 71,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/EffectsLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public class EffectsLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ZIndexRecolorTestSlide \u003d 54;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ZIndexBlurTestSlide \u003d 51;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurSelectedShapeTestSlide \u003d 49;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurSelectedShapeWithTextTestSlide \u003d 47;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurSelectedTextBoxTestSide \u003d 45;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurSelectedGroupTestSlide \u003d 43;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurRemainderShapeTestSlide \u003d 40;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurRemainderShapeWithTextTestSlide \u003d 37;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurBackgroundTextBoxTestSlide \u003d 34;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int BlurBackgroundGroupTestSlide \u003d 31;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int RecolorSepiaTestSlide \u003d 28;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int RecolorGothamTestSlide \u003d 25;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int RecolorBlackAndWhiteTestSlide \u003d 22;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int RecolorGreyScaleTestSlide \u003d 19;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TintBlurSelectedShapeTestSlide \u003d 17;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TintBlurRemainderTextBoxTestSlide \u003d 14;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TintBlurRemainderGroupTestSlide \u003d 11;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TintBlurBackgroundShapeWithTextTestSlide \u003d 8;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int MagnifyTestSlide \u003d 6;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int TransparentTestSlide \u003d 4;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"EffectsLab\\\\EffectsLab.pptx\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_EffectsLabTest()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(ZIndexRecolorTestSlide, PplFeatures.SepiaBackgroundEffect);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(ZIndexBlurTestSlide, PplFeatures.BlurBackgroundEffect);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(BlurSelectedShapeTestSlide, PplFeatures.BlurSelectedEffect);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(BlurSelectedShapeWithTextTestSlide, PplFeatures.BlurSelectedEffect);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(BlurSelectedTextBoxTestSide, PplFeatures.BlurSelectedEffect);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(BlurSelectedGroupTestSlide, PplFeatures.BlurSelectedEffect);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(BlurRemainderShapeTestSlide, PplFeatures.BlurRemainderEffect);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(BlurRemainderShapeWithTextTestSlide, PplFeatures.BlurRemainderEffect);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(BlurBackgroundTextBoxTestSlide, PplFeatures.BlurBackgroundEffect);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(BlurBackgroundGroupTestSlide, PplFeatures.BlurBackgroundEffect);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            // recolor"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(RecolorSepiaTestSlide, PplFeatures.SepiaRemainderEffect);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(RecolorGothamTestSlide, PplFeatures.GothamRemainderEffect);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(RecolorBlackAndWhiteTestSlide, PplFeatures.BlackAndWhiteBackgroundEffect);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(RecolorGreyScaleTestSlide, PplFeatures.GreyScaleBackgroundEffect);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            // tinted"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            PplFeatures.SetTintForBlurSelected(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(TintBlurSelectedShapeTestSlide, PplFeatures.BlurSelectedEffect);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            PplFeatures.SetTintForBlurRemainder(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(TintBlurRemainderTextBoxTestSlide, PplFeatures.BlurRemainderEffect);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(TintBlurRemainderGroupTestSlide, PplFeatures.BlurRemainderEffect);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            PplFeatures.SetTintForBlurBackground(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            TestGeneratedSlideEffect(TintBlurBackgroundShapeWithTextTestSlide, PplFeatures.BlurBackgroundEffect);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            // other effects"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(MagnifyTestSlide, PplFeatures.MagnifyingGlassEffect);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSlideEffect(TransparentTestSlide, PplFeatures.TransparentEffect);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestGeneratedSlideEffect(int startIdx, Action effectAction)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(startIdx);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(\"selectMe\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            effectAction.Invoke();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(startIdx, startIdx + 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(startIdx + 1, startIdx + 3);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSlideEffect(int startIdx, Action effectAction)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(startIdx);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(\"selectMe\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            effectAction.Invoke();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(startIdx, startIdx + 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AssertIsSame(int actualSlideIndex, int expectedSlideIndex)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideIndex);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SlideUtil.IsSameLooking(expectedSlide, actualSlide, 0.99);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 101,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/LimitOpenPanesTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.Office.Tools;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.ActionFramework.Common.Extension;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.FunctionalTestInterface.Impl;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using System.Threading;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.ColorsLab;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using System.Windows.Forms;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Views;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.ShapesLab;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    public class LimitOpenPanesTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private enum Pane"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            ColorsLabPane,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SyncPane,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            PositionsPane,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            ELearningLabTaskpane,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            CustomShapePane"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private List\u003cType\u003e[] windowPanes;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private int activeWindow;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        protected override bool IsUseNewPpInstance()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // any slide can be used"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return \"ShortcutsLab\\\\QuickProperties.pptx\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void FT_LimitOpenPanesTest()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // start clean"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            StartWithNumWindows(2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // opening \u003c\u003d 2 panes should work as per normal"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Open(Pane.ColorsLabPane);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Open(Pane.SyncPane);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SwitchToWindow(2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // Check if old pane is removed"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SwitchToWindow(1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Open(Pane.PositionsPane);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SwitchToWindow(2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // Test panes across windows"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Open(Pane.ELearningLabTaskpane);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Open(Pane.CustomShapePane);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Open(Pane.PositionsPane);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SwitchToWindow(1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private void Open(Pane PaneType)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Type paneType \u003d OpenPaneType(PaneType);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            UpdateActivePanes(paneType);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            CheckOpenPanes();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private void CheckOpenPanes()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            List\u003cType\u003e expectedWindowPanes \u003d windowPanes[activeWindow];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            HashSet\u003cType\u003e actualWindowPanes \u003d PpOperations.GetOpenPaneTypes();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Assert.IsTrue(actualWindowPanes.SetEquals(expectedWindowPanes),"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                $\"Expected {expectedWindowPanes.Count}, got {actualWindowPanes.Count}.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private void UpdateActivePanes(Type paneType)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            List\u003cType\u003e currentWindowPanes \u003d windowPanes[activeWindow];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if (currentWindowPanes.Contains(paneType))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                currentWindowPanes.Remove(paneType);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            currentWindowPanes.Add(paneType);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            PpOperations.SetTagToAssociatedWindow();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if (currentWindowPanes.Count \u003e 2)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                currentWindowPanes.RemoveAt(0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private static Type OpenPaneType(Pane PaneType)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            Type paneType;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            switch (PaneType)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                case Pane.ColorsLabPane:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    PplFeatures.ColorsLab.OpenPane();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    paneType \u003d typeof(ColorsLabPane);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                case Pane.PositionsPane:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    PplFeatures.PositionsLab.OpenPane();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    paneType \u003d typeof(PositionsPane);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                case Pane.SyncPane:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    PplFeatures.SyncLab.OpenPane();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    paneType \u003d typeof(SyncPane);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                case Pane.ELearningLabTaskpane:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    PplFeatures.ELearningLab.OpenPane();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    paneType \u003d typeof(ELearningLabTaskpane);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                case Pane.CustomShapePane:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    PplFeatures.ShapesLab.OpenPane();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    paneType \u003d typeof(CustomShapePane);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                    throw new System.NotImplementedException(\"Test support for pane not specified!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            return paneType;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private void SwitchToWindow(int window)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            if (window \u003c 0 || window \u003e\u003d windowPanes.Length)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            PpOperations.MaximizeWindow(window);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            activeWindow \u003d window;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            CheckOpenPanes();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        private void StartWithNumWindows(int numWindows)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // close all but 1 presentation"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            while (PpOperations.GetNumWindows() \u003e 1)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                PpOperations.ClosePresentation();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // create the new windows required"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            numWindows \u003d Math.Max(1, numWindows);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for (int i \u003d 1; i \u003c numWindows; i++)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                PpOperations.NewWindow();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                Assert.AreEqual(PpOperations.GetNumWindows(), numWindows);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            windowPanes \u003d new List\u003cType\u003e[numWindows + 1];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d numWindows; i++)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "                windowPanes[i] \u003d new List\u003cType\u003e();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            // set active window"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            SwitchToWindow(1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongherald": 170
    }
  },
  {
    "path": "PowerPointLabs/Test/FunctionalTest/ShapesLabTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Windows;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.FunctionalTest"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ShapesLabTest : BaseFunctionalTest"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesShapesSlide \u003d 3;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesTestSlide \u003d 4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesExpSlide \u003d 5;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesShapesSlide \u003d 6;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesTestSlide \u003d 7;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesExpSlide \u003d 8;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesPlaceholderSlide \u003d 9;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        //Check clipboard restored"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesClipboardRestoredActualSlide \u003d 11;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesClipboardRestoredTestSlide \u003d 12;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int SaveShapesClipboardRestoredExpSlide \u003d 13;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesClipboardRestoredActualSlide \u003d 14;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesClipboardRestoredTestSlide \u003d 15;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int AddShapesClipboardRestoredExpSlide \u003d 16;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"ShapesLab\\\\ShapesLab.pptx\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        //use new powerpoint instance to refresh"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        //ShapesLabConfig setting for FT"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        //"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        //every time, shapes lab in FT will use diff"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        //shapesRootFolder \u0026 default category"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override bool IsUseNewPpInstance()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"FT\")]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        public void FT_ShapesLabTest()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.MaximizeWindow();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            IShapesLabController shapesLab \u003d PplFeatures.ShapesLab;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.OpenPane();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSaveShapesToShapesLab(shapesLab, SaveShapesShapesSlide, SaveShapesTestSlide, SaveShapesExpSlide);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            TestImportLibraryAndShape(shapesLab);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSaveShapesToShapesLabWithAddShapesButton(shapesLab, AddShapesShapesSlide, AddShapesTestSlide, AddShapesExpSlide);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            TestSavePlaceholderToShapesLabWithAddShapesButton(shapesLab, AddShapesPlaceholderSlide);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            IsClipboardRestoredAfterSaveShape(shapesLab, SaveShapesClipboardRestoredActualSlide, SaveShapesClipboardRestoredTestSlide, SaveShapesClipboardRestoredExpSlide);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            IsClipboardRestoredAfterAddShape(shapesLab, AddShapesClipboardRestoredActualSlide, AddShapesClipboardRestoredTestSlide,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                AddShapesClipboardRestoredExpSlide);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestImportLibraryAndShape(IShapesLabController shapesLab)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.ImportLibrary("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(\"ShapesLab\\\\LibraryToImport.pptlabsshapes\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.ImportLibrary("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(\"ShapesLab\\\\ShapeToImport.pptlabsshape\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Collections.Generic.List\u003cISlideData\u003e actualShapeDataAfterImport \u003d shapesLab.FetchShapeGalleryPresentationData();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            System.Collections.Generic.List\u003cISlideData\u003e expShapeDataAfterImport \u003d PpOperations.FetchPresentationData("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                PathUtil.GetDocTestPresentationPath(ExpectedShapeGalleryFileName()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            PresentationUtil.AssertEqual(expShapeDataAfterImport, actualShapeDataAfterImport);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private string ExpectedShapeGalleryFileName()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            if (PpOperations.IsOffice2010())"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                return \"ShapesLab\\\\ExpShapeGalleryAftImportNonWide.pptx\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                return \"ShapesLab\\\\ExpShapeGalleryAftImport.pptx\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveShapesToShapesLab(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(shapesSlideNum);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShapesByPrefix(\"selectMe\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            ExpectAddShapeButtonEnabled(shapesLab);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            // save shapes"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            shapesLab.SaveSelectedShapes();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapesToSlideFromShapesLab(shapesLab, \"selectMe1\", \"Group selectMe1\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSaveShapesToShapesLab(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveShapesToShapesLab(shapesLab, shapesSlideNum, testSlideNum);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide expSlide \u003d PpOperations.SelectSlide(expSlideNum);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expSlide, actualSlide);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        private void SaveShapesToShapesLabWithAddShapesButton(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(shapesSlideNum);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShapesByPrefix(\"selectMeNow\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            ExpectAddShapeButtonEnabled(shapesLab);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillNotPopUp("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                            ShapesLabText.ErrorDialogTitle, ShapesLabText.ErrorAddSelectionInvalid,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                            shapesLab.ClickAddShapeButton);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            AddShapesToSlideFromShapesLab(shapesLab, \"selectMeNow1\", \"Group selectMeNow1\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSaveShapesToShapesLabWithAddShapesButton(IShapesLabController shapesLab, int shapesSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            SaveShapesToShapesLabWithAddShapesButton(shapesLab, shapesSlideNum, testSlideNum);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide expSlide \u003d PpOperations.SelectSlide(expSlideNum);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.Slide actualSlide \u003d PpOperations.SelectSlide(testSlideNum);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expSlide, actualSlide);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expSlide, actualSlide);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestSavePlaceholderToShapesLabWithAddShapesButton(IShapesLabController shapesLab, int shapesSlideNum)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(shapesSlideNum);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            ExpectAddShapeButtonDisabled(shapesLab);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShapesByPrefix(\"Placeholder\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            ExpectAddShapeButtonDisabled(shapesLab);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            MessageBoxUtil.ExpectMessageBoxWillPopUp("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                            ShapesLabText.ErrorDialogTitle, ShapesLabText.ErrorAddSelectionInvalid,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                            shapesLab.ClickAddShapeButton);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AddShapesToSlideFromShapesLab(IShapesLabController shapesLab, string shapeName, string expectedShapePrefix)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            Point point \u003d shapesLab.GetShapeForClicking(shapeName);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            // Add shapes from Shapes Lab to slide by double clicking"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            DoubleClick(point);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            Microsoft.Office.Interop.PowerPoint.ShapeRange shapes \u003d PpOperations.SelectShapesByPrefix(expectedShapePrefix);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(shapes.Count \u003e 0, \"Failed to add shapes from Shapes Lab.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        private void DoubleClick(Point point)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            MouseUtil.SendMouseDoubleClick((int) point.X, (int) point.Y);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        private void IsClipboardRestoredAfterSaveShape(IShapesLabController shapesLab, int actualSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "            CheckIfClipboardIsRestored(() \u003d\u003e SaveShapesToShapesLab(shapesLab, actualSlideNum, testSlideNum),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                actualSlideNum, \"copyMe\", expSlideNum, \"Expected\", \"compareMe\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        private void IsClipboardRestoredAfterAddShape(IShapesLabController shapesLab, int actualSlideNum, int testSlideNum, int expSlideNum)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            CheckIfClipboardIsRestored(() \u003d\u003e SaveShapesToShapesLabWithAddShapesButton(shapesLab, actualSlideNum, testSlideNum),"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                actualSlideNum, \"copyMe\", expSlideNum, \"Expected\", \"compareMe\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ExpectAddShapeButtonEnabled(IShapesLabController shapesLab)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(shapesLab.GetAddShapeButtonStatus());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ExpectAddShapeButtonDisabled(IShapesLabController shapesLab)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            ThreadUtil.WaitFor(1000);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsFalse(shapesLab.GetAddShapeButtonStatus());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 180,
      "yuhongherald": 5
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/Model/AzureVoiceTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.Model"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public class AzureVoiceTest"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        private AzureVoice azureVoice;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Init()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            azureVoice \u003d new AzureVoice(Gender.Female, Locale.enUS, AzureVoiceType.JessaRUS);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestLocalMapping()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            string locale_actual \u003d azureVoice.Locale;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            string locale_expected \u003d \"en-US\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(locale_actual, locale_expected);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestClone()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureVoice voice_expected \u003d new AzureVoice(Gender.Female, Locale.enUS, AzureVoiceType.JessaRUS);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            AzureVoice voice_actual \u003d azureVoice.Clone() as AzureVoice;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.Rank, voice_actual.Rank);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.voiceType, voice_actual.voiceType);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.locale, voice_actual.locale);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.voiceName, voice_actual.voiceName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.VoiceName, voice_actual.VoiceName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 40,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/Model/ClickItemTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.Model"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ClickItemTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        private ClickItem item;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Init()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            item \u003d new ClickItem();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickNoChangedNotification()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            bool notified \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"ClickNo\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    notified \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            item.ClickNo \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(notified);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/Model/ComputerVoiceTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.AudioGenerator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.Model"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ComputerVoiceTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        private ComputerVoice computerVoice;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Init()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            computerVoice \u003d new ComputerVoice(\"computer voice\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestClone()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            ComputerVoice voice_expected \u003d new ComputerVoice(\"computer voice\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            ComputerVoice voice_actual \u003d computerVoice.Clone() as ComputerVoice;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.Rank, voice_actual.Rank);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(voice_expected.Voice, voice_actual.Voice);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 28,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/Model/SelfExplanationClickItemTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.Model"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public class SelfExplanationClickItemTest"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        private ExplanationItem item;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Init()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            item \u003d new ExplanationItem(captionText: \"test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClickNoChangedNotification()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            bool notified \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"ClickNo\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                    notified \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            item.ClickNo \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(notified);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public void IsVoiceChangedNotification()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isVoiceNotified \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDummyItemNotified \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsVoice\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    isVoiceNotified \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsDummyItem\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    isDummyItemNotified \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsVoice \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(isVoiceNotified);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(isDummyItemNotified);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        public void IsCaptionChangedNotification()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isCaptionNotified \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDummyItemNotified \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsCaption\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    isCaptionNotified \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsDummyItem\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    isDummyItemNotified \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsCaption \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(isCaptionNotified);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(isDummyItemNotified);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        public void IsCalloutChangedNotification()"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isCalloutNotified \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            bool isDummyItemNotified \u003d false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsCallout\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    isCalloutNotified \u003d true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsDummyItem\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    isDummyItemNotified \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsCallout \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(isCalloutNotified);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(isDummyItemNotified);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CalloutTextChangedNotification()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            bool calloutTextChangeNotified \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"CalloutText\")"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    calloutTextChangeNotified \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            item.CalloutText \u003d \"callout text\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(calloutTextChangeNotified);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CaptionTextChangedNotification()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            bool captionTextChangeNotified \u003d false;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"CaptionText\")"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    captionTextChangeNotified \u003d true;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            item.CaptionText \u003d \"callout text\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            item.HasShortVersion \u003d false;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(captionTextChangeNotified);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.CaptionText.Equals(item.CalloutText));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        public void VoiceLabelChangedNotification()"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            bool voiceLabelChangeNotified \u003d false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"VoiceLabel\")"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    voiceLabelChangeNotified \u003d true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            item.VoiceLabel \u003d \"voice label\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(voiceLabelChangeNotified);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TriggerIndexChangedNotification()"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            bool triggerIndexChangeNotified \u003d false;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"TriggerIndex\")"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                    triggerIndexChangeNotified \u003d true;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            item.TriggerIndex \u003d 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(triggerIndexChangeNotified);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        public void IsTriggerComboBoxEnableChangedNotification()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            bool triggerComboBoxEnableChangeNotified \u003d false;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            item.PropertyChanged +\u003d (sender, args) \u003d\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                if (args.PropertyName \u003d\u003d \"IsTriggerTypeComboBoxEnabled\")"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                    triggerComboBoxEnableChangeNotified \u003d true;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsTriggerTypeComboBoxEnabled \u003d true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(triggerComboBoxEnableChangeNotified);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        public void IsDummyItemIndicator()"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsCallout \u003d false;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsCaption \u003d false;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsVoice \u003d false;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsDummyItem);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsCallout \u003d true;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsFalse(item.IsDummyItem);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            item.IsVoice \u003d true;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsFalse(item.IsDummyItem);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        public void IsEmptyIndicator()"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            item.CaptionText \u003d string.Empty;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            item.CalloutText \u003d string.Empty;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsEmpty);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            item.HasShortVersion \u003d true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            item.CalloutText \u003d \"callout text\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            item.CaptionText \u003d string.Empty;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsFalse(item.IsEmpty);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 217,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/ModelFactory/CustomItemFactoryTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.ModelFactory;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.ModelFactory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    // AbstractItemFactory _customItemFactory;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CustomItemFactoryTest"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        AbstractItemFactory _factory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCustomEffect\u003e _effects;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public void Init()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            _effects \u003d new List\u003cCustomEffect\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            _effects.Add(new CustomEffect(\"TestShape1\", \"TestShape1ID\", AnimationType.Emphasis));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            _effects.Add(new CustomEffect(\"TestShape2\", \"TestShape2ID\", AnimationType.Exit));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            _factory \u003d new CustomItemFactory(_effects);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestGetCustomItemBlock()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            CustomItem item \u003d _factory.GetBlock() as CustomItem;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cCustomSubItem\u003e customSubItems \u003d item.CustomItems;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(customSubItems.Count(), _effects.Count);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(\"TestShape1\", customSubItems.ElementAt(0).ShapeName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(\"TestShape1ID\", customSubItems.ElementAt(0).ShapeId);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(AnimationType.Emphasis, customSubItems.ElementAt(0).Type);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(\"TestShape2\", customSubItems.ElementAt(1).ShapeName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(\"TestShape2ID\", customSubItems.ElementAt(1).ShapeId);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(AnimationType.Exit, customSubItems.ElementAt(1).Type);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 41,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/ModelFactory/SelfExplanationItemFactoryTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System.Collections.Generic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.Model;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.ELearningLab.ELearningWorkspace.ModelFactory;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.ModelFactory"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public class SelfExplanationItemFactoryTest"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    { "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestGetSelfExplanationItemBlock()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cELLEffect\u003e _effects \u003d new List\u003cELLEffect\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                new ELLEffect(\"PPTL_1_Callout\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                new ELLEffect(\"PPTL_1_Caption\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                new ELLEffect(\"PPTL_1_Audio_MichaelVoice\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            AbstractItemFactory _factory \u003d new SelfExplanationItemFactory(_effects);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem item \u003d _factory.GetBlock() as ExplanationItem;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsCallout);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsCaption);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsVoice);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(item.TagNo, 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(item.VoiceLabel, \"MichaelVoice\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestGetSelfExplanationItem_NoCallout()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cELLEffect\u003e _effects \u003d new List\u003cELLEffect\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                new ELLEffect(\"PPTL_1_Caption\"),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                new ELLEffect(\"PPTL_1_Audio_MichaelVoice\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            AbstractItemFactory _factory \u003d new SelfExplanationItemFactory(_effects);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            ExplanationItem item \u003d _factory.GetBlock() as ExplanationItem;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsFalse(item.IsCallout);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsCaption);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(item.IsVoice);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(item.TagNo, 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(item.VoiceLabel, \"MichaelVoice\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 50,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/ELearningLab/Service/ELearningServiceTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.ELearningLab.Service;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.ELearningLab.Service"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ELearningServiceTest : BaseUnitTest"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"ELearningLab\\\\ELearningServiceTest.pptx\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestRemoveLabAnimations()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide slide \u003d PowerPointSlide.FromSlideFactory(PpOperations.SelectSlide(1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            ELearningService service \u003d new ELearningService(slide, null);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            service.RemoveLabAnimationsFromAnimationPane();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.IsTrue(Util.SlideUtil.IsAnimationsRemoved(slide.GetNativeSlide(), ELearningLabText.Identifier));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestDeleteShapes()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestSyncAppearEffectsForExplanationItems()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestSyncExitEffectForExplanationItems()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 46,
      "yuhongherald": 2
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/SyncLab/SyncLabFormatPaneItemTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.ObjectFormats;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.SyncLab.Views;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.SyncLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public class SyncLabFormatPaneItemTest : BaseSyncLabTest"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TestName \u003d \"TestingN@meeeeeeeeeeeeeeeeee\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private string[] _testNodesNames;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestInitialize]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestInitialize()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            _testNodesNames \u003d GetAllFormatNames();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestSyncPaneTooltipName()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            FormatTreeNode[] nodes \u003d SyncFormatConstants.FormatCategories;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormatPaneItem item \u003d new SyncFormatPaneItemStub(nodes);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            item.Text \u003d TestName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(TestName, item.toolTipName.Text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        public void TestSyncPaneTooltipBody()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] nodes1 \u003d { _testNodesNames[0], _testNodesNames[13], _testNodesNames[16] };"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] nodes2 \u003d { _testNodesNames[4], _testNodesNames[6], _testNodesNames[8] };"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] nodes3 \u003d { _testNodesNames[7], _testNodesNames[11], _testNodesNames[18] };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            TestFollowingNodes(nodes1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            TestFollowingNodes(nodes2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            TestFollowingNodes(nodes3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Get the node names of all format nodes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003creturns\u003e\u003c/returns\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        private string[] GetAllFormatNames()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            Queue\u003cFormatTreeNode\u003e queue \u003d new Queue\u003cFormatTreeNode\u003e(SyncFormatConstants.FormatCategories);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e allNames \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            while (queue.Count \u003e 0)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                FormatTreeNode node \u003d queue.Dequeue();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                string fullName \u003d node.Name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                FormatTreeNode parentNode \u003d node.ParentNode;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                while (parentNode !\u003d null)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                    fullName \u003d parentNode.Name + SyncFormatConstants.FormatNameSeparator + fullName;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                    parentNode \u003d parentNode.ParentNode;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                allNames.Add(fullName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                if (node.ChildrenNodes \u003d\u003d null)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                foreach (FormatTreeNode child in node.ChildrenNodes)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    queue.Enqueue(child);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            return allNames.ToArray();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        private FormatTreeNode[] SelectFormats(FormatTreeNode[] formats, string[] formatNames)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string name in formatNames)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                GetEndNode(formats, name).IsChecked \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            return formats;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Gets the node at the end of the format tree, as specified by the string name"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Returns early with the last matching node if the next node cannot be found"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        private FormatTreeNode GetEndNode(FormatTreeNode[] formats, string name)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] path \u003d name.Split(SyncFormatConstants.FormatNameSeparator.ToCharArray());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            FormatTreeNode currentRoot \u003d new FormatTreeNode(\"root\", formats);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (string nodeName in path)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                int nextIndex \u003d LastIndexOf(currentRoot.ChildrenNodes, nodeName);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                if (nextIndex \u003c 0)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                currentRoot \u003d currentRoot.ChildrenNodes[nextIndex];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            return currentRoot;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        private int LastIndexOf(FormatTreeNode[] nodes, string name)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            int index \u003d nodes.Length - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            while (index \u003e\u003d 0)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                if (nodes[index].Name.Equals(name))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    return index;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                index--;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003csummary\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        /// Test the node names displayed by the tooltip against the expected node names."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        /// \u003c/summary\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestFollowingNodes(string[] nodeNames)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            FormatTreeNode[] nodes \u003d SyncFormatConstants.FormatCategories;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            nodes \u003d SelectFormats(SyncFormatConstants.FormatCategories, nodeNames);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            SyncFormatPaneItem item \u003d new SyncFormatPaneItemStub(nodes);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] expected \u003d nodeNames;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] actual \u003d item.toolTipBody.Text.Split(\"\\n\".ToCharArray());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            Array.Sort(expected);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            Array.Sort(actual);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            Assert.AreEqual(String.Join(\"\\n\", expected), String.Join(\"\\n\", actual));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 137,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/TooltipsLab/ConvertToTooltipTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.TextCollection;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.TooltipsLab"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public class ConvertToTooltipTest : BaseUnitTest"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipOneShapeTestSlideNo \u003d 4;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipOneShapeExpectedSlideNo \u003d 5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipTwoShapesTestSlideNo \u003d 7;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipTwoShapesExpectedSlideNo \u003d 8;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipThreeShapesTestSlideNo \u003d 10;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipThreeShapesExpectedSlideNo \u003d 11;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipTenShapesTestSlideNo \u003d 13;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int ConvertShapesToTooltipTenShapesExpectedSlideNo \u003d 14;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TriggerShapeName \u003d \"Trigger\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CalloutShapeName \u003d \"Callout\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout2ShapeName \u003d \"Callout 2\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout3ShapeName \u003d \"Callout 3\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout4ShapeName \u003d \"Callout 4\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout5ShapeName \u003d \"Callout 5\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout6ShapeName \u003d \"Callout 6\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout7ShapeName \u003d \"Callout 7\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout8ShapeName \u003d \"Callout 8\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string Callout9ShapeName \u003d \"Callout 9\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"TooltipsLab\\\\ConvertToTooltip.pptx\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ConvertShapesToTooltip()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            TestConvertShapesToTooltip_OneShape();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            TestConvertShapesToTooltip_TwoShapes();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            TestConvertShapesToTooltip_ThreeShapes();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            TestConvertShapesToTooltip_TenShapes();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestConvertShapesToTooltip_OneShape()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] shapeNames \u003d { TriggerShapeName };"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertShapesToTooltipAndCompare(shapeNames, ConvertShapesToTooltipOneShapeTestSlideNo, ConvertShapesToTooltipOneShapeExpectedSlideNo, false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestConvertShapesToTooltip_TwoShapes()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] shapeNames \u003d { TriggerShapeName, CalloutShapeName };"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertShapesToTooltipAndCompare(shapeNames, ConvertShapesToTooltipTwoShapesTestSlideNo, ConvertShapesToTooltipTwoShapesExpectedSlideNo, true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestConvertShapesToTooltip_ThreeShapes()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] shapeNames \u003d { TriggerShapeName, CalloutShapeName, Callout2ShapeName };"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertShapesToTooltipAndCompare(shapeNames, ConvertShapesToTooltipThreeShapesTestSlideNo, ConvertShapesToTooltipThreeShapesExpectedSlideNo, true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestConvertShapesToTooltip_TenShapes()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            string[] shapeNames \u003d { TriggerShapeName, CalloutShapeName, Callout2ShapeName, Callout3ShapeName,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                Callout4ShapeName, Callout5ShapeName, Callout6ShapeName,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                Callout7ShapeName, Callout8ShapeName, Callout9ShapeName};"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertShapesToTooltipAndCompare(shapeNames, ConvertShapesToTooltipTenShapesTestSlideNo, ConvertShapesToTooltipTenShapesExpectedSlideNo, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        private void ConvertShapesToTooltipAndCompare(string[] shapeNames, int testSlideNo, int expectedSlideNo, bool isSuccessful)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide slide \u003d PpOperations.SelectSlide(testSlideNo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointSlide.FromSlideFactory(slide);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapes \u003d PpOperations.SelectShapes(shapeNames);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSuccessful)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                Assert.AreEqual(ConvertToTooltip.AddTriggerAnimation(currentSlide, selectedShapes), isSuccessful);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                MessageBoxUtil.ExpectMessageBoxWillPopUp("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                                            TooltipsLabText.ErrorTooltipsDialogTitle,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                            TooltipsLabText.ErrorLessThanTwoShapesSelected,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                                            () \u003d\u003e { ConvertToTooltip.AddTriggerAnimation(currentSlide, selectedShapes);  });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(testSlideNo, expectedSlideNo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AssertIsSame(int actualSlideIndex, int expectedSlideIndex)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideIndex);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideIndex);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 100,
      "yuhongherald": 4
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/TooltipsLab/CreateCalloutTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.TooltipsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CreateCalloutTest : BaseUnitTest"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutNormalShapeTestSlideNo \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutNormalShapeExpectedSlideNo \u003d 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutTriggerShapeTestSlideNo \u003d 7;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutTriggerShapeExpectedSlideNo \u003d 8;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutCalloutShapeTestSlideNo \u003d 10;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutCalloutShapeExpectedSlideNo \u003d 11;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutMultipleNormalShapesTestSlideNo \u003d 13;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutMultipleNormalShapesExpectedSlideNo \u003d 14;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutMultipleAllTypeShapesTestSlideNo \u003d 16;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutMultipleAllTypeShapesExpectedSlideNo \u003d 17;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutMultipleTypeMoreShapesTestSlideNo \u003d 19;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateCalloutMultipleTypeMoreShapesExpectedSlideNo \u003d 20;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string NormalShapeName \u003d \"normalShape\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TriggerShapeName \u003d \"existingTriggerShape\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CalloutShapeName \u003d \"existingCalloutShape\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string MultipleShapePrefix \u003d \"select\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"TooltipsLab\\\\CreateCallout.pptx\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CreateCallout()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateCallout_NormalShape();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateCallout_TriggerShape();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateCallout_CalloutShape();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateCallout_MultipleNormalShapes();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateCallout_MultipleAllTypeShapes();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateCallout_MultipleTypeMoreShapes();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateCallout_NormalShape()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateCalloutNormalShapeTestSlideNo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShape(NormalShapeName);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateCalloutAndCompare(selectedShapeRange[1], CreateCalloutNormalShapeTestSlideNo, CreateCalloutNormalShapeExpectedSlideNo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateCallout_TriggerShape()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateCalloutTriggerShapeTestSlideNo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShape(TriggerShapeName);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateCalloutAndCompare(selectedShapeRange[1], CreateCalloutTriggerShapeTestSlideNo, CreateCalloutTriggerShapeExpectedSlideNo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateCallout_CalloutShape()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateCalloutCalloutShapeTestSlideNo);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShape(CalloutShapeName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateCalloutAndCompare(selectedShapeRange[1], CreateCalloutCalloutShapeTestSlideNo, CreateCalloutCalloutShapeExpectedSlideNo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateCallout_MultipleNormalShapes()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateCalloutMultipleNormalShapesTestSlideNo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShapesByPrefix(NormalShapeName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateMultipleCalloutAndCompare(selectedShapeRange, CreateCalloutMultipleNormalShapesTestSlideNo, CreateCalloutMultipleNormalShapesExpectedSlideNo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateCallout_MultipleAllTypeShapes()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateCalloutMultipleAllTypeShapesTestSlideNo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShapesByPrefix(MultipleShapePrefix);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateMultipleCalloutAndCompare(selectedShapeRange, CreateCalloutMultipleAllTypeShapesTestSlideNo, CreateCalloutMultipleAllTypeShapesExpectedSlideNo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateCallout_MultipleTypeMoreShapes()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateCalloutMultipleTypeMoreShapesTestSlideNo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShapesByPrefix(MultipleShapePrefix);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateMultipleCalloutAndCompare(selectedShapeRange, CreateCalloutMultipleTypeMoreShapesTestSlideNo, CreateCalloutMultipleTypeMoreShapesExpectedSlideNo);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateCalloutAndCompare(Shape selectedShape, int testSlideNo, int expectedSlideNo)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointSlide.FromSlideFactory(PpOperations.GetCurrentSlide());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape callout \u003d CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, selectedShape);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertToTooltip.AddTriggerAnimation(currentSlide, selectedShape, callout);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(testSlideNo, expectedSlideNo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateMultipleCalloutAndCompare(ShapeRange selectedShapes, int testSlideNo, int expectedSlideNo)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointSlide.FromSlideFactory(PpOperations.GetCurrentSlide());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in selectedShapes)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape callout \u003d CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, shape);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertToTooltip.AddTriggerAnimation(currentSlide, shape, callout);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(testSlideNo, expectedSlideNo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AssertIsSame(int actualSlideIndex, int expectedSlideIndex)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideIndex);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideIndex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 117,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/TooltipsLab/CreateTooltipTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.TooltipsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CreateTooltipTest : BaseUnitTest"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipNoneSelectedTestSlideNo \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipNoneSelectedExpectedSlideNo \u003d 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipShapeSelectedTestSlideNo \u003d 7;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipShapeSelectedExpectedSlideNo \u003d 8;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipExistingTooltipTestSlideNo \u003d 10;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipExistingTooltipExpectedSlideNo \u003d 11;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipMultipleTooltipsTestSlideNo \u003d 13;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTooltipMultipleTooltipsExpectedSlideNo \u003d 14;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CreateTooltipShapeToSelectName \u003d \"SelectMe\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int NumberOfTooltips \u003d 5;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"TooltipsLab\\\\CreateTooltip.pptx\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CreateTooltip()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTooltip_NoneSelected();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTooltip_ShapeSelected();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTooltip_ExistingTooltip();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTooltip_MultipleTooltips();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTooltip_NoneSelected()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTooltipNoneSelectedTestSlideNo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTooltipAndCompare(CreateTooltipNoneSelectedTestSlideNo, CreateTooltipNoneSelectedExpectedSlideNo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTooltip_ShapeSelected()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTooltipShapeSelectedTestSlideNo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectShape(CreateTooltipShapeToSelectName);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTooltipAndCompare(CreateTooltipShapeSelectedTestSlideNo, CreateTooltipShapeSelectedExpectedSlideNo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "       "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTooltip_ExistingTooltip()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTooltipExistingTooltipTestSlideNo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTooltipAndCompare(CreateTooltipExistingTooltipTestSlideNo, CreateTooltipExistingTooltipExpectedSlideNo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTooltip_MultipleTooltips()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTooltipMultipleTooltipsTestSlideNo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c NumberOfTooltips; i++)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                CreateTooltipOnSlide(CreateTooltipMultipleTooltipsTestSlideNo);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(CreateTooltipMultipleTooltipsTestSlideNo, CreateTooltipMultipleTooltipsExpectedSlideNo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateTooltipAndCompare(int testSlideNo, int expectedSlideNo)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTooltipOnSlide(testSlideNo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(testSlideNo, expectedSlideNo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateTooltipOnSlide(int slideNo)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointSlide.FromSlideFactory(PpOperations.GetCurrentSlide());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape triggerShape \u003d PowerPointLabs.TooltipsLab.CreateTooltip.GenerateTriggerShape(currentSlide);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape callout \u003d PowerPointLabs.TooltipsLab.CreateTooltip.GenerateCalloutWithReferenceTriggerShape(currentSlide, triggerShape);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertToTooltip.AddTriggerAnimation(currentSlide, triggerShape, callout);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AssertIsSame(int actualSlideIndex, int expectedSlideIndex)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideIndex);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideIndex);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 89,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/Test/UnitTest/TooltipsLab/CreateTriggerTest.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using Microsoft.VisualStudio.TestTools.UnitTesting;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Models;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "using PowerPointLabs.TooltipsLab;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Test.Util;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.UnitTest.TooltipsLab"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    [TestClass]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public class CreateTriggerTest : BaseUnitTest"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerNormalShapeTestSlideNo \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerNormalShapeExpectedSlideNo \u003d 5;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerTriggerShapeTestSlideNo \u003d 7;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerTriggerShapeExpectedSlideNo \u003d 8;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerCalloutShapeTestSlideNo \u003d 10;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerCalloutShapeExpectedSlideNo \u003d 11;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerMultipleNormalShapesTestSlideNo \u003d 13;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerMultipleNormalShapesExpectedSlideNo \u003d 14;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerMultipleAllTypeShapesTestSlideNo \u003d 16;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerMultipleAllTypeShapesExpectedSlideNo \u003d 17;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerMultipleTypeMoreShapesTestSlideNo \u003d 19;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private const int CreateTriggerMultipleTypeMoreShapesExpectedSlideNo \u003d 20;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string NormalShapeName \u003d \"normalShape\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string TriggerShapeName \u003d \"existingTriggerShape\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string CalloutShapeName \u003d \"existingCalloutShape\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        private const string MultipleShapePrefix \u003d \"select\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        protected override string GetTestingSlideName()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"TooltipsLab\\\\CreateTrigger.pptx\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestMethod]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        [TestCategory(\"UT\")]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        public void CreateTrigger()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTrigger_NormalShape();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTrigger_TriggerShape();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTrigger_CalloutShape();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTrigger_MultipleNormalShapes();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTrigger_MultipleAllTypeShapes();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            TestCreateTrigger_MultipleTypeMoreShapes();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTrigger_NormalShape()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTriggerNormalShapeTestSlideNo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShape(NormalShapeName);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTriggerAndCompare(selectedShapeRange[1], CreateTriggerNormalShapeTestSlideNo, CreateTriggerNormalShapeExpectedSlideNo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTrigger_TriggerShape()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTriggerTriggerShapeTestSlideNo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShape(TriggerShapeName);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTriggerAndCompare(selectedShapeRange[1], CreateTriggerTriggerShapeTestSlideNo, CreateTriggerTriggerShapeExpectedSlideNo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTrigger_CalloutShape()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTriggerCalloutShapeTestSlideNo);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShape(CalloutShapeName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateTriggerAndCompare(selectedShapeRange[1], CreateTriggerCalloutShapeTestSlideNo, CreateTriggerCalloutShapeExpectedSlideNo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTrigger_MultipleNormalShapes()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTriggerMultipleNormalShapesTestSlideNo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShapesByPrefix(NormalShapeName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateMultipleTriggerAndCompare(selectedShapeRange, CreateTriggerMultipleNormalShapesTestSlideNo, CreateTriggerMultipleNormalShapesExpectedSlideNo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTrigger_MultipleAllTypeShapes()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTriggerMultipleAllTypeShapesTestSlideNo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShapesByPrefix(MultipleShapePrefix);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateMultipleTriggerAndCompare(selectedShapeRange, CreateTriggerMultipleAllTypeShapesTestSlideNo, CreateTriggerMultipleAllTypeShapesExpectedSlideNo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        private void TestCreateTrigger_MultipleTypeMoreShapes()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            PpOperations.SelectSlide(CreateTriggerMultipleTypeMoreShapesTestSlideNo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange selectedShapeRange \u003d PpOperations.SelectShapesByPrefix(MultipleShapePrefix);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            CreateMultipleTriggerAndCompare(selectedShapeRange, CreateTriggerMultipleTypeMoreShapesTestSlideNo, CreateTriggerMultipleTypeMoreShapesExpectedSlideNo);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateTriggerAndCompare(Shape selectedShape, int testSlideNo, int expectedSlideNo)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointSlide.FromSlideFactory(PpOperations.GetCurrentSlide());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape triggerShape \u003d CreateTooltip.GenerateTriggerShapeWithReferenceCallout(currentSlide, selectedShape);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            ConvertToTooltip.AddTriggerAnimation(currentSlide, triggerShape, selectedShape);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(testSlideNo, expectedSlideNo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        private void CreateMultipleTriggerAndCompare(ShapeRange selectedShapes, int testSlideNo, int expectedSlideNo)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            PowerPointSlide currentSlide \u003d PowerPointSlide.FromSlideFactory(PpOperations.GetCurrentSlide());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in selectedShapes)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                Shape triggerShape \u003d CreateTooltip.GenerateTriggerShapeWithReferenceCallout(currentSlide, shape);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                ConvertToTooltip.AddTriggerAnimation(currentSlide, triggerShape, shape);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            AssertIsSame(testSlideNo, expectedSlideNo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        private void AssertIsSame(int actualSlideIndex, int expectedSlideIndex)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide actualSlide \u003d PpOperations.SelectSlide(actualSlideIndex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide expectedSlide \u003d PpOperations.SelectSlide(expectedSlideIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameLooking(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            SlideUtil.IsSameAnimations(expectedSlide, actualSlide);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 118,
      "yuhongherald": 3
    }
  },
  {
    "path": "PowerPointLabs/Test/Util/UnitTestPpOperations.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Linq;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Core;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.FunctionalTestInterface.Impl;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "using PowerPointLabs.Utils;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "using TestInterface;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "using Shape \u003d Microsoft.Office.Interop.PowerPoint.Shape;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "using ShapeRange \u003d Microsoft.Office.Interop.PowerPoint.ShapeRange;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "namespace Test.Util"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    class UnitTestPpOperations : IPowerPointOperations"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        public Presentation Pres { get; set; }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        public Application App { get; set; }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        private Slide _currentSlide;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        private Slide CurrentSlide"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            get { return _currentSlide ?? SelectSlide(1); }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            set { _currentSlide \u003d value; }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        private ShapeRange _currentShape;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        public UnitTestPpOperations(Presentation pres, Application app)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Pres \u003d pres;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            App \u003d app;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        public void MaximizeWindow()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        public void EnterFunctionalTest()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ExitFunctionalTest()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsInFunctionalTest()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void MaximizeWindow(int windowNumber)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void NewWindow()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public int GetNumWindows()"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public void SetTagToAssociatedWindow()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        public HashSet\u003cType\u003e GetOpenPaneTypes()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cISlideData\u003e FetchPresentationData(string pathToPresentation)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            Presentation presentation \u003d App.Presentations.Open(pathToPresentation, WithWindow: MsoTriState.msoFalse);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cISlideData\u003e slideData \u003d presentation.Slides.Cast\u003cSlide\u003e().Select(SlideData.FromSlide).ToList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            presentation.Close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            return slideData;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        public List\u003cISlideData\u003e FetchCurrentPresentationData()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cISlideData\u003e slideData \u003d Pres.Slides.Cast\u003cSlide\u003e().Select(SlideData.FromSlide).ToList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            return slideData;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SavePresentationAs(string presName)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            Pres.SaveCopyAs(presName);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ClosePresentation()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            Pres.Close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ActivatePresentation()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        public int PointsToScreenPixelsX(float x)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        public int PointsToScreenPixelsY(float y)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOffice2010()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        public bool IsOffice2013()"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide GetCurrentSlide()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            return CurrentSlide;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide SelectSlide(int index)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide slide \u003d Pres.Slides[index];"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            CurrentSlide \u003d slide;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            return slide;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide SelectSlide(string slideName)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Slide slide in Pres.Slides)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                if (slide.Name \u003d\u003d slideName)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                    CurrentSlide \u003d slide;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                    return slide;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        public Slide[] GetAllSlides()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            return Pres.Slides.Cast\u003cSlide\u003e().ToArray();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        public string GetNotesPageText(Slide slide)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null || slide.HasNotesPage \u003d\u003d MsoTriState.msoFalse)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                return string.Empty;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape notesPageBody \u003d notesPagePlaceholders"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                .FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            string notesText \u003d notesPageBody !\u003d null ? notesPageBody.TextFrame.TextRange.Text : string.Empty;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            return notesText;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        public void SetNotesPageText(Slide slide, string text)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            if (slide \u003d\u003d null)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            IEnumerable\u003cShape\u003e notesPagePlaceholders \u003d slide.NotesPage.Shapes.Placeholders.Cast\u003cShape\u003e();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape notesPageBody \u003d notesPagePlaceholders"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "                .FirstOrDefault(shape \u003d\u003e shape.PlaceholderFormat.Type \u003d\u003d PpPlaceholderType.ppPlaceholderBody);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            if (notesPageBody !\u003d null)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                notesPageBody.TextFrame.TextRange.Text \u003d text;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        public Selection GetCurrentSelection()"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new NotImplementedException();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange SelectShape(string shapeName)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CurrentSlide \u003d\u003d null) return null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e nameList \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            nameList.Add(shapeName);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            _currentShape \u003d CurrentSlide.Shapes.Range(nameList.ToArray());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            return _currentShape;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange SelectShapes(IEnumerable\u003cstring\u003e shapeNames)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CurrentSlide \u003d\u003d null) return null;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            _currentShape \u003d CurrentSlide.Shapes.Range(shapeNames.ToArray());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            return _currentShape;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "        public ShapeRange SelectShapesByPrefix(string prefix)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            if (CurrentSlide \u003d\u003d null) return null;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cstring\u003e nameList \u003d new List\u003cstring\u003e();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Shape shape in CurrentSlide.Shapes)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                if (shape.Name.StartsWith(prefix))"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                    nameList.Add(shape.Name);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            _currentShape \u003d CurrentSlide.Shapes.Range(nameList.ToArray());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            return _currentShape;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        public Shape RecursiveGetShapeWithPrefix(params string[] prefixes)"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape parentShape \u003d SelectShapesByPrefix(prefixes[0])[1];"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 1; i \u003c prefixes.Length; ++i)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                parentShape \u003d parentShape.GroupItems.Cast\u003cShape\u003e().FirstOrDefault(shape \u003d\u003e shape.Name.StartsWith(prefixes[i]));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            return parentShape;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        public FileInfo ExportSelectedShapes()"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "            ShapeRange shapes \u003d _currentShape;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            int hashCode \u003d DateTime.Now.GetHashCode();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "            string pathName \u003d TempPath.GetTempTestFolder() + \"shapeName\" + hashCode;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "            shapes.Export(pathName, PpShapeFormat.ppShapeFormatPNG);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "            return new FileInfo(pathName);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        public string SelectAllTextInShape(string shapeName)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d CurrentSlide.Shapes.Cast\u003cShape\u003e().FirstOrDefault(sh \u003d\u003e sh.Name \u003d\u003d shapeName);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "            TextRange2 textRange \u003d shape.TextFrame2.TextRange;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "            textRange.Select();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            return textRange.Text;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        public string SelectTextInShape(string shapeName, int startIndex, int endIndex)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "            Shape shape \u003d CurrentSlide.Shapes.Cast\u003cShape\u003e().FirstOrDefault(sh \u003d\u003e sh.Name \u003d\u003d shapeName);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "            TextRange2 textRange \u003d shape.TextFrame2.TextRange.Characters[startIndex, endIndex - startIndex];"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "            textRange.Select();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "            return textRange.Text;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        public void RenameSection(int index, string newName)"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "            Pres.SectionProperties.Rename(index, newName);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        public void AddSection(int index, string sectionName)"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "            Pres.SectionProperties.AddSection(index, sectionName);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "        public void DeleteSection(int index, bool deleteSlides)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "            Pres.SectionProperties.Delete(index, deleteSlides);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        public void ShowAllSlideNumbers()"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "            Slide[] slides \u003d GetAllSlides();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "            foreach (Slide s in slides)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "            {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                s.HeadersFooters.SlideNumber.Visible \u003d MsoTriState.msoTrue;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 269,
      "yuhongherald": 25
    }
  },
  {
    "path": "PowerPointLabs/TestInterface/IELearningLabController.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "﻿namespace TestInterface"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface IELearningLabController"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        void OpenPane();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        void AddSelfExplanationItem();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        void Sync();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        void Reorder();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        void Delete();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "yuhongherald": 1
    }
  },
  {
    "path": "PowerPointLabs/TestInterface/IPowerPointOperations.cs",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "﻿using System;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "using System.Collections.Generic;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "using System.IO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "using Microsoft.Office.Interop.PowerPoint;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "namespace TestInterface"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public interface IPowerPointOperations"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        # region PowerPoint Application API"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        void MaximizeWindow();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        void EnterFunctionalTest();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        void ExitFunctionalTest();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        bool IsInFunctionalTest();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        void MaximizeWindow(int windowNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        void NewWindow();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        int GetNumWindows();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        void SetTagToAssociatedWindow();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongherald"
        },
        "content": "        HashSet\u003cType\u003e GetOpenPaneTypes();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cISlideData\u003e FetchPresentationData(string pathToPresentation);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cISlideData\u003e FetchCurrentPresentationData();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        void SavePresentationAs(string presName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        void ClosePresentation();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        void ActivatePresentation();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        int PointsToScreenPixelsX(float x);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        int PointsToScreenPixelsY(float y);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        Boolean IsOffice2010();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        Boolean IsOffice2013();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Slide-related API"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Slide GetCurrentSlide();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        Slide SelectSlide(int index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        Slide SelectSlide(string slideName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        Slide[] GetAllSlides();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        string GetNotesPageText(Slide slide);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        void SetNotesPageText(Slide slide, string text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        void ShowAllSlideNumbers();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Shape-related API"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        Selection GetCurrentSelection();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        ShapeRange SelectShape(string shapeName);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        ShapeRange SelectShapes(IEnumerable\u003cstring\u003e shapeNames);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        ShapeRange SelectShapesByPrefix(string prefix);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Shape RecursiveGetShapeWithPrefix(params string[] prefixes);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInfo ExportSelectedShapes();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        string SelectAllTextInShape(string shapeName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        string SelectTextInShape(string shapeName, int startIndex, int endIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        # region Section-related API"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        void RenameSection(int index, string newName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        void AddSection(int index, string sectionName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        void DeleteSection(int index, bool deleteSlides);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        # endregion"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 62,
      "yuhongherald": 5
    }
  }
]
